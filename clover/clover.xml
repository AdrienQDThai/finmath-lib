<?xml version="1.0" encoding="UTF-8"?>
<coverage generated="1592594093799" clover="4.4.1">
   <project name="finmath lib 5.0.2" timestamp="1592578122315">
      <metrics coveredelements="15689" complexity="9987" loc="101660" methods="5322" classes="704" statements="24517" packages="84" coveredconditionals="2791" coveredmethods="2217" elements="37107" ncloc="55448" files="586" conditionals="7268" coveredstatements="10681"/>
      <package name="net.finmath.montecarlo.interestrate">
         <metrics coveredelements="68" complexity="76" loc="958" methods="68" classes="9" statements="109" coveredconditionals="2" coveredmethods="27" elements="189" ncloc="432" files="9" conditionals="12" coveredstatements="39"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/CalibrationProduct.java" name="CalibrationProduct.java">
            <metrics coveredelements="21" coveredconditionals="0" complexity="12" loc="107" coveredmethods="8" methods="11" elements="31" classes="1" ncloc="56" statements="18" conditionals="2" coveredstatements="13"/>
            <class name="CalibrationProduct">
               <metrics coveredelements="21" coveredconditionals="0" complexity="12" coveredmethods="8" methods="11" elements="31" statements="18" conditionals="2" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="CalibrationProduct(String,AbstractLIBORMonteCarloProduct,RandomVariable,double,int)" num="35" count="6042" type="method"/>
            <line num="36" count="6042" type="stmt"/>
            <line num="37" count="6042" type="stmt"/>
            <line num="38" count="6042" type="stmt"/>
            <line num="39" count="6042" type="stmt"/>
            <line num="40" count="6042" type="stmt"/>
            <line num="41" count="6042" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationProduct(String,AbstractLIBORMonteCarloProduct,RandomVariable,double)" num="44" count="6042" type="method"/>
            <line num="45" count="6042" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationProduct(String,AbstractLIBORMonteCarloProduct,double,double)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationProduct(AbstractLIBORMonteCarloProduct,RandomVariable,double)" num="52" count="6042" type="method"/>
            <line num="53" count="6042" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationProduct(AbstractLIBORMonteCarloProduct,double,double)" num="56" count="4488" type="method"/>
            <line num="57" count="4488" type="stmt"/>
            <line complexity="2" visibility="public" signature="getName() : String" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProduct() : AbstractLIBORMonteCarloProduct" num="76" count="744771" type="method"/>
            <line num="77" count="744798" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTargetValue() : RandomVariable" num="83" count="696222" type="method"/>
            <line num="84" count="696335" type="stmt"/>
            <line complexity="1" visibility="public" signature="getWeight() : double" num="90" count="693136" type="method"/>
            <line num="91" count="693196" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPriority() : Integer" num="97" count="462472" type="method"/>
            <line num="98" count="462475" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/LIBORMarketModel.java" name="LIBORMarketModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="46" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="LIBORMarketModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/LIBORModel.java" name="LIBORModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="74" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="16" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="LIBORModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/LIBORModelMonteCarloSimulationModel.java" name="LIBORModelMonteCarloSimulationModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="100" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="20" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="LIBORModelMonteCarloSimulationModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/LIBORMonteCarloSimulationFromLIBORModel.java" name="LIBORMonteCarloSimulationFromLIBORModel.java">
            <metrics coveredelements="47" coveredconditionals="2" complexity="31" loc="206" coveredmethods="19" methods="27" elements="77" classes="1" ncloc="144" statements="44" conditionals="6" coveredstatements="26"/>
            <class name="LIBORMonteCarloSimulationFromLIBORModel">
               <metrics coveredelements="47" coveredconditionals="2" complexity="31" coveredmethods="19" methods="27" elements="77" statements="44" conditionals="6" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORMonteCarloSimulationFromLIBORModel(MonteCarloProcess)" num="32" count="58" type="method"/>
            <line num="33" count="58" type="stmt"/>
            <line num="35" count="58" type="stmt"/>
            <line num="36" count="58" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMonteCarloSimulationFromLIBORModel(LIBORModel,MonteCarloProcess)" num="45" count="6453" type="method"/>
            <line num="47" count="6450" type="stmt"/>
            <line num="48" count="6453" type="stmt"/>
            <line num="49" count="6454" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="52" count="6163" type="method"/>
            <line num="54" count="6163" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="57" count="1190510" type="method"/>
            <line num="59" count="1190531" type="stmt"/>
            <line num="60" count="1190519" type="stmt"/>
            <line falsecount="1188639" truecount="1896" num="60" type="cond"/>
            <line num="61" count="1896" type="stmt"/>
            <line num="63" count="1190523" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="66" count="12" type="method"/>
            <line num="68" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="71" count="600" type="method"/>
            <line num="73" count="600" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="76" count="43886" type="method"/>
            <line num="78" count="44387" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="86" count="121701" type="method"/>
            <line num="88" count="121708" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="91" count="1199034" type="method"/>
            <line num="93" count="1199046" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="96" count="932893" type="method"/>
            <line num="98" count="932895" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBrownianMotion() : BrownianMotion" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(int,int) : RandomVariable" num="106" count="2620" type="method"/>
            <line num="108" count="2620" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLIBORs(int) : RandomVariable[]" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(double,double,double) : RandomVariable" num="122" count="10778638" type="method"/>
            <line num="125" count="10778880" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriod(int) : double" num="128" count="9930" type="method"/>
            <line num="130" count="9930" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="133" count="1010" type="method"/>
            <line num="135" count="1010" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="138" count="1748" type="method"/>
            <line num="140" count="1748" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="143" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="147" count="3089" type="method"/>
            <line num="149" count="3089" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="152" count="1265198" type="method"/>
            <line num="154" count="1265676" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : LIBORModel" num="157" count="55890121" type="method"/>
            <line num="159" count="55904513" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcess() : MonteCarloProcess" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : Object" num="167" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORModelMonteCarloSimulationModel" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(String,Object) : LIBORModelMonteCarloSimulationModel" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="202" count="10" type="method"/>
            <line num="204" count="10" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/LIBORMonteCarloSimulationFromTermStructureModel.java" name="LIBORMonteCarloSimulationFromTermStructureModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="30" loc="201" coveredmethods="0" methods="27" elements="70" classes="1" ncloc="136" statements="39" conditionals="4" coveredstatements="0"/>
            <class name="LIBORMonteCarloSimulationFromTermStructureModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="30" coveredmethods="0" methods="27" elements="70" statements="39" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORMonteCarloSimulationFromTermStructureModel(TermStructureModel,MonteCarloProcess)" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMonteCarloSimulationFromTermStructureModel(MonteCarloProcess)" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBrownianMotion() : BrownianMotion" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(int,int) : RandomVariable" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBORs(int) : RandomVariable[]" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(double,double,double) : RandomVariable" num="117" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriod(int) : double" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="138" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="147" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : TermStructureModel" num="152" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcess() : MonteCarloProcess" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : Object" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORModelMonteCarloSimulationModel" num="168" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(String,Object) : TermStructureMonteCarloSimulationModel" num="189" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="196" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/ShortRateModel.java" name="ShortRateModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ShortRateModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/TermStructureModel.java" name="TermStructureModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="94" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="20" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="TermStructureModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getForwardDiscountBond(MonteCarloProcess,double,double) : RandomVariable" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/TermStructureMonteCarloSimulationModel.java" name="TermStructureMonteCarloSimulationModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="90" coveredmethods="0" methods="2" elements="9" classes="1" ncloc="25" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="TermStructureMonteCarloSimulationModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="9" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getLIBOR(LocalDateTime,LocalDateTime,LocalDateTime) : RandomVariable" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getNumeraire(LocalDateTime) : RandomVariable" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.automaticdifferentiation">
         <metrics coveredelements="13" complexity="10" loc="273" methods="10" classes="4" statements="11" coveredconditionals="0" coveredmethods="6" elements="21" ncloc="76" files="4" conditionals="0" coveredstatements="7"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/AbstractRandomVariableDifferentiableFactory.java" name="AbstractRandomVariableDifferentiableFactory.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="6" loc="70" coveredmethods="5" methods="6" elements="13" classes="1" ncloc="37" statements="7" conditionals="0" coveredstatements="6"/>
            <class name="AbstractRandomVariableDifferentiableFactory">
               <metrics coveredelements="11" coveredconditionals="0" complexity="6" coveredmethods="5" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractRandomVariableDifferentiableFactory(RandomVariableFactory)" num="35" count="2122" type="method"/>
            <line num="36" count="2122" type="stmt"/>
            <line num="37" count="2122" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractRandomVariableDifferentiableFactory()" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double) : RandomVariableDifferentiable" num="44" count="814682" type="method"/>
            <line num="46" count="814697" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariableNonDifferentiable(double,double) : RandomVariable" num="55" count="815120" type="method"/>
            <line num="57" count="815128" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariableNonDifferentiable(double,double[]) : RandomVariable" num="60" count="34926" type="method"/>
            <line num="62" count="34926" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="65" count="48" type="method"/>
            <line num="67" count="48" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/IndependentModelParameterProvider.java" name="IndependentModelParameterProvider.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="8" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="IndependentModelParameterProvider">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/RandomVariableDifferentiable.java" name="RandomVariableDifferentiable.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="3" loc="106" coveredmethods="1" methods="3" elements="6" classes="1" ncloc="18" statements="3" conditionals="0" coveredstatements="1"/>
            <class name="RandomVariableDifferentiable">
               <metrics coveredelements="2" coveredconditionals="0" complexity="3" coveredmethods="1" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="package" signature="getGradient() : Map&lt;Long, RandomVariable&gt;" num="64" count="3272" type="method"/>
            <line num="65" count="3272" type="stmt"/>
            <line complexity="1" visibility="package" signature="getTangents() : Map&lt;Long, RandomVariable&gt;" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getCloneIndependent() : RandomVariableDifferentiable" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/RandomVariableDifferentiableFactory.java" name="RandomVariableDifferentiableFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="66" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RandomVariableDifferentiableFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.rootfinder">
         <metrics coveredelements="152" complexity="61" loc="828" methods="35" classes="11" statements="148" coveredconditionals="23" coveredmethods="26" elements="219" ncloc="365" files="10" conditionals="36" coveredstatements="103"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/rootfinder/AbstractRootFinder.java" name="AbstractRootFinder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="18" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="7" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="AbstractRootFinder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setValueAndDerivative(double,double) : void" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/rootfinder/BisectionSearch.java" name="BisectionSearch.java">
            <metrics coveredelements="38" coveredconditionals="7" complexity="11" loc="140" coveredmethods="7" methods="7" elements="40" classes="1" ncloc="62" statements="25" conditionals="8" coveredstatements="24"/>
            <class name="BisectionSearch">
               <metrics coveredelements="38" coveredconditionals="7" complexity="11" coveredmethods="7" methods="7" elements="40" statements="25" conditionals="8" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="BisectionSearch(double,double)" num="37" count="1" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestPoint() : double" num="49" count="2" type="method"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNextPoint() : double" num="58" count="43" type="method"/>
            <line num="60" count="43" type="stmt"/>
            <line complexity="5" visibility="public" signature="setValue(double) : void" num="66" count="43" type="method"/>
            <line num="68" count="43" type="stmt"/>
            <line falsecount="41" truecount="2" num="68" type="cond"/>
            <line num="72" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="74" type="cond"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="88" count="41" type="stmt"/>
            <line falsecount="21" truecount="20" num="88" type="cond"/>
            <line num="92" count="20" type="stmt"/>
            <line num="93" count="20" type="stmt"/>
            <line num="98" count="21" type="stmt"/>
            <line num="99" count="21" type="stmt"/>
            <line num="103" count="41" type="stmt"/>
            <line num="106" count="41" type="stmt"/>
            <line falsecount="41" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="111" count="41" type="stmt"/>
            <line num="114" count="43" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfIterations() : int" num="120" count="1" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccuracy() : double" num="128" count="45" type="method"/>
            <line num="130" count="45" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDone() : boolean" num="136" count="43" type="method"/>
            <line num="138" count="43" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/rootfinder/NewtonsMethod.java" name="NewtonsMethod.java">
            <metrics coveredelements="21" coveredconditionals="2" complexity="8" loc="95" coveredmethods="7" methods="7" elements="21" classes="1" ncloc="42" statements="12" conditionals="2" coveredstatements="12"/>
            <class name="NewtonsMethod">
               <metrics coveredelements="21" coveredconditionals="2" complexity="8" coveredmethods="7" methods="7" elements="21" statements="12" conditionals="2" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="NewtonsMethod(double)" num="28" count="8980" type="method"/>
            <line num="29" count="8979" type="stmt"/>
            <line num="30" count="8980" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestPoint() : double" num="36" count="8983" type="method"/>
            <line num="38" count="8983" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNextPoint() : double" num="44" count="2444760" type="method"/>
            <line num="46" count="2444247" type="stmt"/>
            <line complexity="2" visibility="public" signature="setValueAndDerivative(double,double) : void" num="57" count="2444257" type="method"/>
            <line num="60" count="2444551" type="stmt"/>
            <line falsecount="2400919" truecount="43840" num="60" type="cond"/>
            <line num="62" count="43843" type="stmt"/>
            <line num="63" count="43843" type="stmt"/>
            <line num="67" count="2445246" type="stmt"/>
            <line num="69" count="2445494" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfIterations() : int" num="75" count="2449434" type="method"/>
            <line num="77" count="2450251" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccuracy() : double" num="83" count="2453507" type="method"/>
            <line num="85" count="2454472" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDone() : boolean" num="91" count="2449576" type="method"/>
            <line num="93" count="2450449" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/rootfinder/RiddersMethod.java" name="RiddersMethod.java">
            <metrics coveredelements="73" coveredconditionals="12" complexity="25" loc="208" coveredmethods="8" methods="9" elements="101" classes="1" ncloc="122" statements="70" conditionals="22" coveredstatements="53"/>
            <class name="RiddersMethod">
               <metrics coveredelements="73" coveredconditionals="12" complexity="25" coveredmethods="8" methods="9" elements="101" statements="70" conditionals="22" coveredstatements="53"/>
            </class>
            <line complexity="3" visibility="public" signature="main(String[]) : void" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RiddersMethod(double,double)" num="53" count="1" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestPoint() : double" num="67" count="2" type="method"/>
            <line num="69" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNextPoint() : double" num="75" count="24" type="method"/>
            <line num="77" count="24" type="stmt"/>
            <line complexity="12" visibility="public" signature="setValue(double) : void" num="83" count="24" type="method"/>
            <line num="85" count="24" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="11" type="stmt"/>
            <line num="109" count="11" type="stmt"/>
            <line num="111" count="11" type="stmt"/>
            <line num="112" count="11" type="stmt"/>
            <line falsecount="11" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="119" count="11" type="stmt"/>
            <line falsecount="11" truecount="0" num="119" type="cond"/>
            <line num="120" count="11" type="stmt"/>
            <line num="121" count="11" type="stmt"/>
            <line num="122" count="11" type="stmt"/>
            <line num="124" count="11" type="stmt"/>
            <line falsecount="10" truecount="1" num="124" type="cond"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="131" count="11" type="stmt"/>
            <line falsecount="1" truecount="10" num="131" type="cond"/>
            <line num="133" count="10" type="stmt"/>
            <line num="134" count="10" type="stmt"/>
            <line num="136" count="10" type="stmt"/>
            <line num="137" count="10" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="139" type="cond"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="157" count="11" type="stmt"/>
            <line num="160" count="11" type="stmt"/>
            <line num="161" count="11" type="stmt"/>
            <line num="166" count="11" type="stmt"/>
            <line num="169" count="24" type="stmt"/>
            <line falsecount="1" truecount="23" num="169" type="cond"/>
            <line num="171" count="23" type="stmt"/>
            <line num="174" count="23" type="stmt"/>
            <line num="177" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfIterations() : int" num="183" count="1" type="method"/>
            <line num="185" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccuracy() : double" num="191" count="26" type="method"/>
            <line num="193" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDone() : boolean" num="199" count="24" type="method"/>
            <line num="201" count="24" type="stmt"/>
            <line complexity="4" visibility="private" signature="sign(double,double) : double" num="204" count="12" type="method"/>
            <line num="206" count="12" type="stmt"/>
            <line falsecount="0" truecount="12" num="206" type="cond"/>
            <line falsecount="11" truecount="1" num="206" type="cond"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/rootfinder/RootFinder.java" name="RootFinder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="51" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RootFinder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/rootfinder/RootFinderWithDerivative.java" name="RootFinderWithDerivative.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RootFinderWithDerivative">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/rootfinder/SecantMethod.java" name="SecantMethod.java">
            <metrics coveredelements="20" coveredconditionals="2" complexity="5" loc="88" coveredmethods="4" methods="4" elements="20" classes="1" ncloc="34" statements="14" conditionals="2" coveredstatements="14"/>
            <class name="SecantMethod">
               <metrics coveredelements="20" coveredconditionals="2" complexity="5" coveredmethods="4" methods="4" elements="20" statements="14" conditionals="2" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="SecantMethod(double,double)" num="33" count="2" type="method"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNextPoint() : double" num="38" count="25" type="method"/>
            <line num="41" count="25" type="stmt"/>
            <line num="42" count="25" type="stmt"/>
            <line complexity="2" visibility="public" signature="setValue(double) : void" num="50" count="15" type="method"/>
            <line num="53" count="15" type="stmt"/>
            <line num="54" count="15" type="stmt"/>
            <line falsecount="14" truecount="1" num="54" type="cond"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="14" type="stmt"/>
            <line num="64" count="15" type="stmt"/>
            <line num="65" count="15" type="stmt"/>
            <line num="67" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValueAndDerivative(double,double) : void" num="79" count="10" type="method"/>
            <line num="82" count="10" type="stmt"/>
            <line num="83" count="10" type="stmt"/>
            <line num="85" count="10" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/rootfinder/StochasticNewtonMethod.java" name="StochasticNewtonMethod.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="92" coveredmethods="0" methods="7" elements="35" classes="2" ncloc="60" statements="26" conditionals="2" coveredstatements="0"/>
            <class name="StochasticNewtonMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="7" elements="35" statements="26" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="StochasticNewtonMethod.MethodForAccuracy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StochasticNewtonMethod(RandomVariable,MethodForAccuracy)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNextPoint() : RandomVariable" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="setValueAndDerivative(RandomVariable,RandomVariable) : void" num="40" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfIterations() : int" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccuracy() : double" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDone() : boolean" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestPoint() : RandomVariable" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/rootfinder/StochasticRootFinder.java" name="StochasticRootFinder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="42" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="StochasticRootFinder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/rootfinder/StochasticRootFinderUsingDerivative.java" name="StochasticRootFinderUsingDerivative.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="46" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="StochasticRootFinderUsingDerivative">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.fouriermethod">
         <metrics coveredelements="0" complexity="0" loc="25" methods="0" classes="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="6" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/CharacteristicFunction.java" name="CharacteristicFunction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="25" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CharacteristicFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.finitedifference.solvers">
         <metrics coveredelements="112" complexity="16" loc="174" methods="4" classes="1" statements="88" coveredconditionals="22" coveredmethods="4" elements="116" ncloc="134" files="1" conditionals="24" coveredstatements="86"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/finitedifference/solvers/FDMThetaMethod.java" name="FDMThetaMethod.java">
            <metrics coveredelements="112" coveredconditionals="22" complexity="16" loc="174" coveredmethods="4" methods="4" elements="116" classes="1" ncloc="134" statements="88" conditionals="24" coveredstatements="86"/>
            <class name="FDMThetaMethod">
               <metrics coveredelements="112" coveredconditionals="22" complexity="16" coveredmethods="4" methods="4" elements="116" statements="88" conditionals="24" coveredstatements="86"/>
            </class>
            <line complexity="1" visibility="public" signature="FDMThetaMethod(FiniteDifference1DModel,FiniteDifference1DBoundary,double,double,double)" num="31" count="10" type="method"/>
            <line num="32" count="10" type="stmt"/>
            <line num="33" count="10" type="stmt"/>
            <line num="34" count="10" type="stmt"/>
            <line num="35" count="10" type="stmt"/>
            <line num="36" count="10" type="stmt"/>
            <line complexity="13" visibility="public" signature="getValue(double,double,DoubleUnaryOperator) : double[][]" num="39" count="10" type="method"/>
            <line num="40" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="48" count="10" type="stmt"/>
            <line num="50" count="10" type="stmt"/>
            <line num="52" count="10" type="stmt"/>
            <line num="53" count="10" type="stmt"/>
            <line num="56" count="10" type="stmt"/>
            <line num="57" count="10" type="stmt"/>
            <line num="58" count="10" type="stmt"/>
            <line falsecount="10" truecount="1350" num="58" type="cond"/>
            <line num="59" count="1350" type="stmt"/>
            <line num="63" count="10" type="stmt"/>
            <line num="64" count="10" type="stmt"/>
            <line num="65" count="10" type="stmt"/>
            <line falsecount="10" truecount="540" num="65" type="cond"/>
            <line num="66" count="540" type="stmt"/>
            <line num="70" count="10" type="stmt"/>
            <line num="71" count="10" type="stmt"/>
            <line num="72" count="10" type="stmt"/>
            <line num="73" count="10" type="stmt"/>
            <line num="74" count="10" type="stmt"/>
            <line num="75" count="10" type="stmt"/>
            <line falsecount="10" truecount="1350" num="75" type="cond"/>
            <line num="76" count="1350" type="stmt"/>
            <line falsecount="1350" truecount="186090" num="76" type="cond"/>
            <line num="77" count="186090" type="stmt"/>
            <line falsecount="184740" truecount="1350" num="77" type="cond"/>
            <line num="78" count="1350" type="stmt"/>
            <line num="79" count="1350" type="stmt"/>
            <line num="80" count="1350" type="stmt"/>
            <line num="81" count="184740" type="stmt"/>
            <line falsecount="183400" truecount="1340" num="81" type="cond"/>
            <line num="82" count="1340" type="stmt"/>
            <line num="83" count="1340" type="stmt"/>
            <line num="84" count="183400" type="stmt"/>
            <line falsecount="182060" truecount="1340" num="84" type="cond"/>
            <line num="85" count="1340" type="stmt"/>
            <line num="86" count="1340" type="stmt"/>
            <line num="88" count="182060" type="stmt"/>
            <line num="89" count="182060" type="stmt"/>
            <line num="90" count="182060" type="stmt"/>
            <line num="91" count="182060" type="stmt"/>
            <line num="95" count="10" type="stmt"/>
            <line num="96" count="10" type="stmt"/>
            <line num="97" count="10" type="stmt"/>
            <line num="98" count="10" type="stmt"/>
            <line num="99" count="10" type="stmt"/>
            <line num="100" count="10" type="stmt"/>
            <line num="103" count="10" type="stmt"/>
            <line num="104" count="10" type="stmt"/>
            <line num="105" count="10" type="stmt"/>
            <line num="106" count="10" type="stmt"/>
            <line falsecount="10" truecount="1350" num="106" type="cond"/>
            <line num="107" count="1350" type="stmt"/>
            <line num="108" count="1350" type="stmt"/>
            <line num="109" count="1350" type="stmt"/>
            <line num="113" count="10" type="stmt"/>
            <line falsecount="10" truecount="530" num="113" type="cond"/>
            <line num="114" count="530" type="stmt"/>
            <line num="115" count="530" type="stmt"/>
            <line num="116" count="530" type="stmt"/>
            <line falsecount="530" truecount="75870" num="116" type="cond"/>
            <line num="117" count="75870" type="stmt"/>
            <line num="119" count="75870" type="stmt"/>
            <line num="122" count="530" type="stmt"/>
            <line num="123" count="530" type="stmt"/>
            <line num="124" count="530" type="stmt"/>
            <line num="125" count="530" type="stmt"/>
            <line num="126" count="530" type="stmt"/>
            <line num="127" count="530" type="stmt"/>
            <line num="129" count="530" type="stmt"/>
            <line num="130" count="530" type="stmt"/>
            <line num="131" count="530" type="stmt"/>
            <line num="133" count="530" type="stmt"/>
            <line num="135" count="530" type="stmt"/>
            <line num="137" count="530" type="stmt"/>
            <line num="140" count="530" type="stmt"/>
            <line num="141" count="530" type="stmt"/>
            <line num="143" count="530" type="stmt"/>
            <line num="145" count="530" type="stmt"/>
            <line num="147" count="530" type="stmt"/>
            <line num="149" count="530" type="stmt"/>
            <line num="150" count="530" type="stmt"/>
            <line num="151" count="530" type="stmt"/>
            <line num="153" count="10" type="stmt"/>
            <line num="154" count="10" type="stmt"/>
            <line num="155" count="10" type="stmt"/>
            <line num="156" count="10" type="stmt"/>
            <line num="157" count="10" type="stmt"/>
            <line complexity="1" visibility="private" signature="timeReversedLowerBoundary(double,double) : double" num="164" count="1060" type="method"/>
            <line num="165" count="1060" type="stmt"/>
            <line complexity="1" visibility="private" signature="timeReversedUpperBoundary(double,double) : double" num="168" count="1590" type="method"/>
            <line num="169" count="1590" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.hybridassetinterestrate.products">
         <metrics coveredelements="83" complexity="35" loc="507" methods="23" classes="5" statements="104" coveredconditionals="8" coveredmethods="12" elements="145" ncloc="242" files="5" conditionals="18" coveredstatements="63"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/products/Bond.java" name="Bond.java">
            <metrics coveredelements="21" coveredconditionals="1" complexity="8" loc="108" coveredmethods="3" methods="6" elements="29" classes="1" ncloc="50" statements="21" conditionals="2" coveredstatements="17"/>
            <class name="Bond">
               <metrics coveredelements="21" coveredconditionals="1" complexity="8" coveredmethods="3" methods="6" elements="29" statements="21" conditionals="2" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="Bond(LocalDateTime,String,double)" num="33" count="5" type="method"/>
            <line num="34" count="5" type="stmt"/>
            <line num="35" count="5" type="stmt"/>
            <line num="36" count="5" type="stmt"/>
            <line num="37" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="Bond(String,double)" num="44" count="5" type="method"/>
            <line num="45" count="5" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,HybridAssetMonteCarloSimulation) : RandomVariable" num="58" count="5" type="method"/>
            <line num="61" count="5" type="stmt"/>
            <line num="62" count="5" type="stmt"/>
            <line num="63" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="70" count="5" type="stmt"/>
            <line num="71" count="5" type="stmt"/>
            <line num="74" count="5" type="stmt"/>
            <line num="77" count="5" type="stmt"/>
            <line num="79" count="5" type="stmt"/>
            <line num="82" count="5" type="stmt"/>
            <line num="83" count="5" type="stmt"/>
            <line num="84" count="5" type="stmt"/>
            <line num="87" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMaturity(double) : void" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/products/BondWithForeignNumeraire.java" name="BondWithForeignNumeraire.java">
            <metrics coveredelements="20" coveredconditionals="1" complexity="6" loc="91" coveredmethods="3" methods="4" elements="24" classes="1" ncloc="41" statements="18" conditionals="2" coveredstatements="16"/>
            <class name="BondWithForeignNumeraire">
               <metrics coveredelements="20" coveredconditionals="1" complexity="6" coveredmethods="3" methods="4" elements="24" statements="18" conditionals="2" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="BondWithForeignNumeraire(LocalDateTime,String,double)" num="32" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="BondWithForeignNumeraire(String,double)" num="43" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,HybridAssetMonteCarloSimulation) : RandomVariable" num="57" count="2" type="method"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/products/ForwardRateAgreementGeneralized.java" name="ForwardRateAgreementGeneralized.java">
            <metrics coveredelements="38" coveredconditionals="6" complexity="9" loc="121" coveredmethods="4" methods="4" elements="42" classes="1" ncloc="64" statements="30" conditionals="8" coveredstatements="28"/>
            <class name="ForwardRateAgreementGeneralized">
               <metrics coveredelements="38" coveredconditionals="6" complexity="9" coveredmethods="4" methods="4" elements="42" statements="30" conditionals="8" coveredstatements="28"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardRateAgreementGeneralized(LocalDateTime,String,double,double,double,RandomVariable,RandomVariable,RandomVariable)" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line num="41" count="3" type="stmt"/>
            <line num="42" count="3" type="stmt"/>
            <line num="43" count="3" type="stmt"/>
            <line num="44" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line num="46" count="3" type="stmt"/>
            <line num="47" count="3" type="stmt"/>
            <line num="48" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardRateAgreementGeneralized(LocalDateTime,String,double,double,double)" num="60" count="2" type="method"/>
            <line num="61" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardRateAgreementGeneralized(String,double,double,double)" num="64" count="2" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,HybridAssetMonteCarloSimulation) : RandomVariable" num="78" count="5" type="method"/>
            <line num="81" count="5" type="stmt"/>
            <line num="82" count="5" type="stmt"/>
            <line num="83" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="90" count="5" type="stmt"/>
            <line num="91" count="5" type="stmt"/>
            <line num="94" count="5" type="stmt"/>
            <line num="97" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="97" type="cond"/>
            <line num="98" count="2" type="stmt"/>
            <line num="100" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="100" type="cond"/>
            <line num="101" count="2" type="stmt"/>
            <line num="103" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="108" count="5" type="stmt"/>
            <line num="111" count="5" type="stmt"/>
            <line num="114" count="5" type="stmt"/>
            <line num="115" count="5" type="stmt"/>
            <line num="116" count="5" type="stmt"/>
            <line num="119" count="5" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/products/HybridAssetMonteCarloProduct.java" name="HybridAssetMonteCarloProduct.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="5" loc="82" coveredmethods="2" methods="5" elements="10" classes="1" ncloc="29" statements="5" conditionals="0" coveredstatements="2"/>
            <class name="HybridAssetMonteCarloProduct">
               <metrics coveredelements="4" coveredconditionals="0" complexity="5" coveredmethods="2" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="HybridAssetMonteCarloProduct()" num="29" count="10" type="method"/>
            <line num="30" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValueForModifiedData(double,MonteCarloSimulationModel,Map&lt;String, Object&gt;) : RandomVariable" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues(double,HybridAssetMonteCarloSimulation) : Map&lt;String, Object&gt;" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,MonteCarloSimulationModel) : RandomVariable" num="66" count="12" type="method"/>
            <line num="68" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorDrift(LIBORModelMonteCarloSimulationModel,LIBORModelMonteCarloSimulationModel) : FactorDrift" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/products/WorstOfExpressCertificate.java" name="WorstOfExpressCertificate.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="105" coveredmethods="0" methods="4" elements="40" classes="1" ncloc="58" statements="30" conditionals="6" coveredstatements="0"/>
            <class name="WorstOfExpressCertificate">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="40" statements="30" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="WorstOfExpressCertificate(double,double[],double[],double[],double[],double)" num="29" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,Model) : Object" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,HybridAssetLIBORModelMonteCarloSimulation) : double" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getWorstPerformance(HybridAssetLIBORModelMonteCarloSimulation,double,double[]) : RandomVariable" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="103" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.products">
         <metrics coveredelements="0" complexity="13" loc="133" methods="6" classes="1" statements="30" coveredconditionals="0" coveredmethods="0" elements="44" ncloc="76" files="1" conditionals="8" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/products/PortfolioMonteCarloProduct.java" name="PortfolioMonteCarloProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="133" coveredmethods="0" methods="6" elements="44" classes="1" ncloc="76" statements="30" conditionals="8" coveredstatements="0"/>
            <class name="PortfolioMonteCarloProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="6" elements="44" statements="30" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="PortfolioMonteCarloProduct(MonteCarloProduct[],double[],Optional&lt;Integer&gt;)" num="45" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PortfolioMonteCarloProduct(MonteCarloProduct[],double[])" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PortfolioMonteCarloProduct(MonteCarloProduct[])" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="weightsOfOne(int) : double[]" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,MonteCarloSimulationModel) : RandomVariable" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : RandomVariable" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.products">
         <metrics coveredelements="352" complexity="172" loc="1702" methods="81" classes="13" statements="398" coveredconditionals="74" coveredmethods="34" elements="627" ncloc="847" files="13" conditionals="148" coveredstatements="244"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/AbstractAnalyticProduct.java" name="AbstractAnalyticProduct.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="2" loc="31" coveredmethods="1" methods="2" elements="4" classes="1" ncloc="14" statements="2" conditionals="0" coveredstatements="1"/>
            <class name="AbstractAnalyticProduct">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="getValue(double,Model) : Object" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel) : double" num="28" count="40985813" type="method"/>
            <line num="29" count="40993495" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/AnalyticProduct.java" name="AnalyticProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="29" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AnalyticProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/Cap.java" name="Cap.java">
            <metrics coveredelements="105" coveredconditionals="22" complexity="36" loc="314" coveredmethods="6" methods="11" elements="146" classes="1" ncloc="172" statements="97" conditionals="38" coveredstatements="77"/>
            <class name="Cap">
               <metrics coveredelements="105" coveredconditionals="22" complexity="36" coveredmethods="6" methods="11" elements="146" statements="97" conditionals="38" coveredstatements="77"/>
            </class>
            <line complexity="1" visibility="public" signature="Cap(Schedule,String,double,boolean,String,String,QuotingConvention)" num="71" count="260" type="method"/>
            <line num="72" count="260" type="stmt"/>
            <line num="73" count="260" type="stmt"/>
            <line num="74" count="260" type="stmt"/>
            <line num="75" count="260" type="stmt"/>
            <line num="76" count="260" type="stmt"/>
            <line num="77" count="260" type="stmt"/>
            <line num="78" count="260" type="stmt"/>
            <line num="79" count="260" type="stmt"/>
            <line complexity="1" visibility="public" signature="Cap(Schedule,String,double,boolean,String,String)" num="95" count="156" type="method"/>
            <line num="96" count="156" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,AnalyticModel) : double" num="99" count="69154" type="method"/>
            <line num="101" count="69157" type="stmt"/>
            <line falsecount="68995" truecount="156" num="101" type="cond"/>
            <line num="102" count="156" type="stmt"/>
            <line num="104" count="68990" type="stmt"/>
            <line complexity="14" visibility="public" signature="getValueAsPrice(double,AnalyticModel) : double" num="115" count="6527890" type="method"/>
            <line num="116" count="6528089" type="stmt"/>
            <line num="117" count="6527931" type="stmt"/>
            <line num="119" count="6528009" type="stmt"/>
            <line num="120" count="6528344" type="stmt"/>
            <line falsecount="6528406" truecount="0" num="120" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="130" count="6528367" type="stmt"/>
            <line num="131" count="6528406" type="stmt"/>
            <line falsecount="6527735" truecount="104022473" num="131" type="cond"/>
            <line num="132" count="104049385" type="stmt"/>
            <line num="133" count="104030766" type="stmt"/>
            <line num="134" count="104024258" type="stmt"/>
            <line num="141" count="104014699" type="stmt"/>
            <line falsecount="104042392" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="145" count="104053703" type="stmt"/>
            <line num="146" count="104060151" type="stmt"/>
            <line falsecount="0" truecount="104064381" num="146" type="cond"/>
            <line num="147" count="104066802" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="159" count="104060438" type="stmt"/>
            <line falsecount="0" truecount="104077260" num="159" type="cond"/>
            <line num="160" count="104058063" type="stmt"/>
            <line num="162" count="104076690" type="stmt"/>
            <line num="163" count="104083889" type="stmt"/>
            <line falsecount="6162" truecount="104082555" num="163" type="cond"/>
            <line num="164" count="104085736" type="stmt"/>
            <line num="167" count="104082624" type="stmt"/>
            <line num="168" count="104072038" type="stmt"/>
            <line falsecount="104086461" truecount="0" num="168" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="104092417" type="stmt"/>
            <line falsecount="64703820" truecount="39374909" num="171" type="cond"/>
            <line num="172" count="39379195" type="stmt"/>
            <line num="173" count="39370557" type="stmt"/>
            <line num="177" count="64709430" type="stmt"/>
            <line num="178" count="64696043" type="stmt"/>
            <line num="182" count="6527789" type="stmt"/>
            <line complexity="6" visibility="public" signature="getATMForward(AnalyticModel,boolean) : double" num="198" count="105161465" type="method"/>
            <line num="199" count="105163727" type="stmt"/>
            <line falsecount="20503657" truecount="84674376" num="199" type="cond"/>
            <line num="200" count="84676578" type="stmt"/>
            <line num="203" count="20504634" type="stmt"/>
            <line num="204" count="20504817" type="stmt"/>
            <line falsecount="20505509" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="214" count="20505246" type="stmt"/>
            <line num="215" count="20501215" type="stmt"/>
            <line num="217" count="20500047" type="stmt"/>
            <line num="218" count="20501607" type="stmt"/>
            <line num="219" count="20505848" type="stmt"/>
            <line num="221" count="20504787" type="stmt"/>
            <line complexity="7" visibility="public" signature="getImpliedVolatility(double,AnalyticModel,VolatilitySurface.QuotingConvention) : double" num="232" count="68990" type="method"/>
            <line num="233" count="68993" type="stmt"/>
            <line num="234" count="68986" type="stmt"/>
            <line num="235" count="68986" type="stmt"/>
            <line falsecount="69000" truecount="1082798" num="235" type="cond"/>
            <line num="236" count="1082807" type="stmt"/>
            <line num="237" count="1082784" type="stmt"/>
            <line num="239" count="1082779" type="stmt"/>
            <line falsecount="1082779" truecount="0" num="239" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="243" count="1082788" type="stmt"/>
            <line num="244" count="1082786" type="stmt"/>
            <line falsecount="0" truecount="1082775" num="244" type="cond"/>
            <line num="245" count="1082762" type="stmt"/>
            <line num="248" count="1082798" type="stmt"/>
            <line num="249" count="1082788" type="stmt"/>
            <line num="250" count="1082776" type="stmt"/>
            <line num="251" count="1082783" type="stmt"/>
            <line num="254" count="69002" type="stmt"/>
            <line num="256" count="69003" type="stmt"/>
            <line num="257" count="69004" type="stmt"/>
            <line num="258" count="69004" type="stmt"/>
            <line num="259" count="69000" type="stmt"/>
            <line falsecount="69004" truecount="6458922" num="259" type="cond"/>
            <line num="260" count="6459104" type="stmt"/>
            <line num="261" count="6459031" type="stmt"/>
            <line num="262" count="6459163" type="stmt"/>
            <line num="263" count="6459191" type="stmt"/>
            <line num="264" count="6459191" type="stmt"/>
            <line num="265" count="6458568" type="stmt"/>
            <line num="266" count="6458692" type="stmt"/>
            <line num="267" count="6458876" type="stmt"/>
            <line num="268" count="6459043" type="stmt"/>
            <line num="269" count="6459234" type="stmt"/>
            <line num="271" count="69004" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="279" count="0" type="method"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrike() : double" num="288" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="297" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="301" count="0" type="method"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="309" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/Cashflow.java" name="Cashflow.java">
            <metrics coveredelements="18" coveredconditionals="5" complexity="6" loc="60" coveredmethods="2" methods="2" elements="23" classes="1" ncloc="29" statements="13" conditionals="8" coveredstatements="11"/>
            <class name="Cashflow">
               <metrics coveredelements="18" coveredconditionals="5" complexity="6" coveredmethods="2" methods="2" elements="23" statements="13" conditionals="8" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="Cashflow(String,double,double,boolean,String)" num="35" count="4" type="method"/>
            <line num="36" count="4" type="stmt"/>
            <line num="37" count="4" type="stmt"/>
            <line num="38" count="4" type="stmt"/>
            <line num="39" count="4" type="stmt"/>
            <line num="40" count="4" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,AnalyticModel) : double" num="44" count="4" type="method"/>
            <line num="46" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="55" type="cond"/>
            <line num="56" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="56" type="cond"/>
            <line num="58" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/Deposit.java" name="Deposit.java">
            <metrics coveredelements="39" coveredconditionals="9" complexity="16" loc="132" coveredmethods="3" methods="9" elements="63" classes="1" ncloc="78" statements="40" conditionals="14" coveredstatements="27"/>
            <class name="Deposit">
               <metrics coveredelements="39" coveredconditionals="9" complexity="16" coveredmethods="3" methods="9" elements="63" statements="40" conditionals="14" coveredstatements="27"/>
            </class>
            <line complexity="2" visibility="public" signature="Deposit(Schedule,double,String)" num="38" count="266" type="method"/>
            <line num="39" count="266" type="stmt"/>
            <line num="40" count="266" type="stmt"/>
            <line num="41" count="266" type="stmt"/>
            <line num="42" count="266" type="stmt"/>
            <line num="45" count="266" type="stmt"/>
            <line falsecount="266" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,AnalyticModel) : double" num="50" count="169767" type="method"/>
            <line num="52" count="169780" type="stmt"/>
            <line falsecount="169790" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="169788" type="stmt"/>
            <line num="57" count="169733" type="stmt"/>
            <line falsecount="169747" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="61" count="169747" type="stmt"/>
            <line num="63" count="169655" type="stmt"/>
            <line falsecount="169660" truecount="2" num="63" type="cond"/>
            <line num="64" count="2" type="stmt"/>
            <line num="67" count="169667" type="stmt"/>
            <line num="68" count="169643" type="stmt"/>
            <line num="69" count="169651" type="stmt"/>
            <line num="70" count="169709" type="stmt"/>
            <line num="72" count="169692" type="stmt"/>
            <line falsecount="169696" truecount="2" num="72" type="cond"/>
            <line num="73" count="2" type="stmt"/>
            <line num="76" count="169626" type="stmt"/>
            <line complexity="3" visibility="public" signature="getRate(AnalyticModel) : double" num="86" count="4" type="method"/>
            <line num="87" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="4" type="stmt"/>
            <line num="92" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="4" type="stmt"/>
            <line num="97" count="4" type="stmt"/>
            <line num="98" count="4" type="stmt"/>
            <line num="100" count="4" type="stmt"/>
            <line num="101" count="4" type="stmt"/>
            <line num="103" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule() : Schedule" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="110" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRate() : double" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodEndTime() : double" num="118" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixingTime() : double" num="123" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/Forward.java" name="Forward.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="80" coveredmethods="0" methods="2" elements="32" classes="1" ncloc="40" statements="20" conditionals="10" coveredstatements="0"/>
            <class name="Forward">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="2" elements="32" statements="20" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Forward(double,double,String,double,String)" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getValue(double,AnalyticModel) : double" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="78" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/ForwardRateAgreement.java" name="ForwardRateAgreement.java">
            <metrics coveredelements="32" coveredconditionals="7" complexity="15" loc="116" coveredmethods="3" methods="4" elements="55" classes="1" ncloc="61" statements="33" conditionals="18" coveredstatements="22"/>
            <class name="ForwardRateAgreement">
               <metrics coveredelements="32" coveredconditionals="7" complexity="15" coveredmethods="3" methods="4" elements="55" statements="33" conditionals="18" coveredstatements="22"/>
            </class>
            <line complexity="2" visibility="public" signature="ForwardRateAgreement(Schedule,double,String,String,boolean)" num="40" count="240" type="method"/>
            <line num="41" count="240" type="stmt"/>
            <line num="42" count="240" type="stmt"/>
            <line num="43" count="240" type="stmt"/>
            <line num="44" count="240" type="stmt"/>
            <line num="45" count="240" type="stmt"/>
            <line num="46" count="240" type="stmt"/>
            <line num="49" count="240" type="stmt"/>
            <line falsecount="240" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardRateAgreement(Schedule,double,String,String)" num="62" count="240" type="method"/>
            <line num="63" count="240" type="stmt"/>
            <line complexity="9" visibility="public" signature="getValue(double,AnalyticModel) : double" num="66" count="159185" type="method"/>
            <line num="68" count="159187" type="stmt"/>
            <line falsecount="159192" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="159195" type="stmt"/>
            <line num="73" count="159181" type="stmt"/>
            <line falsecount="159182" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="77" count="159182" type="stmt"/>
            <line num="78" count="159176" type="stmt"/>
            <line falsecount="159180" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="159184" type="stmt"/>
            <line num="83" count="159156" type="stmt"/>
            <line num="84" count="159160" type="stmt"/>
            <line num="86" count="159161" type="stmt"/>
            <line num="87" count="159160" type="stmt"/>
            <line falsecount="0" truecount="159163" num="87" type="cond"/>
            <line num="88" count="159163" type="stmt"/>
            <line num="92" count="159180" type="stmt"/>
            <line falsecount="0" truecount="159181" num="92" type="cond"/>
            <line num="93" count="159181" type="stmt"/>
            <line falsecount="0" truecount="159184" num="93" type="cond"/>
            <line num="94" count="159167" type="stmt"/>
            <line complexity="3" visibility="public" signature="getRate(AnalyticModel) : double" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/MarketForwardRateAgreement.java" name="MarketForwardRateAgreement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="91" coveredmethods="0" methods="2" elements="33" classes="1" ncloc="41" statements="21" conditionals="10" coveredstatements="0"/>
            <class name="MarketForwardRateAgreement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="2" elements="33" statements="21" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MarketForwardRateAgreement(double,double,String,double,String)" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getValue(double,AnalyticModel) : double" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="89" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/Performance.java" name="Performance.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="55" coveredmethods="0" methods="3" elements="11" classes="1" ncloc="23" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="Performance">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="11" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Performance(AbstractAnalyticProduct,AbstractAnalyticProduct)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : double" num="40" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/Portfolio.java" name="Portfolio.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="141" coveredmethods="0" methods="8" elements="30" classes="1" ncloc="54" statements="22" conditionals="0" coveredstatements="0"/>
            <class name="Portfolio">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="30" statements="22" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Portfolio(List&lt;AnalyticProduct&gt;,List&lt;Double&gt;)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Portfolio(Portfolio,List&lt;AnalyticProduct&gt;,List&lt;Double&gt;)" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Portfolio(AnalyticProduct,double)" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Portfolio(List&lt;AnalyticProduct&gt;)" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : double" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProducts() : List&lt;AnalyticProduct&gt;" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getWeights() : List&lt;Double&gt;" num="138" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/Swap.java" name="Swap.java">
            <metrics coveredelements="48" coveredconditionals="7" complexity="19" loc="210" coveredmethods="8" methods="13" elements="65" classes="1" ncloc="112" statements="42" conditionals="10" coveredstatements="33"/>
            <class name="Swap">
               <metrics coveredelements="48" coveredconditionals="7" complexity="19" coveredmethods="8" methods="13" elements="65" statements="42" conditionals="10" coveredstatements="33"/>
            </class>
            <line complexity="1" visibility="public" signature="Swap(AnalyticProduct,AnalyticProduct)" num="48" count="832" type="method"/>
            <line num="49" count="832" type="stmt"/>
            <line num="50" count="832" type="stmt"/>
            <line num="51" count="832" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swap(Schedule,String,double,String,Schedule,String,double,String,boolean)" num="67" count="402" type="method"/>
            <line num="75" count="402" type="stmt"/>
            <line num="76" count="402" type="stmt"/>
            <line num="77" count="402" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swap(Schedule,String,double,String,Schedule,String,double,String)" num="92" count="402" type="method"/>
            <line num="98" count="402" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swap(Schedule,double,String,Schedule,String,String)" num="111" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : double" num="121" count="576335" type="method"/>
            <line num="124" count="576369" type="stmt"/>
            <line num="125" count="576038" type="stmt"/>
            <line num="127" count="576039" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardSwapRate(TimeDiscretization,TimeDiscretization,ForwardCurve) : double" num="130" count="3" type="method"/>
            <line num="131" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwardSwapRate(TimeDiscretization,TimeDiscretization,ForwardCurve,DiscountCurve) : double" num="134" count="9204" type="method"/>
            <line num="135" count="9204" type="stmt"/>
            <line num="136" count="9204" type="stmt"/>
            <line falsecount="0" truecount="9204" num="136" type="cond"/>
            <line num="137" count="9204" type="stmt"/>
            <line num="139" count="9204" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardSwapRate(Schedule,Schedule,ForwardCurve) : double" num="142" count="3" type="method"/>
            <line num="143" count="3" type="stmt"/>
            <line complexity="4" visibility="public" signature="getForwardSwapRate(Schedule,Schedule,ForwardCurve,AnalyticModel) : double" num="146" count="713987" type="method"/>
            <line num="147" count="714003" type="stmt"/>
            <line falsecount="708483" truecount="5523" num="147" type="cond"/>
            <line num="148" count="714014" type="stmt"/>
            <line falsecount="702905" truecount="11109" num="148" type="cond"/>
            <line num="149" count="11109" type="stmt"/>
            <line num="150" count="11108" type="stmt"/>
            <line num="153" count="714006" type="stmt"/>
            <line num="154" count="714002" type="stmt"/>
            <line num="156" count="714028" type="stmt"/>
            <line num="157" count="714029" type="stmt"/>
            <line falsecount="714030" truecount="14095046" num="157" type="cond"/>
            <line num="158" count="14096052" type="stmt"/>
            <line num="159" count="14094969" type="stmt"/>
            <line num="160" count="14094574" type="stmt"/>
            <line num="162" count="14094321" type="stmt"/>
            <line num="163" count="14094597" type="stmt"/>
            <line num="165" count="14094522" type="stmt"/>
            <line num="168" count="714034" type="stmt"/>
            <line num="170" count="714029" type="stmt"/>
            <line num="173" count="714034" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLegReceiver() : AnalyticProduct" num="181" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLegPayer() : AnalyticProduct" num="190" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getDescriptor() : InterestRateSwapProductDescriptor" num="200" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="203" type="cond"/>
            <line num="204" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/SwapAnnuity.java" name="SwapAnnuity.java">
            <metrics coveredelements="23" coveredconditionals="3" complexity="10" loc="137" coveredmethods="5" methods="8" elements="34" classes="1" ncloc="57" statements="22" conditionals="4" coveredstatements="15"/>
            <class name="SwapAnnuity">
               <metrics coveredelements="23" coveredconditionals="3" complexity="10" coveredmethods="5" methods="8" elements="34" statements="22" conditionals="4" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="SwapAnnuity(Schedule,String)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : double" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapAnnuity(TimeDiscretization,DiscountCurve) : double" num="57" count="570761" type="method"/>
            <line num="58" count="570771" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapAnnuity(TimeDiscretization,ForwardCurve) : double" num="70" count="5525" type="method"/>
            <line num="71" count="5525" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapAnnuity(Schedule,DiscountCurve) : double" num="83" count="570768" type="method"/>
            <line num="84" count="570775" type="stmt"/>
            <line num="85" count="570779" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapAnnuity(Schedule,ForwardCurve) : double" num="99" count="5525" type="method"/>
            <line num="100" count="5525" type="stmt"/>
            <line num="101" count="5524" type="stmt"/>
            <line num="102" count="5525" type="stmt"/>
            <line complexity="3" visibility="public" signature="getSwapAnnuity(double,Schedule,DiscountCurve,AnalyticModel) : double" num="117" count="1504414" type="method"/>
            <line num="118" count="1504444" type="stmt"/>
            <line num="119" count="1504448" type="stmt"/>
            <line falsecount="1504493" truecount="25702280" num="119" type="cond"/>
            <line num="120" count="25710252" type="stmt"/>
            <line num="121" count="25701050" type="stmt"/>
            <line falsecount="25709711" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="25710172" type="stmt"/>
            <line num="126" count="25700391" type="stmt"/>
            <line num="127" count="25700369" type="stmt"/>
            <line num="129" count="1504504" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/SwapLeg.java" name="SwapLeg.java">
            <metrics coveredelements="85" coveredconditionals="21" complexity="39" loc="306" coveredmethods="6" methods="17" elements="131" classes="1" ncloc="160" statements="78" conditionals="36" coveredstatements="58"/>
            <class name="SwapLeg">
               <metrics coveredelements="85" coveredconditionals="21" complexity="39" coveredmethods="6" methods="17" elements="131" statements="78" conditionals="36" coveredstatements="58"/>
            </class>
            <line complexity="1" visibility="public" signature="SwapLeg(LocalDateTime,Schedule,String,double[],double[],String,boolean)" num="61" count="4" type="method"/>
            <line num="62" count="4" type="stmt"/>
            <line num="63" count="4" type="stmt"/>
            <line num="64" count="4" type="stmt"/>
            <line num="65" count="4" type="stmt"/>
            <line num="66" count="4" type="stmt"/>
            <line num="67" count="4" type="stmt"/>
            <line num="68" count="4" type="stmt"/>
            <line num="69" count="4" type="stmt"/>
            <line num="70" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Optional&lt;LocalDateTime&gt;,Schedule,String,double[],double[],String,boolean)" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Schedule,String,double[],double[],String,boolean)" num="100" count="4" type="method"/>
            <line num="101" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="SwapLeg(Optional&lt;LocalDateTime&gt;,Schedule,String,double,String,String,boolean)" num="115" count="40990154" type="method"/>
            <line num="116" count="40988717" type="stmt"/>
            <line num="117" count="40991189" type="stmt"/>
            <line num="118" count="40994998" type="stmt"/>
            <line num="119" count="40997378" type="stmt"/>
            <line num="120" count="40998167" type="stmt"/>
            <line num="121" count="40998215" type="stmt"/>
            <line falsecount="41000030" truecount="0" num="121" type="cond"/>
            <line num="122" count="40998545" type="stmt"/>
            <line num="124" count="41002017" type="stmt"/>
            <line num="125" count="41001989" type="stmt"/>
            <line num="126" count="41008876" type="stmt"/>
            <line num="127" count="41009670" type="stmt"/>
            <line num="128" count="41001681" type="stmt"/>
            <line num="129" count="41008987" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Schedule,String,double,String,String,boolean)" num="142" count="41001024" type="method"/>
            <line num="143" count="40990421" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Schedule,String,double,String,boolean)" num="155" count="40996562" type="method"/>
            <line num="156" count="40986490" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Optional&lt;LocalDateTime&gt;,Schedule,String,double,String)" num="168" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Schedule,String,double,String)" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="20" visibility="public" signature="getValue(double,AnalyticModel) : double" num="184" count="42134331" type="method"/>
            <line num="186" count="42133699" type="stmt"/>
            <line falsecount="42133119" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="190" count="42133477" type="stmt"/>
            <line num="191" count="42142074" type="stmt"/>
            <line falsecount="42152641" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="195" count="42156068" type="stmt"/>
            <line num="198" count="42158672" type="stmt"/>
            <line num="199" count="42145292" type="stmt"/>
            <line num="200" count="42134248" type="stmt"/>
            <line falsecount="10800" truecount="42130154" num="200" type="cond"/>
            <line num="201" count="42133881" type="stmt"/>
            <line num="204" count="42146761" type="stmt"/>
            <line num="205" count="42154380" type="stmt"/>
            <line falsecount="0" truecount="42157491" num="205" type="cond"/>
            <line num="206" count="42158933" type="stmt"/>
            <line num="207" count="42142194" type="stmt"/>
            <line falsecount="42152198" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="212" count="42157542" type="stmt"/>
            <line num="213" count="42141833" type="stmt"/>
            <line falsecount="42153440" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="217" count="42157521" type="stmt"/>
            <line falsecount="42150941" truecount="0" num="217" type="cond"/>
            <line num="219" count="42150318" type="stmt"/>
            <line num="220" count="42151690" type="stmt"/>
            <line falsecount="42147199" truecount="757239903" num="220" type="cond"/>
            <line num="221" count="759994168" type="stmt"/>
            <line num="222" count="758045537" type="stmt"/>
            <line num="223" count="757407641" type="stmt"/>
            <line num="224" count="756443203" type="stmt"/>
            <line num="225" count="755476585" type="stmt"/>
            <line num="227" count="754358140" type="stmt"/>
            <line num="228" count="756899354" type="stmt"/>
            <line falsecount="369011280" truecount="391777824" num="228" type="cond"/>
            <line num="229" count="392212826" type="stmt"/>
            <line num="236" count="755413528" type="stmt"/>
            <line falsecount="0" truecount="755510769" num="236" type="cond"/>
            <line num="237" count="755955891" type="stmt"/>
            <line falsecount="756077695" truecount="0" num="237" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="241" count="756849067" type="stmt"/>
            <line falsecount="0" truecount="756222888" num="241" type="cond"/>
            <line num="242" count="756891691" type="stmt"/>
            <line num="245" count="759442272" type="stmt"/>
            <line falsecount="726359297" truecount="33917752" num="245" type="cond"/>
            <line num="246" count="34346129" type="stmt"/>
            <line falsecount="0" truecount="33948405" num="246" type="cond"/>
            <line num="247" count="33937921" type="stmt"/>
            <line falsecount="10779" truecount="34096003" num="247" type="cond"/>
            <line num="251" count="42151094" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule() : Schedule" num="254" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="258" count="0" type="method"/>
            <line num="259" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSpreads() : double[]" num="262" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getSpread() : double" num="271" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="274" type="cond"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="283" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNotionalExchanged() : boolean" num="287" count="0" type="method"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="291" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : InterestRateSwapLegProductDescriptor" num="302" count="0" type="method"/>
            <line num="304" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.annuitymapping">
         <metrics coveredelements="267" complexity="63" loc="894" methods="34" classes="9" statements="220" coveredconditionals="41" coveredmethods="28" elements="300" ncloc="470" files="8" conditionals="46" coveredstatements="198"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/annuitymapping/AnnuityMapping.java" name="AnnuityMapping.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="55" coveredmethods="0" methods="0" elements="0" classes="2" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AnnuityMapping">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AnnuityMapping.AnnuityMappingType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/annuitymapping/AnnuityMappingFactory.java" name="AnnuityMappingFactory.java">
            <metrics coveredelements="35" coveredconditionals="3" complexity="11" loc="155" coveredmethods="3" methods="5" elements="46" classes="1" ncloc="74" statements="37" conditionals="4" coveredstatements="29"/>
            <class name="AnnuityMappingFactory">
               <metrics coveredelements="35" coveredconditionals="3" complexity="11" coveredmethods="3" methods="5" elements="46" statements="37" conditionals="4" coveredstatements="29"/>
            </class>
            <line complexity="1" visibility="public" signature="buildAnnuityMapping(double,Schedule,Schedule,String,String,String,AnnuityMappingType,VolatilityCubeModel) : AnnuityMapping" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="buildAnnuityMapping(double,Schedule,Schedule,String,String,String,AnnuityMappingType,VolatilityCubeModel,double,double,int) : AnnuityMapping" num="69" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnnuityMappingFactory(Schedule,Schedule,String,String,String)" num="87" count="156" type="method"/>
            <line num="89" count="156" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnnuityMappingFactory(Schedule,Schedule,String,String,String,double,double,double,int)" num="105" count="20747" type="method"/>
            <line num="108" count="20747" type="stmt"/>
            <line num="109" count="20746" type="stmt"/>
            <line num="110" count="20747" type="stmt"/>
            <line num="111" count="20747" type="stmt"/>
            <line num="112" count="20745" type="stmt"/>
            <line num="113" count="20748" type="stmt"/>
            <line num="114" count="20747" type="stmt"/>
            <line num="115" count="20747" type="stmt"/>
            <line num="116" count="20749" type="stmt"/>
            <line num="117" count="20749" type="stmt"/>
            <line complexity="7" visibility="public" signature="build(AnnuityMappingType,VolatilityCubeModel) : AnnuityMapping" num="128" count="20742" type="method"/>
            <line num="130" count="20746" type="stmt"/>
            <line num="131" count="20747" type="stmt"/>
            <line num="132" count="20748" type="stmt"/>
            <line falsecount="20590" truecount="156" num="132" type="cond"/>
            <line num="133" count="156" type="stmt"/>
            <line falsecount="156" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="156" type="stmt"/>
            <line num="139" count="156" type="stmt"/>
            <line num="142" count="20746" type="stmt"/>
            <line num="143" count="20745" type="stmt"/>
            <line num="144" count="20445" type="stmt"/>
            <line num="144" count="20444" type="stmt"/>
            <line num="145" count="20445" type="stmt"/>
            <line num="146" count="152" type="stmt"/>
            <line num="146" count="152" type="stmt"/>
            <line num="147" count="152" type="stmt"/>
            <line num="148" count="152" type="stmt"/>
            <line num="148" count="152" type="stmt"/>
            <line num="148" count="152" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="153" count="20748" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/annuitymapping/BasicPiterbargAnnuityMapping.java" name="BasicPiterbargAnnuityMapping.java">
            <metrics coveredelements="164" coveredconditionals="34" complexity="27" loc="344" coveredmethods="10" methods="10" elements="164" classes="1" ncloc="205" statements="120" conditionals="34" coveredstatements="120"/>
            <class name="BasicPiterbargAnnuityMapping">
               <metrics coveredelements="164" coveredconditionals="34" complexity="27" coveredmethods="10" methods="10" elements="164" statements="120" conditionals="34" coveredstatements="120"/>
            </class>
            <line complexity="1" visibility="public" signature="BasicPiterbargAnnuityMapping(Schedule,Schedule,VolatilityCubeModel,String,String)" num="51" count="1" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="BasicPiterbargAnnuityMapping(Schedule,Schedule,double,VolatilityCubeModel,String,String)" num="65" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="7" visibility="public" signature="BasicPiterbargAnnuityMapping(Schedule,Schedule,double,VolatilityCubeModel,String,String,double,double,int)" num="83" count="20592" type="method"/>
            <line num="85" count="20592" type="stmt"/>
            <line num="86" count="20593" type="stmt"/>
            <line num="88" count="20596" type="stmt"/>
            <line num="89" count="20597" type="stmt"/>
            <line num="90" count="20598" type="stmt"/>
            <line num="91" count="20596" type="stmt"/>
            <line falsecount="20597" truecount="213356" num="91" type="cond"/>
            <line num="92" count="213363" type="stmt"/>
            <line num="93" count="213360" type="stmt"/>
            <line num="95" count="20598" type="stmt"/>
            <line num="97" count="20598" type="stmt"/>
            <line num="98" count="20599" type="stmt"/>
            <line num="100" count="20598" type="stmt"/>
            <line num="101" count="20597" type="stmt"/>
            <line num="104" count="20597" type="stmt"/>
            <line falsecount="20596" truecount="1" num="104" type="cond"/>
            <line num="105" count="1" type="stmt"/>
            <line num="109" count="20599" type="stmt"/>
            <line num="112" count="20597" type="stmt"/>
            <line num="113" count="20597" type="stmt"/>
            <line num="114" count="20599" type="stmt"/>
            <line num="116" count="20596" type="stmt"/>
            <line num="117" count="20598" type="stmt"/>
            <line num="118" count="20598" type="stmt"/>
            <line num="120" count="20599" type="stmt"/>
            <line falsecount="20599" truecount="213392" num="120" type="cond"/>
            <line num="122" count="213392" type="stmt"/>
            <line num="123" count="213395" type="stmt"/>
            <line num="125" count="213397" type="stmt"/>
            <line falsecount="213389" truecount="1694921" num="125" type="cond"/>
            <line num="126" count="1694926" type="stmt"/>
            <line num="127" count="1694907" type="stmt"/>
            <line num="129" count="213391" type="stmt"/>
            <line num="131" count="20599" type="stmt"/>
            <line num="132" count="20598" type="stmt"/>
            <line num="135" count="20599" type="stmt"/>
            <line num="137" count="20596" type="stmt"/>
            <line falsecount="106" truecount="20490" num="137" type="cond"/>
            <line num="138" count="20492" type="stmt"/>
            <line num="140" count="20598" type="stmt"/>
            <line num="144" count="20597" type="stmt"/>
            <line num="146" count="20598" type="stmt"/>
            <line num="148" count="20596" type="stmt"/>
            <line falsecount="106" truecount="20492" num="148" type="cond"/>
            <line num="149" count="20491" type="stmt"/>
            <line num="152" count="20597" type="stmt"/>
            <line complexity="1" visibility="private" signature="BasicPiterbargAnnuityMapping(int,double[],double[],double[],double[],double[],double[],NormalizingFunction)" num="167" count="20597" type="method"/>
            <line num="169" count="20596" type="stmt"/>
            <line num="170" count="20598" type="stmt"/>
            <line num="171" count="20597" type="stmt"/>
            <line num="172" count="20596" type="stmt"/>
            <line num="173" count="20597" type="stmt"/>
            <line num="174" count="20598" type="stmt"/>
            <line num="175" count="20598" type="stmt"/>
            <line num="176" count="20599" type="stmt"/>
            <line num="177" count="20598" type="stmt"/>
            <line num="178" count="20599" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double) : double" num="181" count="3190197" type="method"/>
            <line num="184" count="3190196" type="stmt"/>
            <line num="185" count="3190196" type="stmt"/>
            <line num="186" count="3190201" type="stmt"/>
            <line num="188" count="3190338" type="stmt"/>
            <line num="189" count="3190319" type="stmt"/>
            <line falsecount="3189930" truecount="36377551" num="189" type="cond"/>
            <line num="190" count="36392632" type="stmt"/>
            <line num="193" count="3190204" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFirstDerivative(double) : double" num="196" count="4125525" type="method"/>
            <line num="199" count="4125521" type="stmt"/>
            <line num="200" count="4125513" type="stmt"/>
            <line num="201" count="4125608" type="stmt"/>
            <line num="203" count="4125722" type="stmt"/>
            <line num="204" count="4125723" type="stmt"/>
            <line num="205" count="4125769" type="stmt"/>
            <line falsecount="4125384" truecount="55719841" num="205" type="cond"/>
            <line num="206" count="55725509" type="stmt"/>
            <line num="207" count="55721542" type="stmt"/>
            <line num="211" count="4125546" type="stmt"/>
            <line num="214" count="4125616" type="stmt"/>
            <line complexity="2" visibility="public" signature="getSecondDerivative(double) : double" num="217" count="5530103" type="method"/>
            <line num="220" count="5530284" type="stmt"/>
            <line num="221" count="5530313" type="stmt"/>
            <line num="222" count="5530665" type="stmt"/>
            <line num="224" count="5530613" type="stmt"/>
            <line num="225" count="5530894" type="stmt"/>
            <line num="226" count="5530915" type="stmt"/>
            <line num="227" count="5531080" type="stmt"/>
            <line falsecount="5529630" truecount="70999099" num="227" type="cond"/>
            <line num="228" count="71017096" type="stmt"/>
            <line num="229" count="71016659" type="stmt"/>
            <line num="231" count="71015188" type="stmt"/>
            <line num="235" count="5529796" type="stmt"/>
            <line num="238" count="5530088" type="stmt"/>
            <line num="243" count="5530345" type="stmt"/>
            <line complexity="6" visibility="private" signature="findExponentialDriverMeans(double[],double,double,VolatilityCube,VolatilityCubeModel) : double[]" num="257" count="20597" type="method"/>
            <line num="260" count="20598" type="stmt"/>
            <line num="261" count="20599" type="stmt"/>
            <line num="262" count="20595" type="stmt"/>
            <line falsecount="20597" truecount="213381" num="262" type="cond"/>
            <line num="263" count="213381" type="stmt"/>
            <line num="267" count="20597" type="stmt"/>
            <line num="268" count="20597" type="stmt"/>
            <line num="270" count="20597" type="stmt"/>
            <line num="273" count="20596" type="stmt"/>
            <line num="274" count="20597" type="stmt"/>
            <line num="275" count="20597" type="stmt"/>
            <line falsecount="20597" truecount="213396" num="275" type="cond"/>
            <line num="276" count="213395" type="stmt"/>
            <line num="277" count="213396" type="stmt"/>
            <line num="280" count="20598" type="stmt"/>
            <line falsecount="20598" truecount="192782" num="280" type="cond"/>
            <line num="286" count="192790" type="stmt"/>
            <line num="287" count="192792" type="stmt"/>
            <line falsecount="192776" truecount="1481395" num="287" type="cond"/>
            <line num="288" count="1481411" type="stmt"/>
            <line num="289" count="1481412" type="stmt"/>
            <line num="291" count="192778" type="stmt"/>
            <line falsecount="192787" truecount="1481317" num="291" type="cond"/>
            <line num="292" count="1481349" type="stmt"/>
            <line num="297" count="192784" type="stmt"/>
            <line num="298" count="192789" type="stmt"/>
            <line num="299" count="192787" type="stmt"/>
            <line num="300" count="192792" type="stmt"/>
            <line num="302" count="20598" type="stmt"/>
            <line complexity="3" visibility="private" signature="getAnnuities(Schedule,String,AnalyticModel) : double[]" num="313" count="20596" type="method"/>
            <line num="314" count="20596" type="stmt"/>
            <line num="315" count="20599" type="stmt"/>
            <line falsecount="20598" truecount="213395" num="315" type="cond"/>
            <line num="316" count="213399" type="stmt"/>
            <line num="317" count="213399" type="stmt"/>
            <line falsecount="213398" truecount="1695006" num="317" type="cond"/>
            <line num="318" count="1695118" type="stmt"/>
            <line num="320" count="213398" type="stmt"/>
            <line num="321" count="213388" type="stmt"/>
            <line num="323" count="20598" type="stmt"/>
            <line complexity="2" visibility="private" signature="getForwardSwapRates(Schedule,String,AnalyticModel) : double[]" num="334" count="20598" type="method"/>
            <line num="335" count="20598" type="stmt"/>
            <line num="336" count="20599" type="stmt"/>
            <line num="337" count="20598" type="stmt"/>
            <line falsecount="20599" truecount="213388" num="337" type="cond"/>
            <line num="338" count="213394" type="stmt"/>
            <line num="339" count="213397" type="stmt"/>
            <line num="341" count="20599" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/annuitymapping/ConstantNormalizer.java" name="ConstantNormalizer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="27" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="ConstantNormalizer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="12" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFirstDerivative(double) : double" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSecondDerivative(double) : double" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/annuitymapping/ExponentialNormalizer.java" name="ExponentialNormalizer.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="5" loc="76" coveredmethods="5" methods="5" elements="19" classes="1" ncloc="39" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="ExponentialNormalizer">
               <metrics coveredelements="19" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="19" statements="14" conditionals="0" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="ExponentialNormalizer(Schedule,Schedule,String,String,String,VolatilityCubeModel)" num="36" count="1" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ExponentialNormalizer(double,double)" num="52" count="41195" type="method"/>
            <line num="53" count="41192" type="stmt"/>
            <line num="54" count="41196" type="stmt"/>
            <line num="55" count="41198" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="58" count="15820072" type="method"/>
            <line num="60" count="15824484" type="stmt"/>
            <line num="61" count="15826775" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFirstDerivative(double) : double" num="64" count="4125691" type="method"/>
            <line num="66" count="4125991" type="stmt"/>
            <line num="67" count="4126068" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSecondDerivative(double) : double" num="70" count="8494952" type="method"/>
            <line num="72" count="8495771" type="stmt"/>
            <line num="73" count="8496005" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/annuitymapping/MultiPiterbargAnnuityMapping.java" name="MultiPiterbargAnnuityMapping.java">
            <metrics coveredelements="26" coveredconditionals="1" complexity="9" loc="113" coveredmethods="6" methods="6" elements="28" classes="1" ncloc="64" statements="20" conditionals="2" coveredstatements="19"/>
            <class name="MultiPiterbargAnnuityMapping">
               <metrics coveredelements="26" coveredconditionals="1" complexity="9" coveredmethods="6" methods="6" elements="28" statements="20" conditionals="2" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="MultiPiterbargAnnuityMapping(Schedule,Schedule,VolatilityCubeModel,String,String,String)" num="38" count="1" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="MultiPiterbargAnnuityMapping(Schedule,Schedule,double,VolatilityCubeModel,String,String,String,double,double,int)" num="66" count="20443" type="method"/>
            <line num="69" count="20441" type="stmt"/>
            <line num="72" count="20444" type="stmt"/>
            <line num="73" count="20444" type="stmt"/>
            <line num="74" count="20446" type="stmt"/>
            <line num="75" count="20441" type="stmt"/>
            <line num="77" count="20442" type="stmt"/>
            <line num="79" count="20440" type="stmt"/>
            <line num="80" count="20440" type="stmt"/>
            <line num="82" count="20442" type="stmt"/>
            <line num="84" count="20441" type="stmt"/>
            <line num="85" count="20444" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="88" count="2969398" type="method"/>
            <line num="90" count="2969716" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFirstDerivative(double) : double" num="93" count="3425053" type="method"/>
            <line num="95" count="3425206" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSecondDerivative(double) : double" num="98" count="1964340" type="method"/>
            <line num="100" count="1964352" type="stmt"/>
            <line complexity="4" visibility="private" signature="getOffsetCode(String) : String" num="104" count="20438" type="method"/>
            <line num="105" count="20440" type="stmt"/>
            <line num="106" count="20436" type="stmt"/>
            <line num="107" count="20438" type="stmt"/>
            <line falsecount="20438" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="20442" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/annuitymapping/NormalizingFunction.java" name="NormalizingFunction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="36" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NormalizingFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/annuitymapping/SimplifiedLinearAnnuityMapping.java" name="SimplifiedLinearAnnuityMapping.java">
            <metrics coveredelements="23" coveredconditionals="3" complexity="8" loc="88" coveredmethods="4" methods="5" elements="37" classes="1" ncloc="56" statements="26" conditionals="6" coveredstatements="16"/>
            <class name="SimplifiedLinearAnnuityMapping">
               <metrics coveredelements="23" coveredconditionals="3" complexity="8" coveredmethods="4" methods="5" elements="37" statements="26" conditionals="6" coveredstatements="16"/>
            </class>
            <line complexity="2" visibility="public" signature="SimplifiedLinearAnnuityMapping(Schedule,double,double,double)" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="28" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="SimplifiedLinearAnnuityMapping(Schedule,Schedule,AnalyticModel,String)" num="48" count="153" type="method"/>
            <line num="49" count="153" type="stmt"/>
            <line num="51" count="153" type="stmt"/>
            <line num="52" count="153" type="stmt"/>
            <line falsecount="153" truecount="3060" num="52" type="cond"/>
            <line num="53" count="3060" type="stmt"/>
            <line num="55" count="153" type="stmt"/>
            <line num="57" count="153" type="stmt"/>
            <line falsecount="153" truecount="0" num="58" type="cond"/>
            <line num="61" count="153" type="stmt"/>
            <line num="63" count="153" type="stmt"/>
            <line num="65" count="153" type="stmt"/>
            <line num="66" count="153" type="stmt"/>
            <line num="68" count="153" type="stmt"/>
            <line num="69" count="153" type="stmt"/>
            <line num="70" count="153" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="73" count="200099" type="method"/>
            <line num="75" count="200099" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFirstDerivative(double) : double" num="78" count="700544" type="method"/>
            <line num="80" count="700544" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSecondDerivative(double) : double" num="83" count="601744" type="method"/>
            <line num="85" count="601744" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.products">
         <metrics coveredelements="265" complexity="74" loc="930" methods="52" classes="8" statements="194" coveredconditionals="35" coveredmethods="49" elements="290" ncloc="473" files="8" conditionals="44" coveredstatements="181"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/products/AbstractAnalyticVolatilityCubeProduct.java" name="AbstractAnalyticVolatilityCubeProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="41" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="21" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="AbstractAnalyticVolatilityCubeProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : double" num="16" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,Model) : Object" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(VolatilityCubeModel) : double" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/products/AbstractSingleSwapRateProduct.java" name="AbstractSingleSwapRateProduct.java">
            <metrics coveredelements="65" coveredconditionals="7" complexity="19" loc="270" coveredmethods="14" methods="14" elements="70" classes="1" ncloc="112" statements="46" conditionals="10" coveredstatements="44"/>
            <class name="AbstractSingleSwapRateProduct">
               <metrics coveredelements="65" coveredconditionals="7" complexity="19" coveredmethods="14" methods="14" elements="70" statements="46" conditionals="10" coveredstatements="44"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractSingleSwapRateProduct(Schedule,Schedule,String,String,String)" num="54" count="64239" type="method"/>
            <line num="56" count="64237" type="stmt"/>
            <line num="57" count="64241" type="stmt"/>
            <line num="58" count="64247" type="stmt"/>
            <line num="59" count="64246" type="stmt"/>
            <line num="60" count="64245" type="stmt"/>
            <line num="61" count="64246" type="stmt"/>
            <line complexity="1" visibility="public" signature="setIntegrationParameters(double,double,int) : void" num="71" count="62821" type="method"/>
            <line num="72" count="62827" type="stmt"/>
            <line num="73" count="62828" type="stmt"/>
            <line num="74" count="62827" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationLowerBound() : double" num="80" count="996" type="method"/>
            <line num="81" count="996" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationUpperBound() : double" num="87" count="996" type="method"/>
            <line num="88" count="996" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationNumberOfEvaluationPoints() : int" num="94" count="996" type="method"/>
            <line num="95" count="996" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,VolatilityCubeModel) : double" num="99" count="42345" type="method"/>
            <line num="101" count="42346" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,AnnuityMapping,VolatilityCubeModel) : double" num="117" count="64386" type="method"/>
            <line num="119" count="64389" type="stmt"/>
            <line falsecount="64395" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="124" count="64397" type="stmt"/>
            <line num="125" count="64397" type="stmt"/>
            <line num="127" count="64397" type="stmt"/>
            <line falsecount="23200" truecount="41198" num="127" type="cond"/>
            <line num="128" count="41195" type="stmt"/>
            <line num="130" count="23200" type="stmt"/>
            <line num="132" count="64394" type="stmt"/>
            <line num="135" count="64399" type="stmt"/>
            <line falsecount="22047" truecount="42352" num="135" type="cond"/>
            <line num="137" count="64394" type="stmt"/>
            <line num="138" count="64394" type="stmt"/>
            <line num="141" count="64397" type="stmt"/>
            <line falsecount="64398" truecount="0" num="141" type="cond"/>
            <line num="145" count="64392" type="stmt"/>
            <line num="146" count="64398" type="stmt"/>
            <line num="148" count="64398" type="stmt"/>
            <line num="149" count="64396" type="stmt"/>
            <line num="151" count="64397" type="stmt"/>
            <line num="152" count="64398" type="stmt"/>
            <line num="154" count="64398" type="stmt"/>
            <line num="156" count="64393" type="stmt"/>
            <line falsecount="64393" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="160" count="64396" type="stmt"/>
            <line complexity="1" visibility="protected" signature="valuePut(double,VolatilityCubeModel,double) : double" num="215" count="5467122" type="method"/>
            <line num="216" count="5467610" type="stmt"/>
            <line complexity="1" visibility="protected" signature="valueCall(double,VolatilityCubeModel,double) : double" num="227" count="10927134" type="method"/>
            <line num="228" count="10928541" type="stmt"/>
            <line num="229" count="10926968" type="stmt"/>
            <line num="230" count="10926553" type="stmt"/>
            <line num="231" count="10926730" type="stmt"/>
            <line num="232" count="10926028" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixSchedule() : Schedule" num="238" count="300470555" type="method"/>
            <line num="239" count="301209465" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatSchedule() : Schedule" num="245" count="65544" type="method"/>
            <line num="246" count="65544" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="252" count="83535" type="method"/>
            <line num="253" count="83537" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="259" count="88749" type="method"/>
            <line num="260" count="88751" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilityCubeName() : String" num="266" count="11057693" type="method"/>
            <line num="267" count="11058310" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/products/AnalyticVolatilityCubeProduct.java" name="AnalyticVolatilityCubeProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="24" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AnalyticVolatilityCubeProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/products/AnnuityDummyProduct.java" name="AnnuityDummyProduct.java">
            <metrics coveredelements="21" coveredconditionals="2" complexity="7" loc="85" coveredmethods="6" methods="6" elements="21" classes="1" ncloc="45" statements="13" conditionals="2" coveredstatements="13"/>
            <class name="AnnuityDummyProduct">
               <metrics coveredelements="21" coveredconditionals="2" complexity="7" coveredmethods="6" methods="6" elements="21" statements="13" conditionals="2" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="AnnuityDummyProduct(Schedule,Schedule,String,String,String,AnnuityMappingType)" num="32" count="3" type="method"/>
            <line num="34" count="3" type="stmt"/>
            <line num="35" count="3" type="stmt"/>
            <line num="36" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnnuityDummyProduct(Schedule,Schedule,String,String,String,AnnuityMapping)" num="49" count="20597" type="method"/>
            <line num="51" count="20596" type="stmt"/>
            <line num="52" count="20599" type="stmt"/>
            <line num="53" count="20598" type="stmt"/>
            <line complexity="1" visibility="protected" signature="payoffFunction(double,AnnuityMapping,VolatilityCubeModel) : double" num="56" count="20598" type="method"/>
            <line num="59" count="20600" type="stmt"/>
            <line complexity="1" visibility="protected" signature="hedgeWeight(double,AnnuityMapping,VolatilityCubeModel) : double" num="62" count="2968331" type="method"/>
            <line num="65" count="2968560" type="stmt"/>
            <line complexity="1" visibility="protected" signature="singularAddon(double,AnnuityMapping,VolatilityCubeModel) : double" num="68" count="20599" type="method"/>
            <line num="71" count="20599" type="stmt"/>
            <line complexity="2" visibility="protected" signature="buildAnnuityMapping(VolatilityCubeModel) : AnnuityMapping" num="74" count="20599" type="method"/>
            <line num="77" count="20601" type="stmt"/>
            <line falsecount="3" truecount="20595" num="77" type="cond"/>
            <line num="78" count="20596" type="stmt"/>
            <line num="81" count="3" type="stmt"/>
            <line num="82" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/products/CashSettledPayerSwaption.java" name="CashSettledPayerSwaption.java">
            <metrics coveredelements="75" coveredconditionals="13" complexity="17" loc="182" coveredmethods="9" methods="9" elements="82" classes="1" ncloc="106" statements="57" conditionals="16" coveredstatements="53"/>
            <class name="CashSettledPayerSwaption">
               <metrics coveredelements="75" coveredconditionals="13" complexity="17" coveredmethods="9" methods="9" elements="82" statements="57" conditionals="16" coveredstatements="53"/>
            </class>
            <line complexity="1" visibility="public" signature="CashSettledPayerSwaption(Schedule,Schedule,double,String,String,String,AnnuityMappingType)" num="32" count="675" type="method"/>
            <line num="34" count="675" type="stmt"/>
            <line num="35" count="675" type="stmt"/>
            <line num="36" count="675" type="stmt"/>
            <line complexity="1" visibility="public" signature="CashSettledPayerSwaption(Schedule,Schedule,double,String,String,String,AnnuityMappingType,double,double,int)" num="53" count="10873" type="method"/>
            <line num="56" count="10872" type="stmt"/>
            <line num="57" count="10875" type="stmt"/>
            <line num="58" count="10874" type="stmt"/>
            <line num="60" count="10875" type="stmt"/>
            <line complexity="1" visibility="protected" signature="payoffFunction(double,AnnuityMapping,VolatilityCubeModel) : double" num="63" count="11549" type="method"/>
            <line num="65" count="11550" type="stmt"/>
            <line num="66" count="11549" type="stmt"/>
            <line num="67" count="11549" type="stmt"/>
            <line complexity="2" visibility="protected" signature="hedgeWeight(double,AnnuityMapping,VolatilityCubeModel) : double" num="71" count="1738710" type="method"/>
            <line num="74" count="1738871" type="stmt"/>
            <line falsecount="831467" truecount="907646" num="74" type="cond"/>
            <line num="75" count="907689" type="stmt"/>
            <line num="78" count="831473" type="stmt"/>
            <line num="79" count="831429" type="stmt"/>
            <line num="80" count="831409" type="stmt"/>
            <line num="81" count="831362" type="stmt"/>
            <line num="83" count="831412" type="stmt"/>
            <line num="85" count="831441" type="stmt"/>
            <line complexity="2" visibility="protected" signature="singularAddon(double,AnnuityMapping,VolatilityCubeModel) : double" num="89" count="11549" type="method"/>
            <line num="91" count="11550" type="stmt"/>
            <line num="92" count="11550" type="stmt"/>
            <line falsecount="2403" truecount="9146" num="92" type="cond"/>
            <line num="93" count="9146" type="stmt"/>
            <line num="95" count="2403" type="stmt"/>
            <line num="97" count="11550" type="stmt"/>
            <line complexity="1" visibility="protected" signature="buildAnnuityMapping(VolatilityCubeModel) : AnnuityMapping" num="100" count="500" type="method"/>
            <line num="103" count="500" type="stmt"/>
            <line num="105" count="500" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunction(double) : double" num="114" count="4177475" type="method"/>
            <line num="116" count="4178283" type="stmt"/>
            <line num="117" count="4176672" type="stmt"/>
            <line num="118" count="4177908" type="stmt"/>
            <line falsecount="4175981" truecount="49648282" num="118" type="cond"/>
            <line num="119" count="49703852" type="stmt"/>
            <line num="121" count="4177102" type="stmt"/>
            <line num="123" count="4175958" type="stmt"/>
            <line falsecount="4176976" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="4177086" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunctionFirstDerivative(double) : double" num="136" count="2493558" type="method"/>
            <line num="138" count="2493988" type="stmt"/>
            <line num="139" count="2493525" type="stmt"/>
            <line num="140" count="2493940" type="stmt"/>
            <line falsecount="2492587" truecount="29679862" num="140" type="cond"/>
            <line num="141" count="29712573" type="stmt"/>
            <line num="143" count="2493053" type="stmt"/>
            <line num="145" count="2492580" type="stmt"/>
            <line falsecount="2492923" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="2493142" type="stmt"/>
            <line num="149" count="2493106" type="stmt"/>
            <line num="150" count="2493373" type="stmt"/>
            <line num="151" count="2493322" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunctionSecondDerivative(double) : double" num="161" count="831489" type="method"/>
            <line num="163" count="831525" type="stmt"/>
            <line num="164" count="831458" type="stmt"/>
            <line num="165" count="831492" type="stmt"/>
            <line falsecount="831392" truecount="9931787" num="165" type="cond"/>
            <line num="166" count="9934503" type="stmt"/>
            <line num="168" count="831437" type="stmt"/>
            <line num="170" count="831445" type="stmt"/>
            <line num="171" count="831451" type="stmt"/>
            <line falsecount="831436" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="831434" type="stmt"/>
            <line num="176" count="831416" type="stmt"/>
            <line num="177" count="831441" type="stmt"/>
            <line num="179" count="831387" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/products/CashSettledReceiverSwaption.java" name="CashSettledReceiverSwaption.java">
            <metrics coveredelements="75" coveredconditionals="13" complexity="17" loc="182" coveredmethods="9" methods="9" elements="82" classes="1" ncloc="106" statements="57" conditionals="16" coveredstatements="53"/>
            <class name="CashSettledReceiverSwaption">
               <metrics coveredelements="75" coveredconditionals="13" complexity="17" coveredmethods="9" methods="9" elements="82" statements="57" conditionals="16" coveredstatements="53"/>
            </class>
            <line complexity="1" visibility="public" signature="CashSettledReceiverSwaption(Schedule,Schedule,double,String,String,String,AnnuityMappingType)" num="32" count="672" type="method"/>
            <line num="34" count="672" type="stmt"/>
            <line num="35" count="672" type="stmt"/>
            <line num="36" count="672" type="stmt"/>
            <line complexity="1" visibility="public" signature="CashSettledReceiverSwaption(Schedule,Schedule,double,String,String,String,AnnuityMappingType,double,double,int)" num="53" count="10821" type="method"/>
            <line num="56" count="10821" type="stmt"/>
            <line num="57" count="10821" type="stmt"/>
            <line num="58" count="10821" type="stmt"/>
            <line num="60" count="10821" type="stmt"/>
            <line complexity="1" visibility="protected" signature="payoffFunction(double,AnnuityMapping,VolatilityCubeModel) : double" num="63" count="11493" type="method"/>
            <line num="65" count="11493" type="stmt"/>
            <line num="66" count="11493" type="stmt"/>
            <line num="67" count="11493" type="stmt"/>
            <line complexity="2" visibility="protected" signature="hedgeWeight(double,AnnuityMapping,VolatilityCubeModel) : double" num="71" count="1730596" type="method"/>
            <line num="74" count="1730668" type="stmt"/>
            <line falsecount="830603" truecount="900319" num="74" type="cond"/>
            <line num="75" count="900334" type="stmt"/>
            <line num="78" count="830602" type="stmt"/>
            <line num="79" count="830545" type="stmt"/>
            <line num="80" count="830506" type="stmt"/>
            <line num="81" count="830496" type="stmt"/>
            <line num="83" count="830539" type="stmt"/>
            <line num="85" count="830508" type="stmt"/>
            <line complexity="2" visibility="protected" signature="singularAddon(double,AnnuityMapping,VolatilityCubeModel) : double" num="89" count="11493" type="method"/>
            <line num="91" count="11493" type="stmt"/>
            <line num="92" count="11493" type="stmt"/>
            <line falsecount="11346" truecount="147" num="92" type="cond"/>
            <line num="93" count="147" type="stmt"/>
            <line num="95" count="11346" type="stmt"/>
            <line num="97" count="11493" type="stmt"/>
            <line complexity="1" visibility="protected" signature="buildAnnuityMapping(VolatilityCubeModel) : AnnuityMapping" num="100" count="496" type="method"/>
            <line num="103" count="496" type="stmt"/>
            <line num="105" count="496" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunction(double) : double" num="114" count="4173290" type="method"/>
            <line num="116" count="4174037" type="stmt"/>
            <line num="117" count="4172808" type="stmt"/>
            <line num="118" count="4173723" type="stmt"/>
            <line falsecount="4171501" truecount="49789449" num="118" type="cond"/>
            <line num="119" count="49844217" type="stmt"/>
            <line num="121" count="4172414" type="stmt"/>
            <line num="123" count="4171738" type="stmt"/>
            <line falsecount="4172416" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="4172403" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunctionFirstDerivative(double) : double" num="136" count="2491192" type="method"/>
            <line num="138" count="2491474" type="stmt"/>
            <line num="139" count="2491216" type="stmt"/>
            <line num="140" count="2491510" type="stmt"/>
            <line falsecount="2489924" truecount="29761933" num="140" type="cond"/>
            <line num="141" count="29786987" type="stmt"/>
            <line num="143" count="2490240" type="stmt"/>
            <line num="145" count="2489989" type="stmt"/>
            <line falsecount="2490355" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="2490442" type="stmt"/>
            <line num="149" count="2490583" type="stmt"/>
            <line num="150" count="2490712" type="stmt"/>
            <line num="151" count="2490433" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunctionSecondDerivative(double) : double" num="161" count="830617" type="method"/>
            <line num="163" count="830652" type="stmt"/>
            <line num="164" count="830603" type="stmt"/>
            <line num="165" count="830625" type="stmt"/>
            <line falsecount="830492" truecount="9955734" num="165" type="cond"/>
            <line num="166" count="9957766" type="stmt"/>
            <line num="168" count="830517" type="stmt"/>
            <line num="170" count="830524" type="stmt"/>
            <line num="171" count="830537" type="stmt"/>
            <line falsecount="830535" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="830540" type="stmt"/>
            <line num="176" count="830538" type="stmt"/>
            <line num="177" count="830559" type="stmt"/>
            <line num="179" count="830509" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/products/ConstantMaturitySwap.java" name="ConstantMaturitySwap.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="6" loc="88" coveredmethods="6" methods="6" elements="18" classes="1" ncloc="45" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="ConstantMaturitySwap">
               <metrics coveredelements="18" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="18" statements="12" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="ConstantMaturitySwap(Schedule,Schedule,String,String,String,AnnuityMappingType)" num="30" count="3" type="method"/>
            <line num="32" count="3" type="stmt"/>
            <line num="33" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="payoffFunction(double,AnnuityMapping,VolatilityCubeModel) : double" num="36" count="153" type="method"/>
            <line num="38" count="153" type="stmt"/>
            <line complexity="1" visibility="protected" signature="hedgeWeight(double,AnnuityMapping,VolatilityCubeModel) : double" num="41" count="1502694" type="method"/>
            <line num="43" count="1502694" type="stmt"/>
            <line complexity="1" visibility="protected" signature="singularAddon(double,AnnuityMapping,VolatilityCubeModel) : double" num="46" count="153" type="method"/>
            <line num="48" count="153" type="stmt"/>
            <line complexity="1" visibility="protected" signature="buildAnnuityMapping(VolatilityCubeModel) : AnnuityMapping" num="51" count="153" type="method"/>
            <line num="54" count="153" type="stmt"/>
            <line num="55" count="153" type="stmt"/>
            <line complexity="1" visibility="public" signature="analyticApproximation(double,double,double,double,double,double) : double" num="70" count="3" type="method"/>
            <line num="79" count="3" type="stmt"/>
            <line num="80" count="3" type="stmt"/>
            <line num="81" count="3" type="stmt"/>
            <line num="83" count="3" type="stmt"/>
            <line num="85" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/products/NormalizingDummyProduct.java" name="NormalizingDummyProduct.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="5" loc="58" coveredmethods="5" methods="5" elements="11" classes="1" ncloc="32" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="NormalizingDummyProduct">
               <metrics coveredelements="11" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="NormalizingDummyProduct(Schedule,Schedule,String,String,String,NormalizingFunction)" num="29" count="20597" type="method"/>
            <line num="31" count="20596" type="stmt"/>
            <line num="32" count="20599" type="stmt"/>
            <line complexity="1" visibility="protected" signature="payoffFunction(double,AnnuityMapping,VolatilityCubeModel) : double" num="35" count="20599" type="method"/>
            <line num="38" count="20601" type="stmt"/>
            <line complexity="1" visibility="protected" signature="hedgeWeight(double,AnnuityMapping,VolatilityCubeModel) : double" num="41" count="2967265" type="method"/>
            <line num="44" count="2967503" type="stmt"/>
            <line complexity="1" visibility="protected" signature="singularAddon(double,AnnuityMapping,VolatilityCubeModel) : double" num="47" count="20596" type="method"/>
            <line num="50" count="20597" type="stmt"/>
            <line complexity="1" visibility="protected" signature="buildAnnuityMapping(VolatilityCubeModel) : AnnuityMapping" num="53" count="20598" type="method"/>
            <line num="55" count="20598" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.volatility.caplet.tenorconversion">
         <metrics coveredelements="0" complexity="53" loc="411" methods="13" classes="3" statements="154" coveredconditionals="0" coveredmethods="0" elements="241" ncloc="317" files="3" conditionals="74" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatility/caplet/tenorconversion/CorrelationProvider.java" name="CorrelationProvider.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="11" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CorrelationProvider">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatility/caplet/tenorconversion/CorrelationProviderTenorBasis.java" name="CorrelationProviderTenorBasis.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="29" loc="217" coveredmethods="0" methods="11" elements="123" classes="1" ncloc="170" statements="78" conditionals="34" coveredstatements="0"/>
            <class name="CorrelationProviderTenorBasis">
               <metrics coveredelements="0" coveredconditionals="0" complexity="29" coveredmethods="0" methods="11" elements="123" statements="78" conditionals="34" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CorrelationProviderTenorBasis(CapVolMarketData,CapVolMarketData)" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get6MCorrelation(double,double,AnalyticModel) : double" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="16" visibility="public" signature="get3MCorrelation(double,double,AnalyticModel) : double" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="get1MCorrelation(double,double,AnalyticModel) : double" num="176" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getiCap3MCapletVolMatrix() : double[][]" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getiCap6MCapletVolMatrix() : double[][]" num="184" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationMatrix3M() : double[][]" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationMatrix6M() : double[][]" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getICap3MCapletVolBootrapper() : CapletVolBootstrapping" num="196" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getICap6MCapletVolBootrapper() : CapletVolBootstrapping" num="200" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCorrelation(int,double,double,AnalyticModel,String) : double" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatility/caplet/tenorconversion/TenorConverter.java" name="TenorConverter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="24" loc="183" coveredmethods="0" methods="2" elements="118" classes="1" ncloc="141" statements="76" conditionals="40" coveredstatements="0"/>
            <class name="TenorConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="2" elements="118" statements="76" conditionals="40" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="TenorConverter(CorrelationProvider,int,int,double[],double[],double[][],CapTenorStructure,AnalyticModel,String,String,String)" num="50" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="21" visibility="public" signature="convertTenor() : double[][]" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="168" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling.modelfactory">
         <metrics coveredelements="169" complexity="66" loc="823" methods="53" classes="19" statements="142" coveredconditionals="19" coveredmethods="38" elements="221" ncloc="523" files="6" conditionals="26" coveredstatements="112"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/modelfactory/AnalyticModelFactory.java" name="AnalyticModelFactory.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="4" loc="59" coveredmethods="3" methods="4" elements="8" classes="2" ncloc="32" statements="4" conditionals="0" coveredstatements="3"/>
            <class name="AnalyticModelFactory">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="AnalyticModelFactory.DescribedAnalyticModel">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="getModelFromDescriptor(AnalyticModelDescriptor) : DescribedModel&lt;AnalyticModelDescriptor&gt;" num="25" count="4" type="method"/>
            <line num="27" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="DescribedAnalyticModel(LocalDate,Map&lt;String, Curve&gt;,Map&lt;String, VolatilitySurface&gt;)" num="41" count="4" type="method"/>
            <line num="42" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : AnalyticModelDescriptor" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="50" count="4" type="method"/>
            <line num="53" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/modelfactory/AssetModelFourierMethodFactory.java" name="AssetModelFourierMethodFactory.java">
            <metrics coveredelements="46" coveredconditionals="7" complexity="18" loc="220" coveredmethods="10" methods="14" elements="57" classes="5" ncloc="143" statements="35" conditionals="8" coveredstatements="29"/>
            <class name="AssetModelFourierMethodFactory">
               <metrics coveredelements="22" coveredconditionals="7" complexity="6" coveredmethods="2" methods="2" elements="25" statements="15" conditionals="8" coveredstatements="13"/>
            </class>
            <class name="AssetModelFourierMethodFactory.BlackScholesModelFourier">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="AssetModelFourierMethodFactory.HestonModelFourier">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="AssetModelFourierMethodFactory.MertonModelFourier">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="AssetModelFourierMethodFactory.VarianceGammaModelFourier">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="AssetModelFourierMethodFactory()" num="30" count="12" type="method"/>
            <line num="31" count="12" type="stmt"/>
            <line complexity="5" visibility="public" signature="getModelFromDescriptor(AssetModelDescriptor) : DescribedModel&lt;? extends AssetModelDescriptor&gt;" num="34" count="12" type="method"/>
            <line num="37" count="12" type="stmt"/>
            <line falsecount="8" truecount="4" num="37" type="cond"/>
            <line num="38" count="4" type="stmt"/>
            <line num="39" count="4" type="stmt"/>
            <line num="41" count="8" type="stmt"/>
            <line falsecount="4" truecount="4" num="41" type="cond"/>
            <line num="42" count="4" type="stmt"/>
            <line num="43" count="4" type="stmt"/>
            <line num="45" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="45" type="cond"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="49" type="cond"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="BlackScholesModelFourier(BlackScholesModelDescriptor)" num="81" count="4" type="method"/>
            <line num="82" count="4" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
            <line num="89" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : BlackScholesModelDescriptor" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="97" count="4" type="method"/>
            <line num="100" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="HestonModelFourier(HestonModelDescriptor)" num="121" count="4" type="method"/>
            <line num="122" count="4" type="stmt"/>
            <line num="132" count="4" type="stmt"/>
            <line num="133" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : HestonModelDescriptor" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="141" count="4" type="method"/>
            <line num="144" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="MertonModelFourier(MertonModelDescriptor)" num="159" count="2" type="method"/>
            <line num="160" count="2" type="stmt"/>
            <line num="169" count="2" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : MertonModelDescriptor" num="172" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="177" count="2" type="method"/>
            <line num="180" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="VarianceGammaModelFourier(VarianceGammaModelDescriptor)" num="196" count="2" type="method"/>
            <line num="197" count="2" type="stmt"/>
            <line num="205" count="2" type="stmt"/>
            <line num="206" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : VarianceGammaModelDescriptor" num="209" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="213" count="2" type="method"/>
            <line num="216" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/modelfactory/AssetModelMonteCarloFactory.java" name="AssetModelMonteCarloFactory.java">
            <metrics coveredelements="56" coveredconditionals="8" complexity="21" loc="251" coveredmethods="11" methods="16" elements="74" classes="5" ncloc="150" statements="48" conditionals="10" coveredstatements="37"/>
            <class name="AssetModelMonteCarloFactory">
               <metrics coveredelements="32" coveredconditionals="8" complexity="9" coveredmethods="3" methods="4" elements="42" statements="28" conditionals="10" coveredstatements="21"/>
            </class>
            <class name="AssetModelMonteCarloFactory.BlackScholesModelMonteCarlo">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="AssetModelMonteCarloFactory.HestonModelMonteCarlo">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="AssetModelMonteCarloFactory.MertonModelMonteCarlo">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="AssetModelMonteCarloFactory.VarianceGammaModelMonteCarlo">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="AssetModelMonteCarloFactory(RandomVariableFactory,IndependentIncrements,Scheme)" num="42" count="4" type="method"/>
            <line num="44" count="4" type="stmt"/>
            <line num="45" count="4" type="stmt"/>
            <line num="46" count="4" type="stmt"/>
            <line num="47" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="AssetModelMonteCarloFactory(RandomVariableFactory,IndependentIncrements)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AssetModelMonteCarloFactory(IndependentIncrements)" num="69" count="4" type="method"/>
            <line num="70" count="4" type="stmt"/>
            <line num="71" count="4" type="stmt"/>
            <line num="72" count="4" type="stmt"/>
            <line num="73" count="4" type="stmt"/>
            <line complexity="6" visibility="public" signature="getModelFromDescriptor(AssetModelDescriptor) : DescribedModel&lt;? extends AssetModelDescriptor&gt;" num="76" count="8" type="method"/>
            <line num="79" count="8" type="stmt"/>
            <line falsecount="6" truecount="2" num="79" type="cond"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="83" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="83" type="cond"/>
            <line num="84" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="90" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="90" type="cond"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="94" type="cond"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="BlackScholesModelMonteCarlo(BlackScholesModelDescriptor,RandomVariableFactory,IndependentIncrements)" num="126" count="2" type="method"/>
            <line num="128" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : BlackScholesModelDescriptor" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="144" count="2" type="method"/>
            <line num="146" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="HestonModelMonteCarlo(HestonModelDescriptor,Scheme,RandomVariableFactory,IndependentIncrements)" num="171" count="2" type="method"/>
            <line num="173" count="2" type="stmt"/>
            <line num="175" count="2" type="stmt"/>
            <line num="176" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : HestonModelDescriptor" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="184" count="2" type="method"/>
            <line num="186" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="MertonModelMonteCarlo(MertonModelDescriptor,RandomVariableFactory,IndependentIncrements)" num="202" count="2" type="method"/>
            <line num="204" count="2" type="stmt"/>
            <line num="206" count="2" type="stmt"/>
            <line num="207" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : MertonModelDescriptor" num="210" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="215" count="2" type="method"/>
            <line num="217" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="VarianceGammaModelMonteCarlo(VarianceGammaModelDescriptor,IndependentIncrements)" num="233" count="2" type="method"/>
            <line num="234" count="2" type="stmt"/>
            <line num="236" count="2" type="stmt"/>
            <line num="237" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : VarianceGammaModelDescriptor" num="240" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="245" count="2" type="method"/>
            <line num="248" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/modelfactory/BlackScholesModelMonteCarloFactory.java" name="BlackScholesModelMonteCarloFactory.java">
            <metrics coveredelements="13" coveredconditionals="1" complexity="6" loc="86" coveredmethods="4" methods="5" elements="18" classes="2" ncloc="55" statements="11" conditionals="2" coveredstatements="8"/>
            <class name="BlackScholesModelMonteCarloFactory">
               <metrics coveredelements="7" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="7" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <class name="BlackScholesModelMonteCarloFactory.BlackScholesMonteCarloModel">
               <metrics coveredelements="6" coveredconditionals="1" complexity="4" coveredmethods="2" methods="3" elements="11" statements="6" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesModelMonteCarloFactory(RandomVariableFactory,IndependentIncrements)" num="34" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelFromDescriptor(BlackScholesModelDescriptor) : DescribedModel&lt;BlackScholesModelDescriptor&gt;" num="40" count="2" type="method"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="BlackScholesMonteCarloModel(ProcessModel,MonteCarloProcess)" num="62" count="2" type="method"/>
            <line num="63" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : BlackScholesModelDescriptor" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="71" count="2" type="method"/>
            <line num="73" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="73" type="cond"/>
            <line num="74" count="2" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/modelfactory/BlackScholesModelMonteCarloFiniteDifference1D.java" name="BlackScholesModelMonteCarloFiniteDifference1D.java">
            <metrics coveredelements="34" coveredconditionals="2" complexity="11" loc="123" coveredmethods="6" methods="9" elements="45" classes="3" ncloc="87" statements="32" conditionals="4" coveredstatements="26"/>
            <class name="BlackScholesModelMonteCarloFiniteDifference1D">
               <metrics coveredelements="12" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="12" statements="10" conditionals="0" coveredstatements="10"/>
            </class>
            <class name="BlackScholesModelMonteCarloFiniteDifference1D.BlackScholesFDModel">
               <metrics coveredelements="6" coveredconditionals="1" complexity="4" coveredmethods="2" methods="3" elements="11" statements="6" conditionals="2" coveredstatements="3"/>
            </class>
            <class name="BlackScholesModelMonteCarloFiniteDifference1D.BlackScholesFDModel.FDCallOptionProduct">
               <metrics coveredelements="16" coveredconditionals="1" complexity="5" coveredmethods="2" methods="4" elements="22" statements="16" conditionals="2" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesModelMonteCarloFiniteDifference1D(double)" num="33" count="2" type="method"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelFromDescriptor(BlackScholesModelDescriptor) : DescribedModel&lt;BlackScholesModelDescriptor&gt;" num="38" count="2" type="method"/>
            <line num="41" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="BlackScholesFDModel()" num="53" count="2" type="method"/>
            <line num="54" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : BlackScholesModelDescriptor" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="64" count="2" type="method"/>
            <line num="66" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="66" type="cond"/>
            <line complexity="1" visibility="package" signature="FDCallOptionProduct()" num="70" count="2" type="method"/>
            <line num="71" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,Model) : Object" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValues(double,Model) : Map&lt;String, Object&gt;" num="83" count="2" type="method"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : SingleAssetProductDescriptor" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/modelfactory/HestonModelMonteCarloFactory.java" name="HestonModelMonteCarloFactory.java">
            <metrics coveredelements="14" coveredconditionals="1" complexity="6" loc="84" coveredmethods="4" methods="5" elements="19" classes="2" ncloc="56" statements="12" conditionals="2" coveredstatements="9"/>
            <class name="HestonModelMonteCarloFactory">
               <metrics coveredelements="8" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <class name="HestonModelMonteCarloFactory.HestonMonteCarloModel">
               <metrics coveredelements="6" coveredconditionals="1" complexity="4" coveredmethods="2" methods="3" elements="11" statements="6" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="HestonModelMonteCarloFactory(Scheme,RandomVariableFactory,IndependentIncrements)" num="36" count="2" type="method"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelFromDescriptor(HestonModelDescriptor) : DescribedModel&lt;HestonModelDescriptor&gt;" num="45" count="2" type="method"/>
            <line complexity="1" visibility="package" signature="HestonMonteCarloModel(ProcessModel,MonteCarloProcess)" num="55" count="2" type="method"/>
            <line num="56" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : HestonModelDescriptor" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="64" count="2" type="method"/>
            <line num="66" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="66" type="cond"/>
            <line num="67" count="2" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.fouriermethod.calibration">
         <metrics coveredelements="136" complexity="41" loc="547" methods="26" classes="11" statements="132" coveredconditionals="18" coveredmethods="17" elements="182" ncloc="286" files="10" conditionals="24" coveredstatements="101"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/BoundConstraint.java" name="BoundConstraint.java">
            <metrics coveredelements="15" coveredconditionals="2" complexity="6" loc="50" coveredmethods="4" methods="4" elements="15" classes="1" ncloc="27" statements="9" conditionals="2" coveredstatements="9"/>
            <class name="BoundConstraint">
               <metrics coveredelements="15" coveredconditionals="2" complexity="6" coveredmethods="4" methods="4" elements="15" statements="9" conditionals="2" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="BoundConstraint(double,double)" num="13" count="8" type="method"/>
            <line num="14" count="8" type="stmt"/>
            <line num="15" count="8" type="stmt"/>
            <line num="16" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowerBound() : double" num="23" count="2002" type="method"/>
            <line num="25" count="2007" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUpperBound() : double" num="32" count="1995" type="method"/>
            <line num="34" count="2001" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(double) : double" num="37" count="996" type="method"/>
            <line num="40" count="998" type="stmt"/>
            <line falsecount="871" truecount="132" num="40" type="cond"/>
            <line num="41" count="132" type="stmt"/>
            <line num="43" count="132" type="stmt"/>
            <line num="46" count="870" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/CalibratedModel.java" name="CalibratedModel.java">
            <metrics coveredelements="113" coveredconditionals="16" complexity="24" loc="306" coveredmethods="10" methods="11" elements="139" classes="2" ncloc="184" statements="106" conditionals="22" coveredstatements="87"/>
            <class name="CalibratedModel">
               <metrics coveredelements="98" coveredconditionals="16" complexity="18" coveredmethods="5" methods="5" elements="122" statements="95" conditionals="22" coveredstatements="77"/>
            </class>
            <class name="CalibratedModel.OptimizationResult">
               <metrics coveredelements="15" coveredconditionals="0" complexity="6" coveredmethods="5" methods="6" elements="17" statements="11" conditionals="0" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="CalibratedModel(OptionSurfaceData,CalibratableProcess,OptimizerFactory,EuropeanOptionSmile,double[],double[])" num="64" count="2" type="method"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCalibration() : OptimizationResult" num="84" count="2" type="method"/>
            <line num="86" count="2" type="stmt"/>
            <line complexity="7" visibility="public" signature="setValues(double[],double[]) : void" num="87" count="249" type="method"/>
            <line num="91" count="249" type="stmt"/>
            <line num="92" count="247" type="stmt"/>
            <line num="94" count="248" type="stmt"/>
            <line num="95" count="249" type="stmt"/>
            <line num="97" count="249" type="stmt"/>
            <line num="99" count="249" type="stmt"/>
            <line num="101" count="247" type="stmt"/>
            <line falsecount="249" truecount="496" num="101" type="cond"/>
            <line num="103" count="497" type="stmt"/>
            <line num="105" count="495" type="stmt"/>
            <line num="107" count="496" type="stmt"/>
            <line num="108" count="497" type="stmt"/>
            <line num="110" count="498" type="stmt"/>
            <line falsecount="498" truecount="4980" num="110" type="cond"/>
            <line num="112" count="4980" type="stmt"/>
            <line falsecount="0" truecount="4980" num="112" type="cond"/>
            <line num="114" count="4980" type="stmt"/>
            <line num="115" count="4980" type="stmt"/>
            <line num="116" count="4980" type="stmt"/>
            <line num="117" count="4980" type="stmt"/>
            <line num="118" count="4980" type="stmt"/>
            <line num="119" count="4980" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="141" count="249" type="stmt"/>
            <line num="141" count="4980" type="stmt"/>
            <line falsecount="249" truecount="4980" num="141" type="cond"/>
            <line num="145" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="156" count="2" type="stmt"/>
            <line num="158" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line complexity="3" visibility="private" signature="formatTargetValuesForOptimizer() : double[]" num="167" count="2" type="method"/>
            <line num="169" count="2" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line num="172" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="174" type="cond"/>
            <line num="175" count="4" type="stmt"/>
            <line num="176" count="4" type="stmt"/>
            <line num="178" count="4" type="stmt"/>
            <line num="180" count="4" type="stmt"/>
            <line falsecount="4" truecount="40" num="180" type="cond"/>
            <line num="181" count="40" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line complexity="6" visibility="private" signature="outputCalibrationResult(double[]) : ArrayList&lt;String&gt;" num="194" count="2" type="method"/>
            <line num="196" count="2" type="stmt"/>
            <line num="199" count="2" type="stmt"/>
            <line num="200" count="2" type="stmt"/>
            <line num="202" count="2" type="stmt"/>
            <line num="203" count="2" type="stmt"/>
            <line num="205" count="2" type="stmt"/>
            <line num="207" count="2" type="stmt"/>
            <line num="208" count="2" type="stmt"/>
            <line num="209" count="2" type="stmt"/>
            <line num="210" count="2" type="stmt"/>
            <line num="212" count="2" type="stmt"/>
            <line num="214" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="214" type="cond"/>
            <line num="215" count="4" type="stmt"/>
            <line num="216" count="4" type="stmt"/>
            <line num="217" count="4" type="stmt"/>
            <line num="219" count="4" type="stmt"/>
            <line num="221" count="4" type="stmt"/>
            <line num="222" count="4" type="stmt"/>
            <line num="224" count="4" type="stmt"/>
            <line falsecount="4" truecount="40" num="224" type="cond"/>
            <line num="225" count="40" type="stmt"/>
            <line num="226" count="40" type="stmt"/>
            <line num="228" count="40" type="stmt"/>
            <line falsecount="0" truecount="40" num="228" type="cond"/>
            <line num="230" count="40" type="stmt"/>
            <line num="231" count="40" type="stmt"/>
            <line num="232" count="40" type="stmt"/>
            <line num="233" count="40" type="stmt"/>
            <line num="234" count="40" type="stmt"/>
            <line num="235" count="40" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="238" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="250" count="40" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="258" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="OptimizationResult(CalibratableProcess,double[],int,double,ArrayList&lt;String&gt;)" num="274" count="2" type="method"/>
            <line num="276" count="2" type="stmt"/>
            <line num="277" count="2" type="stmt"/>
            <line num="278" count="2" type="stmt"/>
            <line num="279" count="2" type="stmt"/>
            <line num="280" count="2" type="stmt"/>
            <line num="281" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : CalibratableProcess" num="284" count="2" type="method"/>
            <line num="285" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestFitParameters() : double[]" num="288" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIterations() : int" num="292" count="2" type="method"/>
            <line num="293" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootMeanSquaredError() : double" num="296" count="4" type="method"/>
            <line num="297" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCalibrationOutput() : ArrayList&lt;String&gt;" num="300" count="2" type="method"/>
            <line num="301" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/Constraint.java" name="Constraint.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="11" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Constraint">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/NegativityConstraint.java" name="NegativityConstraint.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="20" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="NegativityConstraint">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NegativityConstraint()" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : double" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/ParameterInformation.java" name="ParameterInformation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="11" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParameterInformation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/PositivityConstraint.java" name="PositivityConstraint.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="19" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="PositivityConstraint">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PositivityConstraint()" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : double" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/ScalarConstraint.java" name="ScalarConstraint.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="31" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ScalarConstraint">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/ScalarParameterInformation.java" name="ScalarParameterInformation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="24" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ScalarParameterInformation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/ScalarParameterInformationImplementation.java" name="ScalarParameterInformationImplementation.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="5" loc="55" coveredmethods="3" methods="5" elements="16" classes="1" ncloc="28" statements="11" conditionals="0" coveredstatements="5"/>
            <class name="ScalarParameterInformationImplementation">
               <metrics coveredelements="8" coveredconditionals="0" complexity="5" coveredmethods="3" methods="5" elements="16" statements="11" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="ScalarParameterInformationImplementation(boolean,ScalarConstraint)" num="19" count="8" type="method"/>
            <line num="20" count="8" type="stmt"/>
            <line num="21" count="8" type="stmt"/>
            <line num="22" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="ScalarParameterInformationImplementation(boolean)" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ScalarParameterInformationImplementation(ScalarConstraint)" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIsParameterToCalibrate() : boolean" num="46" count="1000" type="method"/>
            <line num="48" count="1001" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConstraint() : ScalarConstraint" num="51" count="5013" type="method"/>
            <line num="53" count="5016" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/Unconstrained.java" name="Unconstrained.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="20" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Unconstrained">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Unconstrained()" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : double" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.time">
         <metrics coveredelements="380" complexity="210" loc="2424" methods="122" classes="17" statements="418" coveredconditionals="53" coveredmethods="87" elements="666" ncloc="1206" files="12" conditionals="126" coveredstatements="240"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/FloatingpointDate.java" name="FloatingpointDate.java">
            <metrics coveredelements="16" coveredconditionals="3" complexity="7" loc="117" coveredmethods="4" methods="5" elements="19" classes="1" ncloc="32" statements="10" conditionals="4" coveredstatements="9"/>
            <class name="FloatingpointDate">
               <metrics coveredelements="16" coveredconditionals="3" complexity="7" coveredmethods="4" methods="5" elements="19" statements="10" conditionals="4" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="private" signature="FloatingpointDate()" num="53" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="getDateFromFloatingPointDate(LocalDateTime,double) : LocalDateTime" num="67" count="6176060" type="method"/>
            <line num="68" count="6176060" type="stmt"/>
            <line falsecount="6176060" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="6176060" type="stmt"/>
            <line num="73" count="6176060" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatingPointDateFromDate(LocalDateTime,LocalDateTime) : double" num="83" count="6185070" type="method"/>
            <line num="84" count="6185207" type="stmt"/>
            <line num="85" count="6184823" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDateFromFloatingPointDate(LocalDate,double) : LocalDate" num="100" count="15606" type="method"/>
            <line num="101" count="15621" type="stmt"/>
            <line falsecount="15388" truecount="246" num="101" type="cond"/>
            <line num="102" count="246" type="stmt"/>
            <line num="104" count="15385" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatingPointDateFromDate(LocalDate,LocalDate) : double" num="114" count="996138033" type="method"/>
            <line num="115" count="1016457180" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/Period.java" name="Period.java">
            <metrics coveredelements="39" coveredconditionals="10" complexity="26" loc="121" coveredmethods="7" methods="9" elements="86" classes="1" ncloc="87" statements="43" conditionals="34" coveredstatements="22"/>
            <class name="Period">
               <metrics coveredelements="39" coveredconditionals="10" complexity="26" coveredmethods="7" methods="9" elements="86" statements="43" conditionals="34" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="Period(LocalDate,LocalDate,LocalDate,LocalDate)" num="36" count="200680931" type="method"/>
            <line num="38" count="200805638" type="stmt"/>
            <line num="39" count="200735060" type="stmt"/>
            <line num="40" count="201016917" type="stmt"/>
            <line num="41" count="201149035" type="stmt"/>
            <line num="42" count="201389209" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixing() : LocalDate" num="45" count="201974981" type="method"/>
            <line num="46" count="202579867" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPayment() : LocalDate" num="49" count="201871651" type="method"/>
            <line num="50" count="202451591" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStart() : LocalDate" num="53" count="397803299" type="method"/>
            <line num="54" count="400139971" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodEnd() : LocalDate" num="57" count="396536498" type="method"/>
            <line num="58" count="401036797" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(Period) : int" num="61" count="54" type="method"/>
            <line num="63" count="54" type="stmt"/>
            <line complexity="5" visibility="public" signature="hashCode() : int" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="14" visibility="public" signature="equals(Object) : boolean" num="77" count="1" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/RegularSchedule.java" name="RegularSchedule.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="14" loc="99" coveredmethods="8" methods="14" elements="29" classes="1" ncloc="64" statements="15" conditionals="0" coveredstatements="8"/>
            <class name="RegularSchedule">
               <metrics coveredelements="16" coveredconditionals="0" complexity="14" coveredmethods="8" methods="14" elements="29" statements="15" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="RegularSchedule(TimeDiscretization)" num="30" count="1738840" type="method"/>
            <line num="31" count="1738909" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="34" count="10777" type="method"/>
            <line num="36" count="10788" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriods() : ArrayList&lt;Period&gt;" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountconvention() : DayCountConvention" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPeriods() : int" num="49" count="35784386" type="method"/>
            <line num="51" count="35793004" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriod(int) : Period" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixing(int) : double" num="59" count="12006115" type="method"/>
            <line num="61" count="12006525" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPayment(int) : double" num="64" count="34036953" type="method"/>
            <line num="66" count="34042298" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStart(int) : double" num="69" count="74895" type="method"/>
            <line num="71" count="74954" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodEnd(int) : double" num="74" count="74949" type="method"/>
            <line num="76" count="74974" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodLength(int) : double" num="79" count="34035061" type="method"/>
            <line num="81" count="34040869" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Period&gt;" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodIndex(double) : int" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodIndex(LocalDate) : int" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/Schedule.java" name="Schedule.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="127" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="18" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Schedule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/ScheduleFromPeriods.java" name="ScheduleFromPeriods.java">
            <metrics coveredelements="51" coveredconditionals="5" complexity="23" loc="159" coveredmethods="14" methods="16" elements="69" classes="1" ncloc="114" statements="41" conditionals="12" coveredstatements="32"/>
            <class name="ScheduleFromPeriods">
               <metrics coveredelements="51" coveredconditionals="5" complexity="23" coveredmethods="14" methods="16" elements="69" statements="41" conditionals="12" coveredstatements="32"/>
            </class>
            <line complexity="1" visibility="public" signature="ScheduleFromPeriods(LocalDate,DayCountConvention,Period)" num="45" count="213389" type="method"/>
            <line num="46" count="213384" type="stmt"/>
            <line complexity="3" visibility="public" signature="ScheduleFromPeriods(LocalDate,List&lt;Period&gt;,DayCountConvention)" num="49" count="10348448" type="method"/>
            <line num="50" count="10347514" type="stmt"/>
            <line num="51" count="10349006" type="stmt"/>
            <line falsecount="10349587" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="10350110" type="stmt"/>
            <line num="56" count="10349932" type="stmt"/>
            <line num="57" count="10349945" type="stmt"/>
            <line num="60" count="10348445" type="stmt"/>
            <line num="61" count="10347966" type="stmt"/>
            <line num="62" count="10347439" type="stmt"/>
            <line num="63" count="10346950" type="stmt"/>
            <line num="64" count="10346716" type="stmt"/>
            <line num="65" count="10346318" type="stmt"/>
            <line falsecount="10342685" truecount="200607351" num="65" type="cond"/>
            <line num="66" count="202256620" type="stmt"/>
            <line num="67" count="201151579" type="stmt"/>
            <line num="68" count="201105523" type="stmt"/>
            <line num="69" count="201098362" type="stmt"/>
            <line num="70" count="201149796" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="74" count="42395108" type="method"/>
            <line num="76" count="42398196" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriods() : List&lt;Period&gt;" num="79" count="6" type="method"/>
            <line num="81" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountconvention() : DayCountConvention" num="84" count="216488" type="method"/>
            <line num="86" count="216515" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPeriods() : int" num="89" count="1109548443" type="method"/>
            <line num="91" count="1111793870" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriod(int) : Period" num="94" count="1698178" type="method"/>
            <line num="96" count="1698243" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixing(int) : double" num="99" count="886355468" type="method"/>
            <line num="101" count="887482220" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPayment(int) : double" num="104" count="884510583" type="method"/>
            <line num="106" count="886532201" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStart(int) : double" num="109" count="758671558" type="method"/>
            <line num="111" count="759798389" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodEnd(int) : double" num="114" count="757367982" type="method"/>
            <line num="116" count="758449784" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodLength(int) : double" num="119" count="1041344205" type="method"/>
            <line num="121" count="1043452345" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Period&gt;" num="124" count="1" type="method"/>
            <line num="126" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="getPeriodIndex(double) : int" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodIndex(LocalDate) : int" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="148" count="3" type="method"/>
            <line num="150" count="3" type="stmt"/>
            <line num="151" count="3" type="stmt"/>
            <line falsecount="3" truecount="42" num="151" type="cond"/>
            <line num="152" count="42" type="stmt"/>
            <line num="157" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/ScheduleGenerator.java" name="ScheduleGenerator.java">
            <metrics coveredelements="126" coveredconditionals="28" complexity="56" loc="838" coveredmethods="8" methods="14" elements="214" classes="4" ncloc="477" statements="154" conditionals="46" coveredstatements="90"/>
            <class name="ScheduleGenerator">
               <metrics coveredelements="98" coveredconditionals="15" complexity="43" coveredmethods="7" methods="13" elements="164" statements="129" conditionals="22" coveredstatements="76"/>
            </class>
            <class name="ScheduleGenerator.Frequency">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ScheduleGenerator.DaycountConvention">
               <metrics coveredelements="28" coveredconditionals="13" complexity="13" coveredmethods="1" methods="1" elements="50" statements="25" conditionals="24" coveredstatements="14"/>
            </class>
            <class name="ScheduleGenerator.ShortPeriodConvention">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="13" visibility="public" signature="getEnum(String) : DaycountConvention" num="90" count="2501" type="method"/>
            <line num="91" count="2501" type="stmt"/>
            <line falsecount="2501" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="2501" type="stmt"/>
            <line falsecount="2501" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="2501" type="stmt"/>
            <line falsecount="2501" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="2501" type="stmt"/>
            <line falsecount="2501" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="2501" type="stmt"/>
            <line falsecount="1997" truecount="504" num="103" type="cond"/>
            <line num="104" count="504" type="stmt"/>
            <line num="106" count="1997" type="stmt"/>
            <line falsecount="1979" truecount="18" num="106" type="cond"/>
            <line num="107" count="18" type="stmt"/>
            <line num="109" count="1979" type="stmt"/>
            <line falsecount="1979" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="1979" type="stmt"/>
            <line falsecount="1979" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="1979" type="stmt"/>
            <line falsecount="2" truecount="1977" num="115" type="cond"/>
            <line num="116" count="1977" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="118" type="cond"/>
            <line num="119" count="2" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="ScheduleGenerator()" num="144" count="0" type="method"/>
            <line complexity="29" visibility="public" signature="createScheduleFromConventions(LocalDate,LocalDate,LocalDate,Frequency,DaycountConvention,ShortPeriodConvention,DateRollConvention,BusinessdayCalendar,int,int,boolean) : Schedule" num="172" count="10135901" type="method"/>
            <line num="189" count="10137186" type="stmt"/>
            <line num="191" count="10137355" type="stmt"/>
            <line num="192" count="10137076" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="750" type="stmt"/>
            <line num="197" count="750" type="stmt"/>
            <line num="198" count="750" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="10135671" type="stmt"/>
            <line num="203" count="10136084" type="stmt"/>
            <line num="204" count="10131510" type="stmt"/>
            <line num="205" count="6" type="stmt"/>
            <line num="206" count="6" type="stmt"/>
            <line num="207" count="6" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="215" count="10134357" type="stmt"/>
            <line num="216" count="10135795" type="stmt"/>
            <line num="217" count="10136369" type="stmt"/>
            <line num="218" count="10136648" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="496" type="stmt"/>
            <line num="229" count="496" type="stmt"/>
            <line num="230" count="496" type="stmt"/>
            <line num="231" count="10100015" type="stmt"/>
            <line num="232" count="10100337" type="stmt"/>
            <line num="233" count="10100439" type="stmt"/>
            <line num="234" count="31405" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="31404" type="stmt"/>
            <line num="237" count="31406" type="stmt"/>
            <line num="238" count="4021" type="stmt"/>
            <line num="239" count="4021" type="stmt"/>
            <line num="240" count="4021" type="stmt"/>
            <line num="244" count="10136255" type="stmt"/>
            <line falsecount="10135458" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="10135817" type="stmt"/>
            <line falsecount="3082" truecount="10132485" num="247" type="cond"/>
            <line num="251" count="10132804" type="stmt"/>
            <line num="252" count="10132996" type="stmt"/>
            <line num="253" count="10133249" type="stmt"/>
            <line num="255" count="10131483" type="stmt"/>
            <line num="256" count="10133308" type="stmt"/>
            <line falsecount="10132018" truecount="200853239" num="256" type="cond"/>
            <line num="257" count="201098684" type="stmt"/>
            <line num="260" count="201047064" type="stmt"/>
            <line falsecount="200817266" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="269" count="200917524" type="stmt"/>
            <line num="274" count="200392224" type="stmt"/>
            <line falsecount="200776082" truecount="8610" num="274" type="cond"/>
            <line num="275" count="8610" type="stmt"/>
            <line num="276" count="8610" type="stmt"/>
            <line num="280" count="200762590" type="stmt"/>
            <line num="283" count="200897271" type="stmt"/>
            <line falsecount="201704893" truecount="0" num="283" type="cond"/>
            <line num="284" count="0" type="stmt"/>
            <line num="288" count="201457958" type="stmt"/>
            <line num="292" count="201068553" type="stmt"/>
            <line num="296" count="200941133" type="stmt"/>
            <line num="298" count="200691955" type="stmt"/>
            <line num="299" count="201529327" type="stmt"/>
            <line num="305" count="3082" type="stmt"/>
            <line num="306" count="3082" type="stmt"/>
            <line num="307" count="3082" type="stmt"/>
            <line num="309" count="3082" type="stmt"/>
            <line num="310" count="3082" type="stmt"/>
            <line falsecount="3082" truecount="67106" num="310" type="cond"/>
            <line num="311" count="67106" type="stmt"/>
            <line num="314" count="67106" type="stmt"/>
            <line falsecount="67106" truecount="0" num="314" type="cond"/>
            <line num="315" count="0" type="stmt"/>
            <line num="323" count="67106" type="stmt"/>
            <line num="329" count="67106" type="stmt"/>
            <line falsecount="66566" truecount="540" num="329" type="cond"/>
            <line num="330" count="540" type="stmt"/>
            <line num="331" count="540" type="stmt"/>
            <line num="335" count="67106" type="stmt"/>
            <line num="338" count="67106" type="stmt"/>
            <line falsecount="67106" truecount="0" num="338" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line num="343" count="67106" type="stmt"/>
            <line num="347" count="67106" type="stmt"/>
            <line num="351" count="67106" type="stmt"/>
            <line num="353" count="67106" type="stmt"/>
            <line num="354" count="67106" type="stmt"/>
            <line num="358" count="10134371" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(LocalDate,LocalDate,LocalDate,Frequency,DaycountConvention,ShortPeriodConvention,DateRollConvention,BusinessdayCalendar,int,int) : Schedule" num="385" count="2616" type="method"/>
            <line num="398" count="2616" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(LocalDate,LocalDate,LocalDate,String,String,String,String,BusinessdayCalendar,int,int) : Schedule" num="424" count="2499" type="method"/>
            <line num="437" count="2499" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(Date,Date,Date,String,String,String,String,BusinessdayCalendar,int,int) : Schedule" num="474" count="2" type="method"/>
            <line num="487" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(LocalDate,LocalDate,int,String,String,String,String,String,String,BusinessdayCalendar,int,int) : Schedule" num="520" count="2497" type="method"/>
            <line num="535" count="2497" type="stmt"/>
            <line num="536" count="2497" type="stmt"/>
            <line num="537" count="2497" type="stmt"/>
            <line num="539" count="2497" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(LocalDate,int,String,String,String,String,String,String,BusinessdayCalendar,int,int,boolean) : Schedule" num="561" count="0" type="method"/>
            <line num="576" count="0" type="stmt"/>
            <line num="577" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="580" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(LocalDate,int,String,String,String,String,String,String,BusinessdayCalendar,int,int) : Schedule" num="613" count="2497" type="method"/>
            <line num="628" count="2497" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(LocalDate,String,String,String,String,String,String,BusinessdayCalendar,int,int) : Schedule" num="648" count="1" type="method"/>
            <line num="662" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="createScheduleFromConventions(LocalDate,String,String,String,String,String,String,String,BusinessdayCalendar,int,int) : Schedule" num="681" count="0" type="method"/>
            <line num="695" count="0" type="stmt"/>
            <line num="696" count="0" type="stmt"/>
            <line num="697" count="0" type="stmt"/>
            <line num="698" count="0" type="stmt"/>
            <line num="699" count="0" type="stmt"/>
            <line num="700" count="0" type="stmt"/>
            <line num="701" count="0" type="stmt"/>
            <line num="703" count="0" type="stmt"/>
            <line num="706" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="706" type="cond"/>
            <line num="707" count="0" type="stmt"/>
            <line num="709" count="0" type="stmt"/>
            <line num="710" count="0" type="stmt"/>
            <line num="712" count="0" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(LocalDate,LocalDate,String,double,String,String,String,BusinessdayCalendar,int,int) : Schedule" num="745" count="0" type="method"/>
            <line num="759" count="0" type="stmt"/>
            <line num="761" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(LocalDate,LocalDate,String,double,String,String) : Schedule" num="789" count="0" type="method"/>
            <line num="799" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createDateFromDateAndOffset(LocalDate,double) : LocalDate" num="823" count="0" type="method"/>
            <line num="826" count="0" type="stmt"/>
            <line num="829" count="0" type="stmt"/>
            <line num="830" count="0" type="stmt"/>
            <line num="833" count="0" type="stmt"/>
            <line num="834" count="0" type="stmt"/>
            <line num="836" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/ScheduleMetaData.java" name="ScheduleMetaData.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="46" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="17" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ScheduleMetaData">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ScheduleMetaData(Frequency,DaycountConvention,ShortPeriodConvention,DateRollConvention,BusinessdayCalendar,int,int,boolean)" num="36" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/SchedulePrototype.java" name="SchedulePrototype.java">
            <metrics coveredelements="39" coveredconditionals="0" complexity="23" loc="237" coveredmethods="12" methods="15" elements="82" classes="2" ncloc="111" statements="61" conditionals="6" coveredstatements="27"/>
            <class name="SchedulePrototype">
               <metrics coveredelements="39" coveredconditionals="0" complexity="23" coveredmethods="12" methods="15" elements="82" statements="61" conditionals="6" coveredstatements="27"/>
            </class>
            <class name="SchedulePrototype.OffsetUnit">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="getOffsetCodeFromSchedule(Schedule) : String" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getOffsetCodeFromCurveName(String) : String" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SchedulePrototype(Frequency,DaycountConvention,ShortPeriodConvention,DateRollConvention,BusinessdayCalendar,int,int,boolean)" num="104" count="15" type="method"/>
            <line num="108" count="15" type="stmt"/>
            <line num="109" count="15" type="stmt"/>
            <line num="110" count="15" type="stmt"/>
            <line num="111" count="15" type="stmt"/>
            <line num="112" count="15" type="stmt"/>
            <line num="113" count="15" type="stmt"/>
            <line num="114" count="15" type="stmt"/>
            <line num="115" count="15" type="stmt"/>
            <line num="116" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateScheduleDescriptor(LocalDate,LocalDate) : ScheduleDescriptor" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateSchedule(LocalDate,LocalDate,LocalDate) : Schedule" num="139" count="10133664" type="method"/>
            <line num="140" count="10134150" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateSchedule(LocalDate,int,int) : Schedule" num="152" count="4188" type="method"/>
            <line num="153" count="4188" type="stmt"/>
            <line complexity="5" visibility="public" signature="generateSchedule(LocalDate,int,int,OffsetUnit) : Schedule" num="165" count="4188" type="method"/>
            <line num="167" count="4188" type="stmt"/>
            <line num="168" count="4188" type="stmt"/>
            <line num="170" count="4188" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="4187" type="stmt"/>
            <line num="172" count="4188" type="stmt"/>
            <line num="172" count="4188" type="stmt"/>
            <line num="172" count="4188" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="178" count="4188" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFrequency() : Frequency" num="184" count="10133828" type="method"/>
            <line num="185" count="10134807" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountConvention() : DaycountConvention" num="191" count="10131676" type="method"/>
            <line num="192" count="10134405" type="stmt"/>
            <line complexity="1" visibility="public" signature="getShortPeriodConvention() : ShortPeriodConvention" num="198" count="10131520" type="method"/>
            <line num="199" count="10134052" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDateRollConvention() : DateRollConvention" num="205" count="10131492" type="method"/>
            <line num="206" count="10134013" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBusinessdayCalendar() : BusinessdayCalendar" num="212" count="10131267" type="method"/>
            <line num="213" count="10133779" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixingOffsetDays() : int" num="219" count="10130939" type="method"/>
            <line num="220" count="10133388" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentOffsetDays() : int" num="226" count="10130947" type="method"/>
            <line num="227" count="10134176" type="stmt"/>
            <line complexity="1" visibility="public" signature="isUseEndOfMonth() : boolean" num="233" count="10131866" type="method"/>
            <line num="234" count="10134246" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/Tenor.java" name="Tenor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Tenor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/TenorFromArray.java" name="TenorFromArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="133" coveredmethods="0" methods="10" elements="35" classes="1" ncloc="53" statements="19" conditionals="6" coveredstatements="0"/>
            <class name="TenorFromArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="10" elements="35" statements="19" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TenorFromArray(LocalDate[],LocalDate)" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="createTimeDiscretizationFromDates(LocalDate[],LocalDate) : double[]" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TenorFromArray(double[])" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TenorFromArray(Double[])" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TenorFromArray(double,int,double)" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TenorFromArray(double,double,double,ShortPeriodLocation)" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDate(int) : LocalDate" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountFraction(int) : double" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="toString() : String" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/TimeDiscretization.java" name="TimeDiscretization.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="122" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="17" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TimeDiscretization">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/TimeDiscretizationFromArray.java" name="TimeDiscretizationFromArray.java">
            <metrics coveredelements="93" coveredconditionals="7" complexity="47" loc="387" coveredmethods="34" methods="38" elements="130" classes="2" ncloc="209" statements="74" conditionals="18" coveredstatements="52"/>
            <class name="TimeDiscretizationFromArray">
               <metrics coveredelements="93" coveredconditionals="7" complexity="47" coveredmethods="34" methods="38" elements="130" statements="74" conditionals="18" coveredstatements="52"/>
            </class>
            <class name="TimeDiscretizationFromArray.ShortPeriodLocation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="TimeDiscretizationFromArray(DoubleStream,double,boolean)" num="56" count="29996" type="method"/>
            <line num="57" count="29996" type="stmt"/>
            <line num="58" count="29996" type="stmt"/>
            <line num="59" count="29996" type="stmt"/>
            <line falsecount="0" truecount="29996" num="59" type="cond"/>
            <line num="60" count="29996" type="stmt"/>
            <line num="62" count="29996" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(DoubleStream,double)" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(DoubleStream,boolean)" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(DoubleStream)" num="91" count="29973" type="method"/>
            <line num="92" count="29973" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Stream&lt;Double&gt;,double,boolean)" num="102" count="9" type="method"/>
            <line num="103" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Stream&lt;Double&gt;,double)" num="113" count="13" type="method"/>
            <line num="114" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Stream&lt;Double&gt;)" num="122" count="1" type="method"/>
            <line num="123" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Iterable&lt;Double&gt;,double,boolean)" num="134" count="9" type="method"/>
            <line num="135" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Iterable&lt;Double&gt;,double)" num="145" count="7" type="method"/>
            <line num="146" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Iterable&lt;Double&gt;,boolean)" num="156" count="2" type="method"/>
            <line num="157" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Iterable&lt;Double&gt;)" num="166" count="2" type="method"/>
            <line num="167" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(double)" num="176" count="25987" type="method"/>
            <line num="177" count="25987" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Double[])" num="186" count="1" type="method"/>
            <line num="187" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Double[],double)" num="197" count="10" type="method"/>
            <line num="198" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(double,int,double)" num="209" count="3984" type="method"/>
            <line num="210" count="3984" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="211" count="352226" type="method"/>
            <line num="213" count="352226" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(double,double,double,ShortPeriodLocation)" num="226" count="2" type="method"/>
            <line num="227" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="getEquidistantStreamWithStub(double,double,double,ShortPeriodLocation) : DoubleStream" num="230" count="2" type="method"/>
            <line num="231" count="2" type="stmt"/>
            <line num="233" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="233" type="cond"/>
            <line num="234" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="235" count="7" type="method"/>
            <line num="237" count="7" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="243" count="7" type="method"/>
            <line num="245" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfTimes() : int" num="250" count="1909362393" type="method"/>
            <line num="252" count="1909669049" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfTimeSteps() : int" num="255" count="978678133" type="method"/>
            <line num="257" count="978694450" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="260" count="2147483647" type="method"/>
            <line num="262" count="2147483647" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeStep(int) : double" num="265" count="87152498" type="method"/>
            <line num="267" count="87165116" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="270" count="284223816" type="method"/>
            <line num="272" count="284328199" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTimeIndexNearestLessOrEqual(double) : int" num="275" count="227218837" type="method"/>
            <line num="277" count="227307006" type="stmt"/>
            <line num="278" count="227285331" type="stmt"/>
            <line falsecount="14773731" truecount="212732965" num="278" type="cond"/>
            <line num="279" count="212757772" type="stmt"/>
            <line num="281" count="227472016" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTimeIndexNearestGreaterOrEqual(double) : int" num="284" count="3" type="method"/>
            <line num="286" count="3" type="stmt"/>
            <line num="287" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="287" type="cond"/>
            <line num="288" count="0" type="stmt"/>
            <line num="290" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsDoubleArray() : double[]" num="293" count="517" type="method"/>
            <line num="296" count="517" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsArrayList() : ArrayList&lt;Double&gt;" num="299" count="45" type="method"/>
            <line num="301" count="45" type="stmt"/>
            <line num="302" count="45" type="stmt"/>
            <line num="303" count="3869" type="stmt"/>
            <line num="305" count="45" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTimeShiftedTimeDiscretization(double) : TimeDiscretization" num="308" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="312" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="union(TimeDiscretization) : TimeDiscretization" num="323" count="3" type="method"/>
            <line num="325" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="intersect(TimeDiscretization) : TimeDiscretization" num="330" count="3" type="method"/>
            <line num="332" count="3" type="stmt"/>
            <line num="333" count="3" type="stmt"/>
            <line num="335" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTickSize() : double" num="338" count="8" type="method"/>
            <line num="340" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Double&gt;" num="343" count="42" type="method"/>
            <line num="345" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="348" count="30" type="method"/>
            <line num="350" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="355" count="0" type="method"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="equals(Object) : boolean" num="366" count="2" type="method"/>
            <line num="368" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="368" type="cond"/>
            <line num="369" count="2" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="371" type="cond"/>
            <line num="372" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="374" type="cond"/>
            <line num="375" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="378" type="cond"/>
            <line num="379" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="roundToTimeTickSize(double) : double" num="384" count="511841713" type="method"/>
            <line num="385" count="512075783" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.stochastic">
         <metrics coveredelements="113" complexity="207" loc="1818" methods="182" classes="7" statements="244" coveredconditionals="10" coveredmethods="46" elements="472" ncloc="963" files="7" conditionals="46" coveredstatements="57"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/stochastic/ConditionalExpectationEstimator.java" name="ConditionalExpectationEstimator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="25" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ConditionalExpectationEstimator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/stochastic/RandomOperator.java" name="RandomOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="72" coveredmethods="0" methods="3" elements="8" classes="1" ncloc="20" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="RandomOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="compose(RandomOperator) : RandomOperator" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="andThen(RandomOperator) : RandomOperator" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="identity() : RandomOperator" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/stochastic/RandomVariable.java" name="RandomVariable.java">
            <metrics coveredelements="11" coveredconditionals="2" complexity="8" loc="633" coveredmethods="3" methods="6" elements="22" classes="1" ncloc="99" statements="12" conditionals="4" coveredstatements="6"/>
            <class name="RandomVariable">
               <metrics coveredelements="11" coveredconditionals="2" complexity="8" coveredmethods="3" methods="6" elements="22" statements="12" conditionals="4" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="package" signature="getValues() : RandomVariable" num="83" count="41131144" type="method"/>
            <line num="83" count="41131721" type="stmt"/>
            <line complexity="1" visibility="package" signature="appy(RandomOperator) : RandomVariable" num="316" count="0" type="method"/>
            <line num="317" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getConditionalExpectation(ConditionalExpectationEstimator) : RandomVariable" num="419" count="31" type="method"/>
            <line num="421" count="31" type="stmt"/>
            <line complexity="1" visibility="package" signature="expm1() : RandomVariable" num="446" count="0" type="method"/>
            <line num="447" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="addSumProduct(RandomVariable[],RandomVariable[]) : RandomVariable" num="603" count="50833628" type="method"/>
            <line num="605" count="50849858" type="stmt"/>
            <line num="606" count="50853568" type="stmt"/>
            <line falsecount="50851840" truecount="56508061" num="606" type="cond"/>
            <line num="607" count="56513032" type="stmt"/>
            <line num="609" count="50866118" type="stmt"/>
            <line complexity="2" visibility="package" signature="addSumProduct(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;) : RandomVariable" num="618" count="0" type="method"/>
            <line num="620" count="0" type="stmt"/>
            <line num="621" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="621" type="cond"/>
            <line num="622" count="0" type="stmt"/>
            <line num="624" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/stochastic/RandomVariableAccumulator.java" name="RandomVariableAccumulator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="24" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RandomVariableAccumulator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/stochastic/RandomVariableArray.java" name="RandomVariableArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="92" coveredmethods="0" methods="4" elements="27" classes="1" ncloc="42" statements="15" conditionals="8" coveredstatements="0"/>
            <class name="RandomVariableArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="4" elements="27" statements="15" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="package" signature="getLevel() : int" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="4" visibility="package" signature="toDoubleArray() : Object" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getConditionalExpectation(ConditionalExpectationEstimator) : RandomVariableArray" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/stochastic/RandomVariableArrayImplementation.java" name="RandomVariableArrayImplementation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="118" loc="600" coveredmethods="0" methods="104" elements="265" classes="1" ncloc="505" statements="137" conditionals="24" coveredstatements="0"/>
            <class name="RandomVariableArrayImplementation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="118" coveredmethods="0" methods="104" elements="265" statements="137" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="of(RandomVariable[]) : RandomVariableArray" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="RandomVariableArrayImplementation(RandomVariable[])" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="41" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getLevel(RandomVariable) : int" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfElements() : int" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getElement(int) : RandomVariable" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="map(RandomOperator) : RandomVariableArray" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="sumProduct(RandomVariableArray) : RandomVariable" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(RandomVariable) : boolean" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFiltrationTime() : double" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="size() : int" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="isDeterministic() : boolean" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizations() : double[]" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : Double" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizationsStream() : DoubleStream" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMin() : double" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMax() : double" num="167" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage() : double" num="176" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage(RandomVariable) : double" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="186" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance(RandomVariable) : double" num="191" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVariance() : double" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="201" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="206" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError() : double" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError(RandomVariable) : double" num="216" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double) : double" num="221" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="226" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantileExpectation(double,double) : double" num="231" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(double[]) : double[]" num="236" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(int,double) : double[][]" num="241" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="246" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="251" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="254" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="261" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="264" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="271" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="274" count="0" type="method"/>
            <line num="276" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="281" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="284" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="291" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="294" count="0" type="method"/>
            <line num="296" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="301" count="0" type="method"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="304" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="311" count="0" type="method"/>
            <line num="313" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="314" count="0" type="method"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="321" count="0" type="method"/>
            <line num="323" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="324" count="0" type="method"/>
            <line num="326" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="331" count="0" type="method"/>
            <line num="333" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="334" count="0" type="method"/>
            <line num="336" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="341" count="0" type="method"/>
            <line num="343" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="344" count="0" type="method"/>
            <line num="346" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="351" count="0" type="method"/>
            <line num="353" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="354" count="0" type="method"/>
            <line num="356" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="361" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="364" count="0" type="method"/>
            <line num="366" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="371" count="0" type="method"/>
            <line num="373" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="374" count="0" type="method"/>
            <line num="376" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="381" count="0" type="method"/>
            <line num="383" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="384" count="0" type="method"/>
            <line num="386" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="391" count="0" type="method"/>
            <line num="393" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="394" count="0" type="method"/>
            <line num="396" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="401" count="0" type="method"/>
            <line num="403" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="404" count="0" type="method"/>
            <line num="406" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="411" count="0" type="method"/>
            <line num="413" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="414" count="0" type="method"/>
            <line num="416" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(RandomVariable) : RandomVariable" num="421" count="0" type="method"/>
            <line num="423" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="424" count="0" type="method"/>
            <line num="426" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="431" count="0" type="method"/>
            <line num="433" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="434" count="0" type="method"/>
            <line num="436" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="441" count="0" type="method"/>
            <line num="443" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="444" count="0" type="method"/>
            <line num="446" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="451" count="0" type="method"/>
            <line num="453" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="454" count="0" type="method"/>
            <line num="456" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(RandomVariable) : RandomVariable" num="461" count="0" type="method"/>
            <line num="463" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="464" count="0" type="method"/>
            <line num="466" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="471" count="0" type="method"/>
            <line num="473" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="474" count="0" type="method"/>
            <line num="476" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="481" count="0" type="method"/>
            <line num="483" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="484" count="0" type="method"/>
            <line num="486" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="491" count="0" type="method"/>
            <line num="493" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="494" count="0" type="method"/>
            <line num="496" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="501" count="0" type="method"/>
            <line num="503" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="504" count="0" type="method"/>
            <line num="506" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="511" count="0" type="method"/>
            <line num="513" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="514" count="0" type="method"/>
            <line num="516" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="521" count="0" type="method"/>
            <line num="523" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="524" count="0" type="method"/>
            <line num="526" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="531" count="0" type="method"/>
            <line num="533" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="534" count="0" type="method"/>
            <line num="536" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="541" count="0" type="method"/>
            <line num="543" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="544" count="0" type="method"/>
            <line num="546" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="551" count="0" type="method"/>
            <line num="553" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="554" count="0" type="method"/>
            <line num="556" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="561" count="0" type="method"/>
            <line num="563" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="564" count="0" type="method"/>
            <line num="566" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="571" count="0" type="method"/>
            <line num="573" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="574" count="0" type="method"/>
            <line num="576" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="581" count="0" type="method"/>
            <line num="583" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="584" count="0" type="method"/>
            <line num="586" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNaN() : RandomVariable" num="591" count="0" type="method"/>
            <line num="593" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="594" count="0" type="method"/>
            <line num="596" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/stochastic/Scalar.java" name="Scalar.java">
            <metrics coveredelements="102" coveredconditionals="8" complexity="70" loc="372" coveredmethods="43" methods="65" elements="150" classes="1" ncloc="286" statements="75" conditionals="10" coveredstatements="51"/>
            <class name="Scalar">
               <metrics coveredelements="102" coveredconditionals="8" complexity="70" coveredmethods="43" methods="65" elements="150" statements="75" conditionals="10" coveredstatements="51"/>
            </class>
            <line complexity="1" visibility="public" signature="Scalar(double)" num="27" count="398367211" type="method"/>
            <line num="28" count="398150403" type="stmt"/>
            <line num="29" count="398362842" type="stmt"/>
            <line complexity="2" visibility="public" signature="arrayOf(double[]) : Scalar[]" num="35" count="3405" type="method"/>
            <line num="36" count="3405" type="stmt"/>
            <line num="37" count="3405" type="stmt"/>
            <line falsecount="3408" truecount="133507" num="37" type="cond"/>
            <line num="38" count="133512" type="stmt"/>
            <line num="40" count="3408" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(RandomVariable) : boolean" num="43" count="12" type="method"/>
            <line num="45" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="48" count="255281918" type="method"/>
            <line num="50" count="255310124" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="53" count="255849783" type="method"/>
            <line num="55" count="255914790" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="58" count="554348183" type="method"/>
            <line num="60" count="566523943" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="63" count="1278592" type="method"/>
            <line num="65" count="1278614" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="68" count="305879539" type="method"/>
            <line num="70" count="305910637" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizations() : double[]" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : Double" num="78" count="240592952" type="method"/>
            <line num="80" count="240625800" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizationsStream() : DoubleStream" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : double" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : double" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage() : double" num="103" count="1538841" type="method"/>
            <line num="105" count="1538905" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage(RandomVariable) : double" num="108" count="4" type="method"/>
            <line num="110" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="113" count="21" type="method"/>
            <line num="115" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance(RandomVariable) : double" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVariance() : double" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError() : double" num="138" count="15" type="method"/>
            <line num="140" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError(RandomVariable) : double" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double) : double" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantileExpectation(double,double) : double" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(double[]) : double[]" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(int,double) : double[][]" num="168" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="178" count="75" type="method"/>
            <line num="180" count="75" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="183" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="189" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="196" count="669071" type="method"/>
            <line num="198" count="669071" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="201" count="133" type="method"/>
            <line num="203" count="133" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="206" count="60020307" type="method"/>
            <line num="208" count="60086143" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="211" count="2573935" type="method"/>
            <line num="213" count="2574254" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="216" count="231077100" type="method"/>
            <line num="218" count="231269115" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="221" count="780048" type="method"/>
            <line num="223" count="780179" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="226" count="38003" type="method"/>
            <line num="228" count="38006" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="231" count="2592" type="method"/>
            <line num="233" count="2592" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="236" count="1911862" type="method"/>
            <line num="238" count="1912345" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="241" count="101648" type="method"/>
            <line num="243" count="101691" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="246" count="18039764" type="method"/>
            <line num="248" count="18041698" type="stmt"/>
            <line complexity="1" visibility="public" signature="expm1() : RandomVariable" num="251" count="456100" type="method"/>
            <line num="253" count="456188" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="256" count="405694" type="method"/>
            <line num="258" count="405717" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="261" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="266" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(RandomVariable) : RandomVariable" num="271" count="37017039" type="method"/>
            <line num="273" count="37049963" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="276" count="2353935" type="method"/>
            <line num="278" count="2354335" type="stmt"/>
            <line complexity="1" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="281" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="286" count="117609838" type="method"/>
            <line num="288" count="117625981" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(RandomVariable) : RandomVariable" num="291" count="2323219" type="method"/>
            <line num="293" count="2323602" type="stmt"/>
            <line complexity="2" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="296" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="298" type="cond"/>
            <line num="299" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="304" count="26" type="method"/>
            <line num="306" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="309" count="16" type="method"/>
            <line num="311" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="314" count="10268073" type="method"/>
            <line num="316" count="10268146" type="stmt"/>
            <line complexity="2" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="319" count="51640446" type="method"/>
            <line num="321" count="51640458" type="stmt"/>
            <line falsecount="51640373" truecount="80" num="321" type="cond"/>
            <line num="322" count="80" type="stmt"/>
            <line num="325" count="51640376" type="stmt"/>
            <line complexity="2" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="329" count="840262" type="method"/>
            <line num="331" count="840350" type="stmt"/>
            <line falsecount="203046" truecount="637309" num="331" type="cond"/>
            <line num="332" count="637387" type="stmt"/>
            <line num="334" count="203046" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="338" count="4328789" type="method"/>
            <line num="340" count="4329088" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="343" count="184231" type="method"/>
            <line num="345" count="184244" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="348" count="17111672" type="method"/>
            <line num="350" count="17113859" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="353" count="55228195" type="method"/>
            <line num="355" count="55230283" type="stmt"/>
            <line complexity="1" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="358" count="6" type="method"/>
            <line num="360" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="363" count="2" type="method"/>
            <line num="365" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="isNaN() : RandomVariable" num="368" count="10" type="method"/>
            <line num="370" count="10" type="stmt"/>
            <line falsecount="8" truecount="2" num="370" type="cond"/>
         </file>
      </package>
      <package name="net.finmath.modelling.descriptor.xmlparser">
         <metrics coveredelements="73" complexity="44" loc="425" methods="9" classes="3" statements="144" coveredconditionals="11" coveredmethods="7" elements="207" ncloc="249" files="3" conditionals="54" coveredstatements="55"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/xmlparser/FIPXMLParser.java" name="FIPXMLParser.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="21" loc="198" coveredmethods="3" methods="5" elements="99" classes="1" ncloc="116" statements="64" conditionals="30" coveredstatements="5"/>
            <class name="FIPXMLParser">
               <metrics coveredelements="8" coveredconditionals="0" complexity="21" coveredmethods="3" methods="5" elements="99" statements="64" conditionals="30" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="FIPXMLParser()" num="40" count="2" type="method"/>
            <line num="41" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="FIPXMLParser(boolean,String)" num="50" count="2" type="method"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="getProductDescriptor(File) : ProductDescriptor" num="56" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="12" visibility="public" signature="getSwapProductDescriptor(File) : InterestRateSwapProductDescriptor" num="83" count="2" type="method"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getSwapLegProductDescriptor(Element,String,String,DayCountConvention) : InterestRateSwapLegProductDescriptor" num="152" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/xmlparser/FPMLParser.java" name="FPMLParser.java">
            <metrics coveredelements="65" coveredconditionals="11" complexity="23" loc="196" coveredmethods="4" methods="4" elements="108" classes="1" ncloc="124" statements="80" conditionals="24" coveredstatements="50"/>
            <class name="FPMLParser">
               <metrics coveredelements="65" coveredconditionals="11" complexity="23" coveredmethods="4" methods="4" elements="108" statements="80" conditionals="24" coveredstatements="50"/>
            </class>
            <line complexity="1" visibility="public" signature="FPMLParser(String,String)" num="49" count="2" type="method"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="7" visibility="public" signature="getProductDescriptor(File) : ProductDescriptor" num="55" count="2" type="method"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line falsecount="0" truecount="8" num="75" type="cond"/>
            <line num="76" count="8" type="stmt"/>
            <line falsecount="4" truecount="4" num="76" type="cond"/>
            <line num="77" count="4" type="stmt"/>
            <line num="79" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="79" type="cond"/>
            <line num="80" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getSwapProductDescriptor(Element) : ProductDescriptor" num="103" count="2" type="method"/>
            <line num="105" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="109" type="cond"/>
            <line num="110" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="114" type="cond"/>
            <line num="115" count="2" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="12" visibility="private" signature="getSwapLegProductDescriptor(Element) : InterestRateSwapLegProductDescriptor" num="130" count="2" type="method"/>
            <line num="133" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="141" type="cond"/>
            <line num="142" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line num="158" count="2" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="2" type="stmt"/>
            <line num="166" count="2" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="2" type="stmt"/>
            <line num="169" count="2" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="2" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/xmlparser/XMLParser.java" name="XMLParser.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="31" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="XMLParser">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.marketdata2.calibration">
         <metrics coveredelements="95" complexity="106" loc="1314" methods="47" classes="6" statements="286" coveredconditionals="13" coveredmethods="9" elements="423" ncloc="624" files="5" conditionals="90" coveredstatements="73"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/calibration/CalibratedCurves.java" name="CalibratedCurves.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="73" loc="841" coveredmethods="0" methods="29" elements="275" classes="2" ncloc="407" statements="182" conditionals="64" coveredstatements="0"/>
            <class name="CalibratedCurves">
               <metrics coveredelements="0" coveredconditionals="0" complexity="63" coveredmethods="0" methods="23" elements="229" statements="144" conditionals="62" coveredstatements="0"/>
            </class>
            <class name="CalibratedCurves.CalibrationSpec">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="6" elements="46" statements="38" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 95()" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationSpec(String,String,Schedule,String,double,String,Schedule,String,double,String,String,double)" num="142" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationSpec(String,Schedule,String,double,String,Schedule,String,double,String,String,double)" num="183" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationSpec(String,double[],String,double,String,double[],String,double,String,String,double)" num="211" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationSpec(String,double[],String,double,String,String,double)" num="246" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneShifted(double) : CalibrationSpec" num="263" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="264" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="272" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="CalibratedCurves(List&lt;CalibrationSpec&gt;,AnalyticModel,double,double)" num="318" count="0" type="method"/>
            <line num="319" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="319" type="cond"/>
            <line num="320" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="CalibratedCurves(CalibrationSpec[],AnalyticModelFromCurvesAndVols,double,double)" num="353" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="354" type="cond"/>
            <line num="355" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratedCurves(CalibrationSpec[],AnalyticModelFromCurvesAndVols,double)" num="387" count="0" type="method"/>
            <line num="388" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratedCurves(CalibrationSpec[],AnalyticModelFromCurvesAndVols)" num="410" count="0" type="method"/>
            <line num="411" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratedCurves(Collection&lt;CalibrationSpec&gt;)" num="422" count="0" type="method"/>
            <line num="423" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratedCurves(CalibrationSpec[])" num="434" count="0" type="method"/>
            <line num="435" count="0" type="stmt"/>
            <line complexity="13" visibility="public" signature="getCalibrationProductForSpec(CalibrationSpec) : AnalyticProduct" num="438" count="0" type="method"/>
            <line num="439" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="445" type="cond"/>
            <line num="446" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(String) : boolean" num="454" count="0" type="method"/>
            <line num="456" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(String) : boolean" num="460" count="0" type="method"/>
            <line num="462" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="465" type="cond"/>
            <line num="466" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="468" type="cond"/>
            <line num="469" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="471" type="cond"/>
            <line num="472" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="474" type="cond"/>
            <line num="475" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="483" type="cond"/>
            <line num="484" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="486" type="cond"/>
            <line num="487" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="489" type="cond"/>
            <line num="491" count="0" type="stmt"/>
            <line num="493" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="493" type="cond"/>
            <line num="495" count="0" type="stmt"/>
            <line num="497" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="497" type="cond"/>
            <line num="498" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="502" type="cond"/>
            <line num="503" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line num="505" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line num="508" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="508" type="cond"/>
            <line num="509" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : AnalyticModel" num="528" count="0" type="method"/>
            <line num="529" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurve(String) : Curve" num="538" count="0" type="method"/>
            <line num="539" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLastNumberOfInterations() : int" num="547" count="0" type="method"/>
            <line num="548" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneShifted(String,double) : CalibratedCurves" num="562" count="0" type="method"/>
            <line num="564" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line num="566" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="566" type="cond"/>
            <line num="567" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneShifted(Map&lt;String,Double&gt;) : CalibratedCurves" num="587" count="0" type="method"/>
            <line num="589" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line num="591" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="591" type="cond"/>
            <line num="592" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line num="599" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneShifted(Pattern,double) : CalibratedCurves" num="617" count="0" type="method"/>
            <line num="619" count="0" type="stmt"/>
            <line num="621" count="0" type="stmt"/>
            <line num="622" count="0" type="stmt"/>
            <line num="623" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="623" type="cond"/>
            <line num="624" count="0" type="stmt"/>
            <line num="627" count="0" type="stmt"/>
            <line num="631" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneShiftedForRegExp(String,double) : CalibratedCurves" num="649" count="0" type="method"/>
            <line num="650" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLastAccuracy() : double" num="658" count="0" type="method"/>
            <line num="659" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCalibrationProductForSymbol(String) : AnalyticProduct" num="670" count="0" type="method"/>
            <line num="677" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="677" type="cond"/>
            <line num="678" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="679" type="cond"/>
            <line num="680" count="0" type="stmt"/>
            <line num="684" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="calibrate(double) : int" num="687" count="0" type="method"/>
            <line num="688" count="0" type="stmt"/>
            <line num="689" count="0" type="stmt"/>
            <line num="691" count="0" type="stmt"/>
            <line num="693" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="add(CalibrationSpec) : String" num="702" count="0" type="method"/>
            <line num="704" count="0" type="stmt"/>
            <line num="711" count="0" type="stmt"/>
            <line num="712" count="0" type="stmt"/>
            <line num="717" count="0" type="stmt"/>
            <line num="718" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="718" type="cond"/>
            <line num="719" count="0" type="stmt"/>
            <line num="723" count="0" type="stmt"/>
            <line num="726" count="0" type="stmt"/>
            <line num="727" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="727" type="cond"/>
            <line num="728" count="0" type="stmt"/>
            <line num="733" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="738" type="cond"/>
            <line num="740" count="0" type="stmt"/>
            <line num="747" count="0" type="stmt"/>
            <line num="752" count="0" type="stmt"/>
            <line num="753" count="0" type="stmt"/>
            <line num="755" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="createDiscountCurve(String) : DiscountCurveInterface" num="764" count="0" type="method"/>
            <line num="765" count="0" type="stmt"/>
            <line num="766" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="766" type="cond"/>
            <line num="767" count="0" type="stmt"/>
            <line num="768" count="0" type="stmt"/>
            <line num="771" count="0" type="stmt"/>
            <line complexity="18" visibility="private" signature="createForwardCurve(Schedule,String) : String" num="781" count="0" type="method"/>
            <line num="786" count="0" type="stmt"/>
            <line num="787" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="787" type="cond"/>
            <line num="788" count="0" type="stmt"/>
            <line num="790" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="790" type="cond"/>
            <line num="791" count="0" type="stmt"/>
            <line num="793" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="793" type="cond"/>
            <line num="794" count="0" type="stmt"/>
            <line num="796" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="796" type="cond"/>
            <line num="797" count="0" type="stmt"/>
            <line num="800" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="800" type="cond"/>
            <line num="801" count="0" type="stmt"/>
            <line num="805" count="0" type="stmt"/>
            <line num="807" count="0" type="stmt"/>
            <line num="808" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="808" type="cond"/>
            <line num="810" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="810" type="cond"/>
            <line num="811" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line num="816" count="0" type="stmt"/>
            <line num="821" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="821" type="cond"/>
            <line num="830" count="0" type="stmt"/>
            <line num="834" count="0" type="stmt"/>
            <line num="837" count="0" type="stmt"/>
            <line num="839" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/calibration/ParameterAggregation.java" name="ParameterAggregation.java">
            <metrics coveredelements="28" coveredconditionals="3" complexity="13" loc="140" coveredmethods="3" methods="9" elements="51" classes="1" ncloc="74" statements="34" conditionals="8" coveredstatements="22"/>
            <class name="ParameterAggregation">
               <metrics coveredelements="28" coveredconditionals="3" complexity="13" coveredmethods="3" methods="9" elements="51" statements="34" conditionals="8" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="ParameterAggregation()" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ParameterAggregation(Set&lt;E&gt;)" num="50" count="6" type="method"/>
            <line num="51" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="ParameterAggregation(E[])" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(E) : void" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(E) : void" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getParameter() : RandomVariable[]" num="82" count="6" type="method"/>
            <line num="85" count="6" type="stmt"/>
            <line num="86" count="6" type="stmt"/>
            <line num="87" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="87" type="cond"/>
            <line num="88" count="6" type="stmt"/>
            <line num="92" count="6" type="stmt"/>
            <line num="95" count="6" type="stmt"/>
            <line num="96" count="6" type="stmt"/>
            <line num="97" count="6" type="stmt"/>
            <line num="98" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="98" type="cond"/>
            <line num="99" count="6" type="stmt"/>
            <line num="100" count="6" type="stmt"/>
            <line num="104" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="setParameter(RandomVariable[]) : void" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getObjectsToModifyForParameter(RandomVariable[]) : Map&lt;E, RandomVariable[]&gt;" num="121" count="348" type="method"/>
            <line num="122" count="348" type="stmt"/>
            <line num="123" count="348" type="stmt"/>
            <line num="124" count="348" type="stmt"/>
            <line num="125" count="348" type="stmt"/>
            <line num="126" count="348" type="stmt"/>
            <line falsecount="0" truecount="348" num="126" type="cond"/>
            <line num="128" count="348" type="stmt"/>
            <line num="129" count="348" type="stmt"/>
            <line num="130" count="348" type="stmt"/>
            <line num="133" count="348" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(RandomVariable[]) : Curve" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/calibration/ParameterObject.java" name="ParameterObject.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="45" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParameterObject">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/calibration/ParameterTransformation.java" name="ParameterTransformation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParameterTransformation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/calibration/Solver.java" name="Solver.java">
            <metrics coveredelements="67" coveredconditionals="10" complexity="20" loc="248" coveredmethods="6" methods="9" elements="97" classes="1" ncloc="129" statements="70" conditionals="18" coveredstatements="51"/>
            <class name="Solver">
               <metrics coveredelements="67" coveredconditionals="10" complexity="20" coveredmethods="6" methods="9" elements="97" statements="70" conditionals="18" coveredstatements="51"/>
            </class>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,ParameterTransformation,double,StochasticOptimizerFactory)" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,ParameterTransformation,double,double)" num="85" count="6" type="method"/>
            <line num="86" count="6" type="stmt"/>
            <line num="87" count="6" type="stmt"/>
            <line num="88" count="6" type="stmt"/>
            <line num="89" count="6" type="stmt"/>
            <line num="90" count="6" type="stmt"/>
            <line num="91" count="6" type="stmt"/>
            <line num="92" count="6" type="stmt"/>
            <line num="93" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,double,double)" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;,double,double)" num="119" count="6" type="method"/>
            <line num="120" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;)" num="130" count="6" type="method"/>
            <line num="131" count="6" type="stmt"/>
            <line complexity="7" visibility="public" signature="getCalibratedModel(Set&lt;ParameterObject&gt;) : AnalyticModel" num="145" count="6" type="method"/>
            <line num="146" count="6" type="stmt"/>
            <line num="149" count="6" type="stmt"/>
            <line num="152" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="6" type="stmt"/>
            <line num="158" count="6" type="stmt"/>
            <line num="159" count="6" type="stmt"/>
            <line num="160" count="6" type="stmt"/>
            <line num="161" count="6" type="stmt"/>
            <line num="162" count="6" type="stmt"/>
            <line num="163" count="6" type="stmt"/>
            <line num="164" count="6" type="stmt"/>
            <line num="165" count="6" type="stmt"/>
            <line num="167" count="6" type="stmt"/>
            <line complexity="6" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="168" count="342" type="method"/>
            <line num="170" count="342" type="stmt"/>
            <line num="171" count="342" type="stmt"/>
            <line num="172" count="342" type="stmt"/>
            <line falsecount="342" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="178" count="342" type="stmt"/>
            <line num="179" count="342" type="stmt"/>
            <line num="180" count="342" type="stmt"/>
            <line falsecount="342" truecount="1587" num="180" type="cond"/>
            <line num="181" count="1587" type="stmt"/>
            <line num="183" count="342" type="stmt"/>
            <line falsecount="342" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="184" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="194" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="194" type="cond"/>
            <line num="195" count="6" type="stmt"/>
            <line num="196" count="6" type="stmt"/>
            <line num="199" count="6" type="stmt"/>
            <line num="200" count="6" type="stmt"/>
            <line num="202" count="6" type="stmt"/>
            <line num="204" count="6" type="stmt"/>
            <line num="205" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="209" count="6" type="stmt"/>
            <line num="210" count="6" type="stmt"/>
            <line num="212" count="6" type="stmt"/>
            <line num="213" count="6" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="218" count="6" type="stmt"/>
            <line num="219" count="6" type="stmt"/>
            <line falsecount="6" truecount="27" num="219" type="cond"/>
            <line num="220" count="27" type="stmt"/>
            <line num="221" count="27" type="stmt"/>
            <line falsecount="27" truecount="0" num="221" type="cond"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="27" type="stmt"/>
            <line num="226" count="6" type="stmt"/>
            <line num="228" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIterations() : int" num="236" count="6" type="method"/>
            <line num="237" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccuracy() : double" num="245" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.curves.locallinearregression">
         <metrics coveredelements="0" complexity="33" loc="355" methods="16" classes="3" statements="94" coveredconditionals="0" coveredmethods="0" elements="136" ncloc="211" files="2" conditionals="26" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/locallinearregression/CurveEstimation.java" name="CurveEstimation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="229" coveredmethods="0" methods="4" elements="85" classes="2" ncloc="143" statements="67" conditionals="14" coveredstatements="0"/>
            <class name="CurveEstimation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="4" elements="85" statements="67" conditionals="14" coveredstatements="0"/>
            </class>
            <class name="CurveEstimation.Distribution">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="CurveEstimation(LocalDate,double,double[],double[],double[],double,Distribution)" num="68" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CurveEstimation(LocalDate,double,double[],double[],double[],double)" num="108" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getRegressionCurve() : Curve" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="solveEquationSystem() : DoubleMatrix" num="150" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/locallinearregression/Partition.java" name="Partition.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="126" coveredmethods="0" methods="12" elements="51" classes="1" ncloc="68" statements="27" conditionals="12" coveredstatements="0"/>
            <class name="Partition">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="12" elements="51" statements="27" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="Partition(double[],double)" num="29" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Partition(double[])" num="48" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getIntervalNumber(double) : int" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="d(double) : double" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferencePoints() : double[]" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntervalReferencePoint(int) : double" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPoints() : double[]" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPoint(int) : double" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLength() : int" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfIntervals() : int" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntervalLength(int) : double" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getWeight() : double" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.fouriermethod.products.smile">
         <metrics coveredelements="67" complexity="21" loc="325" methods="16" classes="3" statements="73" coveredconditionals="6" coveredmethods="10" elements="99" ncloc="171" files="3" conditionals="10" coveredstatements="51"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/products/smile/EuropeanOptionSmile.java" name="EuropeanOptionSmile.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="12" loc="118" coveredmethods="6" methods="10" elements="35" classes="1" ncloc="66" statements="21" conditionals="4" coveredstatements="9"/>
            <class name="EuropeanOptionSmile">
               <metrics coveredelements="15" coveredconditionals="0" complexity="12" coveredmethods="6" methods="10" elements="35" statements="21" conditionals="4" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionSmile(String,double,double[])" num="30" count="504" type="method"/>
            <line num="31" count="502" type="stmt"/>
            <line num="32" count="506" type="stmt"/>
            <line num="33" count="507" type="stmt"/>
            <line num="34" count="505" type="stmt"/>
            <line complexity="1" visibility="public" signature="EuropeanOptionSmile(double,double[])" num="37" count="506" type="method"/>
            <line num="38" count="504" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="41" count="500" type="method"/>
            <line num="43" count="502" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrikes() : double[]" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlyingName() : String" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationDomainImagLowerBound() : double" num="54" count="499" type="method"/>
            <line num="56" count="504" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationDomainImagUpperBound() : double" num="59" count="500" type="method"/>
            <line num="61" count="503" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Complex) : Complex" num="77" count="2064534" type="method"/>
            <line num="79" count="2064700" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDescriptors(LocalDate) : Map&lt;Double, SingleAssetEuropeanOptionProductDescriptor&gt;" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDescriptor(LocalDate,int) : SingleAssetEuropeanOptionProductDescriptor" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/products/smile/EuropeanOptionSmileByCarrMadan.java" name="EuropeanOptionSmileByCarrMadan.java">
            <metrics coveredelements="52" coveredconditionals="6" complexity="9" loc="154" coveredmethods="4" methods="6" elements="64" classes="1" ncloc="93" statements="52" conditionals="6" coveredstatements="42"/>
            <class name="EuropeanOptionSmileByCarrMadan">
               <metrics coveredelements="52" coveredconditionals="6" complexity="9" coveredmethods="4" methods="6" elements="64" statements="52" conditionals="6" coveredstatements="42"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionSmileByCarrMadan(double,double[])" num="51" count="506" type="method"/>
            <line num="52" count="505" type="stmt"/>
            <line num="53" count="506" type="stmt"/>
            <line num="54" count="507" type="stmt"/>
            <line num="55" count="505" type="stmt"/>
            <line num="56" count="505" type="stmt"/>
            <line complexity="1" visibility="public" signature="EuropeanOptionSmileByCarrMadan(String,double,double[])" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="EuropeanOptionSmileByCarrMadan(String,double,double[],int,double,InterpolationMethod,ExtrapolationMethod)" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,CharacteristicFunctionModel) : Map&lt;String, Function&lt;Double, Double&gt;&gt;" num="77" count="500" type="method"/>
            <line num="80" count="502" type="stmt"/>
            <line num="82" count="505" type="stmt"/>
            <line num="84" count="504" type="stmt"/>
            <line num="85" count="505" type="stmt"/>
            <line num="87" count="503" type="stmt"/>
            <line num="89" count="503" type="stmt"/>
            <line falsecount="505" truecount="2055331" num="89" type="cond"/>
            <line num="91" count="2054363" type="stmt"/>
            <line num="94" count="2054312" type="stmt"/>
            <line num="97" count="2054433" type="stmt"/>
            <line num="99" count="2064869" type="stmt"/>
            <line num="100" count="2064176" type="stmt"/>
            <line num="101" count="2064066" type="stmt"/>
            <line num="103" count="2063230" type="stmt"/>
            <line num="104" count="2059640" type="stmt"/>
            <line falsecount="2056800" truecount="502" num="104" type="cond"/>
            <line num="105" count="501" type="stmt"/>
            <line num="107" count="2055690" type="stmt"/>
            <line num="109" count="2054949" type="stmt"/>
            <line num="111" count="2058598" type="stmt"/>
            <line num="115" count="505" type="stmt"/>
            <line num="116" count="505" type="stmt"/>
            <line num="117" count="505" type="stmt"/>
            <line num="120" count="505" type="stmt"/>
            <line num="121" count="505" type="stmt"/>
            <line num="122" count="505" type="stmt"/>
            <line num="124" count="505" type="stmt"/>
            <line falsecount="505" truecount="2029597" num="124" type="cond"/>
            <line num="125" count="2033563" type="stmt"/>
            <line num="126" count="2032726" type="stmt"/>
            <line num="127" count="2033747" type="stmt"/>
            <line num="130" count="505" type="stmt"/>
            <line num="132" count="505" type="stmt"/>
            <line num="133" count="505" type="stmt"/>
            <line num="135" count="505" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Double) : Double" num="137" count="5080" type="method"/>
            <line num="139" count="5080" type="stmt"/>
            <line num="144" count="505" type="stmt"/>
            <line num="145" count="505" type="stmt"/>
            <line num="146" count="505" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double,double[]) : EuropeanOptionSmile" num="149" count="498" type="method"/>
            <line num="151" count="500" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/products/smile/SmileByIntegralTransform.java" name="SmileByIntegralTransform.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="53" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SmileByIntegralTransform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.marketdata2.products">
         <metrics coveredelements="68" complexity="117" loc="1240" methods="62" classes="12" statements="273" coveredconditionals="15" coveredmethods="8" elements="429" ncloc="616" files="12" conditionals="94" coveredstatements="45"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/products/AbstractAnalyticProduct.java" name="AbstractAnalyticProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="33" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="15" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="AbstractAnalyticProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getValue(double,Model) : Object" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel) : RandomVariable" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/products/AnalyticProduct.java" name="AnalyticProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="30" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AnalyticProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/products/Cashflow.java" name="Cashflow.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="61" coveredmethods="0" methods="2" elements="23" classes="1" ncloc="30" statements="13" conditionals="8" coveredstatements="0"/>
            <class name="Cashflow">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="2" elements="23" statements="13" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Cashflow(String,double,double,boolean,String)" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="59" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/products/Deposit.java" name="Deposit.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="16" loc="137" coveredmethods="0" methods="9" elements="65" classes="1" ncloc="82" statements="42" conditionals="14" coveredstatements="0"/>
            <class name="Deposit">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="9" elements="65" statements="42" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="Deposit(Schedule,double,String)" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getRate(AnalyticModel) : RandomVariable" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule() : Schedule" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRate() : double" num="119" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodEndTime() : double" num="123" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixingTime() : double" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/products/Forward.java" name="Forward.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="81" coveredmethods="0" methods="2" elements="32" classes="1" ncloc="41" statements="20" conditionals="10" coveredstatements="0"/>
            <class name="Forward">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="2" elements="32" statements="20" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Forward(double,double,String,double,String)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/products/ForwardRateAgreement.java" name="ForwardRateAgreement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="118" coveredmethods="0" methods="4" elements="55" classes="1" ncloc="63" statements="33" conditionals="18" coveredstatements="0"/>
            <class name="ForwardRateAgreement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="4" elements="55" statements="33" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="ForwardRateAgreement(Schedule,double,String,String,boolean)" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardRateAgreement(Schedule,double,String,String)" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getRate(AnalyticModel) : RandomVariable" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/products/MarketForwardRateAgreement.java" name="MarketForwardRateAgreement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="92" coveredmethods="0" methods="2" elements="33" classes="1" ncloc="42" statements="21" conditionals="10" coveredstatements="0"/>
            <class name="MarketForwardRateAgreement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="2" elements="33" statements="21" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MarketForwardRateAgreement(double,double,String,double,String)" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="90" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/products/Performance.java" name="Performance.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="56" coveredmethods="0" methods="3" elements="11" classes="1" ncloc="24" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="Performance">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="11" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Performance(AbstractAnalyticProduct,AbstractAnalyticProduct)" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="41" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/products/Portfolio.java" name="Portfolio.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="152" coveredmethods="0" methods="9" elements="36" classes="1" ncloc="62" statements="27" conditionals="0" coveredstatements="0"/>
            <class name="Portfolio">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="36" statements="27" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Portfolio(List&lt;AnalyticProduct&gt;,List&lt;Double&gt;)" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Portfolio(Portfolio,List&lt;AnalyticProduct&gt;,List&lt;Double&gt;)" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Portfolio(AnalyticProduct,double)" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Portfolio(List&lt;AnalyticProduct&gt;)" num="107" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(AnalyticProduct) : RandomVariable" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Double) : RandomVariable" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProducts() : List&lt;AnalyticProduct&gt;" num="139" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getWeights() : List&lt;Double&gt;" num="149" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/products/Swap.java" name="Swap.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="15" loc="180" coveredmethods="4" methods="11" elements="59" classes="1" ncloc="96" statements="40" conditionals="8" coveredstatements="10"/>
            <class name="Swap">
               <metrics coveredelements="14" coveredconditionals="0" complexity="15" coveredmethods="4" methods="11" elements="59" statements="40" conditionals="8" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="Swap(AnalyticProduct,AnalyticProduct)" num="42" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swap(Schedule,String,double,String,Schedule,String,double,String,boolean)" num="61" count="27" type="method"/>
            <line num="69" count="27" type="stmt"/>
            <line num="70" count="27" type="stmt"/>
            <line num="71" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swap(Schedule,String,double,String,Schedule,String,double,String)" num="86" count="27" type="method"/>
            <line num="93" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="96" count="1642" type="method"/>
            <line num="99" count="1642" type="stmt"/>
            <line num="100" count="1642" type="stmt"/>
            <line num="102" count="1642" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardSwapRate(TimeDiscretization,TimeDiscretization,ForwardCurveInterface) : RandomVariable" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwardSwapRate(TimeDiscretization,TimeDiscretization,ForwardCurveInterface,DiscountCurveInterface) : RandomVariable" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardSwapRate(Schedule,Schedule,ForwardCurveInterface) : RandomVariable" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getForwardSwapRate(Schedule,Schedule,ForwardCurveInterface,AnalyticModel) : RandomVariable" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLegReceiver() : AnalyticProduct" num="162" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLegPayer() : AnalyticProduct" num="171" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="175" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/products/SwapAnnuity.java" name="SwapAnnuity.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="139" coveredmethods="0" methods="8" elements="34" classes="1" ncloc="59" statements="22" conditionals="4" coveredstatements="0"/>
            <class name="SwapAnnuity">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="8" elements="34" statements="22" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SwapAnnuity(Schedule,String)" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapAnnuity(TimeDiscretization,DiscountCurveInterface) : RandomVariable" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapAnnuity(TimeDiscretization,ForwardCurveInterface) : RandomVariable" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapAnnuity(Schedule,DiscountCurveInterface) : RandomVariable" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapAnnuity(Schedule,ForwardCurveInterface) : RandomVariable" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getSwapAnnuity(double,Schedule,DiscountCurveInterface,AnalyticModel) : RandomVariable" num="119" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/products/SwapLeg.java" name="SwapLeg.java">
            <metrics coveredelements="54" coveredconditionals="15" complexity="23" loc="161" coveredmethods="4" methods="10" elements="77" classes="1" ncloc="95" statements="45" conditionals="22" coveredstatements="35"/>
            <class name="SwapLeg">
               <metrics coveredelements="54" coveredconditionals="15" complexity="23" coveredmethods="4" methods="10" elements="77" statements="45" conditionals="22" coveredstatements="35"/>
            </class>
            <line complexity="2" visibility="public" signature="SwapLeg(Schedule,String,double,String,String,boolean)" num="44" count="56" type="method"/>
            <line num="45" count="56" type="stmt"/>
            <line num="46" count="56" type="stmt"/>
            <line num="47" count="56" type="stmt"/>
            <line num="48" count="56" type="stmt"/>
            <line num="49" count="56" type="stmt"/>
            <line num="50" count="56" type="stmt"/>
            <line falsecount="56" truecount="0" num="50" type="cond"/>
            <line num="51" count="56" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Schedule,String,double,String,boolean)" num="63" count="54" type="method"/>
            <line num="64" count="54" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Schedule,String,double,String)" num="75" count="2" type="method"/>
            <line num="76" count="2" type="stmt"/>
            <line complexity="13" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="80" count="3284" type="method"/>
            <line num="82" count="3284" type="stmt"/>
            <line falsecount="3284" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="3284" type="stmt"/>
            <line num="87" count="3284" type="stmt"/>
            <line num="88" count="3284" type="stmt"/>
            <line falsecount="3284" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="3284" type="stmt"/>
            <line falsecount="3284" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="95" count="3284" type="stmt"/>
            <line num="96" count="3284" type="stmt"/>
            <line falsecount="3284" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="3284" type="stmt"/>
            <line num="101" count="3284" type="stmt"/>
            <line falsecount="3284" truecount="17588" num="101" type="cond"/>
            <line num="102" count="17588" type="stmt"/>
            <line num="103" count="17588" type="stmt"/>
            <line num="104" count="17588" type="stmt"/>
            <line num="105" count="17588" type="stmt"/>
            <line num="106" count="17588" type="stmt"/>
            <line num="108" count="17588" type="stmt"/>
            <line num="109" count="17588" type="stmt"/>
            <line falsecount="8794" truecount="8794" num="109" type="cond"/>
            <line num="110" count="8794" type="stmt"/>
            <line num="114" count="17588" type="stmt"/>
            <line num="115" count="17588" type="stmt"/>
            <line falsecount="0" truecount="17588" num="115" type="cond"/>
            <line num="116" count="17588" type="stmt"/>
            <line num="119" count="17588" type="stmt"/>
            <line falsecount="20" truecount="17568" num="119" type="cond"/>
            <line num="120" count="17568" type="stmt"/>
            <line falsecount="0" truecount="17568" num="120" type="cond"/>
            <line num="121" count="17568" type="stmt"/>
            <line num="123" count="17568" type="stmt"/>
            <line falsecount="3282" truecount="14286" num="123" type="cond"/>
            <line num="124" count="14286" type="stmt"/>
            <line num="129" count="3284" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule() : Schedule" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSpread() : double" num="140" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNotionalExchanged() : boolean" num="148" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="152" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata2.model.curves">
         <metrics coveredelements="345" complexity="212" loc="2410" methods="120" classes="17" statements="468" coveredconditionals="53" coveredmethods="62" elements="736" ncloc="1112" files="11" conditionals="148" coveredstatements="230"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/curves/AbstractCurve.java" name="AbstractCurve.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="9" loc="85" coveredmethods="5" methods="8" elements="23" classes="1" ncloc="43" statements="13" conditionals="2" coveredstatements="7"/>
            <class name="AbstractCurve">
               <metrics coveredelements="12" coveredconditionals="0" complexity="9" coveredmethods="5" methods="8" elements="23" statements="13" conditionals="2" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractCurve(String,LocalDate)" num="28" count="18" type="method"/>
            <line num="29" count="18" type="stmt"/>
            <line num="30" count="18" type="stmt"/>
            <line num="31" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="37" count="397" type="method"/>
            <line num="39" count="397" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="42" count="42" type="method"/>
            <line num="44" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : RandomVariable" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValues(double[]) : RandomVariable[]" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : AbstractCurve" num="70" count="345" type="method"/>
            <line num="72" count="345" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(RandomVariable[]) : Curve" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="81" count="9" type="method"/>
            <line num="83" count="9" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/curves/AbstractForwardCurve.java" name="AbstractForwardCurve.java">
            <metrics coveredelements="30" coveredconditionals="1" complexity="13" loc="178" coveredmethods="9" methods="10" elements="48" classes="1" ncloc="91" statements="32" conditionals="6" coveredstatements="20"/>
            <class name="AbstractForwardCurve">
               <metrics coveredelements="30" coveredconditionals="1" complexity="13" coveredmethods="9" methods="10" elements="48" statements="32" conditionals="6" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractForwardCurve(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,String)" num="52" count="6" type="method"/>
            <line num="62" count="6" type="stmt"/>
            <line num="63" count="6" type="stmt"/>
            <line num="64" count="6" type="stmt"/>
            <line num="65" count="6" type="stmt"/>
            <line num="67" count="6" type="stmt"/>
            <line num="69" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractForwardCurve(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,String)" num="82" count="6" type="method"/>
            <line num="88" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractForwardCurve(String,LocalDate,double,String)" num="99" count="5" type="method"/>
            <line num="100" count="5" type="stmt"/>
            <line num="101" count="5" type="stmt"/>
            <line num="102" count="5" type="stmt"/>
            <line num="104" count="5" type="stmt"/>
            <line num="105" count="5" type="stmt"/>
            <line num="106" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="112" count="3" type="method"/>
            <line num="114" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="getPaymentOffset(double) : double" num="120" count="6769" type="method"/>
            <line num="122" count="6769" type="stmt"/>
            <line falsecount="0" truecount="6769" num="122" type="cond"/>
            <line num="123" count="6769" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwards(AnalyticModel,double[]) : RandomVariable[]" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="162" count="3" type="method"/>
            <line num="164" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentOffsetCode() : String" num="167" count="6772" type="method"/>
            <line num="168" count="6772" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentBusinessdayCalendar() : BusinessdayCalendar" num="171" count="3" type="method"/>
            <line num="172" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getPaymentDateRollConvention() : BusinessdayCalendar.DateRollConvention" num="175" count="3" type="method"/>
            <line num="176" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/curves/Curve.java" name="Curve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="81" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Curve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/curves/CurveBuilder.java" name="CurveBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CurveBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/curves/CurveInterpolation.java" name="CurveInterpolation.java">
            <metrics coveredelements="148" coveredconditionals="29" complexity="64" loc="565" coveredmethods="16" methods="33" elements="227" classes="6" ncloc="328" statements="148" conditionals="46" coveredstatements="103"/>
            <class name="CurveInterpolation">
               <metrics coveredelements="137" coveredconditionals="28" complexity="51" coveredmethods="13" methods="22" elements="188" statements="124" conditionals="42" coveredstatements="96"/>
            </class>
            <class name="CurveInterpolation.InterpolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CurveInterpolation.ExtrapolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CurveInterpolation.InterpolationEntity">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CurveInterpolation.Point">
               <metrics coveredelements="11" coveredconditionals="1" complexity="5" coveredmethods="3" methods="3" elements="17" statements="10" conditionals="4" coveredstatements="7"/>
            </class>
            <class name="CurveInterpolation.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="22" statements="14" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="Point(double,RandomVariable,boolean)" num="122" count="2206" type="method"/>
            <line num="123" count="2206" type="stmt"/>
            <line num="124" count="2206" type="stmt"/>
            <line num="125" count="2206" type="stmt"/>
            <line num="126" count="2206" type="stmt"/>
            <line complexity="3" visibility="public" signature="compareTo(Point) : int" num="129" count="1293" type="method"/>
            <line num="132" count="1293" type="stmt"/>
            <line falsecount="0" truecount="1293" num="132" type="cond"/>
            <line num="133" count="1293" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="142" count="1725" type="method"/>
            <line num="144" count="1725" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder()" num="160" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder(String,LocalDate)" num="170" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder(CurveInterpolation)" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Curve" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInterpolationMethod(InterpolationMethod) : CurveBuilder" num="200" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setExtrapolationMethod(ExtrapolationMethod) : CurveBuilder" num="211" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInterpolationEntity(InterpolationEntity) : CurveBuilder" num="222" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addPoint(double,RandomVariable,boolean) : CurveBuilder" num="230" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="CurveInterpolation(String,LocalDate,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,double[],RandomVariable[])" num="264" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="CurveInterpolation(String,LocalDate,InterpolationMethod,ExtrapolationMethod,InterpolationEntity)" num="293" count="17" type="method"/>
            <line num="299" count="17" type="stmt"/>
            <line num="300" count="17" type="stmt"/>
            <line num="301" count="17" type="stmt"/>
            <line num="302" count="17" type="stmt"/>
            <line complexity="1" visibility="private" signature="CurveInterpolation(String,LocalDate)" num="312" count="0" type="method"/>
            <line num="313" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : RandomVariable" num="317" count="0" type="method"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(AnalyticModel,double) : RandomVariable" num="323" count="99697" type="method"/>
            <line num="326" count="99697" type="stmt"/>
            <line falsecount="356" truecount="99341" num="326" type="cond"/>
            <line num="327" count="99697" type="stmt"/>
            <line falsecount="99341" truecount="356" num="327" type="cond"/>
            <line num="328" count="356" type="stmt"/>
            <line num="329" count="356" type="stmt"/>
            <line num="331" count="99697" type="stmt"/>
            <line num="332" count="99697" type="stmt"/>
            <line falsecount="3666" truecount="96031" num="332" type="cond"/>
            <line num="333" count="96031" type="stmt"/>
            <line num="336" count="3666" type="stmt"/>
            <line num="337" count="3666" type="stmt"/>
            <line num="338" count="3666" type="stmt"/>
            <line complexity="3" visibility="private" signature="getInterpolationEntityValue(double) : RandomVariable" num="341" count="3666" type="method"/>
            <line num="343" count="3666" type="stmt"/>
            <line num="345" count="3666" type="stmt"/>
            <line falsecount="3310" truecount="356" num="345" type="cond"/>
            <line num="346" count="356" type="stmt"/>
            <line num="347" count="356" type="stmt"/>
            <line num="348" count="356" type="stmt"/>
            <line falsecount="356" truecount="1887" num="348" type="cond"/>
            <line num="349" count="1887" type="stmt"/>
            <line num="350" count="1887" type="stmt"/>
            <line num="352" count="356" type="stmt"/>
            <line num="360" count="3666" type="stmt"/>
            <line complexity="12" visibility="protected" signature="addPoint(double,RandomVariable,boolean) : void" num="372" count="165" type="method"/>
            <line num="373" count="165" type="stmt"/>
            <line num="374" count="165" type="stmt"/>
            <line falsecount="162" truecount="3" num="374" type="cond"/>
            <line num="375" count="3" type="stmt"/>
            <line num="375" count="3" type="stmt"/>
            <line num="376" count="3" type="stmt"/>
            <line num="376" count="3" type="stmt"/>
            <line num="376" count="3" type="stmt"/>
            <line num="376" count="3" type="stmt"/>
            <line num="376" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="376" type="cond"/>
            <line falsecount="0" truecount="3" num="376" type="cond"/>
            <line num="377" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="377" type="cond"/>
            <line num="378" count="3" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="384" count="162" type="stmt"/>
            <line num="386" count="162" type="stmt"/>
            <line num="387" count="162" type="stmt"/>
            <line falsecount="162" truecount="0" num="387" type="cond"/>
            <line num="388" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="388" type="cond"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="390" type="cond"/>
            <line num="391" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="398" count="162" type="stmt"/>
            <line num="399" count="162" type="stmt"/>
            <line num="401" count="162" type="stmt"/>
            <line falsecount="5" truecount="157" num="401" type="cond"/>
            <line num="403" count="157" type="stmt"/>
            <line num="404" count="157" type="stmt"/>
            <line falsecount="157" truecount="0" num="404" type="cond"/>
            <line num="405" count="0" type="stmt"/>
            <line num="407" count="157" type="stmt"/>
            <line num="410" count="162" type="stmt"/>
            <line num="411" count="162" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationMethod() : InterpolationMethod" num="420" count="0" type="method"/>
            <line num="421" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExtrapolationMethod() : ExtrapolationMethod" num="429" count="0" type="method"/>
            <line num="430" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationEntity() : InterpolationEntity" num="438" count="0" type="method"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getTimeIndex(double) : int" num="442" count="162" type="method"/>
            <line num="443" count="162" type="stmt"/>
            <line num="444" count="162" type="stmt"/>
            <line num="445" count="162" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getParameterIndex(double) : int" num="448" count="157" type="method"/>
            <line num="449" count="157" type="stmt"/>
            <line num="450" count="157" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : RandomVariable[]" num="454" count="714" type="method"/>
            <line num="456" count="714" type="stmt"/>
            <line num="457" count="714" type="stmt"/>
            <line falsecount="714" truecount="3309" num="457" type="cond"/>
            <line num="458" count="3309" type="stmt"/>
            <line num="460" count="714" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(RandomVariable[]) : void" num="464" count="0" type="method"/>
            <line num="466" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="setParameterPrivate(RandomVariable[]) : void" num="469" count="345" type="method"/>
            <line num="470" count="345" type="stmt"/>
            <line falsecount="345" truecount="1599" num="470" type="cond"/>
            <line num="471" count="1599" type="stmt"/>
            <line num="473" count="345" type="stmt"/>
            <line num="474" count="345" type="stmt"/>
            <line complexity="5" visibility="private" signature="interpolationEntityFromValue(RandomVariable,double) : RandomVariable" num="477" count="1761" type="method"/>
            <line num="478" count="1761" type="stmt"/>
            <line num="479" count="1230" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="1230" type="stmt"/>
            <line num="482" count="519" type="stmt"/>
            <line num="483" count="519" type="stmt"/>
            <line num="484" count="12" type="stmt"/>
            <line num="485" count="12" type="stmt"/>
            <line falsecount="12" truecount="0" num="485" type="cond"/>
            <line num="486" count="0" type="stmt"/>
            <line num="488" count="12" type="stmt"/>
            <line complexity="4" visibility="private" signature="valueFromInterpolationEntity(RandomVariable,double) : RandomVariable" num="493" count="7017" type="method"/>
            <line num="494" count="7017" type="stmt"/>
            <line num="495" count="4521" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line num="497" count="4521" type="stmt"/>
            <line num="498" count="2478" type="stmt"/>
            <line num="499" count="2478" type="stmt"/>
            <line num="500" count="18" type="stmt"/>
            <line num="501" count="18" type="stmt"/>
            <line complexity="2" visibility="public" signature="clone() : CurveInterpolation" num="505" count="345" type="method"/>
            <line num="507" count="345" type="stmt"/>
            <line num="509" count="345" type="stmt"/>
            <line num="510" count="345" type="stmt"/>
            <line num="511" count="345" type="stmt"/>
            <line num="512" count="345" type="stmt"/>
            <line num="513" count="345" type="stmt"/>
            <line num="514" count="1725" type="stmt"/>
            <line num="515" count="1725" type="stmt"/>
            <line num="516" count="1725" type="stmt"/>
            <line falsecount="126" truecount="1599" num="516" type="cond"/>
            <line num="517" count="1599" type="stmt"/>
            <line num="521" count="345" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneForParameter(RandomVariable[]) : Curve" num="524" count="348" type="method"/>
            <line num="526" count="348" type="stmt"/>
            <line falsecount="345" truecount="3" num="526" type="cond"/>
            <line num="527" count="3" type="stmt"/>
            <line num="529" count="345" type="stmt"/>
            <line num="530" count="345" type="stmt"/>
            <line num="532" count="345" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="535" count="0" type="method"/>
            <line num="537" count="0" type="stmt"/>
            <line num="538" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="541" count="9" type="method"/>
            <line num="546" count="9" type="stmt"/>
            <line num="547" count="9" type="stmt"/>
            <line num="548" count="9" type="stmt"/>
            <line num="549" count="42" type="stmt"/>
            <line num="550" count="42" type="stmt"/>
            <line num="551" count="42" type="stmt"/>
            <line num="554" count="9" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="560" count="0" type="method"/>
            <line num="561" count="0" type="stmt"/>
            <line num="563" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/curves/DiscountCurveFromForwardCurve.java" name="DiscountCurveFromForwardCurve.java">
            <metrics coveredelements="25" coveredconditionals="5" complexity="27" loc="214" coveredmethods="3" methods="12" elements="96" classes="1" ncloc="110" statements="54" conditionals="30" coveredstatements="17"/>
            <class name="DiscountCurveFromForwardCurve">
               <metrics coveredelements="25" coveredconditionals="5" complexity="27" coveredmethods="3" methods="12" elements="96" statements="54" conditionals="30" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="DiscountCurveFromForwardCurve(String,double)" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiscountCurveFromForwardCurve(ForwardCurveInterface,double)" num="72" count="1" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiscountCurveFromForwardCurve(String)" num="89" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiscountCurveFromForwardCurve(ForwardCurveInterface)" num="103" count="1" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(double) : RandomVariable" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getDiscountFactor(AnalyticModel,double) : RandomVariable" num="118" count="62" type="method"/>
            <line num="120" count="62" type="stmt"/>
            <line num="121" count="62" type="stmt"/>
            <line falsecount="0" truecount="62" num="121" type="cond"/>
            <line num="122" count="62" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="62" type="stmt"/>
            <line falsecount="62" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="62" type="stmt"/>
            <line num="131" count="62" type="stmt"/>
            <line num="132" count="62" type="stmt"/>
            <line num="133" count="62" type="stmt"/>
            <line falsecount="62" truecount="342" num="133" type="cond"/>
            <line num="134" count="342" type="stmt"/>
            <line num="135" count="342" type="stmt"/>
            <line falsecount="342" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="342" type="stmt"/>
            <line num="139" count="342" type="stmt"/>
            <line num="142" count="62" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : RandomVariable" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : RandomVariable[]" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(RandomVariable[]) : void" num="158" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="hashCode() : int" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="equals(Object) : boolean" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/curves/DiscountCurveInterface.java" name="DiscountCurveInterface.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DiscountCurveInterface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/curves/DiscountCurveInterpolation.java" name="DiscountCurveInterpolation.java">
            <metrics coveredelements="43" coveredconditionals="6" complexity="42" loc="507" coveredmethods="13" methods="26" elements="150" classes="1" ncloc="220" statements="94" conditionals="30" coveredstatements="24"/>
            <class name="DiscountCurveInterpolation">
               <metrics coveredelements="43" coveredconditionals="6" complexity="42" coveredmethods="13" methods="26" elements="150" statements="94" conditionals="30" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="private" signature="DiscountCurveInterpolation(String)" num="52" count="3" type="method"/>
            <line num="53" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="DiscountCurveInterpolation(String,InterpolationMethod,ExtrapolationMethod,InterpolationEntity)" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="DiscountCurveInterpolation(String,LocalDate,InterpolationMethod,ExtrapolationMethod,InterpolationEntity)" num="80" count="3" type="method"/>
            <line num="83" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,LocalDate,double[],RandomVariable[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="99" count="3" type="method"/>
            <line num="104" count="3" type="stmt"/>
            <line num="106" count="3" type="stmt"/>
            <line falsecount="3" truecount="15" num="106" type="cond"/>
            <line num="107" count="15" type="stmt"/>
            <line num="110" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,double[],RandomVariable[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="125" count="3" type="method"/>
            <line num="131" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,double[],RandomVariable[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="145" count="3" type="method"/>
            <line num="150" count="3" type="stmt"/>
            <line num="151" count="3" type="stmt"/>
            <line falsecount="3" truecount="15" num="151" type="cond"/>
            <line num="152" count="15" type="stmt"/>
            <line num="155" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,double[],double[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="158" count="3" type="method"/>
            <line num="163" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : RandomVariableFromDoubleArray" num="164" count="15" type="method"/>
            <line num="165" count="15" type="stmt"/>
            <line num="167" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,double[],RandomVariable[]) : DiscountCurveInterpolation" num="178" count="3" type="method"/>
            <line num="179" count="3" type="stmt"/>
            <line num="181" count="3" type="stmt"/>
            <line falsecount="3" truecount="15" num="181" type="cond"/>
            <line num="182" count="15" type="stmt"/>
            <line num="185" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,double[],double[]) : DiscountCurveInterpolation" num="188" count="3" type="method"/>
            <line num="189" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : RandomVariableFromDoubleArray" num="190" count="15" type="method"/>
            <line num="191" count="15" type="stmt"/>
            <line num="193" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromZeroRates(String,LocalDate,double[],RandomVariable[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="213" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDiscountCurveFromZeroRates(String,Date,double[],RandomVariable[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="244" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromZeroRates(String,LocalDate,double[],RandomVariable[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="270" count="0" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromZeroRates(String,double[],RandomVariable[]) : DiscountCurveInterpolation" num="298" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="301" type="cond"/>
            <line num="302" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromAnnualizedZeroRates(String,LocalDate,double[],RandomVariable[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="325" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="332" type="cond"/>
            <line num="333" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromAnnualizedZeroRates(String,LocalDate,double[],RandomVariable[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="355" count="0" type="method"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="363" type="cond"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountFactorsFromForwardRates(String,TimeDiscretization,RandomVariable[]) : DiscountCurveInterface" num="380" count="0" type="method"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="384" type="cond"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="createDiscountCurveFromMonteCarloLiborModel(String,LIBORModelMonteCarloSimulationModel,double) : DiscountCurveInterface" num="401" count="0" type="method"/>
            <line num="403" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="403" type="cond"/>
            <line num="404" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="createZeroRates(double,double[],LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="416" count="0" type="method"/>
            <line num="419" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="427" type="cond"/>
            <line num="428" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="432" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="442" type="cond"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="448" type="cond"/>
            <line num="449" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getZeroRate(double) : RandomVariable" num="463" count="0" type="method"/>
            <line num="465" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="465" type="cond"/>
            <line num="466" count="0" type="stmt"/>
            <line num="469" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getZeroRates(double[]) : RandomVariable[]" num="478" count="0" type="method"/>
            <line num="480" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="482" type="cond"/>
            <line num="483" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="addDiscountFactor(double,RandomVariable,boolean) : void" num="489" count="30" type="method"/>
            <line num="490" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="493" count="6" type="method"/>
            <line num="495" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(double) : RandomVariable" num="498" count="0" type="method"/>
            <line num="500" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(AnalyticModel,double) : RandomVariable" num="503" count="93270" type="method"/>
            <line num="505" count="93270" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/curves/ForwardCurveFromDiscountCurve.java" name="ForwardCurveFromDiscountCurve.java">
            <metrics coveredelements="23" coveredconditionals="3" complexity="15" loc="178" coveredmethods="6" methods="11" elements="40" classes="1" ncloc="69" statements="23" conditionals="6" coveredstatements="14"/>
            <class name="ForwardCurveFromDiscountCurve">
               <metrics coveredelements="23" coveredconditionals="3" complexity="15" coveredmethods="6" methods="11" elements="40" statements="23" conditionals="6" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,double,double)" num="53" count="6" type="method"/>
            <line num="54" count="6" type="stmt"/>
            <line num="56" count="6" type="stmt"/>
            <line num="57" count="6" type="stmt"/>
            <line num="58" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,double,double)" num="74" count="6" type="method"/>
            <line num="75" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention)" num="89" count="6" type="method"/>
            <line num="90" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,LocalDate,String)" num="102" count="6" type="method"/>
            <line num="103" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,LocalDate,String)" num="120" count="6" type="method"/>
            <line num="121" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForward(AnalyticModel,double) : RandomVariable" num="124" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getForward(AnalyticModel,double,double) : RandomVariable" num="134" count="2712" type="method"/>
            <line num="137" count="2712" type="stmt"/>
            <line falsecount="2712" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="2712" type="stmt"/>
            <line num="141" count="2712" type="stmt"/>
            <line falsecount="2712" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="2712" type="stmt"/>
            <line falsecount="2712" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="2712" type="stmt"/>
            <line num="149" count="2712" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : RandomVariable" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : RandomVariable" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : RandomVariable[]" num="168" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="174" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/curves/ForwardCurveInterface.java" name="ForwardCurveInterface.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="50" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ForwardCurveInterface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/curves/ForwardCurveInterpolation.java" name="ForwardCurveInterpolation.java">
            <metrics coveredelements="64" coveredconditionals="9" complexity="42" loc="470" coveredmethods="10" methods="20" elements="152" classes="2" ncloc="214" statements="104" conditionals="28" coveredstatements="45"/>
            <class name="ForwardCurveInterpolation">
               <metrics coveredelements="64" coveredconditionals="9" complexity="42" coveredmethods="10" methods="20" elements="152" statements="104" conditionals="28" coveredstatements="45"/>
            </class>
            <class name="ForwardCurveInterpolation.InterpolationEntityForward">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="ForwardCurveInterpolation(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,InterpolationEntityForward,String)" num="69" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveInterpolation(String,LocalDate,String,InterpolationEntityForward,String)" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveInterpolation(String,LocalDate,String,String)" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveInterpolation(String,double,InterpolationEntityForward,String)" num="121" count="5" type="method"/>
            <line num="122" count="5" type="stmt"/>
            <line num="123" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="createForwardCurveFromForwards(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,InterpolationEntityForward,String,AnalyticModel,double[],RandomVariable[]) : ForwardCurveInterpolation" num="144" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createForwardCurveFromForwards(String,Date,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,InterpolationEntityForward,String,AnalyticModel,double[],RandomVariable[]) : ForwardCurveInterpolation" num="177" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createForwardCurveFromForwards(String,LocalDate,String,String,String,AnalyticModel,double[],RandomVariable[]) : ForwardCurveInterpolation" num="198" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createForwardCurveFromForwards(String,LocalDate,String,InterpolationEntityForward,String,AnalyticModel,double[],RandomVariable[]) : ForwardCurveInterpolation" num="215" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createForwardCurveFromForwards(String,double[],RandomVariable[],double) : ForwardCurveInterpolation" num="234" count="2" type="method"/>
            <line num="235" count="2" type="stmt"/>
            <line num="237" count="2" type="stmt"/>
            <line falsecount="2" truecount="120" num="237" type="cond"/>
            <line num="238" count="120" type="stmt"/>
            <line num="239" count="120" type="stmt"/>
            <line num="240" count="120" type="stmt"/>
            <line num="243" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="createForwardCurveFromDiscountFactors(String,double[],RandomVariable[],double) : ForwardCurveInterpolation" num="261" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="264" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="268" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="274" type="cond"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createForwardCurveFromForwards(String,double[],RandomVariable[],AnalyticModel,String,double) : ForwardCurveInterpolation" num="295" count="3" type="method"/>
            <line num="296" count="3" type="stmt"/>
            <line num="298" count="3" type="stmt"/>
            <line falsecount="3" truecount="15" num="298" type="cond"/>
            <line num="299" count="15" type="stmt"/>
            <line num="300" count="15" type="stmt"/>
            <line num="301" count="15" type="stmt"/>
            <line num="303" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="createForwardCurveFromForwards(String,double[],double[],AnalyticModel,String,double) : ForwardCurveInterpolation" num="317" count="3" type="method"/>
            <line num="318" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : RandomVariableFromDoubleArray" num="319" count="15" type="method"/>
            <line num="320" count="15" type="stmt"/>
            <line num="322" count="3" type="stmt"/>
            <line complexity="5" visibility="public" signature="createForwardCurveFromMonteCarloLiborModel(String,LIBORModelMonteCarloSimulationModel,double) : ForwardCurveInterpolation" num="334" count="2" type="method"/>
            <line num="336" count="2" type="stmt"/>
            <line num="338" count="2" type="stmt"/>
            <line num="339" count="2" type="stmt"/>
            <line num="340" count="2" type="stmt"/>
            <line num="341" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="341" type="cond"/>
            <line num="342" count="0" type="stmt"/>
            <line num="345" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="345" type="cond"/>
            <line num="346" count="2" type="stmt"/>
            <line num="347" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="347" type="cond"/>
            <line num="348" count="2" type="stmt"/>
            <line falsecount="2" truecount="120" num="348" type="cond"/>
            <line num="349" count="120" type="stmt"/>
            <line num="350" count="120" type="stmt"/>
            <line num="353" count="2" type="stmt"/>
            <line num="354" count="2" type="stmt"/>
            <line complexity="6" visibility="public" signature="getForward(AnalyticModel,double) : RandomVariable" num="358" count="6427" type="method"/>
            <line num="361" count="6427" type="stmt"/>
            <line num="363" count="6427" type="stmt"/>
            <line num="364" count="6427" type="stmt"/>
            <line num="365" count="6427" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="6427" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="369" type="cond"/>
            <line num="370" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForward(AnalyticModel,double,double) : RandomVariable" num="398" count="6085" type="method"/>
            <line num="405" count="6085" type="stmt"/>
            <line complexity="5" visibility="private" signature="addForward(AnalyticModel,double,RandomVariable,boolean) : void" num="416" count="135" type="method"/>
            <line num="417" count="135" type="stmt"/>
            <line num="418" count="135" type="stmt"/>
            <line num="419" count="135" type="stmt"/>
            <line num="420" count="135" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="135" type="stmt"/>
            <line num="423" count="135" type="stmt"/>
            <line num="424" count="135" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="432" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line num="444" count="135" type="stmt"/>
            <line complexity="2" visibility="protected" signature="addPoint(double,RandomVariable,boolean) : void" num="447" count="0" type="method"/>
            <line num="449" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="449" type="cond"/>
            <line num="450" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationEntityForward() : InterpolationEntityForward" num="460" count="0" type="method"/>
            <line num="461" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="464" count="3" type="method"/>
            <line num="466" count="3" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.automaticdifferentiation.backward">
         <metrics coveredelements="473" complexity="257" loc="1481" methods="112" classes="5" statements="443" coveredconditionals="104" coveredmethods="79" elements="713" ncloc="1117" files="2" conditionals="158" coveredstatements="290"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/RandomVariableDifferentiableAAD.java" name="RandomVariableDifferentiableAAD.java">
            <metrics coveredelements="449" coveredconditionals="104" complexity="245" loc="1350" coveredmethods="69" methods="100" elements="685" classes="3" ncloc="1048" statements="427" conditionals="158" coveredstatements="276"/>
            <class name="RandomVariableDifferentiableAAD">
               <metrics coveredelements="176" coveredconditionals="23" complexity="113" coveredmethods="60" methods="87" elements="267" statements="138" conditionals="42" coveredstatements="93"/>
            </class>
            <class name="RandomVariableDifferentiableAAD.OperatorType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RandomVariableDifferentiableAAD.OperatorTreeNode">
               <metrics coveredelements="273" coveredconditionals="81" complexity="132" coveredmethods="9" methods="13" elements="418" statements="289" conditionals="116" coveredstatements="183"/>
            </class>
            <line complexity="1" visibility="package" signature="OperatorTreeNode(OperatorType,List&lt;RandomVariable&gt;,Object,RandomVariableDifferentiableAADFactory)" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="28" visibility="package" signature="OperatorTreeNode(OperatorType,List&lt;OperatorTreeNode&gt;,List&lt;RandomVariable&gt;,Object,RandomVariableDifferentiableAADFactory)" num="99" count="26589192" type="method"/>
            <line num="100" count="26586747" type="stmt"/>
            <line num="101" count="26590050" type="stmt"/>
            <line num="102" count="26588419" type="stmt"/>
            <line num="103" count="26589914" type="stmt"/>
            <line num="104" count="26590201" type="stmt"/>
            <line num="105" count="26590305" type="stmt"/>
            <line num="107" count="26590144" type="stmt"/>
            <line falsecount="24843733" truecount="1747880" num="107" type="cond"/>
            <line num="109" count="1747913" type="stmt"/>
            <line num="111" count="24844066" type="stmt"/>
            <line falsecount="24840929" truecount="3174" num="111" type="cond"/>
            <line num="113" count="3171" type="stmt"/>
            <line num="115" count="24841067" type="stmt"/>
            <line falsecount="10521527" truecount="14320491" num="115" type="cond"/>
            <line num="117" count="14320813" type="stmt"/>
            <line falsecount="14320674" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="14320937" type="stmt"/>
            <line falsecount="1068537" truecount="13252376" num="120" type="cond"/>
            <line num="121" count="13252503" type="stmt"/>
            <line num="124" count="10521500" type="stmt"/>
            <line falsecount="10417054" truecount="104645" num="124" type="cond"/>
            <line num="126" count="104644" type="stmt"/>
            <line falsecount="16395" truecount="88250" num="126" type="cond"/>
            <line num="127" count="88254" type="stmt"/>
            <line num="130" count="10417101" type="stmt"/>
            <line falsecount="2093615" truecount="8323724" num="130" type="cond"/>
            <line num="132" count="8323810" type="stmt"/>
            <line num="134" count="8323715" type="stmt"/>
            <line falsecount="1916103" truecount="6407616" num="134" type="cond"/>
            <line num="135" count="6407620" type="stmt"/>
            <line num="137" count="8323773" type="stmt"/>
            <line falsecount="6445137" truecount="1878641" num="137" type="cond"/>
            <line num="138" count="1878732" type="stmt"/>
            <line num="141" count="2093589" type="stmt"/>
            <line falsecount="1958534" truecount="135144" num="141" type="cond"/>
            <line num="143" count="135138" type="stmt"/>
            <line falsecount="135139" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="135154" type="stmt"/>
            <line falsecount="135145" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="135151" type="stmt"/>
            <line falsecount="135158" truecount="0" num="149" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line num="153" count="1958495" type="stmt"/>
            <line falsecount="1943399" truecount="15102" num="153" type="cond"/>
            <line num="154" count="15102" type="stmt"/>
            <line falsecount="15102" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="160" count="26587561" type="stmt"/>
            <line complexity="11" visibility="private" signature="propagateDerivativesFromResultToArgument(Map&lt;Long, RandomVariable&gt;) : void" num="163" count="94445704" type="method"/>
            <line num="164" count="94445704" type="stmt"/>
            <line falsecount="94445704" truecount="0" num="164" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="169" count="94445704" type="stmt"/>
            <line falsecount="94445704" truecount="218387489" num="169" type="cond"/>
            <line num="170" count="218387489" type="stmt"/>
            <line num="171" count="218387489" type="stmt"/>
            <line falsecount="44530047" truecount="173857442" num="171" type="cond"/>
            <line num="172" count="173857442" type="stmt"/>
            <line num="174" count="173857442" type="stmt"/>
            <line num="175" count="173857442" type="stmt"/>
            <line num="176" count="173857442" type="stmt"/>
            <line num="181" count="173857442" type="stmt"/>
            <line num="182" count="2596" type="stmt"/>
            <line num="184" count="2596" type="stmt"/>
            <line num="185" count="2596" type="stmt"/>
            <line num="186" count="232" type="stmt"/>
            <line num="188" count="232" type="stmt"/>
            <line num="189" count="232" type="stmt"/>
            <line num="190" count="232" type="stmt"/>
            <line num="191" count="706" type="stmt"/>
            <line num="193" count="706" type="stmt"/>
            <line falsecount="704" truecount="2" num="193" type="cond"/>
            <line num="194" count="2" type="stmt"/>
            <line num="196" count="706" type="stmt"/>
            <line num="197" count="173853908" type="stmt"/>
            <line num="199" count="173853908" type="stmt"/>
            <line num="205" count="173857442" type="stmt"/>
            <line falsecount="71599120" truecount="102258322" num="205" type="cond"/>
            <line num="207" count="102258322" type="stmt"/>
            <line num="211" count="71599120" type="stmt"/>
            <line num="214" count="173857442" type="stmt"/>
            <line complexity="70" visibility="private" signature="getPartialDerivative(OperatorTreeNode,int) : RandomVariable" num="228" count="173857442" type="method"/>
            <line num="230" count="173857442" type="stmt"/>
            <line falsecount="173857442" truecount="0" num="230" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="234" count="173857442" type="stmt"/>
            <line falsecount="43197959" truecount="130659483" num="234" type="cond"/>
            <line num="235" count="173857442" type="stmt"/>
            <line falsecount="43201734" truecount="130655708" num="235" type="cond"/>
            <line num="236" count="173857442" type="stmt"/>
            <line falsecount="107829024" truecount="66028418" num="236" type="cond"/>
            <line num="238" count="173857442" type="stmt"/>
            <line num="240" count="173857442" type="stmt"/>
            <line num="242" count="28" type="stmt"/>
            <line num="243" count="28" type="stmt"/>
            <line num="244" count="28" type="stmt"/>
            <line num="245" count="12" type="stmt"/>
            <line num="246" count="12" type="stmt"/>
            <line num="247" count="12" type="stmt"/>
            <line num="248" count="1829" type="stmt"/>
            <line num="249" count="1829" type="stmt"/>
            <line num="250" count="1829" type="stmt"/>
            <line num="251" count="1478" type="stmt"/>
            <line num="252" count="1478" type="stmt"/>
            <line num="253" count="1478" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="2596" type="stmt"/>
            <line num="264" count="2596" type="stmt"/>
            <line num="265" count="2596" type="stmt"/>
            <line num="266" count="232" type="stmt"/>
            <line num="267" count="232" type="stmt"/>
            <line num="268" count="232" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="278" count="0" type="method"/>
            <line num="280" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="287" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="289" type="cond"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="196" type="stmt"/>
            <line num="294" count="196" type="stmt"/>
            <line num="295" count="196" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="43094010" type="stmt"/>
            <line num="303" count="43094010" type="stmt"/>
            <line num="304" count="43094010" type="stmt"/>
            <line num="305" count="101353" type="stmt"/>
            <line num="306" count="101353" type="stmt"/>
            <line falsecount="260" truecount="101093" num="306" type="cond"/>
            <line num="307" count="101353" type="stmt"/>
            <line num="308" count="57264708" type="stmt"/>
            <line num="309" count="57264708" type="stmt"/>
            <line falsecount="21332546" truecount="35932162" num="309" type="cond"/>
            <line num="310" count="57264708" type="stmt"/>
            <line num="311" count="67211" type="stmt"/>
            <line num="312" count="67211" type="stmt"/>
            <line falsecount="8059" truecount="59152" num="312" type="cond"/>
            <line num="313" count="67211" type="stmt"/>
            <line num="314" count="7289728" type="stmt"/>
            <line num="315" count="7289728" type="stmt"/>
            <line falsecount="8" truecount="7289720" num="315" type="cond"/>
            <line num="316" count="7289720" type="stmt"/>
            <line num="319" count="8" type="stmt"/>
            <line num="321" count="7289728" type="stmt"/>
            <line num="322" count="2625" type="stmt"/>
            <line num="323" count="2625" type="stmt"/>
            <line falsecount="0" truecount="2625" num="323" type="cond"/>
            <line num="324" count="2625" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="329" count="2625" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="331" type="cond"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="334" type="cond"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="338" type="cond"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="342" type="cond"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="3018" type="stmt"/>
            <line num="348" count="3018" type="stmt"/>
            <line falsecount="0" truecount="3018" num="348" type="cond"/>
            <line num="349" count="3018" type="stmt"/>
            <line num="350" count="50743260" type="stmt"/>
            <line num="351" count="50743260" type="stmt"/>
            <line falsecount="28883276" truecount="21859984" num="351" type="cond"/>
            <line num="352" count="21859984" type="stmt"/>
            <line num="353" count="28883276" type="stmt"/>
            <line falsecount="7154892" truecount="21728384" num="353" type="cond"/>
            <line num="354" count="21728384" type="stmt"/>
            <line num="356" count="7154892" type="stmt"/>
            <line num="358" count="50743260" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="360" type="cond"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="362" type="cond"/>
            <line num="363" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="369" type="cond"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="371" type="cond"/>
            <line num="372" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="406828" type="stmt"/>
            <line num="378" count="406828" type="stmt"/>
            <line falsecount="203414" truecount="203414" num="378" type="cond"/>
            <line num="379" count="203414" type="stmt"/>
            <line num="380" count="203414" type="stmt"/>
            <line falsecount="0" truecount="203414" num="380" type="cond"/>
            <line num="381" count="203414" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="385" count="406828" type="stmt"/>
            <line num="386" count="14877624" type="stmt"/>
            <line num="387" count="14877624" type="stmt"/>
            <line falsecount="7438812" truecount="7438812" num="387" type="cond"/>
            <line num="388" count="7438812" type="stmt"/>
            <line num="389" count="7438812" type="stmt"/>
            <line falsecount="0" truecount="7438812" num="389" type="cond"/>
            <line num="390" count="7438812" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="394" count="14877624" type="stmt"/>
            <line num="395" count="706" type="stmt"/>
            <line num="396" count="706" type="stmt"/>
            <line falsecount="464" truecount="242" num="396" type="cond"/>
            <line num="397" count="242" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="408" count="240" type="stmt"/>
            <line num="414" count="240" type="stmt"/>
            <line num="415" count="240" type="stmt"/>
            <line falsecount="238" truecount="2" num="415" type="cond"/>
            <line num="416" count="2" type="stmt"/>
            <line num="418" count="238" type="stmt"/>
            <line falsecount="6" truecount="232" num="418" type="cond"/>
            <line num="419" count="232" type="stmt"/>
            <line num="420" count="232" type="stmt"/>
            <line num="421" count="232" type="stmt"/>
            <line num="422" count="232" type="stmt"/>
            <line num="425" count="6" type="stmt"/>
            <line num="427" count="240" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="2" type="stmt"/>
            <line num="432" count="2" type="stmt"/>
            <line num="433" count="2" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="440" count="464" type="stmt"/>
            <line falsecount="232" truecount="232" num="440" type="cond"/>
            <line num="441" count="232" type="stmt"/>
            <line num="443" count="232" type="stmt"/>
            <line num="445" count="706" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line num="450" count="173857442" type="stmt"/>
            <line complexity="2" visibility="private" signature="getDiracDeltaRegression(RandomVariable,RandomVariable) : RandomVariable" num="453" count="2" type="method"/>
            <line num="454" count="2" type="stmt"/>
            <line num="455" count="2" type="stmt"/>
            <line num="457" count="2" type="stmt"/>
            <line num="459" count="2" type="stmt"/>
            <line num="460" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="460" type="cond"/>
            <line num="461" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line num="467" count="0" type="stmt"/>
            <line num="470" count="2" type="stmt"/>
            <line num="473" count="2" type="stmt"/>
            <line complexity="5" visibility="private" signature="getDensityRegression(RandomVariable) : double" num="477" count="2" type="method"/>
            <line num="478" count="2" type="stmt"/>
            <line num="483" count="2" type="stmt"/>
            <line num="484" count="2" type="stmt"/>
            <line num="485" count="2" type="stmt"/>
            <line num="486" count="2" type="stmt"/>
            <line num="487" count="2" type="stmt"/>
            <line num="488" count="2" type="stmt"/>
            <line num="489" count="2" type="stmt"/>
            <line num="490" count="2" type="stmt"/>
            <line num="492" count="2" type="stmt"/>
            <line num="493" count="0" type="stmt"/>
            <line num="495" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="495" type="cond"/>
            <line num="496" count="0" type="stmt"/>
            <line num="498" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line num="501" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line num="505" count="0" type="stmt"/>
            <line num="508" count="0" type="stmt"/>
            <line num="509" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line num="516" count="2" type="stmt"/>
            <line num="518" count="2" type="stmt"/>
            <line falsecount="2" truecount="100" num="518" type="cond"/>
            <line num="519" count="100" type="stmt"/>
            <line num="521" count="100" type="stmt"/>
            <line num="522" count="100" type="stmt"/>
            <line num="524" count="100" type="stmt"/>
            <line num="525" count="100" type="stmt"/>
            <line num="527" count="100" type="stmt"/>
            <line num="528" count="100" type="stmt"/>
            <line num="531" count="2" type="stmt"/>
            <line num="532" count="2" type="stmt"/>
            <line num="534" count="2" type="stmt"/>
            <line num="536" count="2" type="stmt"/>
            <line num="538" count="2" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line num="541" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="of(RandomVariable) : OperatorTreeNode" num="545" count="33617411" type="method"/>
            <line num="546" count="33619990" type="stmt"/>
            <line falsecount="20775225" truecount="12846540" num="546" type="cond"/>
            <line complexity="2" visibility="private" signature="getValue(RandomVariable) : RandomVariable" num="549" count="2754303" type="method"/>
            <line num="550" count="2754516" type="stmt"/>
            <line falsecount="0" truecount="2754552" num="550" type="cond"/>
            <line complexity="2" visibility="private" signature="extractOperatorTreeNodes(List&lt;RandomVariable&gt;) : List&lt;OperatorTreeNode&gt;" num="553" count="1765761" type="method"/>
            <line num="554" count="1765847" type="stmt"/>
            <line falsecount="802883" truecount="963052" num="554" type="cond"/>
            <line complexity="2" visibility="private" signature="extractOperatorValues(List&lt;RandomVariable&gt;) : List&lt;RandomVariable&gt;" num="557" count="1765666" type="method"/>
            <line num="558" count="1765803" type="stmt"/>
            <line falsecount="802889" truecount="963007" num="558" type="cond"/>
            <line complexity="2" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="561" count="0" type="method"/>
            <line num="562" count="0" type="stmt"/>
            <line num="564" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line num="566" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="RandomVariableDifferentiableAAD(RandomVariable,List&lt;OperatorTreeNode&gt;,List&lt;RandomVariable&gt;,ConditionalExpectationEstimator,OperatorType,RandomVariableDifferentiableAADFactory,int)" num="582" count="26589965" type="method"/>
            <line num="583" count="26585996" type="stmt"/>
            <line num="584" count="26591092" type="stmt"/>
            <line num="585" count="26590681" type="stmt"/>
            <line num="586" count="26584503" type="stmt"/>
            <line falsecount="1978" truecount="26587418" num="586" type="cond"/>
            <line num="587" count="26591734" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(double) : RandomVariableDifferentiableAAD" num="590" count="0" type="method"/>
            <line num="591" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(RandomVariable) : RandomVariableDifferentiableAAD" num="594" count="0" type="method"/>
            <line num="595" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAAD(double)" num="598" count="2" type="method"/>
            <line num="599" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="RandomVariableDifferentiableAAD(RandomVariable)" num="602" count="1976" type="method"/>
            <line num="603" count="1976" type="stmt"/>
            <line falsecount="1976" truecount="0" num="603" type="cond"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAAD(RandomVariable,RandomVariableDifferentiableAADFactory)" num="606" count="800915" type="method"/>
            <line num="607" count="800913" type="stmt"/>
            <line complexity="1" visibility="private" signature="RandomVariableDifferentiableAAD(RandomVariable,List&lt;RandomVariable&gt;,OperatorType,RandomVariableDifferentiableAADFactory)" num="610" count="1764299" type="method"/>
            <line num="611" count="1764248" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAAD(RandomVariable,List&lt;RandomVariable&gt;,ConditionalExpectationEstimator,OperatorType,RandomVariableDifferentiableAADFactory)" num="614" count="1765906" type="method"/>
            <line num="615" count="1765833" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAAD(RandomVariable,List&lt;RandomVariable&gt;,ConditionalExpectationEstimator,OperatorType,RandomVariableDifferentiableAADFactory,int)" num="618" count="1765908" type="method"/>
            <line num="619" count="1765865" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperatorTreeNode() : OperatorTreeNode" num="622" count="37794363" type="method"/>
            <line num="623" count="37802428" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues() : RandomVariable" num="631" count="71037427" type="method"/>
            <line num="633" count="71065702" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactory() : RandomVariableDifferentiableAADFactory" num="636" count="214675677" type="method"/>
            <line num="637" count="214679096" type="stmt"/>
            <line complexity="1" visibility="public" signature="getID() : Long" num="640" count="134773" type="method"/>
            <line num="642" count="134774" type="stmt"/>
            <line complexity="8" visibility="public" signature="getGradient(Set&lt;Long&gt;) : Map&lt;Long, RandomVariable&gt;" num="653" count="3220" type="method"/>
            <line num="657" count="3220" type="stmt"/>
            <line num="659" count="3220" type="stmt"/>
            <line num="662" count="3220" type="stmt"/>
            <line num="664" count="3220" type="stmt"/>
            <line num="666" count="3220" type="stmt"/>
            <line falsecount="3220" truecount="102261542" num="666" type="cond"/>
            <line num="668" count="102261542" type="stmt"/>
            <line num="669" count="102261542" type="stmt"/>
            <line num="670" count="102261542" type="stmt"/>
            <line num="673" count="102261542" type="stmt"/>
            <line num="674" count="102261542" type="stmt"/>
            <line falsecount="7815838" truecount="94445704" num="674" type="cond"/>
            <line num="676" count="94445704" type="stmt"/>
            <line num="679" count="94445704" type="stmt"/>
            <line falsecount="880" truecount="94444824" num="679" type="cond"/>
            <line num="680" count="94444824" type="stmt"/>
            <line num="684" count="94445704" type="stmt"/>
            <line num="686" count="218387489" type="stmt"/>
            <line falsecount="44530047" truecount="173857442" num="686" type="cond"/>
            <line num="687" count="173857442" type="stmt"/>
            <line num="692" count="102261542" type="stmt"/>
            <line falsecount="102261542" truecount="0" num="692" type="cond"/>
            <line num="693" count="0" type="stmt"/>
            <line num="697" count="3220" type="stmt"/>
            <line complexity="1" visibility="private" signature="isGradientRetainsLeafNodesOnly() : boolean" num="700" count="94445704" type="method"/>
            <line num="701" count="94445704" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTangents(Set&lt;Long&gt;) : Map&lt;Long, RandomVariable&gt;" num="704" count="0" type="method"/>
            <line num="706" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(RandomVariable) : boolean" num="714" count="2" type="method"/>
            <line num="716" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="719" count="220" type="method"/>
            <line num="721" count="220" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="724" count="43642104" type="method"/>
            <line num="726" count="43652895" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="729" count="22240" type="method"/>
            <line num="731" count="22240" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="734" count="2000" type="method"/>
            <line num="736" count="2000" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="739" count="602" type="method"/>
            <line num="741" count="602" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizations() : double[]" num="744" count="915" type="method"/>
            <line num="746" count="915" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : Double" num="749" count="198" type="method"/>
            <line num="751" count="198" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : double" num="754" count="1" type="method"/>
            <line num="756" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : double" num="759" count="508" type="method"/>
            <line num="761" count="508" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage() : double" num="764" count="137685" type="method"/>
            <line num="766" count="137685" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage(RandomVariable) : double" num="769" count="0" type="method"/>
            <line num="771" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="774" count="73" type="method"/>
            <line num="776" count="73" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance(RandomVariable) : double" num="779" count="0" type="method"/>
            <line num="781" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVariance() : double" num="784" count="0" type="method"/>
            <line num="786" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="789" count="1755" type="method"/>
            <line num="791" count="1755" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="794" count="0" type="method"/>
            <line num="796" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError() : double" num="799" count="296" type="method"/>
            <line num="801" count="296" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError(RandomVariable) : double" num="804" count="0" type="method"/>
            <line num="806" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double) : double" num="809" count="5" type="method"/>
            <line num="811" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="814" count="0" type="method"/>
            <line num="816" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantileExpectation(double,double) : double" num="819" count="0" type="method"/>
            <line num="821" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(double[]) : double[]" num="824" count="23" type="method"/>
            <line num="826" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(int,double) : double[][]" num="829" count="0" type="method"/>
            <line num="831" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="838" count="676134" type="method"/>
            <line num="840" count="676134" type="stmt"/>
            <line num="841" count="676134" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="844" count="311673" type="method"/>
            <line num="846" count="311804" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="856" count="3896" type="method"/>
            <line num="858" count="3896" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="868" count="4180" type="method"/>
            <line num="870" count="4180" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="880" count="140665" type="method"/>
            <line num="882" count="140695" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="892" count="1047756" type="method"/>
            <line num="894" count="1048382" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="904" count="81633" type="method"/>
            <line num="906" count="81637" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="916" count="6716" type="method"/>
            <line num="918" count="6716" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="925" count="3173" type="method"/>
            <line num="927" count="3173" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConditionalExpectation(ConditionalExpectationEstimator) : RandomVariable" num="934" count="1596" type="method"/>
            <line num="936" count="1596" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="945" count="11479" type="method"/>
            <line num="947" count="11479" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="954" count="1036" type="method"/>
            <line num="956" count="1036" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="963" count="32722" type="method"/>
            <line num="965" count="32722" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="972" count="3282" type="method"/>
            <line num="974" count="3282" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="981" count="0" type="method"/>
            <line num="983" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="990" count="0" type="method"/>
            <line num="992" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="add(RandomVariable) : RandomVariable" num="1003" count="1525936" type="method"/>
            <line num="1005" count="1526096" type="stmt"/>
            <line falsecount="1526176" truecount="0" num="1005" type="cond"/>
            <line num="1007" count="0" type="stmt"/>
            <line num="1010" count="1526369" type="stmt"/>
            <line complexity="2" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="1020" count="26047" type="method"/>
            <line num="1022" count="26048" type="stmt"/>
            <line falsecount="26047" truecount="0" num="1022" type="cond"/>
            <line num="1024" count="0" type="stmt"/>
            <line num="1027" count="26048" type="stmt"/>
            <line complexity="2" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="1037" count="50651" type="method"/>
            <line num="1039" count="50651" type="stmt"/>
            <line falsecount="50651" truecount="0" num="1039" type="cond"/>
            <line num="1041" count="0" type="stmt"/>
            <line num="1044" count="50651" type="stmt"/>
            <line complexity="2" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="1054" count="13272137" type="method"/>
            <line num="1056" count="13272298" type="stmt"/>
            <line falsecount="13272312" truecount="0" num="1056" type="cond"/>
            <line num="1058" count="0" type="stmt"/>
            <line num="1061" count="13272421" type="stmt"/>
            <line complexity="2" visibility="public" signature="div(RandomVariable) : RandomVariable" num="1071" count="23004" type="method"/>
            <line num="1073" count="23006" type="stmt"/>
            <line falsecount="23007" truecount="0" num="1073" type="cond"/>
            <line num="1075" count="0" type="stmt"/>
            <line num="1078" count="23008" type="stmt"/>
            <line complexity="2" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="1088" count="0" type="method"/>
            <line num="1090" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1090" type="cond"/>
            <line num="1092" count="0" type="stmt"/>
            <line num="1095" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="1105" count="521" type="method"/>
            <line num="1107" count="521" type="stmt"/>
            <line falsecount="521" truecount="0" num="1107" type="cond"/>
            <line num="1109" count="0" type="stmt"/>
            <line num="1112" count="521" type="stmt"/>
            <line complexity="2" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="1119" count="5" type="method"/>
            <line num="1121" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="1121" type="cond"/>
            <line num="1123" count="0" type="stmt"/>
            <line num="1126" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="1133" count="135184" type="method"/>
            <line num="1135" count="135185" type="stmt"/>
            <line falsecount="135174" truecount="0" num="1135" type="cond"/>
            <line num="1137" count="0" type="stmt"/>
            <line num="1140" count="135182" type="stmt"/>
            <line complexity="2" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="1147" count="757246" type="method"/>
            <line num="1149" count="757250" type="stmt"/>
            <line falsecount="757256" truecount="0" num="1149" type="cond"/>
            <line num="1151" count="0" type="stmt"/>
            <line num="1154" count="757257" type="stmt"/>
            <line complexity="1" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="1161" count="15102" type="method"/>
            <line num="1163" count="15102" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="1173" count="9948" type="method"/>
            <line num="1175" count="9948" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="1182" count="196" type="method"/>
            <line num="1184" count="196" type="stmt"/>
            <line complexity="2" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="1191" count="706647" type="method"/>
            <line num="1193" count="707163" type="stmt"/>
            <line falsecount="707666" truecount="0" num="1193" type="cond"/>
            <line num="1195" count="0" type="stmt"/>
            <line num="1198" count="707948" type="stmt"/>
            <line complexity="3" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="1208" count="7615152" type="method"/>
            <line num="1210" count="7615318" type="stmt"/>
            <line falsecount="7615321" truecount="0" num="1210" type="cond"/>
            <line num="1212" count="0" type="stmt"/>
            <line num="1215" count="7615461" type="stmt"/>
            <line complexity="3" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="1225" count="0" type="method"/>
            <line num="1227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1227" type="cond"/>
            <line num="1229" count="0" type="stmt"/>
            <line num="1232" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="1239" count="0" type="method"/>
            <line num="1241" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1241" type="cond"/>
            <line num="1243" count="0" type="stmt"/>
            <line num="1246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNaN() : RandomVariable" num="1257" count="18" type="method"/>
            <line num="1259" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="1262" count="0" type="method"/>
            <line num="1264" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizationsStream() : DoubleStream" num="1267" count="0" type="method"/>
            <line num="1269" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="1272" count="0" type="method"/>
            <line num="1274" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="1277" count="0" type="method"/>
            <line num="1279" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="1282" count="0" type="method"/>
            <line num="1284" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVarianceAsRandomVariableAAD() : RandomVariable" num="1287" count="0" type="method"/>
            <line num="1289" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVarianceAsRandomVariableAAD() : RandomVariable" num="1296" count="0" type="method"/>
            <line num="1298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviationAsRandomVariableAAD() : RandomVariable" num="1305" count="0" type="method"/>
            <line num="1307" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardErrorAsRandomVariableAAD() : RandomVariable" num="1314" count="0" type="method"/>
            <line num="1316" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinAsRandomVariableAAD() : RandomVariable" num="1323" count="0" type="method"/>
            <line num="1325" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxAsRandomVariableAAD() : RandomVariable" num="1332" count="0" type="method"/>
            <line num="1334" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="1341" count="40" type="method"/>
            <line num="1343" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneIndependent() : RandomVariableDifferentiable" num="1346" count="1976" type="method"/>
            <line num="1348" count="1976" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/RandomVariableDifferentiableAADFactory.java" name="RandomVariableDifferentiableAADFactory.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="12" loc="131" coveredmethods="10" methods="12" elements="28" classes="2" ncloc="69" statements="16" conditionals="0" coveredstatements="14"/>
            <class name="RandomVariableDifferentiableAADFactory">
               <metrics coveredelements="24" coveredconditionals="0" complexity="12" coveredmethods="10" methods="12" elements="28" statements="16" conditionals="0" coveredstatements="14"/>
            </class>
            <class name="RandomVariableDifferentiableAADFactory.DiracDeltaApproximationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADFactory(RandomVariableFactory,Map&lt;String, Object&gt;)" num="60" count="2081" type="method"/>
            <line num="61" count="2081" type="stmt"/>
            <line num="67" count="2081" type="stmt"/>
            <line num="68" count="2081" type="stmt"/>
            <line num="69" count="2081" type="stmt"/>
            <line num="71" count="2081" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADFactory(Map&lt;String, Object&gt;)" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADFactory(RandomVariableFactory)" num="84" count="2043" type="method"/>
            <line num="85" count="2043" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADFactory()" num="88" count="2009" type="method"/>
            <line num="89" count="2009" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double) : RandomVariableDifferentiable" num="92" count="783002" type="method"/>
            <line num="94" count="783006" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double[]) : RandomVariableDifferentiable" num="97" count="17885" type="method"/>
            <line num="99" count="17885" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiracDeltaApproximationMethod() : DiracDeltaApproximationMethod" num="102" count="728" type="method"/>
            <line num="103" count="728" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiracDeltaApproximationWidthPerStdDev() : double" num="106" count="242" type="method"/>
            <line num="107" count="242" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiracDeltaApproximationDensityRegressionWidthPerStdDev() : double" num="110" count="2" type="method"/>
            <line num="111" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBarrierDiracWidth() : double" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isGradientRetainsLeafNodesOnly() : boolean" num="119" count="94445704" type="method"/>
            <line num="120" count="94445704" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="123" count="27" type="method"/>
            <line num="125" count="27" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.randomnumbers">
         <metrics coveredelements="56" complexity="34" loc="426" methods="27" classes="8" statements="69" coveredconditionals="9" coveredmethods="11" elements="110" ncloc="205" files="8" conditionals="14" coveredstatements="36"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/randomnumbers/AcceptanceRejectionRandomNumberGenerator.java" name="AcceptanceRejectionRandomNumberGenerator.java">
            <metrics coveredelements="18" coveredconditionals="2" complexity="4" loc="61" coveredmethods="2" methods="3" elements="20" classes="1" ncloc="39" statements="15" conditionals="2" coveredstatements="14"/>
            <class name="AcceptanceRejectionRandomNumberGenerator">
               <metrics coveredelements="18" coveredconditionals="2" complexity="4" coveredmethods="2" methods="3" elements="20" statements="15" conditionals="2" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="AcceptanceRejectionRandomNumberGenerator(RandomNumberGenerator,DoubleUnaryOperator,DoubleUnaryOperator,DoubleUnaryOperator,double)" num="30" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="getNext() : double[]" num="44" count="1000000" type="method"/>
            <line num="46" count="1000000" type="stmt"/>
            <line num="47" count="1000000" type="stmt"/>
            <line num="48" count="1000000" type="stmt"/>
            <line falsecount="1000000" truecount="1315530" num="48" type="cond"/>
            <line num="49" count="1315530" type="stmt"/>
            <line num="50" count="1315530" type="stmt"/>
            <line num="51" count="1315530" type="stmt"/>
            <line num="52" count="1315530" type="stmt"/>
            <line num="54" count="1000000" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDimension() : int" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/randomnumbers/HaltonSequence.java" name="HaltonSequence.java">
            <metrics coveredelements="29" coveredconditionals="7" complexity="10" loc="83" coveredmethods="5" methods="6" elements="33" classes="1" ncloc="44" statements="19" conditionals="8" coveredstatements="17"/>
            <class name="HaltonSequence">
               <metrics coveredelements="29" coveredconditionals="7" complexity="10" coveredmethods="5" methods="6" elements="33" statements="19" conditionals="8" coveredstatements="17"/>
            </class>
            <line complexity="3" visibility="public" signature="HaltonSequence(int[])" num="31" count="2" type="method"/>
            <line num="32" count="2" type="stmt"/>
            <line falsecount="2" truecount="3" num="32" type="cond"/>
            <line num="33" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="33" type="cond"/>
            <line num="34" count="0" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNext() : double[]" num="41" count="2315530" type="method"/>
            <line num="43" count="2315530" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDimension() : int" num="46" count="1" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="getHaltonNumber(long) : double[]" num="51" count="2315530" type="method"/>
            <line num="52" count="2315530" type="stmt"/>
            <line num="53" count="2315530" type="stmt"/>
            <line falsecount="2315530" truecount="3631060" num="53" type="cond"/>
            <line num="54" count="3631060" type="stmt"/>
            <line num="56" count="2315530" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHaltonNumber(long,int) : double" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getHaltonNumberForGivenBase(long,int) : double" num="70" count="3631060" type="method"/>
            <line num="71" count="3631060" type="stmt"/>
            <line num="73" count="3631060" type="stmt"/>
            <line num="74" count="3631060" type="stmt"/>
            <line num="75" count="3631060" type="stmt"/>
            <line falsecount="3631060" truecount="60785187" num="75" type="cond"/>
            <line num="76" count="60785187" type="stmt"/>
            <line num="77" count="60785187" type="stmt"/>
            <line num="78" count="60785187" type="stmt"/>
            <line num="81" count="3631060" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/randomnumbers/MersenneTwister.java" name="MersenneTwister.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="4" loc="49" coveredmethods="3" methods="4" elements="9" classes="1" ncloc="22" statements="5" conditionals="0" coveredstatements="4"/>
            <class name="MersenneTwister">
               <metrics coveredelements="7" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="MersenneTwister(long)" num="25" count="695" type="method"/>
            <line num="26" count="695" type="stmt"/>
            <line complexity="1" visibility="public" signature="MersenneTwister()" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextDouble() : double" num="38" count="724006000" type="method"/>
            <line num="40" count="724006000" type="stmt"/>
            <line num="41" count="724006000" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextDoubleFast() : double" num="45" count="2147483647" type="method"/>
            <line num="47" count="2147483647" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/randomnumbers/RandomNumberGenerator.java" name="RandomNumberGenerator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="29" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RandomNumberGenerator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/randomnumbers/RandomNumberGenerator1D.java" name="RandomNumberGenerator1D.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="4" loc="51" coveredmethods="1" methods="4" elements="8" classes="1" ncloc="21" statements="4" conditionals="0" coveredstatements="1"/>
            <class name="RandomNumberGenerator1D">
               <metrics coveredelements="2" coveredconditionals="0" complexity="4" coveredmethods="1" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="package" signature="nextDoubleFast() : double" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getNext() : double[]" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getDimension() : int" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getAsDouble() : double" num="47" count="8000000" type="method"/>
            <line num="49" count="8000000" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/randomnumbers/SobolSequence.java" name="SobolSequence.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="50" coveredmethods="0" methods="3" elements="8" classes="1" ncloc="21" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="SobolSequence">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SobolSequence(int)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNext() : double[]" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDimension() : int" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/randomnumbers/SobolSequence1D.java" name="SobolSequence1D.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="31" coveredmethods="0" methods="2" elements="5" classes="1" ncloc="13" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="SobolSequence1D">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SobolSequence1D()" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextDouble() : double" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/randomnumbers/VanDerCorputSequence.java" name="VanDerCorputSequence.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="72" coveredmethods="0" methods="5" elements="27" classes="1" ncloc="39" statements="18" conditionals="4" coveredstatements="0"/>
            <class name="VanDerCorputSequence">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="27" statements="18" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="main(String[]) : void" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="21" type="cond"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VanDerCorputSequence(int,int)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VanDerCorputSequence(int)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextDouble() : double" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getVanDerCorputNumber(long,int) : double" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.curves">
         <metrics coveredelements="503" complexity="354" loc="3656" methods="220" classes="29" statements="732" coveredconditionals="82" coveredmethods="96" elements="1166" ncloc="1805" files="21" conditionals="214" coveredstatements="325"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/AbstractCurve.java" name="AbstractCurve.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="9" loc="85" coveredmethods="6" methods="8" elements="23" classes="1" ncloc="44" statements="13" conditionals="2" coveredstatements="8"/>
            <class name="AbstractCurve">
               <metrics coveredelements="14" coveredconditionals="0" complexity="9" coveredmethods="6" methods="8" elements="23" statements="13" conditionals="2" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractCurve(String,LocalDate)" num="29" count="17676655" type="method"/>
            <line num="30" count="17675658" type="stmt"/>
            <line num="31" count="17677110" type="stmt"/>
            <line num="32" count="17677319" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="38" count="10853383" type="method"/>
            <line num="40" count="10853763" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="43" count="1706773525" type="method"/>
            <line num="45" count="1709104777" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="51" count="447365" type="method"/>
            <line num="53" count="447373" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValues(double[]) : double[]" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : AbstractCurve" num="71" count="32507" type="method"/>
            <line num="73" count="32511" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : Curve" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="81" count="52" type="method"/>
            <line num="83" count="52" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/AbstractForwardCurve.java" name="AbstractForwardCurve.java">
            <metrics coveredelements="41" coveredconditionals="4" complexity="13" loc="161" coveredmethods="9" methods="10" elements="48" classes="1" ncloc="81" statements="32" conditionals="6" coveredstatements="28"/>
            <class name="AbstractForwardCurve">
               <metrics coveredelements="41" coveredconditionals="4" complexity="13" coveredmethods="9" methods="10" elements="48" statements="32" conditionals="6" coveredstatements="28"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractForwardCurve(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,String)" num="51" count="62095" type="method"/>
            <line num="56" count="62095" type="stmt"/>
            <line num="57" count="62095" type="stmt"/>
            <line num="58" count="62100" type="stmt"/>
            <line num="59" count="62100" type="stmt"/>
            <line num="61" count="62099" type="stmt"/>
            <line num="63" count="62100" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractForwardCurve(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,String)" num="76" count="62025" type="method"/>
            <line num="77" count="62021" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractForwardCurve(String,LocalDate,double,String)" num="88" count="323" type="method"/>
            <line num="89" count="323" type="stmt"/>
            <line num="90" count="323" type="stmt"/>
            <line num="91" count="323" type="stmt"/>
            <line num="93" count="323" type="stmt"/>
            <line num="94" count="323" type="stmt"/>
            <line num="95" count="323" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="98" count="1274848" type="method"/>
            <line num="100" count="1274868" type="stmt"/>
            <line complexity="3" visibility="public" signature="getPaymentOffset(double) : double" num="103" count="2147483647" type="method"/>
            <line num="105" count="2147483647" type="stmt"/>
            <line falsecount="2147483647" truecount="60575175" num="105" type="cond"/>
            <line num="106" count="60762773" type="stmt"/>
            <line num="109" count="2147483647" type="stmt"/>
            <line falsecount="14201" truecount="2147483647" num="109" type="cond"/>
            <line num="110" count="2147483647" type="stmt"/>
            <line num="118" count="14206" type="stmt"/>
            <line num="119" count="14210" type="stmt"/>
            <line num="120" count="14189" type="stmt"/>
            <line num="121" count="14135" type="stmt"/>
            <line num="122" count="14186" type="stmt"/>
            <line num="123" count="14219" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwards(AnalyticModel,double[]) : double[]" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="145" count="16" type="method"/>
            <line num="147" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentOffsetCode() : String" num="150" count="2147483647" type="method"/>
            <line num="151" count="2147483647" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentBusinessdayCalendar() : BusinessdayCalendar" num="154" count="14192" type="method"/>
            <line num="155" count="14205" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentDateRollConvention() : BusinessdayCalendar.DateRollConvention" num="158" count="14203" type="method"/>
            <line num="159" count="14217" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/Curve.java" name="Curve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="81" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Curve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/CurveBuilder.java" name="CurveBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="42" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CurveBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/CurveFactory.java" name="CurveFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="24" loc="178" coveredmethods="0" methods="2" elements="106" classes="1" ncloc="112" statements="74" conditionals="30" coveredstatements="0"/>
            <class name="CurveFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="2" elements="106" statements="74" conditionals="30" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="CurveFactory()" num="32" count="0" type="method"/>
            <line complexity="23" visibility="public" signature="createIndexCurveWithSeasonality(String,LocalDate,Map&lt;LocalDate, Double&gt;,Map&lt;String, Double&gt;,Integer,Map&lt;LocalDate, Double&gt;,String,String) : Curve" num="58" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/CurveFromProductOfCurves.java" name="CurveFromProductOfCurves.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="63" coveredmethods="0" methods="5" elements="13" classes="1" ncloc="31" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="CurveFromProductOfCurves">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="13" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CurveFromProductOfCurves(String,LocalDate,Curve)" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="55" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/CurveInterpolation.java" name="CurveInterpolation.java">
            <metrics coveredelements="177" coveredconditionals="29" complexity="70" loc="592" coveredmethods="29" methods="39" elements="236" classes="6" ncloc="344" statements="151" conditionals="46" coveredstatements="119"/>
            <class name="CurveInterpolation">
               <metrics coveredelements="144" coveredconditionals="28" complexity="53" coveredmethods="18" methods="24" elements="189" statements="123" conditionals="42" coveredstatements="98"/>
            </class>
            <class name="CurveInterpolation.InterpolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CurveInterpolation.ExtrapolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CurveInterpolation.InterpolationEntity">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CurveInterpolation.Point">
               <metrics coveredelements="13" coveredconditionals="1" complexity="9" coveredmethods="4" methods="7" elements="25" statements="14" conditionals="4" coveredstatements="8"/>
            </class>
            <class name="CurveInterpolation.Builder">
               <metrics coveredelements="20" coveredconditionals="0" complexity="8" coveredmethods="7" methods="8" elements="22" statements="14" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="package" signature="Point(double,double,boolean)" num="127" count="20269226" type="method"/>
            <line num="128" count="20267849" type="stmt"/>
            <line num="129" count="20269822" type="stmt"/>
            <line num="130" count="20270595" type="stmt"/>
            <line num="131" count="20271029" type="stmt"/>
            <line complexity="3" visibility="public" signature="compareTo(Point) : int" num="134" count="106129" type="method"/>
            <line num="137" count="106129" type="stmt"/>
            <line falsecount="0" truecount="106129" num="137" type="cond"/>
            <line num="138" count="106129" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime() : double" num="147" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : double" num="151" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isParameter() : boolean" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="159" count="724" type="method"/>
            <line num="161" count="724" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="164" count="860137" type="method"/>
            <line num="166" count="860447" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder()" num="182" count="6458740" type="method"/>
            <line num="183" count="6459022" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder(String,LocalDate)" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder(CurveInterpolation)" num="202" count="1162" type="method"/>
            <line num="203" count="1162" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Curve" num="209" count="6459991" type="method"/>
            <line num="211" count="6460062" type="stmt"/>
            <line num="212" count="6460190" type="stmt"/>
            <line num="213" count="6460267" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInterpolationMethod(InterpolationMethod) : CurveBuilder" num="222" count="2" type="method"/>
            <line num="223" count="2" type="stmt"/>
            <line num="224" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setExtrapolationMethod(ExtrapolationMethod) : CurveBuilder" num="233" count="2" type="method"/>
            <line num="234" count="2" type="stmt"/>
            <line num="235" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInterpolationEntity(InterpolationEntity) : CurveBuilder" num="244" count="2" type="method"/>
            <line num="245" count="2" type="stmt"/>
            <line num="246" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="addPoint(double,double,boolean) : CurveBuilder" num="252" count="6460162" type="method"/>
            <line num="254" count="6460340" type="stmt"/>
            <line num="255" count="6460154" type="stmt"/>
            <line complexity="4" visibility="public" signature="CurveInterpolation(String,LocalDate,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,double[],double[])" num="284" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="289" type="cond"/>
            <line num="290" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="295" type="cond"/>
            <line num="296" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="CurveInterpolation(String,LocalDate,InterpolationMethod,ExtrapolationMethod,InterpolationEntity)" num="309" count="62594" type="method"/>
            <line num="310" count="62595" type="stmt"/>
            <line num="311" count="62599" type="stmt"/>
            <line num="312" count="62597" type="stmt"/>
            <line num="313" count="62599" type="stmt"/>
            <line complexity="1" visibility="private" signature="CurveInterpolation(String,LocalDate)" num="322" count="6459245" type="method"/>
            <line num="323" count="6459101" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="326" count="96525143" type="method"/>
            <line num="329" count="96529530" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(AnalyticModel,double) : double" num="332" count="2147483647" type="method"/>
            <line num="335" count="2147483647" type="stmt"/>
            <line falsecount="6491162" truecount="2147483647" num="335" type="cond"/>
            <line num="336" count="2147483647" type="stmt"/>
            <line falsecount="2147483647" truecount="6491188" num="336" type="cond"/>
            <line num="337" count="6491161" type="stmt"/>
            <line num="338" count="6491014" type="stmt"/>
            <line num="340" count="2147483647" type="stmt"/>
            <line num="341" count="2147483647" type="stmt"/>
            <line falsecount="102321523" truecount="2147483647" num="341" type="cond"/>
            <line num="342" count="2147483647" type="stmt"/>
            <line num="345" count="102347315" type="stmt"/>
            <line num="346" count="102372794" type="stmt"/>
            <line num="347" count="102361371" type="stmt"/>
            <line complexity="3" visibility="private" signature="getInterpolationEntityValue(double) : double" num="350" count="102340995" type="method"/>
            <line num="352" count="102350302" type="stmt"/>
            <line num="354" count="102368219" type="stmt"/>
            <line falsecount="95884471" truecount="6491179" num="354" type="cond"/>
            <line num="355" count="6491211" type="stmt"/>
            <line num="356" count="6491132" type="stmt"/>
            <line num="357" count="6491167" type="stmt"/>
            <line falsecount="6491233" truecount="7317793" num="357" type="cond"/>
            <line num="358" count="7317910" type="stmt"/>
            <line num="359" count="7317911" type="stmt"/>
            <line num="361" count="6491276" type="stmt"/>
            <line num="369" count="102370236" type="stmt"/>
            <line complexity="10" visibility="protected" signature="addPoint(double,double,boolean) : void" num="380" count="6470714" type="method"/>
            <line num="381" count="6470746" type="stmt"/>
            <line num="382" count="6470770" type="stmt"/>
            <line falsecount="6470824" truecount="20" num="382" type="cond"/>
            <line num="383" count="20" type="stmt"/>
            <line falsecount="0" truecount="20" num="383" type="cond"/>
            <line num="384" count="20" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="390" count="6470718" type="stmt"/>
            <line num="392" count="6470444" type="stmt"/>
            <line num="393" count="6470481" type="stmt"/>
            <line falsecount="6470722" truecount="0" num="393" type="cond"/>
            <line num="394" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="394" type="cond"/>
            <line num="395" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="396" type="cond"/>
            <line num="397" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="404" count="6470703" type="stmt"/>
            <line num="405" count="6470624" type="stmt"/>
            <line num="407" count="6470643" type="stmt"/>
            <line falsecount="465" truecount="6470309" num="407" type="cond"/>
            <line num="409" count="6470317" type="stmt"/>
            <line num="410" count="6469944" type="stmt"/>
            <line falsecount="6470192" truecount="0" num="410" type="cond"/>
            <line num="411" count="0" type="stmt"/>
            <line num="413" count="6470283" type="stmt"/>
            <line num="416" count="6470764" type="stmt"/>
            <line num="417" count="6470862" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationMethod() : InterpolationMethod" num="426" count="0" type="method"/>
            <line num="427" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExtrapolationMethod() : ExtrapolationMethod" num="435" count="0" type="method"/>
            <line num="436" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationEntity() : InterpolationEntity" num="444" count="0" type="method"/>
            <line num="445" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPoints() : List&lt;Point&gt;" num="453" count="0" type="method"/>
            <line num="454" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTimes() : double[]" num="464" count="1015" type="method"/>
            <line num="465" count="1027" type="stmt"/>
            <line num="466" count="1035" type="stmt"/>
            <line falsecount="1047" truecount="6256" num="466" type="cond"/>
            <line num="467" count="6266" type="stmt"/>
            <line num="469" count="1045" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getTimeIndex(double) : int" num="472" count="6470607" type="method"/>
            <line num="473" count="6470730" type="stmt"/>
            <line num="474" count="6470698" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getParameterIndex(double) : int" num="477" count="6470256" type="method"/>
            <line num="478" count="6470263" type="stmt"/>
            <line num="479" count="6470151" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : double[]" num="482" count="67711" type="method"/>
            <line num="484" count="67718" type="stmt"/>
            <line num="485" count="67725" type="stmt"/>
            <line falsecount="67703" truecount="1790538" num="485" type="cond"/>
            <line num="486" count="1793046" type="stmt"/>
            <line num="488" count="67712" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="491" count="0" type="method"/>
            <line num="493" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="setParameterPrivate(double[]) : void" num="496" count="31348" type="method"/>
            <line num="497" count="31353" type="stmt"/>
            <line falsecount="31350" truecount="831485" num="497" type="cond"/>
            <line num="498" count="832346" type="stmt"/>
            <line num="500" count="31357" type="stmt"/>
            <line num="501" count="31355" type="stmt"/>
            <line complexity="5" visibility="private" signature="interpolationEntityFromValue(double,double) : double" num="504" count="7302920" type="method"/>
            <line num="505" count="7303028" type="stmt"/>
            <line num="506" count="472314" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line num="508" count="472326" type="stmt"/>
            <line num="509" count="6831156" type="stmt"/>
            <line num="510" count="6831261" type="stmt"/>
            <line num="511" count="443" type="stmt"/>
            <line num="512" count="443" type="stmt"/>
            <line falsecount="443" truecount="0" num="512" type="cond"/>
            <line num="513" count="0" type="stmt"/>
            <line num="515" count="443" type="stmt"/>
            <line complexity="4" visibility="private" signature="valueFromInterpolationEntity(double,double) : double" num="520" count="104164324" type="method"/>
            <line num="521" count="104176152" type="stmt"/>
            <line num="522" count="4024882" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line num="524" count="4025321" type="stmt"/>
            <line num="525" count="100158078" type="stmt"/>
            <line num="526" count="100159945" type="stmt"/>
            <line num="527" count="9434" type="stmt"/>
            <line num="528" count="9434" type="stmt"/>
            <line complexity="2" visibility="public" signature="clone() : CurveInterpolation" num="532" count="32505" type="method"/>
            <line num="534" count="32514" type="stmt"/>
            <line num="536" count="32499" type="stmt"/>
            <line num="537" count="32508" type="stmt"/>
            <line num="538" count="32513" type="stmt"/>
            <line num="539" count="32516" type="stmt"/>
            <line num="540" count="32514" type="stmt"/>
            <line num="541" count="860095" type="stmt"/>
            <line num="542" count="859508" type="stmt"/>
            <line num="543" count="860246" type="stmt"/>
            <line falsecount="11653" truecount="848646" num="543" type="cond"/>
            <line num="544" count="849006" type="stmt"/>
            <line num="548" count="32522" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneForParameter(double[]) : Curve" num="551" count="33754" type="method"/>
            <line num="553" count="33759" type="stmt"/>
            <line falsecount="31338" truecount="2404" num="553" type="cond"/>
            <line num="554" count="2405" type="stmt"/>
            <line num="556" count="31346" type="stmt"/>
            <line num="557" count="31355" type="stmt"/>
            <line num="559" count="31351" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="562" count="1162" type="method"/>
            <line num="564" count="1162" type="stmt"/>
            <line num="565" count="1162" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="568" count="48" type="method"/>
            <line num="573" count="48" type="stmt"/>
            <line num="574" count="48" type="stmt"/>
            <line num="575" count="48" type="stmt"/>
            <line num="576" count="372" type="stmt"/>
            <line num="577" count="372" type="stmt"/>
            <line num="578" count="372" type="stmt"/>
            <line num="581" count="48" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="587" count="36" type="method"/>
            <line num="588" count="36" type="stmt"/>
            <line num="590" count="36" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/DiscountCurve.java" name="DiscountCurve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="37" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DiscountCurve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/DiscountCurveFromForwardCurve.java" name="DiscountCurveFromForwardCurve.java">
            <metrics coveredelements="37" coveredconditionals="7" complexity="28" loc="214" coveredmethods="6" methods="12" elements="100" classes="1" ncloc="111" statements="56" conditionals="32" coveredstatements="24"/>
            <class name="DiscountCurveFromForwardCurve">
               <metrics coveredelements="37" coveredconditionals="7" complexity="28" coveredmethods="6" methods="12" elements="100" statements="56" conditionals="32" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="DiscountCurveFromForwardCurve(String,double)" num="53" count="17064" type="method"/>
            <line num="54" count="17063" type="stmt"/>
            <line num="56" count="17063" type="stmt"/>
            <line num="57" count="17062" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiscountCurveFromForwardCurve(ForwardCurve,double)" num="71" count="10690448" type="method"/>
            <line num="72" count="10689585" type="stmt"/>
            <line num="74" count="10690682" type="stmt"/>
            <line num="75" count="10690727" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiscountCurveFromForwardCurve(String)" num="88" count="17063" type="method"/>
            <line num="89" count="17063" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiscountCurveFromForwardCurve(ForwardCurve)" num="102" count="10690512" type="method"/>
            <line num="103" count="10689740" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(double) : double" num="106" count="1288" type="method"/>
            <line num="108" count="1288" type="stmt"/>
            <line complexity="6" visibility="public" signature="getDiscountFactor(AnalyticModel,double) : double" num="114" count="43885088" type="method"/>
            <line num="116" count="43894165" type="stmt"/>
            <line num="117" count="43895143" type="stmt"/>
            <line falsecount="416207" truecount="43478591" num="117" type="cond"/>
            <line num="118" count="43478693" type="stmt"/>
            <line num="120" count="416221" type="stmt"/>
            <line falsecount="416184" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="416196" type="stmt"/>
            <line num="126" count="43893474" type="stmt"/>
            <line falsecount="43894301" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="130" count="43894074" type="stmt"/>
            <line num="131" count="43893827" type="stmt"/>
            <line num="132" count="43894191" type="stmt"/>
            <line num="133" count="43895120" type="stmt"/>
            <line falsecount="43895067" truecount="1419068723" num="133" type="cond"/>
            <line num="134" count="1417854576" type="stmt"/>
            <line num="135" count="1404369383" type="stmt"/>
            <line falsecount="1418062063" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="1421594419" type="stmt"/>
            <line num="139" count="1416584469" type="stmt"/>
            <line num="142" count="43895103" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="158" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="hashCode() : int" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="equals(Object) : boolean" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/DiscountCurveFromProductOfCurves.java" name="DiscountCurveFromProductOfCurves.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="104" coveredmethods="0" methods="8" elements="31" classes="1" ncloc="56" statements="19" conditionals="4" coveredstatements="0"/>
            <class name="DiscountCurveFromProductOfCurves">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="8" elements="31" statements="19" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DiscountCurveFromProductOfCurves(String,LocalDate,String)" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiscountCurveFromProductOfCurves(String,LocalDate,DiscountCurve)" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(double) : double" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getDiscountFactor(AnalyticModel,double) : double" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="95" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/DiscountCurveInterpolation.java" name="DiscountCurveInterpolation.java">
            <metrics coveredelements="71" coveredconditionals="16" complexity="34" loc="454" coveredmethods="14" methods="21" elements="110" classes="1" ncloc="168" statements="63" conditionals="26" coveredstatements="41"/>
            <class name="DiscountCurveInterpolation">
               <metrics coveredelements="71" coveredconditionals="16" complexity="34" coveredmethods="14" methods="21" elements="110" statements="63" conditionals="26" coveredstatements="41"/>
            </class>
            <line complexity="1" visibility="private" signature="DiscountCurveInterpolation(String)" num="42" count="79" type="method"/>
            <line num="43" count="79" type="stmt"/>
            <line complexity="1" visibility="private" signature="DiscountCurveInterpolation(String,InterpolationMethod,ExtrapolationMethod,InterpolationEntity)" num="54" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="DiscountCurveInterpolation(String,LocalDate,InterpolationMethod,ExtrapolationMethod,InterpolationEntity)" num="70" count="94" type="method"/>
            <line num="73" count="94" type="stmt"/>
            <line complexity="4" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,LocalDate,double[],double[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="89" count="94" type="method"/>
            <line num="94" count="94" type="stmt"/>
            <line falsecount="94" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="94" type="stmt"/>
            <line falsecount="94" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="102" count="94" type="stmt"/>
            <line num="104" count="94" type="stmt"/>
            <line falsecount="94" truecount="450" num="104" type="cond"/>
            <line num="105" count="450" type="stmt"/>
            <line num="108" count="94" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,double[],double[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="123" count="20" type="method"/>
            <line num="129" count="20" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,double[],double[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="143" count="20" type="method"/>
            <line num="148" count="20" type="stmt"/>
            <line num="149" count="20" type="stmt"/>
            <line falsecount="20" truecount="106" num="149" type="cond"/>
            <line num="150" count="106" type="stmt"/>
            <line num="153" count="20" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,double[],double[]) : DiscountCurveInterpolation" num="164" count="77" type="method"/>
            <line num="165" count="77" type="stmt"/>
            <line num="167" count="77" type="stmt"/>
            <line falsecount="77" truecount="365" num="167" type="cond"/>
            <line num="168" count="365" type="stmt"/>
            <line num="171" count="77" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromZeroRates(String,LocalDate,double[],double[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="191" count="18" type="method"/>
            <line num="196" count="18" type="stmt"/>
            <line num="198" count="18" type="stmt"/>
            <line falsecount="18" truecount="36" num="198" type="cond"/>
            <line num="199" count="36" type="stmt"/>
            <line num="202" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDiscountCurveFromZeroRates(String,Date,double[],double[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="222" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDiscountCurveFromZeroRates(String,double[],double[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="247" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromZeroRates(String,LocalDate,double[],double[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="272" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromZeroRates(String,double[],double[]) : DiscountCurveInterpolation" num="300" count="57" type="method"/>
            <line num="301" count="57" type="stmt"/>
            <line num="303" count="57" type="stmt"/>
            <line falsecount="57" truecount="285" num="303" type="cond"/>
            <line num="304" count="285" type="stmt"/>
            <line num="307" count="57" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromAnnualizedZeroRates(String,LocalDate,double[],double[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="327" count="0" type="method"/>
            <line num="332" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="334" type="cond"/>
            <line num="335" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromAnnualizedZeroRates(String,LocalDate,double[],double[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="357" count="30" type="method"/>
            <line num="362" count="30" type="stmt"/>
            <line num="363" count="30" type="stmt"/>
            <line num="365" count="30" type="stmt"/>
            <line falsecount="30" truecount="30" num="365" type="cond"/>
            <line num="366" count="30" type="stmt"/>
            <line num="367" count="30" type="stmt"/>
            <line num="370" count="30" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountFactorsFromForwardRates(String,TimeDiscretization,double[]) : DiscountCurve" num="382" count="2" type="method"/>
            <line num="383" count="2" type="stmt"/>
            <line num="385" count="2" type="stmt"/>
            <line num="386" count="2" type="stmt"/>
            <line falsecount="2" truecount="32" num="386" type="cond"/>
            <line num="387" count="32" type="stmt"/>
            <line num="388" count="32" type="stmt"/>
            <line num="391" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(double) : double" num="397" count="13647" type="method"/>
            <line num="400" count="13647" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(AnalyticModel,double) : double" num="406" count="2147483647" type="method"/>
            <line num="409" count="2147483647" type="stmt"/>
            <line complexity="2" visibility="public" signature="getZeroRate(double) : double" num="420" count="0" type="method"/>
            <line num="422" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="422" type="cond"/>
            <line num="423" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getZeroRates(double[]) : double[]" num="435" count="0" type="method"/>
            <line num="437" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="439" type="cond"/>
            <line num="440" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="addDiscountFactor(double,double,boolean) : void" num="446" count="847" type="method"/>
            <line num="447" count="847" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="450" count="32" type="method"/>
            <line num="452" count="32" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/DiscountCurveNelsonSiegelSvensson.java" name="DiscountCurveNelsonSiegelSvensson.java">
            <metrics coveredelements="36" coveredconditionals="8" complexity="23" loc="178" coveredmethods="7" methods="15" elements="65" classes="1" ncloc="95" statements="34" conditionals="16" coveredstatements="21"/>
            <class name="DiscountCurveNelsonSiegelSvensson">
               <metrics coveredelements="36" coveredconditionals="8" complexity="23" coveredmethods="7" methods="15" elements="65" statements="34" conditionals="16" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="public" signature="DiscountCurveNelsonSiegelSvensson(String,LocalDate,double[],double)" num="50" count="490" type="method"/>
            <line num="51" count="490" type="stmt"/>
            <line num="52" count="490" type="stmt"/>
            <line num="54" count="490" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(double) : double" num="57" count="1914702" type="method"/>
            <line num="60" count="1914750" type="stmt"/>
            <line complexity="7" visibility="public" signature="getDiscountFactor(AnalyticModel,double) : double" num="69" count="2072016539" type="method"/>
            <line num="73" count="2087960489" type="stmt"/>
            <line num="75" count="2091380122" type="stmt"/>
            <line num="76" count="2097728739" type="stmt"/>
            <line num="77" count="2104078514" type="stmt"/>
            <line num="78" count="2105108759" type="stmt"/>
            <line num="79" count="2104900489" type="stmt"/>
            <line num="80" count="2103004542" type="stmt"/>
            <line num="82" count="2100077323" type="stmt"/>
            <line falsecount="0" truecount="2099295043" num="82" type="cond"/>
            <line num="83" count="2087650078" type="stmt"/>
            <line falsecount="0" truecount="2093631326" num="83" type="cond"/>
            <line num="85" count="2085986444" type="stmt"/>
            <line falsecount="0" truecount="2095504454" num="85" type="cond"/>
            <line falsecount="74456876" truecount="2027254956" num="85" type="cond"/>
            <line num="86" count="2103866097" type="stmt"/>
            <line falsecount="0" truecount="2113188674" num="86" type="cond"/>
            <line falsecount="74498473" truecount="2051845836" num="86" type="cond"/>
            <line num="88" count="2130573627" type="stmt"/>
            <line num="90" count="2138087712" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getZeroRate(double) : double" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getZeroRates(double[]) : double[]" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Curve" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addPoint(double,double,boolean) : CurveBuilder" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="146" count="366" type="method"/>
            <line num="148" count="366" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="151" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeScaling() : double" num="158" count="647559402" type="method"/>
            <line num="159" count="648210728" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : DiscountCurveNelsonSiegelSvensson" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : DiscountCurveNelsonSiegelSvensson" num="167" count="354" type="method"/>
            <line num="169" count="354" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="172" count="4" type="method"/>
            <line num="174" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/DiscountCurveRenormalized.java" name="DiscountCurveRenormalized.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="103" coveredmethods="0" methods="13" elements="32" classes="1" ncloc="71" statements="19" conditionals="0" coveredstatements="0"/>
            <class name="DiscountCurveRenormalized">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="13" elements="32" statements="19" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DiscountCurveRenormalized(String,LocalDate,LocalDate,String)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : Curve" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(double) : double" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(AnalyticModel,double) : double" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : DiscountCurveRenormalized" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/ForwardCurve.java" name="ForwardCurve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="49" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ForwardCurve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/ForwardCurveFromDiscountCurve.java" name="ForwardCurveFromDiscountCurve.java">
            <metrics coveredelements="28" coveredconditionals="4" complexity="17" loc="215" coveredmethods="7" methods="12" elements="49" classes="1" ncloc="88" statements="29" conditionals="8" coveredstatements="17"/>
            <class name="ForwardCurveFromDiscountCurve">
               <metrics coveredelements="28" coveredconditionals="4" complexity="17" coveredmethods="7" methods="12" elements="49" statements="29" conditionals="8" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,DayCountConvention,double)" num="58" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,double,double)" num="84" count="62026" type="method"/>
            <line num="85" count="62023" type="stmt"/>
            <line num="87" count="62025" type="stmt"/>
            <line num="88" count="62023" type="stmt"/>
            <line num="89" count="62025" type="stmt"/>
            <line num="90" count="62026" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,double,double)" num="106" count="62015" type="method"/>
            <line num="107" count="62014" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention)" num="121" count="62013" type="method"/>
            <line num="122" count="62011" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,LocalDate,String)" num="134" count="62012" type="method"/>
            <line num="135" count="62010" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,LocalDate,String)" num="152" count="20799" type="method"/>
            <line num="153" count="20799" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForward(AnalyticModel,double) : double" num="156" count="1382816167" type="method"/>
            <line num="159" count="1386726187" type="stmt"/>
            <line num="160" count="1373921644" type="stmt"/>
            <line complexity="6" visibility="public" signature="getForward(AnalyticModel,double,double) : double" num="166" count="1404497730" type="method"/>
            <line num="169" count="1407905992" type="stmt"/>
            <line falsecount="1407169613" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="1404948619" type="stmt"/>
            <line num="173" count="1393139211" type="stmt"/>
            <line falsecount="1405573956" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="1407695330" type="stmt"/>
            <line falsecount="1404485492" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="180" count="1405766321" type="stmt"/>
            <line falsecount="1404552552" truecount="0" num="180" type="cond"/>
            <line num="186" count="1406121972" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="200" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="205" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/ForwardCurveInterpolation.java" name="ForwardCurveInterpolation.java">
            <metrics coveredelements="71" coveredconditionals="12" complexity="36" loc="409" coveredmethods="12" methods="17" elements="130" classes="2" ncloc="183" statements="91" conditionals="22" coveredstatements="47"/>
            <class name="ForwardCurveInterpolation">
               <metrics coveredelements="71" coveredconditionals="12" complexity="36" coveredmethods="12" methods="17" elements="130" statements="91" conditionals="22" coveredstatements="47"/>
            </class>
            <class name="ForwardCurveInterpolation.InterpolationEntityForward">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="ForwardCurveInterpolation(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,InterpolationEntityForward,String)" num="64" count="76" type="method"/>
            <line num="68" count="76" type="stmt"/>
            <line num="70" count="76" type="stmt"/>
            <line num="72" count="76" type="stmt"/>
            <line falsecount="76" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveInterpolation(String,LocalDate,String,InterpolationEntityForward,String)" num="86" count="18" type="method"/>
            <line num="87" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveInterpolation(String,LocalDate,String,String)" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveInterpolation(String,double,InterpolationEntityForward,String)" num="110" count="323" type="method"/>
            <line num="112" count="323" type="stmt"/>
            <line num="113" count="323" type="stmt"/>
            <line complexity="2" visibility="public" signature="createForwardCurveFromForwards(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,InterpolationEntityForward,String,AnalyticModel,double[],double[]) : ForwardCurveInterpolation" num="134" count="30" type="method"/>
            <line num="139" count="30" type="stmt"/>
            <line num="142" count="30" type="stmt"/>
            <line falsecount="30" truecount="150" num="142" type="cond"/>
            <line num="143" count="150" type="stmt"/>
            <line num="146" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="createForwardCurveFromForwards(String,Date,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,InterpolationEntityForward,String,AnalyticModel,double[],double[]) : ForwardCurveInterpolation" num="167" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createForwardCurveFromForwards(String,LocalDate,String,String,String,AnalyticModel,double[],double[]) : ForwardCurveInterpolation" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createForwardCurveFromForwards(String,LocalDate,String,InterpolationEntityForward,String,AnalyticModel,double[],double[]) : ForwardCurveInterpolation" num="205" count="18" type="method"/>
            <line num="206" count="18" type="stmt"/>
            <line num="208" count="18" type="stmt"/>
            <line falsecount="18" truecount="90" num="208" type="cond"/>
            <line num="209" count="90" type="stmt"/>
            <line num="212" count="18" type="stmt"/>
            <line complexity="2" visibility="public" signature="createForwardCurveFromForwards(String,double[],double[],double) : ForwardCurveInterpolation" num="224" count="311" type="method"/>
            <line num="225" count="311" type="stmt"/>
            <line num="227" count="311" type="stmt"/>
            <line falsecount="311" truecount="9342" num="227" type="cond"/>
            <line num="228" count="9342" type="stmt"/>
            <line num="229" count="9342" type="stmt"/>
            <line num="230" count="9342" type="stmt"/>
            <line num="233" count="311" type="stmt"/>
            <line complexity="4" visibility="public" signature="createForwardCurveFromDiscountFactors(String,double[],double[],double) : ForwardCurveInterpolation" num="252" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="255" type="cond"/>
            <line num="256" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="259" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="265" type="cond"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createForwardCurveFromForwards(String,double[],double[],AnalyticModel,String,double) : ForwardCurveInterpolation" num="286" count="12" type="method"/>
            <line num="287" count="12" type="stmt"/>
            <line num="289" count="12" type="stmt"/>
            <line falsecount="12" truecount="60" num="289" type="cond"/>
            <line num="290" count="60" type="stmt"/>
            <line num="291" count="60" type="stmt"/>
            <line num="292" count="60" type="stmt"/>
            <line num="294" count="12" type="stmt"/>
            <line complexity="6" visibility="public" signature="getForward(AnalyticModel,double) : double" num="297" count="56172539" type="method"/>
            <line num="300" count="56261238" type="stmt"/>
            <line num="302" count="56177506" type="stmt"/>
            <line num="303" count="56016405" type="stmt"/>
            <line num="304" count="56229092" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="56301493" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="308" type="cond"/>
            <line num="309" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForward(AnalyticModel,double,double) : double" num="337" count="25831708" type="method"/>
            <line num="340" count="25881598" type="stmt"/>
            <line num="341" count="25810129" type="stmt"/>
            <line num="342" count="25926688" type="stmt"/>
            <line falsecount="20626665" truecount="5527074" num="342" type="cond"/>
            <line num="343" count="5529792" type="stmt"/>
            <line num="346" count="25538732" type="stmt"/>
            <line complexity="5" visibility="private" signature="addForward(AnalyticModel,double,double,boolean) : void" num="357" count="9642" type="method"/>
            <line num="358" count="9642" type="stmt"/>
            <line num="359" count="9642" type="stmt"/>
            <line num="360" count="9642" type="stmt"/>
            <line num="361" count="9642" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="9642" type="stmt"/>
            <line num="364" count="9642" type="stmt"/>
            <line num="365" count="9642" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="385" count="9642" type="stmt"/>
            <line complexity="2" visibility="protected" signature="addPoint(double,double,boolean) : void" num="388" count="658" type="method"/>
            <line num="390" count="658" type="stmt"/>
            <line falsecount="658" truecount="0" num="390" type="cond"/>
            <line num="391" count="0" type="stmt"/>
            <line num="393" count="658" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationEntityForward() : InterpolationEntityForward" num="401" count="0" type="method"/>
            <line num="402" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="405" count="16" type="method"/>
            <line num="407" count="16" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/ForwardCurveNelsonSiegelSvensson.java" name="ForwardCurveNelsonSiegelSvensson.java">
            <metrics coveredelements="28" coveredconditionals="2" complexity="18" loc="173" coveredmethods="6" methods="16" elements="53" classes="1" ncloc="97" statements="33" conditionals="4" coveredstatements="20"/>
            <class name="ForwardCurveNelsonSiegelSvensson">
               <metrics coveredelements="28" coveredconditionals="2" complexity="18" coveredmethods="6" methods="16" elements="53" statements="33" conditionals="4" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardCurveNelsonSiegelSvensson(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,DayCountConvention,double[],double,double)" num="53" count="66" type="method"/>
            <line num="54" count="66" type="stmt"/>
            <line num="55" count="66" type="stmt"/>
            <line num="56" count="66" type="stmt"/>
            <line num="57" count="66" type="stmt"/>
            <line num="58" count="66" type="stmt"/>
            <line num="59" count="66" type="stmt"/>
            <line num="61" count="66" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveNelsonSiegelSvensson(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,DayCountConvention,double[],double)" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForward(AnalyticModel,double) : double" num="78" count="1914730" type="method"/>
            <line num="80" count="1914763" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForward(AnalyticModel,double,double) : double" num="83" count="646389252" type="method"/>
            <line num="85" count="647308803" type="stmt"/>
            <line num="86" count="646753212" type="stmt"/>
            <line falsecount="2720" truecount="648037896" num="86" type="cond"/>
            <line num="87" count="648630146" type="stmt"/>
            <line num="88" count="648142869" type="stmt"/>
            <line num="89" count="647400504" type="stmt"/>
            <line num="92" count="647785300" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Curve" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addPoint(double,double,boolean) : CurveBuilder" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : ForwardCurveNelsonSiegelSvensson" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : ForwardCurveNelsonSiegelSvensson" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="125" count="180891776" type="method"/>
            <line num="127" count="180934473" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwards(AnalyticModel,double[]) : double[]" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentOffset(double) : double" num="162" count="188586015" type="method"/>
            <line num="164" count="188586866" type="stmt"/>
            <line num="165" count="188558616" type="stmt"/>
            <line num="166" count="188588927" type="stmt"/>
            <line num="167" count="188537590" type="stmt"/>
            <line complexity="1" visibility="private" signature="getDateFromModelTime(double) : LocalDate" num="170" count="1471497807" type="method"/>
            <line num="171" count="1472393904" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/ForwardCurveWithFixings.java" name="ForwardCurveWithFixings.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="89" coveredmethods="0" methods="8" elements="29" classes="1" ncloc="50" statements="15" conditionals="6" coveredstatements="0"/>
            <class name="ForwardCurveWithFixings">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="8" elements="29" statements="15" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardCurveWithFixings(ForwardCurve,ForwardCurve,double,double)" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getForward(AnalyticModel,double) : double" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="34" type="cond"/>
            <line num="35" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getForward(AnalyticModel,double,double) : double" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwards(AnalyticModel,double[]) : double[]" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentOffset(double) : double" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : Curve" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : ForwardCurveWithFixings" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/IndexCurveFromDiscountCurve.java" name="IndexCurveFromDiscountCurve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="55" coveredmethods="0" methods="5" elements="12" classes="1" ncloc="28" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="IndexCurveFromDiscountCurve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IndexCurveFromDiscountCurve(String,double,DiscountCurve)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/PiecewiseCurve.java" name="PiecewiseCurve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="162" coveredmethods="0" methods="17" elements="48" classes="2" ncloc="96" statements="29" conditionals="2" coveredstatements="0"/>
            <class name="PiecewiseCurve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="15" elements="40" statements="23" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="PiecewiseCurve.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Builder(PiecewiseCurve)" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Curve" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PiecewiseCurve(Curve,Curve,double,double)" num="63" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBaseCurve() : Curve" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixedPartCurve() : Curve" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixedPartStartTime() : double" num="110" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixedPartEndTime() : double" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(AnalyticModel,double) : double" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : Curve" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : PiecewiseCurve" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : Builder" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="154" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/SeasonalCurve.java" name="SeasonalCurve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="212" coveredmethods="0" methods="12" elements="81" classes="2" ncloc="116" statements="59" conditionals="10" coveredstatements="0"/>
            <class name="SeasonalCurve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="10" elements="73" statements="53" conditionals="10" coveredstatements="0"/>
            </class>
            <class name="SeasonalCurve.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Builder(SeasonalCurve)" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Curve" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="SeasonalCurve(String,LocalDate,Map&lt;LocalDate, Double&gt;,int)" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SeasonalCurve(String,LocalDate,Curve)" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : Curve" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : SeasonalCurve" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : Builder" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeSeasonalAdjustments(LocalDate,Map&lt;LocalDate, Double&gt;,int) : double[]" num="149" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="computeSeasonalAdjustments(double[],int,int) : double[]" num="176" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.products.components">
         <metrics coveredelements="304" complexity="177" loc="2256" methods="94" classes="17" statements="552" coveredconditionals="40" coveredmethods="37" elements="772" ncloc="1166" files="17" conditionals="126" coveredstatements="227"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/AbstractPeriod.java" name="AbstractPeriod.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="14" loc="170" coveredmethods="9" methods="14" elements="36" classes="1" ncloc="82" statements="22" conditionals="0" coveredstatements="17"/>
            <class name="AbstractPeriod">
               <metrics coveredelements="26" coveredconditionals="0" complexity="14" coveredmethods="9" methods="14" elements="36" statements="22" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractPeriod(LocalDateTime,double,double,double,double,Notional,AbstractProductComponent,double)" num="49" count="6862" type="method"/>
            <line num="52" count="6862" type="stmt"/>
            <line num="53" count="6862" type="stmt"/>
            <line num="54" count="6862" type="stmt"/>
            <line num="55" count="6862" type="stmt"/>
            <line num="56" count="6862" type="stmt"/>
            <line num="57" count="6862" type="stmt"/>
            <line num="58" count="6862" type="stmt"/>
            <line num="59" count="6862" type="stmt"/>
            <line num="60" count="6862" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractPeriod(double,double,double,double,Notional,AbstractProductComponent,double)" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractPeriod(double,double,double,double,Notional,AbstractProductComponent)" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="105" count="79202" type="method"/>
            <line num="106" count="80197" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStart() : double" num="112" count="2760" type="method"/>
            <line num="113" count="2760" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodEnd() : double" num="119" count="2879" type="method"/>
            <line num="120" count="2879" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixingDate() : double" num="126" count="32019" type="method"/>
            <line num="127" count="32018" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentDate() : double" num="133" count="102882" type="method"/>
            <line num="134" count="103371" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotional() : Notional" num="140" count="31871" type="method"/>
            <line num="141" count="32305" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : AbstractProductComponent" num="147" count="32017" type="method"/>
            <line num="148" count="32019" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountFraction() : double" num="154" count="32018" type="method"/>
            <line num="155" count="32018" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/AbstractProductComponent.java" name="AbstractProductComponent.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="5" loc="79" coveredmethods="4" methods="5" elements="15" classes="1" ncloc="45" statements="10" conditionals="0" coveredstatements="6"/>
            <class name="AbstractProductComponent">
               <metrics coveredelements="10" coveredconditionals="0" complexity="5" coveredmethods="4" methods="5" elements="15" statements="10" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="newThread(Runnable) : Thread" num="45" count="120" type="method"/>
            <line num="47" count="120" type="stmt"/>
            <line num="48" count="120" type="stmt"/>
            <line num="49" count="120" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractProductComponent(String)" num="53" count="12001" type="method"/>
            <line num="54" count="12001" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractProductComponent()" num="57" count="7812" type="method"/>
            <line num="58" count="7812" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues(double,LIBORModelMonteCarloSimulationModel) : Map&lt;String, Object&gt;" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getExecutor() : ThreadPoolExecutor" num="76" count="72980" type="method"/>
            <line num="77" count="72983" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/AccrualAccount.java" name="AccrualAccount.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="75" coveredmethods="0" methods="3" elements="20" classes="1" ncloc="36" statements="13" conditionals="4" coveredstatements="0"/>
            <class name="AccrualAccount">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="20" statements="13" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AccrualAccount(String,AnalyticModelIndex,AbstractIndex,double)" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/AccruingNotional.java" name="AccruingNotional.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="61" coveredmethods="0" methods="4" elements="16" classes="1" ncloc="33" statements="10" conditionals="2" coveredstatements="0"/>
            <class name="AccruingNotional">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="4" elements="16" statements="10" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AccruingNotional(Notional,AbstractPeriod)" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getNotionalAtPeriodStart(AbstractPeriod,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotionalAtPeriodEnd(AbstractPeriod,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/Cashflow.java" name="Cashflow.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="99" coveredmethods="0" methods="5" elements="28" classes="1" ncloc="46" statements="17" conditionals="6" coveredstatements="0"/>
            <class name="Cashflow">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="5" elements="28" statements="17" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Cashflow(String,double,double,boolean)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Cashflow(double,double,boolean)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="67" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/Choice.java" name="Choice.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="229" coveredmethods="0" methods="6" elements="99" classes="1" ncloc="141" statements="79" conditionals="14" coveredstatements="0"/>
            <class name="Choice">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="6" elements="99" statements="79" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Choice(double,TermStructureMonteCarloProduct,TermStructureMonteCarloProduct)" num="45" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="84" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : RandomVariable" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : RandomVariable" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getRegressionBasisFunctions(double,LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="199" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/ExpectedTailLoss.java" name="ExpectedTailLoss.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="176" coveredmethods="0" methods="4" elements="71" classes="1" ncloc="91" statements="57" conditionals="10" coveredstatements="0"/>
            <class name="ExpectedTailLoss">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="4" elements="71" statements="57" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ExpectedTailLoss(double,double,TermStructureMonteCarloProduct)" num="44" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="72" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getRegressionBasisFunctions(double,LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/ExposureEstimator.java" name="ExposureEstimator.java">
            <metrics coveredelements="78" coveredconditionals="12" complexity="14" loc="200" coveredmethods="3" methods="5" elements="88" classes="1" ncloc="102" statements="67" conditionals="16" coveredstatements="63"/>
            <class name="ExposureEstimator">
               <metrics coveredelements="78" coveredconditionals="12" complexity="14" coveredmethods="3" methods="5" elements="88" statements="67" conditionals="16" coveredstatements="63"/>
            </class>
            <line complexity="1" visibility="public" signature="ExposureEstimator(AbstractLIBORMonteCarloProduct)" num="48" count="4" type="method"/>
            <line num="49" count="4" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="77" count="482" type="method"/>
            <line num="80" count="482" type="stmt"/>
            <line num="81" count="482" type="stmt"/>
            <line num="83" count="482" type="stmt"/>
            <line num="85" count="482" type="stmt"/>
            <line falsecount="168" truecount="314" num="85" type="cond"/>
            <line num="86" count="314" type="stmt"/>
            <line num="87" count="314" type="stmt"/>
            <line num="92" count="314" type="stmt"/>
            <line num="93" count="314" type="stmt"/>
            <line num="94" count="314" type="stmt"/>
            <line num="95" count="314" type="stmt"/>
            <line num="96" count="314" type="stmt"/>
            <line num="98" count="314" type="stmt"/>
            <line num="100" count="314" type="stmt"/>
            <line num="102" count="314" type="stmt"/>
            <line num="103" count="314" type="stmt"/>
            <line num="104" count="314" type="stmt"/>
            <line falsecount="314" truecount="1570" num="104" type="cond"/>
            <line num="105" count="1570" type="stmt"/>
            <line num="109" count="314" type="stmt"/>
            <line num="112" count="314" type="stmt"/>
            <line num="116" count="482" type="stmt"/>
            <line complexity="7" visibility="private" signature="getRegressionBasisFunctions(double,LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="127" count="314" type="method"/>
            <line num="129" count="314" type="stmt"/>
            <line num="131" count="314" type="stmt"/>
            <line num="134" count="314" type="stmt"/>
            <line num="135" count="314" type="stmt"/>
            <line num="138" count="314" type="stmt"/>
            <line num="139" count="314" type="stmt"/>
            <line num="142" count="314" type="stmt"/>
            <line num="143" count="314" type="stmt"/>
            <line num="144" count="314" type="stmt"/>
            <line falsecount="156" truecount="158" num="144" type="cond"/>
            <line num="145" count="158" type="stmt"/>
            <line num="147" count="314" type="stmt"/>
            <line num="148" count="314" type="stmt"/>
            <line num="150" count="314" type="stmt"/>
            <line num="151" count="314" type="stmt"/>
            <line num="152" count="314" type="stmt"/>
            <line num="154" count="314" type="stmt"/>
            <line num="155" count="314" type="stmt"/>
            <line num="158" count="314" type="stmt"/>
            <line num="159" count="314" type="stmt"/>
            <line num="160" count="314" type="stmt"/>
            <line falsecount="156" truecount="158" num="160" type="cond"/>
            <line num="161" count="158" type="stmt"/>
            <line num="163" count="314" type="stmt"/>
            <line num="165" count="314" type="stmt"/>
            <line num="167" count="314" type="stmt"/>
            <line falsecount="0" truecount="314" num="167" type="cond"/>
            <line num="168" count="314" type="stmt"/>
            <line num="169" count="314" type="stmt"/>
            <line num="170" count="314" type="stmt"/>
            <line num="172" count="314" type="stmt"/>
            <line num="175" count="314" type="stmt"/>
            <line num="181" count="314" type="stmt"/>
            <line num="182" count="314" type="stmt"/>
            <line num="183" count="314" type="stmt"/>
            <line falsecount="156" truecount="158" num="183" type="cond"/>
            <line num="184" count="158" type="stmt"/>
            <line num="186" count="314" type="stmt"/>
            <line num="187" count="314" type="stmt"/>
            <line num="189" count="314" type="stmt"/>
            <line falsecount="0" truecount="314" num="189" type="cond"/>
            <line num="190" count="314" type="stmt"/>
            <line num="191" count="314" type="stmt"/>
            <line num="192" count="314" type="stmt"/>
            <line num="194" count="314" type="stmt"/>
            <line num="198" count="314" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/IndexedValue.java" name="IndexedValue.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="169" coveredmethods="0" methods="5" elements="79" classes="1" ncloc="95" statements="64" conditionals="10" coveredstatements="0"/>
            <class name="IndexedValue">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="5" elements="79" statements="64" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IndexedValue(double,AbstractProductComponent,AbstractProductComponent)" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="73" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getRegressionBasisFunctions(double,LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/Notional.java" name="Notional.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Notional">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/NotionalFromComponent.java" name="NotionalFromComponent.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="61" coveredmethods="0" methods="4" elements="17" classes="1" ncloc="32" statements="11" conditionals="2" coveredstatements="0"/>
            <class name="NotionalFromComponent">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="4" elements="17" statements="11" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NotionalFromComponent(AbstractProductComponent)" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotionalAtPeriodEnd(AbstractPeriod,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getNotionalAtPeriodStart(AbstractPeriod,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/NotionalFromConstant.java" name="NotionalFromConstant.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="6" loc="64" coveredmethods="4" methods="6" elements="14" classes="1" ncloc="33" statements="8" conditionals="0" coveredstatements="6"/>
            <class name="NotionalFromConstant">
               <metrics coveredelements="10" coveredconditionals="0" complexity="6" coveredmethods="4" methods="6" elements="14" statements="8" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="NotionalFromConstant(double,String)" num="29" count="1835" type="method"/>
            <line num="30" count="1835" type="stmt"/>
            <line num="31" count="1835" type="stmt"/>
            <line num="32" count="1835" type="stmt"/>
            <line complexity="1" visibility="public" signature="NotionalFromConstant(double)" num="40" count="1835" type="method"/>
            <line num="41" count="1835" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotionalAtPeriodEnd(AbstractPeriod,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="49" count="1440" type="method"/>
            <line num="51" count="1440" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotionalAtPeriodStart(AbstractPeriod,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="54" count="30396" type="method"/>
            <line num="56" count="30768" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/Numeraire.java" name="Numeraire.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="3" loc="50" coveredmethods="2" methods="3" elements="6" classes="1" ncloc="19" statements="3" conditionals="0" coveredstatements="2"/>
            <class name="Numeraire">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="Numeraire()" num="25" count="2" type="method"/>
            <line num="26" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="44" count="4" type="method"/>
            <line num="47" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/Option.java" name="Option.java">
            <metrics coveredelements="100" coveredconditionals="15" complexity="30" loc="348" coveredmethods="6" methods="12" elements="154" classes="1" ncloc="185" statements="108" conditionals="34" coveredstatements="79"/>
            <class name="Option">
               <metrics coveredelements="100" coveredconditionals="15" complexity="30" coveredmethods="6" methods="12" elements="154" statements="108" conditionals="34" coveredstatements="79"/>
            </class>
            <line complexity="1" visibility="public" signature="Option(double,double,boolean,AbstractLIBORMonteCarloProduct,RegressionBasisFunctionsProvider)" num="71" count="62" type="method"/>
            <line num="72" count="62" type="stmt"/>
            <line num="73" count="62" type="stmt"/>
            <line num="74" count="62" type="stmt"/>
            <line num="75" count="62" type="stmt"/>
            <line num="76" count="62" type="stmt"/>
            <line num="77" count="62" type="stmt"/>
            <line num="78" count="62" type="stmt"/>
            <line complexity="1" visibility="public" signature="Option(double,boolean,TermStructureMonteCarloProduct,AbstractLIBORMonteCarloProduct,RegressionBasisFunctionsProvider)" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Option(double,boolean,TermStructureMonteCarloProduct,AbstractLIBORMonteCarloProduct)" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Option(double,double,boolean,AbstractLIBORMonteCarloProduct)" num="120" count="62" type="method"/>
            <line num="121" count="62" type="stmt"/>
            <line complexity="1" visibility="public" signature="Option(double,double,AbstractLIBORMonteCarloProduct)" num="131" count="62" type="method"/>
            <line num="132" count="62" type="stmt"/>
            <line complexity="1" visibility="public" signature="Option(double,AbstractLIBORMonteCarloProduct)" num="141" count="60" type="method"/>
            <line num="142" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="181" count="64" type="method"/>
            <line num="184" count="64" type="stmt"/>
            <line num="185" count="64" type="stmt"/>
            <line num="188" count="64" type="stmt"/>
            <line falsecount="64" truecount="0" num="188" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line num="192" count="64" type="stmt"/>
            <line num="193" count="64" type="stmt"/>
            <line num="194" count="64" type="stmt"/>
            <line falsecount="64" truecount="0" num="194" type="cond"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="64" type="stmt"/>
            <line num="200" count="64" type="stmt"/>
            <line falsecount="0" truecount="64" num="200" type="cond"/>
            <line num="202" count="64" type="stmt"/>
            <line falsecount="4" truecount="60" num="202" type="cond"/>
            <line num="203" count="60" type="stmt"/>
            <line num="204" count="60" type="stmt"/>
            <line num="209" count="60" type="stmt"/>
            <line num="210" count="60" type="stmt"/>
            <line num="211" count="60" type="stmt"/>
            <line num="212" count="60" type="stmt"/>
            <line num="213" count="60" type="stmt"/>
            <line num="215" count="60" type="stmt"/>
            <line num="217" count="60" type="stmt"/>
            <line num="219" count="60" type="stmt"/>
            <line falsecount="60" truecount="0" num="219" type="cond"/>
            <line num="220" count="60" type="stmt"/>
            <line num="221" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="221" type="cond"/>
            <line num="222" count="300" type="stmt"/>
            <line num="226" count="60" type="stmt"/>
            <line num="229" count="60" type="stmt"/>
            <line num="233" count="64" type="stmt"/>
            <line falsecount="64" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="64" type="stmt"/>
            <line num="240" count="64" type="stmt"/>
            <line falsecount="0" truecount="64" num="240" type="cond"/>
            <line num="241" count="64" type="stmt"/>
            <line num="242" count="64" type="stmt"/>
            <line num="243" count="64" type="stmt"/>
            <line num="247" count="64" type="stmt"/>
            <line complexity="2" visibility="public" signature="getBasisFunctions(double,MonteCarloSimulationModel) : RandomVariable[]" num="250" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="252" type="cond"/>
            <line num="253" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getBasisFunctions(double,LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="268" count="60" type="method"/>
            <line num="270" count="60" type="stmt"/>
            <line num="272" count="60" type="stmt"/>
            <line num="275" count="60" type="stmt"/>
            <line num="276" count="60" type="stmt"/>
            <line num="279" count="60" type="stmt"/>
            <line num="280" count="60" type="stmt"/>
            <line num="283" count="60" type="stmt"/>
            <line num="284" count="60" type="stmt"/>
            <line num="285" count="60" type="stmt"/>
            <line falsecount="60" truecount="0" num="285" type="cond"/>
            <line num="286" count="0" type="stmt"/>
            <line num="288" count="60" type="stmt"/>
            <line num="289" count="60" type="stmt"/>
            <line num="291" count="60" type="stmt"/>
            <line num="292" count="60" type="stmt"/>
            <line num="293" count="60" type="stmt"/>
            <line num="295" count="60" type="stmt"/>
            <line num="296" count="60" type="stmt"/>
            <line num="299" count="60" type="stmt"/>
            <line num="300" count="60" type="stmt"/>
            <line num="301" count="60" type="stmt"/>
            <line falsecount="60" truecount="0" num="301" type="cond"/>
            <line num="302" count="0" type="stmt"/>
            <line num="304" count="60" type="stmt"/>
            <line num="306" count="60" type="stmt"/>
            <line num="308" count="60" type="stmt"/>
            <line falsecount="0" truecount="60" num="308" type="cond"/>
            <line num="309" count="60" type="stmt"/>
            <line num="310" count="60" type="stmt"/>
            <line num="311" count="60" type="stmt"/>
            <line num="313" count="60" type="stmt"/>
            <line num="316" count="60" type="stmt"/>
            <line num="322" count="60" type="stmt"/>
            <line num="323" count="60" type="stmt"/>
            <line num="324" count="60" type="stmt"/>
            <line falsecount="60" truecount="0" num="324" type="cond"/>
            <line num="325" count="0" type="stmt"/>
            <line num="327" count="60" type="stmt"/>
            <line num="328" count="60" type="stmt"/>
            <line num="330" count="60" type="stmt"/>
            <line falsecount="0" truecount="60" num="330" type="cond"/>
            <line num="331" count="60" type="stmt"/>
            <line num="332" count="60" type="stmt"/>
            <line num="333" count="60" type="stmt"/>
            <line num="335" count="60" type="stmt"/>
            <line num="339" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="342" count="0" type="method"/>
            <line num="344" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/Period.java" name="Period.java">
            <metrics coveredelements="58" coveredconditionals="13" complexity="19" loc="214" coveredmethods="6" methods="7" elements="66" classes="1" ncloc="97" statements="43" conditionals="16" coveredstatements="39"/>
            <class name="Period">
               <metrics coveredelements="58" coveredconditionals="13" complexity="19" coveredmethods="6" methods="7" elements="66" statements="43" conditionals="16" coveredstatements="39"/>
            </class>
            <line complexity="1" visibility="public" signature="Period(LocalDateTime,double,double,double,double,Notional,AbstractProductComponent,double,boolean,boolean,boolean,boolean)" num="47" count="6862" type="method"/>
            <line num="50" count="6862" type="stmt"/>
            <line num="51" count="6862" type="stmt"/>
            <line num="52" count="6862" type="stmt"/>
            <line num="53" count="6862" type="stmt"/>
            <line num="54" count="6862" type="stmt"/>
            <line complexity="1" visibility="public" signature="Period(double,double,double,double,Notional,AbstractProductComponent,double,boolean,boolean,boolean,boolean)" num="72" count="2160" type="method"/>
            <line num="75" count="2160" type="stmt"/>
            <line complexity="1" visibility="public" signature="Period(double,double,double,double,Notional,AbstractProductComponent,double,boolean,boolean,boolean)" num="94" count="1560" type="method"/>
            <line num="97" count="1560" type="stmt"/>
            <line complexity="1" visibility="public" signature="Period(double,double,double,double,Notional,AbstractProductComponent,boolean,boolean,boolean)" num="115" count="600" type="method"/>
            <line num="118" count="600" type="stmt"/>
            <line complexity="13" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="131" count="70674" type="method"/>
            <line num="134" count="71499" type="stmt"/>
            <line num="135" count="71676" type="stmt"/>
            <line num="136" count="71966" type="stmt"/>
            <line falsecount="63873" truecount="8121" num="136" type="cond"/>
            <line num="137" count="8118" type="stmt"/>
            <line num="144" count="71639" type="stmt"/>
            <line falsecount="30708" truecount="40906" num="144" type="cond"/>
            <line num="145" count="40912" type="stmt"/>
            <line num="149" count="30848" type="stmt"/>
            <line num="150" count="30904" type="stmt"/>
            <line num="151" count="31570" type="stmt"/>
            <line num="155" count="32020" type="stmt"/>
            <line num="158" count="32020" type="stmt"/>
            <line falsecount="0" truecount="32020" num="158" type="cond"/>
            <line num="159" count="32020" type="stmt"/>
            <line num="160" count="32020" type="stmt"/>
            <line num="161" count="32019" type="stmt"/>
            <line num="162" count="32020" type="stmt"/>
            <line falsecount="32020" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="172" count="32020" type="stmt"/>
            <line falsecount="30580" truecount="1440" num="172" type="cond"/>
            <line num="173" count="1440" type="stmt"/>
            <line num="175" count="1440" type="stmt"/>
            <line falsecount="120" truecount="1320" num="175" type="cond"/>
            <line num="176" count="1320" type="stmt"/>
            <line num="177" count="1320" type="stmt"/>
            <line num="180" count="1440" type="stmt"/>
            <line falsecount="0" truecount="1440" num="180" type="cond"/>
            <line num="181" count="1440" type="stmt"/>
            <line num="182" count="1440" type="stmt"/>
            <line num="186" count="32020" type="stmt"/>
            <line falsecount="31420" truecount="600" num="186" type="cond"/>
            <line num="187" count="600" type="stmt"/>
            <line num="190" count="32020" type="stmt"/>
            <line num="193" count="32017" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCoupon(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="196" count="32018" type="method"/>
            <line num="199" count="32019" type="stmt"/>
            <line num="202" count="32016" type="stmt"/>
            <line num="203" count="32018" type="stmt"/>
            <line num="205" count="32019" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="208" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/ProductCollection.java" name="ProductCollection.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="16" loc="149" coveredmethods="3" methods="8" elements="51" classes="1" ncloc="92" statements="33" conditionals="10" coveredstatements="15"/>
            <class name="ProductCollection">
               <metrics coveredelements="18" coveredconditionals="0" complexity="16" coveredmethods="3" methods="8" elements="51" statements="33" conditionals="10" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="ProductCollection(AbstractProductComponent)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ProductCollection(Collection&lt;AbstractProductComponent&gt;)" num="50" count="884" type="method"/>
            <line num="51" count="884" type="stmt"/>
            <line num="52" count="884" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProducts() : Collection&lt;AbstractProductComponent&gt;" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="97" count="3269" type="method"/>
            <line num="101" count="3269" type="stmt"/>
            <line num="102" count="3269" type="stmt"/>
            <line num="103" count="72984" type="stmt"/>
            <line num="104" count="72984" type="stmt"/>
            <line num="105" count="72984" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : RandomVariable" num="107" count="65732" type="method"/>
            <line num="109" count="66815" type="stmt"/>
            <line num="115" count="4755" type="stmt"/>
            <line num="118" count="72983" type="stmt"/>
            <line num="122" count="3270" type="stmt"/>
            <line num="123" count="3270" type="stmt"/>
            <line num="124" count="3270" type="stmt"/>
            <line num="125" count="72984" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="142" count="3270" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/Selector.java" name="Selector.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="64" coveredmethods="0" methods="3" elements="12" classes="1" ncloc="28" statements="7" conditionals="2" coveredstatements="0"/>
            <class name="Selector">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="12" statements="7" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Selector(String,TermStructureMonteCarloProduct)" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.templatemethoddesign.assetderivativevaluation">
         <metrics coveredelements="0" complexity="18" loc="197" methods="18" classes="1" statements="32" coveredconditionals="0" coveredmethods="0" elements="50" ncloc="115" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/templatemethoddesign/assetderivativevaluation/MonteCarloBlackScholesModel2.java" name="MonteCarloBlackScholesModel2.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="197" coveredmethods="0" methods="18" elements="50" classes="1" ncloc="115" statements="32" conditionals="0" coveredstatements="0"/>
            <class name="MonteCarloBlackScholesModel2">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="18" elements="50" statements="32" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloBlackScholesModel2(TimeDiscretization,int,double,double,double)" num="40" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloBlackScholesModel2(TimeDiscretization,int,double,double,double,int)" num="71" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfAssets() : int" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : RandomVariable[]" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(int,int,RandomVariable[],RandomVariable[]) : RandomVariable" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(int,int,int,RandomVariable[]) : RandomVariable" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(int,int) : RandomVariable" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(double,int) : RandomVariable" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(int) : RandomVariable" num="140" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="156" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="161" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="175" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double" num="184" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : AssetModelMonteCarloSimulationModel" num="188" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AssetModelMonteCarloSimulationModel" num="193" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.fouriermethod.products">
         <metrics coveredelements="51" complexity="17" loc="314" methods="15" classes="4" statements="42" coveredconditionals="0" coveredmethods="14" elements="57" ncloc="138" files="4" conditionals="0" coveredstatements="37"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/products/AbstractFourierTransformProduct.java" name="AbstractFourierTransformProduct.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="6" loc="99" coveredmethods="3" methods="4" elements="21" classes="1" ncloc="53" statements="17" conditionals="0" coveredstatements="12"/>
            <class name="AbstractFourierTransformProduct">
               <metrics coveredelements="15" coveredconditionals="0" complexity="6" coveredmethods="3" methods="4" elements="21" statements="17" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="2" visibility="public" signature="getValue(double,Model) : Double" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValues(double,Model) : Map&lt;String, Object&gt;" num="46" count="12" type="method"/>
            <line num="48" count="12" type="stmt"/>
            <line num="50" count="12" type="stmt"/>
            <line num="51" count="12" type="stmt"/>
            <line num="52" count="12" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="57" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(CharacteristicFunctionModel) : double" num="63" count="79" type="method"/>
            <line num="66" count="79" type="stmt"/>
            <line num="68" count="79" type="stmt"/>
            <line num="69" count="79" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="70" count="1441281" type="method"/>
            <line num="72" count="1449490" type="stmt"/>
            <line num="73" count="1470148" type="stmt"/>
            <line num="77" count="79" type="stmt"/>
            <line num="79" count="79" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/products/DigitalOption.java" name="DigitalOption.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="5" loc="80" coveredmethods="5" methods="5" elements="17" classes="1" ncloc="33" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="DigitalOption">
               <metrics coveredelements="17" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="17" statements="12" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="DigitalOption(double,double)" num="36" count="8" type="method"/>
            <line num="37" count="8" type="stmt"/>
            <line num="38" count="8" type="stmt"/>
            <line num="39" count="8" type="stmt"/>
            <line num="40" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Complex) : Complex" num="46" count="128726" type="method"/>
            <line num="48" count="130187" type="stmt"/>
            <line num="49" count="133011" type="stmt"/>
            <line num="50" count="132571" type="stmt"/>
            <line num="51" count="131304" type="stmt"/>
            <line num="53" count="132643" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="59" count="7" type="method"/>
            <line num="61" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationDomainImagLowerBound() : double" num="67" count="7" type="method"/>
            <line num="69" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationDomainImagUpperBound() : double" num="75" count="7" type="method"/>
            <line num="77" count="7" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/products/EuropeanOption.java" name="EuropeanOption.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="6" loc="73" coveredmethods="6" methods="6" elements="19" classes="1" ncloc="36" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="EuropeanOption">
               <metrics coveredelements="19" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="19" statements="13" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOption(String,double,double)" num="32" count="73" type="method"/>
            <line num="33" count="73" type="stmt"/>
            <line num="34" count="73" type="stmt"/>
            <line num="35" count="73" type="stmt"/>
            <line num="36" count="73" type="stmt"/>
            <line complexity="1" visibility="public" signature="EuropeanOption(double,double)" num="44" count="65" type="method"/>
            <line num="45" count="65" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Complex) : Complex" num="48" count="1299768" type="method"/>
            <line num="50" count="1331133" type="stmt"/>
            <line num="51" count="1346144" type="stmt"/>
            <line num="52" count="1325917" type="stmt"/>
            <line num="53" count="1308839" type="stmt"/>
            <line num="55" count="1322078" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="58" count="72" type="method"/>
            <line num="60" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationDomainImagLowerBound() : double" num="63" count="72" type="method"/>
            <line num="65" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationDomainImagUpperBound() : double" num="68" count="72" type="method"/>
            <line num="70" count="72" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/products/FourierTransformProduct.java" name="FourierTransformProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="62" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="16" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FourierTransformProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.swing">
         <metrics coveredelements="0" complexity="33" loc="199" methods="20" classes="1" statements="71" coveredconditionals="0" coveredmethods="0" elements="111" ncloc="146" files="1" conditionals="20" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/swing/JNumberField.java" name="JNumberField.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="33" loc="199" coveredmethods="0" methods="20" elements="111" classes="1" ncloc="146" statements="71" conditionals="20" coveredstatements="0"/>
            <class name="JNumberField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="33" coveredmethods="0" methods="20" elements="111" statements="71" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="JNumberField()" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="JNumberField(double,String,ActionListener)" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="JNumberField(double,DecimalFormat,ActionListener)" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="JNumberField(String)" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : Number" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(double) : void" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setFromat(String) : void" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setRange(double,double) : void" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setAdmissibleValues(double[]) : void" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setAdmissibleValues(TimeDiscretization) : void" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPreferedValueIncrement() : double" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPreferedValueIncrement(double) : void" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : void" num="107" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="addToAdmissibleValueIndex(int) : void" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoubleValue() : double" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntValue() : int" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="actionPerformed(ActionEvent) : void" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="parseField() : void" num="142" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="updateData() : void" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getAdmissibleValueIndex() : int" num="184" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model">
         <metrics coveredelements="89" complexity="59" loc="458" methods="27" classes="2" statements="106" coveredconditionals="12" coveredmethods="19" elements="161" ncloc="248" files="2" conditionals="28" coveredstatements="58"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/AnalyticModel.java" name="AnalyticModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="117" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="24" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AnalyticModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/AnalyticModelFromCurvesAndVols.java" name="AnalyticModelFromCurvesAndVols.java">
            <metrics coveredelements="89" coveredconditionals="12" complexity="59" loc="341" coveredmethods="19" methods="27" elements="161" classes="1" ncloc="224" statements="106" conditionals="28" coveredstatements="58"/>
            <class name="AnalyticModelFromCurvesAndVols">
               <metrics coveredelements="89" coveredconditionals="12" complexity="59" coveredmethods="19" methods="27" elements="161" statements="106" conditionals="28" coveredstatements="58"/>
            </class>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols()" num="45" count="181" type="method"/>
            <line num="46" count="181" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols(LocalDate)" num="54" count="12958288" type="method"/>
            <line num="55" count="12959086" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols(Curve[])" num="63" count="27713" type="method"/>
            <line num="64" count="27713" type="stmt"/>
            <line num="65" count="55433" type="stmt"/>
            <line num="67" count="27715" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols(Collection&lt;Curve&gt;)" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="AnalyticModelFromCurvesAndVols(LocalDate,Curve[])" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="AnalyticModelFromCurvesAndVols(LocalDate,Collection&lt;Curve&gt;)" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols(LocalDate,Map&lt;String, Curve&gt;,Map&lt;String, VolatilitySurface&gt;)" num="123" count="21803" type="method"/>
            <line num="124" count="21801" type="stmt"/>
            <line num="125" count="21804" type="stmt"/>
            <line num="126" count="21798" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurve(String) : Curve" num="129" count="1557011360" type="method"/>
            <line num="132" count="1563609121" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurves() : Map&lt;String, Curve&gt;" num="135" count="21799" type="method"/>
            <line num="138" count="21802" type="stmt"/>
            <line complexity="4" visibility="public" signature="addCurve(String,Curve) : AnalyticModel" num="141" count="36" type="method"/>
            <line num="143" count="36" type="stmt"/>
            <line num="145" count="36" type="stmt"/>
            <line falsecount="36" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="149" count="36" type="stmt"/>
            <line num="150" count="36" type="stmt"/>
            <line num="152" count="36" type="stmt"/>
            <line complexity="4" visibility="public" signature="addCurve(Curve) : AnalyticModel" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="addCurves(Curve) : AnalyticModel" num="168" count="1486" type="method"/>
            <line num="170" count="1486" type="stmt"/>
            <line num="172" count="1486" type="stmt"/>
            <line num="173" count="1522" type="stmt"/>
            <line num="175" count="1522" type="stmt"/>
            <line num="176" count="1522" type="stmt"/>
            <line falsecount="1522" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="181" count="1486" type="stmt"/>
            <line num="182" count="1486" type="stmt"/>
            <line num="184" count="1486" type="stmt"/>
            <line complexity="4" visibility="public" signature="addCurves(Set&lt;Curve&gt;) : AnalyticModel" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDiscountCurve(String) : DiscountCurve" num="206" count="1498536843" type="method"/>
            <line num="208" count="1502070383" type="stmt"/>
            <line num="209" count="1505838456" type="stmt"/>
            <line num="210" count="1487304573" type="stmt"/>
            <line falsecount="5586" truecount="1496440875" num="210" type="cond"/>
            <line num="211" count="1502440647" type="stmt"/>
            <line num="214" count="1504204417" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwardCurve(String) : ForwardCurve" num="217" count="55751426" type="method"/>
            <line num="219" count="55755657" type="stmt"/>
            <line num="220" count="55757511" type="stmt"/>
            <line num="221" count="55732686" type="stmt"/>
            <line falsecount="20913843" truecount="34872416" num="221" type="cond"/>
            <line num="222" count="34877845" type="stmt"/>
            <line num="225" count="55776982" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilitySurface(String) : VolatilitySurface" num="228" count="118060020" type="method"/>
            <line num="230" count="118068152" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilitySurfaces() : Map&lt;String, VolatilitySurface&gt;" num="233" count="21797" type="method"/>
            <line num="235" count="21801" type="stmt"/>
            <line complexity="4" visibility="public" signature="addVolatilitySurface(VolatilitySurface) : AnalyticModel" num="238" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="addVolatilitySurfaces(VolatilitySurface) : AnalyticModel" num="252" count="6458911" type="method"/>
            <line num="255" count="6459185" type="stmt"/>
            <line num="256" count="6459208" type="stmt"/>
            <line num="257" count="6459452" type="stmt"/>
            <line num="259" count="6459292" type="stmt"/>
            <line num="260" count="6459240" type="stmt"/>
            <line falsecount="6459517" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="264" count="6459565" type="stmt"/>
            <line complexity="4" visibility="public" signature="addVolatilitySurfaces(Set&lt;VolatilitySurface&gt;) : AnalyticModel" num="267" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="274" type="cond"/>
            <line num="275" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="setCurve(Curve) : void" num="281" count="34057" type="method"/>
            <line num="283" count="34062" type="stmt"/>
            <line complexity="1" visibility="private" signature="setVolatilitySurface(VolatilitySurface) : void" num="286" count="5244" type="method"/>
            <line num="288" count="5266" type="stmt"/>
            <line complexity="3" visibility="private" signature="set(Object) : void" num="291" count="39320" type="method"/>
            <line num="292" count="39327" type="stmt"/>
            <line falsecount="5259" truecount="34066" num="292" type="cond"/>
            <line num="293" count="34063" type="stmt"/>
            <line num="294" count="5267" type="stmt"/>
            <line falsecount="0" truecount="5265" num="294" type="cond"/>
            <line num="295" count="5261" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : AnalyticModelFromCurvesAndVols" num="301" count="12936444" type="method"/>
            <line num="304" count="12937043" type="stmt"/>
            <line num="305" count="12936504" type="stmt"/>
            <line num="306" count="12936236" type="stmt"/>
            <line num="307" count="12936311" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneForParameter(Map&lt;ParameterObject, double[]&gt;) : AnalyticModel" num="310" count="18138" type="method"/>
            <line num="314" count="18138" type="stmt"/>
            <line num="317" count="18146" type="stmt"/>
            <line falsecount="14" truecount="18128" num="317" type="cond"/>
            <line num="318" count="18133" type="stmt"/>
            <line num="319" count="39321" type="stmt"/>
            <line num="320" count="39333" type="stmt"/>
            <line num="324" count="18125" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="327" count="0" type="method"/>
            <line num="329" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="337" count="43569" type="method"/>
            <line num="338" count="43567" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling.products">
         <metrics coveredelements="0" complexity="0" loc="61" methods="0" classes="2" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="15" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/products/Swaption.java" name="Swaption.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="61" coveredmethods="0" methods="0" elements="0" classes="2" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Swaption">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Swaption.ValueUnit">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.fouriermethod.models">
         <metrics coveredelements="168" complexity="103" loc="1444" methods="91" classes="6" statements="231" coveredconditionals="16" coveredmethods="28" elements="346" ncloc="712" files="6" conditionals="24" coveredstatements="124"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/models/BatesModel.java" name="BatesModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="26" loc="485" coveredmethods="0" methods="22" elements="96" classes="1" ncloc="264" statements="66" conditionals="8" coveredstatements="0"/>
            <class name="BatesModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="22" elements="96" statements="66" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BatesModel(LocalDate,double,DiscountCurve,DiscountCurve,double[],double[],double[],double[],double[],double[],double,double)" num="108" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BatesModel(double,DiscountCurve,DiscountCurve,double[],double[],double[],double[],double[],double[],double,double)" num="155" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BatesModel(double,double,double,double[],double[],double[],double[],double[],double[],double,double)" num="186" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BatesModel(double,double,double,double,double,double,double,double,double,double,double)" num="232" count="0" type="method"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : CharacteristicFunction" num="260" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(Complex) : Complex" num="267" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="284" type="cond"/>
            <line num="285" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="351" type="cond"/>
            <line num="352" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForForward(double) : double" num="370" count="0" type="method"/>
            <line num="371" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="371" type="cond"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForDiscounting(double) : double" num="380" count="0" type="method"/>
            <line num="381" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="381" type="cond"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="387" count="0" type="method"/>
            <line num="388" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="393" count="0" type="method"/>
            <line num="394" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="400" count="0" type="method"/>
            <line num="401" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double[]" num="407" count="0" type="method"/>
            <line num="408" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountRate() : double" num="414" count="0" type="method"/>
            <line num="415" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAlpha() : double[]" num="421" count="0" type="method"/>
            <line num="422" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBeta() : double[]" num="428" count="0" type="method"/>
            <line num="429" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSigma() : double[]" num="435" count="0" type="method"/>
            <line num="436" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRho() : double[]" num="442" count="0" type="method"/>
            <line num="443" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambda() : double[]" num="449" count="0" type="method"/>
            <line num="450" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getK() : double" num="456" count="0" type="method"/>
            <line num="457" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDelta() : double" num="463" count="0" type="method"/>
            <line num="464" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="470" count="0" type="method"/>
            <line num="471" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="477" count="0" type="method"/>
            <line num="479" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/models/BlackScholesModel.java" name="BlackScholesModel.java">
            <metrics coveredelements="35" coveredconditionals="4" complexity="17" loc="188" coveredmethods="7" methods="15" elements="51" classes="1" ncloc="89" statements="32" conditionals="4" coveredstatements="24"/>
            <class name="BlackScholesModel">
               <metrics coveredelements="35" coveredconditionals="4" complexity="17" coveredmethods="7" methods="15" elements="51" statements="32" conditionals="4" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesModel(LocalDate,double,DiscountCurve,DiscountCurve,double)" num="47" count="4" type="method"/>
            <line num="49" count="4" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line num="52" count="4" type="stmt"/>
            <line num="53" count="4" type="stmt"/>
            <line num="54" count="4" type="stmt"/>
            <line num="55" count="4" type="stmt"/>
            <line num="56" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlackScholesModel(double,double,double,double)" num="67" count="5" type="method"/>
            <line num="68" count="5" type="stmt"/>
            <line num="69" count="5" type="stmt"/>
            <line num="70" count="5" type="stmt"/>
            <line num="71" count="5" type="stmt"/>
            <line num="72" count="5" type="stmt"/>
            <line num="73" count="5" type="stmt"/>
            <line num="74" count="5" type="stmt"/>
            <line num="75" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlackScholesModel(double,double,double)" num="85" count="5" type="method"/>
            <line num="86" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : CharacteristicFunction" num="89" count="9" type="method"/>
            <line num="91" count="9" type="stmt"/>
            <line num="92" count="9" type="stmt"/>
            <line num="94" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Complex) : Complex" num="95" count="146250" type="method"/>
            <line num="97" count="148474" type="stmt"/>
            <line num="98" count="153414" type="stmt"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForForward(double) : double" num="115" count="9" type="method"/>
            <line num="116" count="9" type="stmt"/>
            <line falsecount="4" truecount="5" num="116" type="cond"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForDiscounting(double) : double" num="125" count="9" type="method"/>
            <line num="126" count="9" type="stmt"/>
            <line falsecount="4" truecount="5" num="126" type="cond"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="139" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="146" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="153" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="160" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountRate() : double" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double" num="174" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/models/CharacteristicFunctionModel.java" name="CharacteristicFunctionModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="29" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CharacteristicFunctionModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/models/HestonModel.java" name="HestonModel.java">
            <metrics coveredelements="48" coveredconditionals="4" complexity="22" loc="298" coveredmethods="8" methods="20" elements="72" classes="1" ncloc="131" statements="48" conditionals="4" coveredstatements="36"/>
            <class name="HestonModel">
               <metrics coveredelements="48" coveredconditionals="4" complexity="22" coveredmethods="8" methods="20" elements="72" statements="48" conditionals="4" coveredstatements="36"/>
            </class>
            <line complexity="1" visibility="public" signature="HestonModel(LocalDate,double,DiscountCurve,DiscountCurve,double,double,double,double,double)" num="87" count="125" type="method"/>
            <line num="88" count="123" type="stmt"/>
            <line num="89" count="125" type="stmt"/>
            <line num="90" count="125" type="stmt"/>
            <line num="91" count="125" type="stmt"/>
            <line num="92" count="125" type="stmt"/>
            <line num="93" count="124" type="stmt"/>
            <line num="94" count="124" type="stmt"/>
            <line num="95" count="125" type="stmt"/>
            <line num="96" count="125" type="stmt"/>
            <line num="97" count="125" type="stmt"/>
            <line num="98" count="125" type="stmt"/>
            <line num="99" count="125" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModel(double,DiscountCurve,DiscountCurve,double,double,double,double,double)" num="114" count="125" type="method"/>
            <line num="115" count="125" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModel(double,double,double,double,double,double,double,double)" num="130" count="4" type="method"/>
            <line num="132" count="4" type="stmt"/>
            <line num="133" count="4" type="stmt"/>
            <line num="134" count="4" type="stmt"/>
            <line num="135" count="4" type="stmt"/>
            <line num="136" count="4" type="stmt"/>
            <line num="137" count="4" type="stmt"/>
            <line num="138" count="4" type="stmt"/>
            <line num="139" count="4" type="stmt"/>
            <line num="140" count="4" type="stmt"/>
            <line num="141" count="4" type="stmt"/>
            <line num="142" count="4" type="stmt"/>
            <line num="143" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModel(double,double,double,double,double,double,double)" num="146" count="4" type="method"/>
            <line num="148" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : CharacteristicFunction" num="151" count="259" type="method"/>
            <line num="154" count="261" type="stmt"/>
            <line num="155" count="261" type="stmt"/>
            <line num="157" count="262" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Complex) : Complex" num="158" count="1358445" type="method"/>
            <line num="161" count="1362697" type="stmt"/>
            <line num="163" count="1371724" type="stmt"/>
            <line num="170" count="1363941" type="stmt"/>
            <line num="179" count="1363532" type="stmt"/>
            <line num="184" count="1362292" type="stmt"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForForward(double) : double" num="195" count="259" type="method"/>
            <line num="196" count="259" type="stmt"/>
            <line falsecount="246" truecount="16" num="196" type="cond"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForDiscounting(double) : double" num="205" count="259" type="method"/>
            <line num="206" count="259" type="stmt"/>
            <line falsecount="246" truecount="16" num="206" type="cond"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="212" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="219" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="226" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="233" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="240" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountRate() : double" num="247" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double" num="254" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTheta() : double" num="261" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKappa() : double" num="268" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getXi() : double" num="275" count="0" type="method"/>
            <line num="276" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRho() : double" num="282" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="289" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/models/MertonModel.java" name="MertonModel.java">
            <metrics coveredelements="45" coveredconditionals="4" complexity="20" loc="247" coveredmethods="7" methods="18" elements="67" classes="1" ncloc="120" statements="45" conditionals="4" coveredstatements="34"/>
            <class name="MertonModel">
               <metrics coveredelements="45" coveredconditionals="4" complexity="20" coveredmethods="7" methods="18" elements="67" statements="45" conditionals="4" coveredstatements="34"/>
            </class>
            <line complexity="1" visibility="public" signature="MertonModel(LocalDate,double,DiscountCurve,DiscountCurve,double,double,double,double)" num="59" count="2" type="method"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(double,double,double,double,double,double,double)" num="87" count="2" type="method"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(double,double,double,double,double,double)" num="114" count="2" type="method"/>
            <line num="116" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : CharacteristicFunction" num="119" count="33" type="method"/>
            <line num="121" count="33" type="stmt"/>
            <line num="122" count="33" type="stmt"/>
            <line num="123" count="33" type="stmt"/>
            <line num="124" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Complex) : Complex" num="125" count="392083" type="method"/>
            <line num="127" count="385802" type="stmt"/>
            <line num="129" count="397725" type="stmt"/>
            <line num="132" count="388966" type="stmt"/>
            <line num="134" count="383343" type="stmt"/>
            <line num="136" count="394604" type="stmt"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForForward(double) : double" num="154" count="33" type="method"/>
            <line num="155" count="33" type="stmt"/>
            <line falsecount="2" truecount="31" num="155" type="cond"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForDiscounting(double) : double" num="164" count="33" type="method"/>
            <line num="165" count="33" type="stmt"/>
            <line falsecount="2" truecount="31" num="165" type="cond"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="171" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="178" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="185" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="199" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountRate() : double" num="206" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double" num="213" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpIntensity() : double" num="220" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpSizeMean() : double" num="227" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpSizeStdDev() : double" num="234" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="238" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/models/VarianceGammaModel.java" name="VarianceGammaModel.java">
            <metrics coveredelements="40" coveredconditionals="4" complexity="18" loc="197" coveredmethods="6" methods="16" elements="60" classes="1" ncloc="101" statements="40" conditionals="4" coveredstatements="30"/>
            <class name="VarianceGammaModel">
               <metrics coveredelements="40" coveredconditionals="4" complexity="18" coveredmethods="6" methods="16" elements="60" statements="40" conditionals="4" coveredstatements="30"/>
            </class>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(LocalDate,double,DiscountCurve,DiscountCurve,double,double,double)" num="47" count="132" type="method"/>
            <line num="49" count="130" type="stmt"/>
            <line num="50" count="132" type="stmt"/>
            <line num="51" count="132" type="stmt"/>
            <line num="52" count="131" type="stmt"/>
            <line num="53" count="132" type="stmt"/>
            <line num="54" count="132" type="stmt"/>
            <line num="55" count="132" type="stmt"/>
            <line num="56" count="132" type="stmt"/>
            <line num="57" count="132" type="stmt"/>
            <line num="58" count="132" type="stmt"/>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(double,double,double,double,double,double)" num="71" count="3" type="method"/>
            <line num="73" count="3" type="stmt"/>
            <line num="74" count="3" type="stmt"/>
            <line num="75" count="3" type="stmt"/>
            <line num="76" count="3" type="stmt"/>
            <line num="77" count="3" type="stmt"/>
            <line num="78" count="3" type="stmt"/>
            <line num="79" count="3" type="stmt"/>
            <line num="80" count="3" type="stmt"/>
            <line num="81" count="3" type="stmt"/>
            <line num="82" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : CharacteristicFunction" num="85" count="296" type="method"/>
            <line num="87" count="297" type="stmt"/>
            <line num="88" count="300" type="stmt"/>
            <line num="90" count="300" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Complex) : Complex" num="91" count="1556604" type="method"/>
            <line num="93" count="1568642" type="stmt"/>
            <line num="94" count="1584192" type="stmt"/>
            <line num="95" count="1583100" type="stmt"/>
            <line num="96" count="1579137" type="stmt"/>
            <line num="98" count="1590461" type="stmt"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForForward(double) : double" num="112" count="298" type="method"/>
            <line num="113" count="298" type="stmt"/>
            <line falsecount="262" truecount="38" num="113" type="cond"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForDiscounting(double) : double" num="122" count="298" type="method"/>
            <line num="123" count="298" type="stmt"/>
            <line falsecount="262" truecount="38" num="123" type="cond"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="137" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="151" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="158" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountRate() : double" num="165" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSigma() : double" num="172" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTheta() : double" num="179" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNu() : double" num="186" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling.productfactory">
         <metrics coveredelements="74" complexity="48" loc="611" methods="31" classes="12" statements="120" coveredconditionals="12" coveredmethods="15" elements="181" ncloc="336" files="5" conditionals="30" coveredstatements="47"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/productfactory/InterestRateAnalyticProductFactory.java" name="InterestRateAnalyticProductFactory.java">
            <metrics coveredelements="9" coveredconditionals="1" complexity="4" loc="60" coveredmethods="2" methods="2" elements="22" classes="1" ncloc="41" statements="16" conditionals="4" coveredstatements="6"/>
            <class name="InterestRateAnalyticProductFactory">
               <metrics coveredelements="9" coveredconditionals="1" complexity="4" coveredmethods="2" methods="2" elements="22" statements="16" conditionals="4" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="InterestRateAnalyticProductFactory(LocalDate)" num="31" count="4" type="method"/>
            <line num="32" count="4" type="stmt"/>
            <line num="33" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends InterestRateProductDescriptor&gt;" num="36" count="4" type="method"/>
            <line num="38" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="38" type="cond"/>
            <line num="39" count="4" type="stmt"/>
            <line num="40" count="4" type="stmt"/>
            <line num="43" count="4" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/productfactory/InterestRateMonteCarloProductFactory.java" name="InterestRateMonteCarloProductFactory.java">
            <metrics coveredelements="29" coveredconditionals="5" complexity="21" loc="240" coveredmethods="5" methods="12" elements="81" classes="4" ncloc="144" statements="53" conditionals="16" coveredstatements="19"/>
            <class name="InterestRateMonteCarloProductFactory">
               <metrics coveredelements="24" coveredconditionals="5" complexity="8" coveredmethods="3" methods="3" elements="39" statements="26" conditionals="10" coveredstatements="16"/>
            </class>
            <class name="InterestRateMonteCarloProductFactory.SwapLegMonteCarlo">
               <metrics coveredelements="5" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="InterestRateMonteCarloProductFactory.SwapMonteCarlo">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="25" statements="16" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="InterestRateMonteCarloProductFactory.SwaptionPhysicalMonteCarlo">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="10" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="InterestRateMonteCarloProductFactory(LocalDate)" num="46" count="4" type="method"/>
            <line num="47" count="4" type="stmt"/>
            <line num="48" count="4" type="stmt"/>
            <line complexity="4" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends InterestRateProductDescriptor&gt;" num="51" count="4" type="method"/>
            <line num="54" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="54" type="cond"/>
            <line num="55" count="4" type="stmt"/>
            <line num="56" count="4" type="stmt"/>
            <line num="57" count="4" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="constructLiborIndex(String,Schedule) : AbstractIndex" num="88" count="4" type="method"/>
            <line num="90" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="90" type="cond"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line falsecount="2" truecount="140" num="96" type="cond"/>
            <line num="97" count="140" type="stmt"/>
            <line num="98" count="140" type="stmt"/>
            <line num="100" count="140" type="stmt"/>
            <line num="101" count="140" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLegMonteCarlo(InterestRateSwapLegProductDescriptor,LocalDate)" num="128" count="4" type="method"/>
            <line num="129" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : NotionalFromConstant" num="131" count="280" type="method"/>
            <line num="133" count="280" type="stmt"/>
            <line num="141" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : InterestRateSwapLegProductDescriptor" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapMonteCarlo(InterestRateSwapProductDescriptor,LocalDate)" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="175" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getDescriptor() : InterestRateSwapProductDescriptor" num="187" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionPhysicalMonteCarlo(InterestRateSwaptionProductDescriptor,LocalDate)" num="219" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : InterestRateSwaptionProductDescriptor" num="228" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="234" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/productfactory/ProductFactoryCascade.java" name="ProductFactoryCascade.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="84" coveredmethods="0" methods="5" elements="28" classes="1" ncloc="43" statements="21" conditionals="2" coveredstatements="0"/>
            <class name="ProductFactoryCascade">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="28" statements="21" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ProductFactoryCascade()" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ProductFactoryCascade(List&lt;ProductFactory&lt;? extends T&gt;&gt;)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addFactoryBefore(ProductFactory&lt;? extends T&gt;) : ProductFactoryCascade&lt;T&gt;" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addFactoryAfter(ProductFactory&lt;? extends T&gt;) : ProductFactoryCascade&lt;T&gt;" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends T&gt;" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/productfactory/SingleAssetFourierProductFactory.java" name="SingleAssetFourierProductFactory.java">
            <metrics coveredelements="18" coveredconditionals="3" complexity="8" loc="115" coveredmethods="4" methods="6" elements="25" classes="3" ncloc="54" statements="15" conditionals="4" coveredstatements="11"/>
            <class name="SingleAssetFourierProductFactory">
               <metrics coveredelements="12" coveredconditionals="3" complexity="4" coveredmethods="2" methods="2" elements="15" statements="9" conditionals="4" coveredstatements="7"/>
            </class>
            <class name="SingleAssetFourierProductFactory.EuropeanOptionFourierMethod">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="SingleAssetFourierProductFactory.DigitalOptionFourierMethod">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="SingleAssetFourierProductFactory(LocalDate)" num="37" count="12" type="method"/>
            <line num="38" count="12" type="stmt"/>
            <line complexity="3" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends SingleAssetProductDescriptor&gt;" num="41" count="12" type="method"/>
            <line num="44" count="12" type="stmt"/>
            <line falsecount="4" truecount="8" num="44" type="cond"/>
            <line num="45" count="8" type="stmt"/>
            <line num="46" count="8" type="stmt"/>
            <line num="48" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="48" type="cond"/>
            <line num="49" count="4" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="EuropeanOptionFourierMethod(SingleAssetEuropeanOptionProductDescriptor,LocalDate)" num="76" count="8" type="method"/>
            <line num="77" count="8" type="stmt"/>
            <line num="78" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : SingleAssetEuropeanOptionProductDescriptor" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DigitalOptionFourierMethod(SingleAssetDigitalOptionProductDescriptor,LocalDate)" num="104" count="4" type="method"/>
            <line num="105" count="4" type="stmt"/>
            <line num="106" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : SingleAssetDigitalOptionProductDescriptor" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/productfactory/SingleAssetMonteCarloProductFactory.java" name="SingleAssetMonteCarloProductFactory.java">
            <metrics coveredelements="18" coveredconditionals="3" complexity="8" loc="112" coveredmethods="4" methods="6" elements="25" classes="3" ncloc="54" statements="15" conditionals="4" coveredstatements="11"/>
            <class name="SingleAssetMonteCarloProductFactory">
               <metrics coveredelements="12" coveredconditionals="3" complexity="4" coveredmethods="2" methods="2" elements="15" statements="9" conditionals="4" coveredstatements="7"/>
            </class>
            <class name="SingleAssetMonteCarloProductFactory.EuropeanOptionMonteCarlo">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="SingleAssetMonteCarloProductFactory.DigitalOptionMonteCarlo">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="SingleAssetMonteCarloProductFactory(LocalDate)" num="37" count="12" type="method"/>
            <line num="38" count="12" type="stmt"/>
            <line complexity="3" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends SingleAssetProductDescriptor&gt;" num="41" count="12" type="method"/>
            <line num="44" count="12" type="stmt"/>
            <line falsecount="4" truecount="8" num="44" type="cond"/>
            <line num="45" count="8" type="stmt"/>
            <line num="46" count="8" type="stmt"/>
            <line num="48" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="48" type="cond"/>
            <line num="49" count="4" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="EuropeanOptionMonteCarlo(SingleAssetEuropeanOptionProductDescriptor,LocalDate)" num="75" count="8" type="method"/>
            <line num="76" count="8" type="stmt"/>
            <line num="77" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : SingleAssetEuropeanOptionProductDescriptor" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DigitalOptionMonteCarlo(SingleAssetDigitalOptionProductDescriptor,LocalDate)" num="102" count="4" type="method"/>
            <line num="103" count="4" type="stmt"/>
            <line num="104" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : SingleAssetDigitalOptionProductDescriptor" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.process.component.barrier">
         <metrics coveredelements="0" complexity="0" loc="58" methods="0" classes="2" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="14" files="2" conditionals="0" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/process/component/barrier/Barrier.java" name="Barrier.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="39" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Barrier">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/process/component/barrier/ProcessWithBarrier.java" name="ProcessWithBarrier.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="19" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ProcessWithBarrier">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.parser">
         <metrics coveredelements="0" complexity="77" loc="675" methods="19" classes="2" statements="195" coveredconditionals="0" coveredmethods="0" elements="272" ncloc="340" files="2" conditionals="58" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/parser/CSVCurveParser.java" name="CSVCurveParser.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="193" coveredmethods="0" methods="8" elements="64" classes="1" ncloc="94" statements="46" conditionals="10" coveredstatements="0"/>
            <class name="CSVCurveParser">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="8" elements="64" statements="46" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CSVCurveParser()" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CSVCurveParser(InterpolationMethod,ExtrapolationMethod,InterpolationEntity)" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parseCSV(File,String,String) : DiscountCurve" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="parseZIP(File,String,String) : DiscountCurve[]" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInterpolation(InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : void" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDates(Curve[]) : LocalDate[]" num="127" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="parseStream(InputStream,String,String) : DiscountCurve" num="140" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="readNonEmptyLine(BufferedReader) : String" num="183" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/parser/CSVSwaptionParser.java" name="CSVSwaptionParser.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="59" loc="482" coveredmethods="0" methods="11" elements="208" classes="1" ncloc="246" statements="149" conditionals="48" coveredstatements="0"/>
            <class name="CSVSwaptionParser">
               <metrics coveredelements="0" coveredconditionals="0" complexity="59" coveredmethods="0" methods="11" elements="208" statements="149" conditionals="48" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CSVSwaptionParser(SchedulePrototype,SchedulePrototype)" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CSVSwaptionParser(String[],String[],SchedulePrototype,SchedulePrototype)" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setFileQuotingConvention(QuotingConvention,double,double) : void" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parseCSV(File,File,LocalDate,String,String,String) : SwaptionDataLattice" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="parseZIP(File,File,String,String,String) : SwaptionDataLattice[]" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="24" visibility="private" signature="parseStreams(InputStream,InputStream,LocalDate,String,String,String) : SwaptionDataLattice" num="189" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="203" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="221" type="cond"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="225" type="cond"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="247" type="cond"/>
            <line num="248" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="253" type="cond"/>
            <line num="254" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="258" type="cond"/>
            <line num="259" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="267" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="270" type="cond"/>
            <line num="271" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="parseZIPToConvention(File,File,String,String,String,QuotingConvention,double,AnalyticModel) : SwaptionDataLattice[]" num="306" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="312" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="326" type="cond"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="331" type="cond"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="338" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="parseStreamsToConvention(ZipFile,ZipEntry,ZipFile,ZipEntry,LocalDate,String,String,String,QuotingConvention,double,AnalyticModel) : SwaptionDataLattice" num="372" count="0" type="method"/>
            <line num="377" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parseCSVMultiShift(File,File,LocalDate,String,String,String) : Set&lt;SwaptionDataLattice&gt;" num="411" count="0" type="method"/>
            <line num="414" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="parseTenorsPerShift(File,String) : Map&lt;Double, Set&lt;String&gt;&gt;" num="435" count="0" type="method"/>
            <line num="437" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="443" type="cond"/>
            <line num="445" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="451" type="cond"/>
            <line num="452" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="454" type="cond"/>
            <line num="455" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="459" type="cond"/>
            <line num="460" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="462" type="cond"/>
            <line num="463" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line num="469" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDates(SwaptionDataLattice[]) : LocalDate[]" num="479" count="0" type="method"/>
            <line num="480" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.calibration">
         <metrics coveredelements="210" complexity="107" loc="1301" methods="48" classes="6" statements="287" coveredconditionals="34" coveredmethods="22" elements="425" ncloc="614" files="5" conditionals="90" coveredstatements="154"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/calibration/CalibratedCurves.java" name="CalibratedCurves.java">
            <metrics coveredelements="95" coveredconditionals="17" complexity="74" loc="835" coveredmethods="10" methods="30" elements="277" classes="2" ncloc="402" statements="183" conditionals="64" coveredstatements="68"/>
            <class name="CalibratedCurves">
               <metrics coveredelements="81" coveredconditionals="17" complexity="63" coveredmethods="9" methods="23" elements="229" statements="144" conditionals="62" coveredstatements="55"/>
            </class>
            <class name="CalibratedCurves.CalibrationSpec">
               <metrics coveredelements="14" coveredconditionals="0" complexity="11" coveredmethods="1" methods="7" elements="48" statements="39" conditionals="2" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 95()" num="95" count="4" type="method"/>
            <line num="97" count="4" type="stmt"/>
            <line num="99" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationSpec(String,String,Schedule,String,double,String,Schedule,String,double,String,String,double)" num="142" count="1162" type="method"/>
            <line num="153" count="1162" type="stmt"/>
            <line num="154" count="1162" type="stmt"/>
            <line num="155" count="1162" type="stmt"/>
            <line num="156" count="1162" type="stmt"/>
            <line num="157" count="1162" type="stmt"/>
            <line num="158" count="1162" type="stmt"/>
            <line num="159" count="1162" type="stmt"/>
            <line num="160" count="1162" type="stmt"/>
            <line num="161" count="1162" type="stmt"/>
            <line num="162" count="1162" type="stmt"/>
            <line num="163" count="1162" type="stmt"/>
            <line num="164" count="1162" type="stmt"/>
            <line num="165" count="1162" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationSpec(String,Schedule,String,double,String,Schedule,String,double,String,String,double)" num="183" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationSpec(String,double[],String,double,String,double[],String,double,String,String,double)" num="211" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationSpec(String,double[],String,double,String,String,double)" num="246" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneShifted(double) : CalibrationSpec" num="263" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="264" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="272" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSymbol() : String" num="283" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="CalibratedCurves(List&lt;CalibrationSpec&gt;,AnalyticModel,double,double)" num="322" count="0" type="method"/>
            <line num="323" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="323" type="cond"/>
            <line num="324" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="CalibratedCurves(CalibrationSpec[],AnalyticModelFromCurvesAndVols,double,double)" num="357" count="14" type="method"/>
            <line num="358" count="14" type="stmt"/>
            <line falsecount="0" truecount="14" num="358" type="cond"/>
            <line num="359" count="14" type="stmt"/>
            <line num="361" count="14" type="stmt"/>
            <line num="362" count="14" type="stmt"/>
            <line num="364" count="14" type="stmt"/>
            <line num="365" count="1162" type="stmt"/>
            <line num="368" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratedCurves(CalibrationSpec[],AnalyticModelFromCurvesAndVols,double)" num="391" count="14" type="method"/>
            <line num="392" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratedCurves(CalibrationSpec[],AnalyticModelFromCurvesAndVols)" num="414" count="0" type="method"/>
            <line num="415" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratedCurves(Collection&lt;CalibrationSpec&gt;)" num="426" count="0" type="method"/>
            <line num="427" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratedCurves(CalibrationSpec[])" num="438" count="0" type="method"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="13" visibility="public" signature="getCalibrationProductForSpec(CalibrationSpec) : AnalyticProduct" num="442" count="1328" type="method"/>
            <line num="443" count="1328" type="stmt"/>
            <line num="444" count="1328" type="stmt"/>
            <line num="449" count="1328" type="stmt"/>
            <line falsecount="1328" truecount="0" num="449" type="cond"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="457" count="1328" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(String) : boolean" num="458" count="2656" type="method"/>
            <line num="460" count="2656" type="stmt"/>
            <line num="463" count="1328" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(String) : boolean" num="464" count="2656" type="method"/>
            <line num="466" count="2656" type="stmt"/>
            <line num="469" count="1328" type="stmt"/>
            <line falsecount="1328" truecount="0" num="469" type="cond"/>
            <line num="470" count="0" type="stmt"/>
            <line num="472" count="1328" type="stmt"/>
            <line falsecount="1328" truecount="0" num="472" type="cond"/>
            <line num="473" count="0" type="stmt"/>
            <line num="475" count="1328" type="stmt"/>
            <line falsecount="1328" truecount="0" num="475" type="cond"/>
            <line num="476" count="0" type="stmt"/>
            <line num="478" count="1328" type="stmt"/>
            <line falsecount="1328" truecount="0" num="478" type="cond"/>
            <line num="479" count="0" type="stmt"/>
            <line num="483" count="1328" type="stmt"/>
            <line num="484" count="1328" type="stmt"/>
            <line num="486" count="1328" type="stmt"/>
            <line num="487" count="1328" type="stmt"/>
            <line falsecount="1072" truecount="256" num="487" type="cond"/>
            <line num="488" count="256" type="stmt"/>
            <line num="490" count="1072" type="stmt"/>
            <line falsecount="832" truecount="240" num="490" type="cond"/>
            <line num="491" count="240" type="stmt"/>
            <line num="493" count="832" type="stmt"/>
            <line falsecount="832" truecount="0" num="493" type="cond"/>
            <line num="495" count="0" type="stmt"/>
            <line num="497" count="832" type="stmt"/>
            <line falsecount="832" truecount="0" num="497" type="cond"/>
            <line num="499" count="0" type="stmt"/>
            <line num="501" count="832" type="stmt"/>
            <line falsecount="0" truecount="832" num="501" type="cond"/>
            <line num="502" count="832" type="stmt"/>
            <line num="503" count="832" type="stmt"/>
            <line num="504" count="832" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="506" type="cond"/>
            <line num="507" count="0" type="stmt"/>
            <line num="508" count="0" type="stmt"/>
            <line num="509" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="512" type="cond"/>
            <line num="513" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
            <line num="523" count="1328" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : AnalyticModel" num="532" count="14" type="method"/>
            <line num="533" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurve(String) : Curve" num="542" count="0" type="method"/>
            <line num="543" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLastNumberOfInterations() : int" num="551" count="0" type="method"/>
            <line num="552" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneShifted(String,double) : CalibratedCurves" num="566" count="0" type="method"/>
            <line num="568" count="0" type="stmt"/>
            <line num="569" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="570" type="cond"/>
            <line num="571" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneShifted(Map&lt;String,Double&gt;) : CalibratedCurves" num="591" count="0" type="method"/>
            <line num="593" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="595" type="cond"/>
            <line num="596" count="0" type="stmt"/>
            <line num="599" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneShifted(Pattern,double) : CalibratedCurves" num="621" count="0" type="method"/>
            <line num="623" count="0" type="stmt"/>
            <line num="625" count="0" type="stmt"/>
            <line num="626" count="0" type="stmt"/>
            <line num="627" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="627" type="cond"/>
            <line num="628" count="0" type="stmt"/>
            <line num="631" count="0" type="stmt"/>
            <line num="635" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneShiftedForRegExp(String,double) : CalibratedCurves" num="653" count="0" type="method"/>
            <line num="654" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLastAccuracy() : double" num="662" count="0" type="method"/>
            <line num="663" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCalibrationProductForSymbol(String) : AnalyticProduct" num="674" count="0" type="method"/>
            <line num="681" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="681" type="cond"/>
            <line num="682" count="0" type="stmt"/>
            <line num="683" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="683" type="cond"/>
            <line num="684" count="0" type="stmt"/>
            <line num="688" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="calibrate(double) : int" num="691" count="14" type="method"/>
            <line num="692" count="14" type="stmt"/>
            <line num="693" count="14" type="stmt"/>
            <line num="695" count="14" type="stmt"/>
            <line num="697" count="14" type="stmt"/>
            <line complexity="4" visibility="private" signature="add(CalibrationSpec) : String" num="706" count="1162" type="method"/>
            <line num="708" count="1162" type="stmt"/>
            <line num="715" count="1162" type="stmt"/>
            <line num="716" count="1162" type="stmt"/>
            <line num="721" count="1162" type="stmt"/>
            <line num="722" count="1162" type="stmt"/>
            <line falsecount="1162" truecount="0" num="722" type="cond"/>
            <line num="723" count="0" type="stmt"/>
            <line num="727" count="1162" type="stmt"/>
            <line num="730" count="1162" type="stmt"/>
            <line num="731" count="1162" type="stmt"/>
            <line falsecount="658" truecount="504" num="731" type="cond"/>
            <line num="732" count="504" type="stmt"/>
            <line num="734" count="658" type="stmt"/>
            <line falsecount="0" truecount="658" num="734" type="cond"/>
            <line num="735" count="658" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="742" count="1162" type="stmt"/>
            <line num="746" count="1162" type="stmt"/>
            <line num="747" count="1162" type="stmt"/>
            <line num="749" count="1162" type="stmt"/>
            <line complexity="2" visibility="private" signature="createDiscountCurve(String) : DiscountCurve" num="758" count="0" type="method"/>
            <line num="759" count="0" type="stmt"/>
            <line num="760" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="760" type="cond"/>
            <line num="761" count="0" type="stmt"/>
            <line num="762" count="0" type="stmt"/>
            <line num="765" count="0" type="stmt"/>
            <line complexity="18" visibility="private" signature="createForwardCurve(Schedule,String) : String" num="775" count="0" type="method"/>
            <line num="780" count="0" type="stmt"/>
            <line num="781" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="781" type="cond"/>
            <line num="782" count="0" type="stmt"/>
            <line num="784" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="784" type="cond"/>
            <line num="785" count="0" type="stmt"/>
            <line num="787" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="787" type="cond"/>
            <line num="788" count="0" type="stmt"/>
            <line num="790" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="790" type="cond"/>
            <line num="791" count="0" type="stmt"/>
            <line num="794" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="794" type="cond"/>
            <line num="795" count="0" type="stmt"/>
            <line num="799" count="0" type="stmt"/>
            <line num="801" count="0" type="stmt"/>
            <line num="802" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="802" type="cond"/>
            <line num="804" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="804" type="cond"/>
            <line num="805" count="0" type="stmt"/>
            <line num="809" count="0" type="stmt"/>
            <line num="810" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="815" type="cond"/>
            <line num="824" count="0" type="stmt"/>
            <line num="828" count="0" type="stmt"/>
            <line num="831" count="0" type="stmt"/>
            <line num="833" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/calibration/ParameterAggregation.java" name="ParameterAggregation.java">
            <metrics coveredelements="28" coveredconditionals="3" complexity="13" loc="139" coveredmethods="3" methods="9" elements="51" classes="1" ncloc="73" statements="34" conditionals="8" coveredstatements="22"/>
            <class name="ParameterAggregation">
               <metrics coveredelements="28" coveredconditionals="3" complexity="13" coveredmethods="3" methods="9" elements="51" statements="34" conditionals="8" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="ParameterAggregation()" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ParameterAggregation(Set&lt;E&gt;)" num="49" count="62" type="method"/>
            <line num="50" count="62" type="stmt"/>
            <line complexity="1" visibility="public" signature="ParameterAggregation(E[])" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(E) : void" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(E) : void" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getParameter() : double[]" num="81" count="62" type="method"/>
            <line num="84" count="62" type="stmt"/>
            <line num="85" count="62" type="stmt"/>
            <line num="86" count="90" type="stmt"/>
            <line falsecount="0" truecount="90" num="86" type="cond"/>
            <line num="87" count="90" type="stmt"/>
            <line num="91" count="62" type="stmt"/>
            <line num="94" count="62" type="stmt"/>
            <line num="95" count="62" type="stmt"/>
            <line num="96" count="90" type="stmt"/>
            <line num="97" count="90" type="stmt"/>
            <line falsecount="0" truecount="90" num="97" type="cond"/>
            <line num="98" count="90" type="stmt"/>
            <line num="99" count="90" type="stmt"/>
            <line num="103" count="62" type="stmt"/>
            <line complexity="2" visibility="public" signature="setParameter(double[]) : void" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getObjectsToModifyForParameter(double[]) : Map&lt;E, double[]&gt;" num="120" count="18136" type="method"/>
            <line num="121" count="18136" type="stmt"/>
            <line num="122" count="18136" type="stmt"/>
            <line num="123" count="18139" type="stmt"/>
            <line num="124" count="39342" type="stmt"/>
            <line num="125" count="39352" type="stmt"/>
            <line falsecount="0" truecount="39354" num="125" type="cond"/>
            <line num="127" count="39359" type="stmt"/>
            <line num="128" count="39358" type="stmt"/>
            <line num="129" count="39361" type="stmt"/>
            <line num="132" count="18137" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : Curve" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/calibration/ParameterObject.java" name="ParameterObject.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParameterObject">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/calibration/ParameterTransformation.java" name="ParameterTransformation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParameterTransformation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/calibration/Solver.java" name="Solver.java">
            <metrics coveredelements="87" coveredconditionals="14" complexity="20" loc="245" coveredmethods="9" methods="9" elements="97" classes="1" ncloc="127" statements="70" conditionals="18" coveredstatements="64"/>
            <class name="Solver">
               <metrics coveredelements="87" coveredconditionals="14" complexity="20" coveredmethods="9" methods="9" elements="97" statements="70" conditionals="18" coveredstatements="64"/>
            </class>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,ParameterTransformation,double,OptimizerFactory)" num="61" count="4" type="method"/>
            <line num="62" count="4" type="stmt"/>
            <line num="63" count="4" type="stmt"/>
            <line num="64" count="4" type="stmt"/>
            <line num="65" count="4" type="stmt"/>
            <line num="66" count="4" type="stmt"/>
            <line num="67" count="4" type="stmt"/>
            <line num="68" count="4" type="stmt"/>
            <line num="69" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,ParameterTransformation,double,double)" num="83" count="58" type="method"/>
            <line num="84" count="58" type="stmt"/>
            <line num="85" count="58" type="stmt"/>
            <line num="86" count="58" type="stmt"/>
            <line num="87" count="58" type="stmt"/>
            <line num="88" count="58" type="stmt"/>
            <line num="89" count="58" type="stmt"/>
            <line num="90" count="58" type="stmt"/>
            <line num="91" count="58" type="stmt"/>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,double,double)" num="104" count="6" type="method"/>
            <line num="105" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;,double,double)" num="117" count="52" type="method"/>
            <line num="118" count="52" type="stmt"/>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;)" num="128" count="26" type="method"/>
            <line num="129" count="26" type="stmt"/>
            <line complexity="7" visibility="public" signature="getCalibratedModel(Set&lt;ParameterObject&gt;) : AnalyticModel" num="143" count="62" type="method"/>
            <line num="144" count="62" type="stmt"/>
            <line num="147" count="62" type="stmt"/>
            <line num="150" count="62" type="stmt"/>
            <line falsecount="62" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="62" type="stmt"/>
            <line num="156" count="62" type="stmt"/>
            <line num="157" count="62" type="stmt"/>
            <line num="158" count="62" type="stmt"/>
            <line num="159" count="62" type="stmt"/>
            <line num="160" count="62" type="stmt"/>
            <line num="161" count="62" type="stmt"/>
            <line num="162" count="62" type="stmt"/>
            <line num="163" count="62" type="stmt"/>
            <line num="164" count="62" type="stmt"/>
            <line complexity="6" visibility="public" signature="setValues(double[],double[]) : void" num="165" count="18077" type="method"/>
            <line num="167" count="18077" type="stmt"/>
            <line num="168" count="18074" type="stmt"/>
            <line num="169" count="18076" type="stmt"/>
            <line falsecount="18075" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="175" count="18074" type="stmt"/>
            <line num="176" count="18072" type="stmt"/>
            <line num="177" count="18044" type="stmt"/>
            <line falsecount="18081" truecount="972434" num="177" type="cond"/>
            <line num="178" count="972921" type="stmt"/>
            <line num="180" count="18079" type="stmt"/>
            <line falsecount="12599" truecount="5474" num="180" type="cond"/>
            <line num="181" count="5474" type="stmt"/>
            <line falsecount="5474" truecount="69667" num="181" type="cond"/>
            <line num="182" count="69669" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="191" count="62" type="stmt"/>
            <line falsecount="0" truecount="62" num="191" type="cond"/>
            <line num="192" count="62" type="stmt"/>
            <line num="193" count="62" type="stmt"/>
            <line num="196" count="62" type="stmt"/>
            <line num="197" count="62" type="stmt"/>
            <line num="199" count="62" type="stmt"/>
            <line num="201" count="62" type="stmt"/>
            <line num="202" count="62" type="stmt"/>
            <line falsecount="62" truecount="0" num="202" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line num="206" count="62" type="stmt"/>
            <line num="207" count="62" type="stmt"/>
            <line num="209" count="62" type="stmt"/>
            <line num="210" count="62" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="215" count="62" type="stmt"/>
            <line num="216" count="62" type="stmt"/>
            <line falsecount="62" truecount="1646" num="216" type="cond"/>
            <line num="217" count="1646" type="stmt"/>
            <line num="218" count="1646" type="stmt"/>
            <line falsecount="1564" truecount="82" num="218" type="cond"/>
            <line num="219" count="82" type="stmt"/>
            <line num="221" count="1646" type="stmt"/>
            <line num="223" count="62" type="stmt"/>
            <line num="225" count="62" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIterations() : int" num="233" count="44" type="method"/>
            <line num="234" count="44" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccuracy() : double" num="242" count="38" type="method"/>
            <line num="243" count="38" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.cds">
         <metrics coveredelements="138" complexity="66" loc="520" methods="23" classes="3" statements="173" coveredconditionals="37" coveredmethods="4" elements="260" ncloc="307" files="1" conditionals="64" coveredstatements="97"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/cds/CDS.java" name="CDS.java">
            <metrics coveredelements="138" coveredconditionals="37" complexity="66" loc="520" coveredmethods="4" methods="23" elements="260" classes="3" ncloc="307" statements="173" conditionals="64" coveredstatements="97"/>
            <class name="CDS">
               <metrics coveredelements="138" coveredconditionals="37" complexity="66" coveredmethods="4" methods="23" elements="260" statements="173" conditionals="64" coveredstatements="97"/>
            </class>
            <class name="CDS.ValuationModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CDS.DirtyCleanPrice">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="CDS(Schedule,String,String,String,String,double,double,double,LocalDate,CDS.ValuationModel,CDS.DirtyCleanPrice,boolean)" num="70" count="30" type="method"/>
            <line num="83" count="30" type="stmt"/>
            <line num="84" count="30" type="stmt"/>
            <line num="85" count="30" type="stmt"/>
            <line num="86" count="30" type="stmt"/>
            <line num="87" count="30" type="stmt"/>
            <line num="88" count="30" type="stmt"/>
            <line num="89" count="30" type="stmt"/>
            <line num="90" count="30" type="stmt"/>
            <line num="91" count="30" type="stmt"/>
            <line num="92" count="30" type="stmt"/>
            <line num="93" count="30" type="stmt"/>
            <line num="94" count="30" type="stmt"/>
            <line num="95" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="CDS(Schedule,String,String,String,double,LocalDate,CDS.ValuationModel,CDS.DirtyCleanPrice,boolean)" num="111" count="30" type="method"/>
            <line num="112" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="CDS(Schedule,String,String,String,double,double,LocalDate,CDS.ValuationModel,CDS.DirtyCleanPrice,boolean)" num="129" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CDS(ScheduleFromPeriods,String,String,String,String,double,LocalDate,CDS.ValuationModel,CDS.DirtyCleanPrice,boolean)" num="147" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CDS(ScheduleFromPeriods,String,String,String,String,double,double,LocalDate,CDS.ValuationModel,CDS.DirtyCleanPrice,boolean)" num="166" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="29" visibility="public" signature="getValue(double,AnalyticModel) : double" num="177" count="1049" type="method"/>
            <line num="180" count="1049" type="stmt"/>
            <line falsecount="1050" truecount="0" num="180" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line num="184" count="1049" type="stmt"/>
            <line num="185" count="1046" type="stmt"/>
            <line falsecount="1038" truecount="0" num="185" type="cond"/>
            <line num="186" count="0" type="stmt"/>
            <line num="190" count="1036" type="stmt"/>
            <line num="191" count="1046" type="stmt"/>
            <line falsecount="1046" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="195" count="1044" type="stmt"/>
            <line num="196" count="1042" type="stmt"/>
            <line falsecount="1046" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line num="200" count="1048" type="stmt"/>
            <line num="201" count="1048" type="stmt"/>
            <line falsecount="1044" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="205" count="1047" type="stmt"/>
            <line num="206" count="1045" type="stmt"/>
            <line num="210" count="1031" type="stmt"/>
            <line num="211" count="1024" type="stmt"/>
            <line num="212" count="1034" type="stmt"/>
            <line falsecount="1042" truecount="6223" num="212" type="cond"/>
            <line num="213" count="6238" type="stmt"/>
            <line num="215" count="1044" type="stmt"/>
            <line falsecount="1045" truecount="3125" num="215" type="cond"/>
            <line num="216" count="3140" type="stmt"/>
            <line num="217" count="3108" type="stmt"/>
            <line num="219" count="1049" type="stmt"/>
            <line num="220" count="1023" type="stmt"/>
            <line num="222" count="1031" type="stmt"/>
            <line num="224" count="1038" type="stmt"/>
            <line num="226" count="1034" type="stmt"/>
            <line falsecount="1038" truecount="3092" num="226" type="cond"/>
            <line num="229" count="3128" type="stmt"/>
            <line falsecount="3137" truecount="0" num="229" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="237" count="3134" type="stmt"/>
            <line num="238" count="3107" type="stmt"/>
            <line num="241" count="3119" type="stmt"/>
            <line falsecount="2091" truecount="1042" num="241" type="cond"/>
            <line num="242" count="1045" type="stmt"/>
            <line num="245" count="3115" type="stmt"/>
            <line falsecount="2080" truecount="1047" num="245" type="cond"/>
            <line num="246" count="1049" type="stmt"/>
            <line num="250" count="3123" type="stmt"/>
            <line falsecount="1037" truecount="2089" num="250" type="cond"/>
            <line num="252" count="3113" type="stmt"/>
            <line falsecount="0" truecount="3129" num="252" type="cond"/>
            <line num="253" count="3118" type="stmt"/>
            <line falsecount="0" truecount="3134" num="253" type="cond"/>
            <line num="255" count="3122" type="stmt"/>
            <line falsecount="0" truecount="3138" num="255" type="cond"/>
            <line num="256" count="3116" type="stmt"/>
            <line falsecount="0" truecount="3129" num="256" type="cond"/>
            <line num="259" count="3122" type="stmt"/>
            <line num="260" count="3125" type="stmt"/>
            <line falsecount="3126" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="264" count="3135" type="stmt"/>
            <line num="267" count="3129" type="stmt"/>
            <line num="268" count="3105" type="stmt"/>
            <line num="269" count="3121" type="stmt"/>
            <line num="270" count="3118" type="stmt"/>
            <line num="271" count="3125" type="stmt"/>
            <line num="274" count="3117" type="stmt"/>
            <line num="275" count="1040" type="stmt"/>
            <line num="276" count="1039" type="stmt"/>
            <line num="277" count="1042" type="stmt"/>
            <line num="278" count="1040" type="stmt"/>
            <line num="279" count="1041" type="stmt"/>
            <line num="280" count="1042" type="stmt"/>
            <line falsecount="1037" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="286" type="cond"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="302" count="1023" type="stmt"/>
            <line num="303" count="1031" type="stmt"/>
            <line num="304" count="1044" type="stmt"/>
            <line num="306" count="1042" type="stmt"/>
            <line num="307" count="1038" type="stmt"/>
            <line num="308" count="1045" type="stmt"/>
            <line falsecount="1045" truecount="0" num="308" type="cond"/>
            <line num="309" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="314" type="cond"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="328" count="1039" type="stmt"/>
            <line num="329" count="1045" type="stmt"/>
            <line num="331" count="1042" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="337" count="1044" type="stmt"/>
            <line complexity="12" visibility="public" signature="getConventionalSpread(double,AnalyticModel) : double" num="349" count="6" type="method"/>
            <line num="351" count="6" type="stmt"/>
            <line num="352" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="352" type="cond"/>
            <line num="353" count="0" type="stmt"/>
            <line num="356" count="6" type="stmt"/>
            <line num="357" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="357" type="cond"/>
            <line num="358" count="0" type="stmt"/>
            <line num="361" count="6" type="stmt"/>
            <line num="362" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="362" type="cond"/>
            <line num="363" count="0" type="stmt"/>
            <line num="366" count="6" type="stmt"/>
            <line num="367" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="367" type="cond"/>
            <line num="368" count="0" type="stmt"/>
            <line num="371" count="6" type="stmt"/>
            <line num="372" count="6" type="stmt"/>
            <line num="374" count="6" type="stmt"/>
            <line falsecount="6" truecount="30" num="374" type="cond"/>
            <line num="376" count="30" type="stmt"/>
            <line num="377" count="30" type="stmt"/>
            <line num="379" count="30" type="stmt"/>
            <line falsecount="0" truecount="30" num="379" type="cond"/>
            <line num="380" count="30" type="stmt"/>
            <line falsecount="0" truecount="30" num="380" type="cond"/>
            <line num="382" count="30" type="stmt"/>
            <line num="384" count="30" type="stmt"/>
            <line num="385" count="30" type="stmt"/>
            <line falsecount="6" truecount="24" num="385" type="cond"/>
            <line num="386" count="24" type="stmt"/>
            <line num="389" count="30" type="stmt"/>
            <line falsecount="6" truecount="24" num="389" type="cond"/>
            <line num="391" count="30" type="stmt"/>
            <line num="394" count="6" type="stmt"/>
            <line num="396" count="6" type="stmt"/>
            <line complexity="5" visibility="public" signature="getFeePayment(int,AnalyticModel) : double" num="406" count="0" type="method"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="409" type="cond"/>
            <line num="410" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="415" type="cond"/>
            <line num="416" count="0" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccruedFee(LocalDate,AnalyticModel) : double" num="429" count="0" type="method"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="432" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccruedFee(double,AnalyticModelFromCurvesAndVols) : double" num="444" count="0" type="method"/>
            <line num="445" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule() : Schedule" num="449" count="0" type="method"/>
            <line num="450" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="453" count="0" type="method"/>
            <line num="454" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="457" count="0" type="method"/>
            <line num="458" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSurvivalProbabilityCurveName() : String" num="461" count="0" type="method"/>
            <line num="462" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRecoveryRateCurveName() : String" num="465" count="0" type="method"/>
            <line num="466" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixedFee() : double" num="469" count="0" type="method"/>
            <line num="470" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatingFeeSpread() : double" num="473" count="0" type="method"/>
            <line num="474" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUpfrontPayment() : double" num="477" count="0" type="method"/>
            <line num="478" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTradeDate() : LocalDate" num="481" count="0" type="method"/>
            <line num="481" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValuationModel() : ValuationModel" num="483" count="0" type="method"/>
            <line num="483" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDirtyCleanPrice() : DirtyCleanPrice" num="485" count="0" type="method"/>
            <line num="485" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isUseFinerDiscretization() : boolean" num="487" count="0" type="method"/>
            <line num="487" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="490" count="0" type="method"/>
            <line num="492" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.data">
         <metrics coveredelements="405" complexity="191" loc="1850" methods="97" classes="10" statements="582" coveredconditionals="70" coveredmethods="61" elements="819" ncloc="1091" files="7" conditionals="140" coveredstatements="274"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/data/DataTable.java" name="DataTable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="193" coveredmethods="0" methods="1" elements="18" classes="2" ncloc="55" statements="17" conditionals="0" coveredstatements="0"/>
            <class name="DataTable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="18" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="DataTable.TableConvention">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="exportTable(DataTable) : Map&lt;String, Object&gt;" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/data/DataTableBasic.java" name="DataTableBasic.java">
            <metrics coveredelements="140" coveredconditionals="20" complexity="47" loc="365" coveredmethods="25" methods="29" elements="180" classes="2" ncloc="253" statements="123" conditionals="28" coveredstatements="95"/>
            <class name="DataTableBasic">
               <metrics coveredelements="110" coveredconditionals="15" complexity="33" coveredmethods="20" methods="23" elements="131" statements="88" conditionals="20" coveredstatements="75"/>
            </class>
            <class name="DataTableBasic.DoubleKey">
               <metrics coveredelements="30" coveredconditionals="5" complexity="14" coveredmethods="5" methods="6" elements="49" statements="35" conditionals="8" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="upgradeDataTableLight(DataTableLight,LocalDate,SchedulePrototype) : DataTableBasic" num="33" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="10" type="stmt"/>
            <line num="42" count="160" type="stmt"/>
            <line num="43" count="160" type="stmt"/>
            <line num="44" count="160" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableBasic(String,TableConvention,LocalDate,SchedulePrototype)" num="70" count="987" type="method"/>
            <line num="71" count="987" type="stmt"/>
            <line num="72" count="987" type="stmt"/>
            <line num="73" count="987" type="stmt"/>
            <line num="74" count="987" type="stmt"/>
            <line complexity="2" visibility="public" signature="DataTableBasic(String,TableConvention,LocalDate,SchedulePrototype,int[],int[],double[])" num="88" count="920" type="method"/>
            <line num="90" count="920" type="stmt"/>
            <line num="91" count="920" type="stmt"/>
            <line falsecount="920" truecount="6080" num="91" type="cond"/>
            <line num="92" count="6079" type="stmt"/>
            <line num="93" count="6079" type="stmt"/>
            <line num="94" count="6080" type="stmt"/>
            <line complexity="2" visibility="public" signature="DataTableBasic(String,TableConvention,LocalDate,SchedulePrototype,List&lt;Integer&gt;,List&lt;Integer&gt;,List&lt;Double&gt;)" num="109" count="64" type="method"/>
            <line num="111" count="64" type="stmt"/>
            <line num="112" count="64" type="stmt"/>
            <line falsecount="64" truecount="1600" num="112" type="cond"/>
            <line num="113" count="1600" type="stmt"/>
            <line num="114" count="1600" type="stmt"/>
            <line num="115" count="1600" type="stmt"/>
            <line num="117" count="1600" type="stmt"/>
            <line num="118" count="1600" type="stmt"/>
            <line num="119" count="1600" type="stmt"/>
            <line complexity="1" visibility="public" signature="addPoint(int,int,double) : DataTable" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="addPoints(int[],int[],double[]) : DataTable" num="132" count="15" type="method"/>
            <line num="134" count="15" type="stmt"/>
            <line num="135" count="15" type="stmt"/>
            <line falsecount="15" truecount="75" num="135" type="cond"/>
            <line num="136" count="75" type="stmt"/>
            <line num="137" count="75" type="stmt"/>
            <line num="138" count="75" type="stmt"/>
            <line num="140" count="15" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(int,int) : double" num="143" count="3067975" type="method"/>
            <line num="145" count="3067948" type="stmt"/>
            <line num="146" count="3067817" type="stmt"/>
            <line falsecount="5" truecount="3067924" num="146" type="cond"/>
            <line num="147" count="3068080" type="stmt"/>
            <line num="149" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,double) : double" num="153" count="32777293" type="method"/>
            <line num="155" count="32779902" type="stmt"/>
            <line num="156" count="32765820" type="stmt"/>
            <line falsecount="5" truecount="32761055" num="156" type="cond"/>
            <line num="157" count="32781748" type="stmt"/>
            <line num="159" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="163" count="253899" type="method"/>
            <line num="165" count="253897" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsEntryFor(int,int) : boolean" num="168" count="870479" type="method"/>
            <line num="170" count="870489" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsEntryFor(double,double) : boolean" num="173" count="33626506" type="method"/>
            <line num="175" count="33636123" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturities() : TreeSet&lt;Integer&gt;" num="178" count="1673616" type="method"/>
            <line num="180" count="1673647" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTerminations() : TreeSet&lt;Integer&gt;" num="183" count="507581" type="method"/>
            <line num="185" count="507581" type="stmt"/>
            <line complexity="3" visibility="public" signature="getTerminationsForMaturity(int) : TreeSet&lt;Integer&gt;" num="188" count="612754" type="method"/>
            <line num="190" count="612760" type="stmt"/>
            <line falsecount="0" truecount="612757" num="190" type="cond"/>
            <line num="191" count="612760" type="stmt"/>
            <line num="192" count="612749" type="stmt"/>
            <line num="193" count="3063642" type="stmt"/>
            <line falsecount="0" truecount="3063728" num="193" type="cond"/>
            <line num="194" count="3063908" type="stmt"/>
            <line num="197" count="612752" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getMaturitiesForTermination(int) : TreeSet&lt;Integer&gt;" num="203" count="2" type="method"/>
            <line num="205" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="205" type="cond"/>
            <line num="206" count="2" type="stmt"/>
            <line num="207" count="2" type="stmt"/>
            <line num="208" count="20" type="stmt"/>
            <line falsecount="0" truecount="20" num="208" type="cond"/>
            <line num="209" count="20" type="stmt"/>
            <line num="212" count="2" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="218" count="31" type="method"/>
            <line num="220" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="223" count="31" type="method"/>
            <line num="225" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConvention() : TableConvention" num="228" count="866315" type="method"/>
            <line num="230" count="866320" type="stmt"/>
            <line complexity="1" visibility="public" signature="getScheduleMetaData() : SchedulePrototype" num="233" count="31" type="method"/>
            <line num="235" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : DataTableBasic" num="238" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="247" count="1" type="method"/>
            <line num="249" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString(double) : String" num="252" count="13" type="method"/>
            <line num="253" count="13" type="stmt"/>
            <line num="254" count="13" type="stmt"/>
            <line num="255" count="13" type="stmt"/>
            <line num="256" count="98" type="stmt"/>
            <line num="258" count="13" type="stmt"/>
            <line num="259" count="80" type="stmt"/>
            <line num="260" count="80" type="stmt"/>
            <line num="261" count="730" type="stmt"/>
            <line num="262" count="730" type="stmt"/>
            <line num="263" count="730" type="stmt"/>
            <line falsecount="0" truecount="730" num="263" type="cond"/>
            <line num="264" count="730" type="stmt"/>
            <line num="269" count="13" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getValue(DoubleKey) : double" num="272" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="DoubleKey(int,int)" num="295" count="10074164" type="method"/>
            <line num="296" count="10074996" type="stmt"/>
            <line num="297" count="10074637" type="stmt"/>
            <line num="298" count="10074645" type="stmt"/>
            <line num="299" count="10070870" type="stmt"/>
            <line num="300" count="10071167" type="stmt"/>
            <line complexity="1" visibility="protected" signature="DoubleKey(double,double)" num="309" count="98912263" type="method"/>
            <line num="310" count="98977613" type="stmt"/>
            <line num="311" count="99009360" type="stmt"/>
            <line complexity="5" visibility="private" signature="dateFromOffset(LocalDate,int) : LocalDate" num="314" count="20137249" type="method"/>
            <line num="315" count="20139969" type="stmt"/>
            <line num="316" count="20139645" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="20134877" type="stmt"/>
            <line num="321" count="20137911" type="stmt"/>
            <line num="322" count="20138562" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="332" count="20142324" type="stmt"/>
            <line complexity="5" visibility="public" signature="equals(Object) : boolean" num="335" count="133311047" type="method"/>
            <line num="337" count="133494507" type="stmt"/>
            <line falsecount="133482066" truecount="0" num="337" type="cond"/>
            <line num="338" count="0" type="stmt"/>
            <line num="341" count="133459482" type="stmt"/>
            <line falsecount="133431015" truecount="0" num="341" type="cond"/>
            <line num="342" count="0" type="stmt"/>
            <line num="344" count="133392041" type="stmt"/>
            <line falsecount="133339221" truecount="0" num="344" type="cond"/>
            <line num="345" count="0" type="stmt"/>
            <line num="348" count="133369216" type="stmt"/>
            <line falsecount="107128023" truecount="26291005" num="348" type="cond"/>
            <line num="349" count="26291260" type="stmt"/>
            <line num="351" count="107173308" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="354" count="108847945" type="method"/>
            <line num="356" count="109022219" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="359" count="0" type="method"/>
            <line num="361" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/data/DataTableExtrapolated.java" name="DataTableExtrapolated.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="133" coveredmethods="0" methods="8" elements="54" classes="1" ncloc="70" statements="44" conditionals="2" coveredstatements="0"/>
            <class name="DataTableExtrapolated">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="8" elements="54" statements="44" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DataTableExtrapolated(String,TableConvention,LocalDate,SchedulePrototype)" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableExtrapolated(String,TableConvention,LocalDate,SchedulePrototype,int[],int[],double[])" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableExtrapolated(String,TableConvention,LocalDate,SchedulePrototype,List&lt;Integer&gt;,List&lt;Integer&gt;,List&lt;Double&gt;)" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int,int) : double" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,double) : double" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : DataTableExtrapolated" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString(double) : String" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/data/DataTableInterpolated.java" name="DataTableInterpolated.java">
            <metrics coveredelements="87" coveredconditionals="17" complexity="22" loc="211" coveredmethods="8" methods="9" elements="102" classes="1" ncloc="124" statements="75" conditionals="18" coveredstatements="62"/>
            <class name="DataTableInterpolated">
               <metrics coveredelements="87" coveredconditionals="17" complexity="22" coveredmethods="8" methods="9" elements="102" statements="75" conditionals="18" coveredstatements="62"/>
            </class>
            <line complexity="1" visibility="public" signature="interpolateDataTable(DataTableBasic) : DataTableInterpolated" num="34" count="1" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="10" type="stmt"/>
            <line num="43" count="160" type="stmt"/>
            <line num="44" count="160" type="stmt"/>
            <line num="45" count="160" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableInterpolated(String,TableConvention,LocalDate,SchedulePrototype)" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableInterpolated(String,TableConvention,LocalDate,SchedulePrototype,int[],int[],double[])" num="81" count="25" type="method"/>
            <line num="83" count="25" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableInterpolated(String,TableConvention,LocalDate,SchedulePrototype,List&lt;Integer&gt;,List&lt;Integer&gt;,List&lt;Double&gt;)" num="97" count="11" type="method"/>
            <line num="99" count="11" type="stmt"/>
            <line complexity="9" visibility="public" signature="getValue(int,int) : double" num="102" count="59313" type="method"/>
            <line num="104" count="59313" type="stmt"/>
            <line falsecount="58941" truecount="371" num="104" type="cond"/>
            <line num="105" count="371" type="stmt"/>
            <line num="109" count="58941" type="stmt"/>
            <line falsecount="4" truecount="58938" num="109" type="cond"/>
            <line num="111" count="58938" type="stmt"/>
            <line num="112" count="58938" type="stmt"/>
            <line num="114" count="58938" type="stmt"/>
            <line falsecount="58938" truecount="294748" num="114" type="cond"/>
            <line num="115" count="294749" type="stmt"/>
            <line num="118" count="58938" type="stmt"/>
            <line num="119" count="58938" type="stmt"/>
            <line num="121" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="121" type="cond"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line falsecount="2" truecount="20" num="126" type="cond"/>
            <line num="127" count="20" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line falsecount="2" truecount="20" num="142" type="cond"/>
            <line num="143" count="20" type="stmt"/>
            <line falsecount="20" truecount="320" num="143" type="cond"/>
            <line num="144" count="320" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,double) : double" num="155" count="2680783" type="method"/>
            <line num="157" count="2680781" type="stmt"/>
            <line falsecount="58937" truecount="2621909" num="157" type="cond"/>
            <line num="158" count="2621927" type="stmt"/>
            <line num="162" count="58937" type="stmt"/>
            <line num="163" count="58937" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="58937" type="stmt"/>
            <line num="165" count="58937" type="stmt"/>
            <line num="165" count="58937" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="172" count="58937" type="stmt"/>
            <line num="173" count="58937" type="stmt"/>
            <line num="175" count="58937" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : DataTableInterpolated" num="178" count="2" type="method"/>
            <line num="181" count="2" type="stmt"/>
            <line num="182" count="2" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="187" count="10" type="stmt"/>
            <line num="188" count="50" type="stmt"/>
            <line num="189" count="50" type="stmt"/>
            <line num="190" count="50" type="stmt"/>
            <line num="194" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="197" count="3" type="method"/>
            <line num="199" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString(double) : String" num="202" count="3" type="method"/>
            <line num="204" count="3" type="stmt"/>
            <line num="205" count="3" type="stmt"/>
            <line num="206" count="3" type="stmt"/>
            <line num="208" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/data/DataTableLight.java" name="DataTableLight.java">
            <metrics coveredelements="92" coveredconditionals="17" complexity="42" loc="297" coveredmethods="18" methods="25" elements="144" classes="2" ncloc="202" statements="89" conditionals="30" coveredstatements="57"/>
            <class name="DataTableLight">
               <metrics coveredelements="73" coveredconditionals="12" complexity="34" coveredmethods="14" methods="21" elements="119" statements="76" conditionals="22" coveredstatements="47"/>
            </class>
            <class name="DataTableLight.DataKey">
               <metrics coveredelements="19" coveredconditionals="5" complexity="8" coveredmethods="4" methods="4" elements="25" statements="13" conditionals="8" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="DataTableLight(String,TableConvention)" num="36" count="262" type="method"/>
            <line num="37" count="262" type="stmt"/>
            <line num="38" count="262" type="stmt"/>
            <line complexity="4" visibility="public" signature="DataTableLight(String,TableConvention,int[],int[],double[])" num="50" count="11" type="method"/>
            <line num="51" count="11" type="stmt"/>
            <line num="53" count="11" type="stmt"/>
            <line falsecount="11" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="58" count="11" type="stmt"/>
            <line falsecount="11" truecount="275" num="58" type="cond"/>
            <line num="59" count="275" type="stmt"/>
            <line num="60" count="275" type="stmt"/>
            <line num="61" count="275" type="stmt"/>
            <line complexity="4" visibility="public" signature="DataTableLight(String,TableConvention,List&lt;Integer&gt;,List&lt;Integer&gt;,List&lt;Double&gt;)" num="74" count="251" type="method"/>
            <line num="75" count="251" type="stmt"/>
            <line num="77" count="251" type="stmt"/>
            <line falsecount="251" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="82" count="251" type="stmt"/>
            <line falsecount="251" truecount="6384" num="82" type="cond"/>
            <line num="83" count="6384" type="stmt"/>
            <line num="84" count="6384" type="stmt"/>
            <line num="85" count="6384" type="stmt"/>
            <line num="87" count="6384" type="stmt"/>
            <line num="88" count="6384" type="stmt"/>
            <line num="89" count="6384" type="stmt"/>
            <line complexity="1" visibility="public" signature="addPoint(int,int,double) : DataTableLight" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="addPoints(int[],int[],double[]) : DataTableLight" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(int,int) : double" num="113" count="8108" type="method"/>
            <line num="115" count="8108" type="stmt"/>
            <line num="116" count="8108" type="stmt"/>
            <line falsecount="5" truecount="8103" num="116" type="cond"/>
            <line num="117" count="8103" type="stmt"/>
            <line num="119" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsEntryFor(int,int) : boolean" num="123" count="7150" type="method"/>
            <line num="125" count="7150" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturities() : TreeSet&lt;Integer&gt;" num="128" count="212" type="method"/>
            <line num="130" count="212" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTerminations() : TreeSet&lt;Integer&gt;" num="133" count="34" type="method"/>
            <line num="135" count="34" type="stmt"/>
            <line complexity="3" visibility="public" signature="getTerminationsForMaturity(int) : TreeSet&lt;Integer&gt;" num="138" count="890" type="method"/>
            <line num="140" count="890" type="stmt"/>
            <line falsecount="0" truecount="890" num="140" type="cond"/>
            <line num="141" count="890" type="stmt"/>
            <line num="142" count="890" type="stmt"/>
            <line num="143" count="4560" type="stmt"/>
            <line falsecount="0" truecount="4560" num="143" type="cond"/>
            <line num="144" count="4560" type="stmt"/>
            <line num="147" count="890" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getMaturitiesForTermination(int) : TreeSet&lt;Integer&gt;" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="168" count="7" type="method"/>
            <line num="170" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConvention() : TableConvention" num="173" count="4" type="method"/>
            <line num="175" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : DataTableLight" num="178" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="187" count="41" type="method"/>
            <line num="189" count="41" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString(double) : String" num="198" count="41" type="method"/>
            <line num="199" count="41" type="stmt"/>
            <line num="200" count="41" type="stmt"/>
            <line num="201" count="41" type="stmt"/>
            <line num="202" count="216" type="stmt"/>
            <line num="204" count="41" type="stmt"/>
            <line num="205" count="210" type="stmt"/>
            <line num="206" count="210" type="stmt"/>
            <line num="207" count="1160" type="stmt"/>
            <line num="208" count="1160" type="stmt"/>
            <line num="209" count="1160" type="stmt"/>
            <line falsecount="4" truecount="1156" num="209" type="cond"/>
            <line num="210" count="1156" type="stmt"/>
            <line num="215" count="41" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="218" count="81" type="method"/>
            <line num="220" count="81" type="stmt"/>
            <line complexity="1" visibility="package" signature="DataKey(int,int)" num="242" count="35740" type="method"/>
            <line num="243" count="35740" type="stmt"/>
            <line num="244" count="35740" type="stmt"/>
            <line complexity="5" visibility="public" signature="equals(Object) : boolean" num="247" count="49819" type="method"/>
            <line num="249" count="49819" type="stmt"/>
            <line falsecount="49819" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="253" count="49819" type="stmt"/>
            <line falsecount="49819" truecount="0" num="253" type="cond"/>
            <line num="254" count="0" type="stmt"/>
            <line num="256" count="49819" type="stmt"/>
            <line falsecount="49819" truecount="0" num="256" type="cond"/>
            <line num="257" count="0" type="stmt"/>
            <line num="260" count="49819" type="stmt"/>
            <line falsecount="30195" truecount="19624" num="260" type="cond"/>
            <line num="261" count="19624" type="stmt"/>
            <line num="263" count="30195" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="266" count="36896" type="method"/>
            <line num="268" count="36896" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="271" count="5" type="method"/>
            <line num="273" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double) : double" num="277" count="6" type="method"/>
            <line num="279" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsEntryFor(double,double) : boolean" num="282" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="287" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getScheduleMetaData() : SchedulePrototype" num="292" count="0" type="method"/>
            <line num="294" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/data/DataTableLinear.java" name="DataTableLinear.java">
            <metrics coveredelements="86" coveredconditionals="16" complexity="26" loc="210" coveredmethods="10" methods="10" elements="108" classes="1" ncloc="126" statements="78" conditionals="20" coveredstatements="60"/>
            <class name="DataTableLinear">
               <metrics coveredelements="86" coveredconditionals="16" complexity="26" coveredmethods="10" methods="10" elements="108" statements="78" conditionals="20" coveredstatements="60"/>
            </class>
            <line complexity="1" visibility="public" signature="interpolateDataTable(DataTableBasic) : DataTableLinear" num="35" count="1" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="10" type="stmt"/>
            <line num="44" count="160" type="stmt"/>
            <line num="45" count="160" type="stmt"/>
            <line num="46" count="160" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableLinear(String,TableConvention,LocalDate,SchedulePrototype)" num="62" count="3" type="method"/>
            <line num="64" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableLinear(String,TableConvention,LocalDate,SchedulePrototype,int[],int[],double[])" num="78" count="894" type="method"/>
            <line num="80" count="894" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableLinear(String,TableConvention,LocalDate,SchedulePrototype,List&lt;Integer&gt;,List&lt;Integer&gt;,List&lt;Double&gt;)" num="94" count="53" type="method"/>
            <line num="96" count="53" type="stmt"/>
            <line complexity="4" visibility="private" signature="initInterpolator() : void" num="99" count="253769" type="method"/>
            <line num="100" count="253772" type="stmt"/>
            <line falsecount="37" truecount="253736" num="100" type="cond"/>
            <line num="101" count="253736" type="stmt"/>
            <line num="104" count="37" type="stmt"/>
            <line num="105" count="37" type="stmt"/>
            <line num="106" count="37" type="stmt"/>
            <line num="107" count="37" type="stmt"/>
            <line falsecount="37" truecount="190" num="107" type="cond"/>
            <line num="108" count="190" type="stmt"/>
            <line falsecount="190" truecount="1060" num="108" type="cond"/>
            <line num="109" count="1060" type="stmt"/>
            <line num="112" count="37" type="stmt"/>
            <line complexity="9" visibility="public" signature="getValue(int,int) : double" num="115" count="811174" type="method"/>
            <line num="117" count="811178" type="stmt"/>
            <line falsecount="807335" truecount="3815" num="117" type="cond"/>
            <line num="118" count="3815" type="stmt"/>
            <line num="122" count="807356" type="stmt"/>
            <line falsecount="253772" truecount="553575" num="122" type="cond"/>
            <line num="124" count="553592" type="stmt"/>
            <line num="125" count="553546" type="stmt"/>
            <line num="127" count="553557" type="stmt"/>
            <line falsecount="553578" truecount="2767690" num="127" type="cond"/>
            <line num="128" count="2767768" type="stmt"/>
            <line num="131" count="553599" type="stmt"/>
            <line num="132" count="553547" type="stmt"/>
            <line num="134" count="253771" type="stmt"/>
            <line falsecount="253768" truecount="0" num="134" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="253770" type="stmt"/>
            <line falsecount="253771" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="150" count="253772" type="stmt"/>
            <line num="151" count="253772" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,double) : double" num="155" count="30948758" type="method"/>
            <line num="157" count="30951553" type="stmt"/>
            <line falsecount="807347" truecount="30138674" num="157" type="cond"/>
            <line num="158" count="30158723" type="stmt"/>
            <line num="162" count="807357" type="stmt"/>
            <line num="163" count="807352" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="807334" type="stmt"/>
            <line num="165" count="807347" type="stmt"/>
            <line num="165" count="807356" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="172" count="807354" type="stmt"/>
            <line num="173" count="807356" type="stmt"/>
            <line num="175" count="807358" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : DataTableLinear" num="178" count="27" type="method"/>
            <line num="181" count="27" type="stmt"/>
            <line num="182" count="27" type="stmt"/>
            <line num="183" count="27" type="stmt"/>
            <line num="185" count="27" type="stmt"/>
            <line num="186" count="27" type="stmt"/>
            <line num="187" count="90" type="stmt"/>
            <line num="188" count="450" type="stmt"/>
            <line num="189" count="450" type="stmt"/>
            <line num="190" count="450" type="stmt"/>
            <line num="194" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="197" count="9" type="method"/>
            <line num="199" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString(double) : String" num="202" count="9" type="method"/>
            <line num="204" count="9" type="stmt"/>
            <line num="205" count="9" type="stmt"/>
            <line num="206" count="9" type="stmt"/>
            <line num="208" count="9" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/data/ErrorEstimation.java" name="ErrorEstimation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="40" loc="441" coveredmethods="0" methods="15" elements="213" classes="1" ncloc="261" statements="156" conditionals="42" coveredstatements="0"/>
            <class name="ErrorEstimation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="40" coveredmethods="0" methods="15" elements="213" statements="156" conditionals="42" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ErrorEstimation(LocalDate,SchedulePrototype,SchedulePrototype,AnnuityMappingType,SwaptionDataLattice,SwaptionDataLattice,SwaptionDataLattice,String,String,String,double,double,int)" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="evaluate(SwaptionDataLattice,VolatilityCubeModel) : void" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="evaluateTenor(int,int,VolatilityCubeModel) : void" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCashAverageError() : double" num="234" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCashMaxError() : double" num="251" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="253" type="cond"/>
            <line num="254" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCashAverageErrorPercent() : double" num="264" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="267" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCashMaxErrorPercent() : double" num="281" count="0" type="method"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="283" type="cond"/>
            <line num="284" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getPhysicalAverageError() : double" num="294" count="0" type="method"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getPhysicalMaxError() : double" num="311" count="0" type="method"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="313" type="cond"/>
            <line num="314" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getPhysicalAverageErrorPercent() : double" num="324" count="0" type="method"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="327" type="cond"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getPhysicalMaxErrorPercent() : double" num="341" count="0" type="method"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="343" type="cond"/>
            <line num="344" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCashAverageError(int,int,VolatilityCubeModel) : double" num="357" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="359" type="cond"/>
            <line num="360" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="365" type="cond"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCashMaxError(int,int,VolatilityCubeModel) : double" num="382" count="0" type="method"/>
            <line num="384" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="384" type="cond"/>
            <line num="385" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="389" type="cond"/>
            <line num="390" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCashAverageErrorPercent(int,int,VolatilityCubeModel) : double" num="403" count="0" type="method"/>
            <line num="405" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="405" type="cond"/>
            <line num="406" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="411" type="cond"/>
            <line num="412" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCashMaxErrorPercent(int,int,VolatilityCubeModel) : double" num="428" count="0" type="method"/>
            <line num="430" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="430" type="cond"/>
            <line num="431" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="435" type="cond"/>
            <line num="436" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.model.curves">
         <metrics coveredelements="8" complexity="6" loc="69" methods="5" classes="1" statements="9" coveredconditionals="1" coveredmethods="2" elements="16" ncloc="35" files="1" conditionals="2" coveredstatements="5"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/model/curves/ExponentialCorrelationCurve.java" name="ExponentialCorrelationCurve.java">
            <metrics coveredelements="8" coveredconditionals="1" complexity="6" loc="69" coveredmethods="2" methods="5" elements="16" classes="1" ncloc="35" statements="9" conditionals="2" coveredstatements="5"/>
            <class name="ExponentialCorrelationCurve">
               <metrics coveredelements="8" coveredconditionals="1" complexity="6" coveredmethods="2" methods="5" elements="16" statements="9" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="ExponentialCorrelationCurve(String,LocalDate,double,double)" num="38" count="447385" type="method"/>
            <line num="39" count="447375" type="stmt"/>
            <line num="41" count="447387" type="stmt"/>
            <line num="42" count="447388" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(AnalyticModel,double) : double" num="45" count="447367" type="method"/>
            <line num="47" count="447368" type="stmt"/>
            <line falsecount="447368" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="447362" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.crosscurrency">
         <metrics coveredelements="0" complexity="0" loc="68" methods="0" classes="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="13" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/crosscurrency/CrossCurrencyTermStructureMonteCarloSimulationModel.java" name="CrossCurrencyTermStructureMonteCarloSimulationModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="68" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CrossCurrencyTermStructureMonteCarloSimulationModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.interpolation">
         <metrics coveredelements="257" complexity="80" loc="691" methods="20" classes="5" statements="254" coveredconditionals="62" coveredmethods="16" elements="362" ncloc="421" files="2" conditionals="88" coveredstatements="179"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/interpolation/BiLinearInterpolation.java" name="BiLinearInterpolation.java">
            <metrics coveredelements="34" coveredconditionals="8" complexity="7" loc="78" coveredmethods="3" methods="3" elements="34" classes="1" ncloc="46" statements="23" conditionals="8" coveredstatements="23"/>
            <class name="BiLinearInterpolation">
               <metrics coveredelements="34" coveredconditionals="8" complexity="7" coveredmethods="3" methods="3" elements="34" statements="23" conditionals="8" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="public" signature="BiLinearInterpolation(double[],double[],double[][])" num="33" count="38" type="method"/>
            <line num="34" count="38" type="stmt"/>
            <line num="35" count="38" type="stmt"/>
            <line num="36" count="38" type="stmt"/>
            <line num="37" count="38" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Double,Double) : Double" num="40" count="253766" type="method"/>
            <line num="42" count="253769" type="stmt"/>
            <line complexity="5" visibility="package" signature="getValue(double,double) : double" num="45" count="257908" type="method"/>
            <line num="46" count="257911" type="stmt"/>
            <line num="47" count="257906" type="stmt"/>
            <line falsecount="249842" truecount="8067" num="47" type="cond"/>
            <line num="48" count="8067" type="stmt"/>
            <line num="50" count="257912" type="stmt"/>
            <line num="51" count="257911" type="stmt"/>
            <line num="53" count="257911" type="stmt"/>
            <line num="54" count="257909" type="stmt"/>
            <line falsecount="59" truecount="257850" num="54" type="cond"/>
            <line num="55" count="257851" type="stmt"/>
            <line num="57" count="257913" type="stmt"/>
            <line num="58" count="257911" type="stmt"/>
            <line num="60" count="257913" type="stmt"/>
            <line falsecount="235890" truecount="22022" num="60" type="cond"/>
            <line num="61" count="22022" type="stmt"/>
            <line num="63" count="257911" type="stmt"/>
            <line falsecount="257649" truecount="262" num="63" type="cond"/>
            <line num="64" count="262" type="stmt"/>
            <line num="67" count="257911" type="stmt"/>
            <line num="68" count="257911" type="stmt"/>
            <line num="70" count="257912" type="stmt"/>
            <line num="76" count="257912" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/interpolation/RationalFunctionInterpolation.java" name="RationalFunctionInterpolation.java">
            <metrics coveredelements="223" coveredconditionals="54" complexity="73" loc="613" coveredmethods="13" methods="17" elements="328" classes="4" ncloc="375" statements="231" conditionals="80" coveredstatements="156"/>
            <class name="RationalFunctionInterpolation">
               <metrics coveredelements="207" coveredconditionals="53" complexity="69" coveredmethods="10" methods="14" elements="306" statements="214" conditionals="78" coveredstatements="144"/>
            </class>
            <class name="RationalFunctionInterpolation.InterpolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RationalFunctionInterpolation.ExtrapolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RationalFunctionInterpolation.RationalFunction">
               <metrics coveredelements="16" coveredconditionals="1" complexity="4" coveredmethods="3" methods="3" elements="22" statements="17" conditionals="2" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="package" signature="RationalFunction(double[],double[])" num="90" count="3069334" type="method"/>
            <line num="91" count="3069157" type="stmt"/>
            <line num="92" count="3066729" type="stmt"/>
            <line num="93" count="3067324" type="stmt"/>
            <line complexity="1" visibility="package" signature="RationalFunction(double[])" num="101" count="3067753" type="method"/>
            <line num="102" count="3064696" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double) : double" num="111" count="5021812" type="method"/>
            <line num="113" count="5022882" type="stmt"/>
            <line num="114" count="5022960" type="stmt"/>
            <line num="115" count="5023301" type="stmt"/>
            <line num="117" count="5024121" type="stmt"/>
            <line num="118" count="10050625" type="stmt"/>
            <line num="119" count="10051503" type="stmt"/>
            <line num="122" count="5023540" type="stmt"/>
            <line falsecount="0" truecount="5024069" num="122" type="cond"/>
            <line num="123" count="5024462" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RationalFunctionInterpolation(double[],double[])" num="146" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RationalFunctionInterpolation(double[],double[],InterpolationMethod,ExtrapolationMethod)" num="161" count="6511977" type="method"/>
            <line num="162" count="6511692" type="stmt"/>
            <line num="163" count="6512278" type="stmt"/>
            <line num="164" count="6512345" type="stmt"/>
            <line num="165" count="6512365" type="stmt"/>
            <line num="166" count="6512358" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationMethod() : InterpolationMethod" num="174" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getValue(double) : double" num="184" count="102816371" type="method"/>
            <line num="186" count="102826318" type="stmt"/>
            <line num="187" count="102832821" type="stmt"/>
            <line falsecount="96324442" truecount="6512232" num="187" type="cond"/>
            <line num="188" count="6512209" type="stmt"/>
            <line num="193" count="102837543" type="stmt"/>
            <line num="194" count="102838168" type="stmt"/>
            <line falsecount="101574316" truecount="1269158" num="194" type="cond"/>
            <line num="195" count="1269197" type="stmt"/>
            <line num="198" count="101575302" type="stmt"/>
            <line num="201" count="101576494" type="stmt"/>
            <line falsecount="101575447" truecount="1400" num="201" type="cond"/>
            <line num="203" count="1400" type="stmt"/>
            <line falsecount="20" truecount="1380" num="203" type="cond"/>
            <line num="204" count="1377" type="stmt"/>
            <line num="205" count="20" type="stmt"/>
            <line falsecount="0" truecount="20" num="205" type="cond"/>
            <line num="206" count="20" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="211" count="101575807" type="stmt"/>
            <line falsecount="5022230" truecount="96556881" num="211" type="cond"/>
            <line num="213" count="96557602" type="stmt"/>
            <line falsecount="233" truecount="96559485" num="213" type="cond"/>
            <line num="214" count="96562512" type="stmt"/>
            <line num="215" count="234" type="stmt"/>
            <line falsecount="0" truecount="234" num="215" type="cond"/>
            <line num="216" count="233" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="222" count="5021987" type="stmt"/>
            <line num="225" count="5023096" type="stmt"/>
            <line complexity="10" visibility="private" signature="doCreateRationalFunctions() : void" num="228" count="6512082" type="method"/>
            <line num="230" count="6512187" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="52248" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="52247" type="stmt"/>
            <line num="240" count="52249" type="stmt"/>
            <line num="241" count="6459169" type="stmt"/>
            <line num="242" count="6459364" type="stmt"/>
            <line num="243" count="6458891" type="stmt"/>
            <line num="244" count="64" type="stmt"/>
            <line num="245" count="64" type="stmt"/>
            <line num="246" count="64" type="stmt"/>
            <line num="247" count="64" type="stmt"/>
            <line num="248" count="64" type="stmt"/>
            <line num="249" count="63" type="stmt"/>
            <line num="250" count="559" type="stmt"/>
            <line num="251" count="559" type="stmt"/>
            <line num="252" count="559" type="stmt"/>
            <line num="253" count="54" type="stmt"/>
            <line num="254" count="54" type="stmt"/>
            <line num="255" count="54" type="stmt"/>
            <line complexity="3" visibility="private" signature="doCreateRationalFunctionsForPiecewiseConstantInterpolation() : void" num="259" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="267" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="doCreateRationalFunctionsForLinearInterpolation() : void" num="278" count="52243" type="method"/>
            <line num="280" count="52245" type="stmt"/>
            <line falsecount="52245" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="287" count="52246" type="stmt"/>
            <line num="290" count="52245" type="stmt"/>
            <line falsecount="52251" truecount="1018102" num="290" type="cond"/>
            <line num="291" count="1018142" type="stmt"/>
            <line num="293" count="1018172" type="stmt"/>
            <line num="294" count="1018186" type="stmt"/>
            <line num="296" count="1018180" type="stmt"/>
            <line num="297" count="1018198" type="stmt"/>
            <line num="299" count="1018171" type="stmt"/>
            <line num="300" count="1018178" type="stmt"/>
            <line num="302" count="1018183" type="stmt"/>
            <line complexity="5" visibility="private" signature="doCreateRationalFunctionsForCubicSplineInterpolation() : void" num="306" count="6459139" type="method"/>
            <line num="308" count="6459266" type="stmt"/>
            <line num="311" count="6459285" type="stmt"/>
            <line num="312" count="6459260" type="stmt"/>
            <line falsecount="6459299" truecount="216" num="312" type="cond"/>
            <line num="313" count="216" type="stmt"/>
            <line num="320" count="6459324" type="stmt"/>
            <line num="322" count="6459239" type="stmt"/>
            <line num="323" count="6458378" type="stmt"/>
            <line num="326" count="6458798" type="stmt"/>
            <line num="327" count="6458932" type="stmt"/>
            <line num="328" count="6459124" type="stmt"/>
            <line num="329" count="6459101" type="stmt"/>
            <line num="331" count="6459134" type="stmt"/>
            <line falsecount="6459161" truecount="162" num="331" type="cond"/>
            <line num="333" count="162" type="stmt"/>
            <line num="335" count="162" type="stmt"/>
            <line num="336" count="162" type="stmt"/>
            <line num="337" count="162" type="stmt"/>
            <line num="340" count="6459111" type="stmt"/>
            <line falsecount="6459156" truecount="54" num="340" type="cond"/>
            <line num="341" count="54" type="stmt"/>
            <line num="342" count="54" type="stmt"/>
            <line num="346" count="6459193" type="stmt"/>
            <line num="351" count="6458216" type="stmt"/>
            <line num="354" count="6458724" type="stmt"/>
            <line falsecount="6459056" truecount="214" num="354" type="cond"/>
            <line num="355" count="213" type="stmt"/>
            <line num="357" count="213" type="stmt"/>
            <line num="358" count="212" type="stmt"/>
            <line num="359" count="211" type="stmt"/>
            <line num="360" count="212" type="stmt"/>
            <line num="362" count="212" type="stmt"/>
            <line complexity="1" visibility="private" signature="doCreateRationalFunctionsForAkimaInterpolation() : void" num="366" count="64" type="method"/>
            <line num="368" count="64" type="stmt"/>
            <line complexity="12" visibility="private" signature="doCreateRationalFunctionsForAkimaInterpolation(double) : void" num="371" count="128" type="method"/>
            <line num="373" count="128" type="stmt"/>
            <line num="375" count="128" type="stmt"/>
            <line falsecount="128" truecount="0" num="375" type="cond"/>
            <line num="377" count="0" type="stmt"/>
            <line num="381" count="128" type="stmt"/>
            <line num="382" count="128" type="stmt"/>
            <line num="383" count="128" type="stmt"/>
            <line num="384" count="128" type="stmt"/>
            <line falsecount="128" truecount="512" num="384" type="cond"/>
            <line num="385" count="512" type="stmt"/>
            <line num="386" count="512" type="stmt"/>
            <line num="387" count="512" type="stmt"/>
            <line falsecount="128" truecount="384" num="387" type="cond"/>
            <line num="388" count="384" type="stmt"/>
            <line num="393" count="128" type="stmt"/>
            <line num="397" count="128" type="stmt"/>
            <line num="400" count="128" type="stmt"/>
            <line falsecount="128" truecount="0" num="400" type="cond"/>
            <line num="401" count="0" type="stmt"/>
            <line num="404" count="128" type="stmt"/>
            <line num="409" count="128" type="stmt"/>
            <line falsecount="128" truecount="0" num="409" type="cond"/>
            <line num="410" count="0" type="stmt"/>
            <line num="413" count="128" type="stmt"/>
            <line num="419" count="128" type="stmt"/>
            <line num="422" count="128" type="stmt"/>
            <line falsecount="128" truecount="128" num="422" type="cond"/>
            <line num="424" count="128" type="stmt"/>
            <line falsecount="128" truecount="0" num="424" type="cond"/>
            <line num="426" count="0" type="stmt"/>
            <line num="429" count="128" type="stmt"/>
            <line num="438" count="128" type="stmt"/>
            <line num="441" count="128" type="stmt"/>
            <line falsecount="128" truecount="511" num="441" type="cond"/>
            <line num="442" count="512" type="stmt"/>
            <line num="444" count="511" type="stmt"/>
            <line num="445" count="512" type="stmt"/>
            <line num="446" count="512" type="stmt"/>
            <line num="447" count="511" type="stmt"/>
            <line num="449" count="511" type="stmt"/>
            <line complexity="15" visibility="private" signature="doCreateRationalFunctionsForHarmonicSplineInterpolation() : void" num="454" count="613" type="method"/>
            <line num="455" count="613" type="stmt"/>
            <line num="458" count="613" type="stmt"/>
            <line num="459" count="613" type="stmt"/>
            <line num="460" count="613" type="stmt"/>
            <line num="461" count="613" type="stmt"/>
            <line falsecount="613" truecount="2030639" num="461" type="cond"/>
            <line num="462" count="2031173" type="stmt"/>
            <line num="463" count="2030842" type="stmt"/>
            <line num="464" count="2030812" type="stmt"/>
            <line falsecount="613" truecount="2030595" num="464" type="cond"/>
            <line num="465" count="2030328" type="stmt"/>
            <line num="470" count="613" type="stmt"/>
            <line num="474" count="613" type="stmt"/>
            <line num="477" count="613" type="stmt"/>
            <line num="481" count="613" type="stmt"/>
            <line falsecount="559" truecount="54" num="481" type="cond"/>
            <line num="483" count="54" type="stmt"/>
            <line falsecount="54" truecount="0" num="483" type="cond"/>
            <line num="484" count="0" type="stmt"/>
            <line num="486" count="54" type="stmt"/>
            <line falsecount="54" truecount="0" num="486" type="cond"/>
            <line num="487" count="0" type="stmt"/>
            <line num="491" count="54" type="stmt"/>
            <line falsecount="54" truecount="0" num="491" type="cond"/>
            <line num="493" count="0" type="stmt"/>
            <line num="495" count="54" type="stmt"/>
            <line falsecount="54" truecount="0" num="495" type="cond"/>
            <line num="496" count="0" type="stmt"/>
            <line num="501" count="613" type="stmt"/>
            <line falsecount="613" truecount="2040890" num="501" type="cond"/>
            <line num="502" count="2040949" type="stmt"/>
            <line falsecount="2039652" truecount="1010" num="502" type="cond"/>
            <line num="503" count="1010" type="stmt"/>
            <line num="506" count="2039787" type="stmt"/>
            <line num="508" count="2039652" type="stmt"/>
            <line num="515" count="613" type="stmt"/>
            <line num="518" count="613" type="stmt"/>
            <line falsecount="613" truecount="2046577" num="518" type="cond"/>
            <line num="519" count="2048290" type="stmt"/>
            <line num="521" count="2048618" type="stmt"/>
            <line num="522" count="2050678" type="stmt"/>
            <line num="523" count="2051125" type="stmt"/>
            <line num="524" count="2051831" type="stmt"/>
            <line num="526" count="2052270" type="stmt"/>
            <line complexity="6" visibility="public" signature="main(String[]) : void" num="532" count="0" type="method"/>
            <line num="537" count="0" type="stmt"/>
            <line num="542" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line num="547" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line num="552" count="0" type="stmt"/>
            <line num="553" count="0" type="stmt"/>
            <line num="555" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="555" type="cond"/>
            <line num="556" count="0" type="stmt"/>
            <line num="557" count="0" type="stmt"/>
            <line num="558" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line num="563" count="0" type="stmt"/>
            <line num="564" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="565" type="cond"/>
            <line num="566" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="573" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line num="575" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="575" type="cond"/>
            <line num="576" count="0" type="stmt"/>
            <line num="577" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="580" count="0" type="stmt"/>
            <line num="583" count="0" type="stmt"/>
            <line num="584" count="0" type="stmt"/>
            <line num="585" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="585" type="cond"/>
            <line num="586" count="0" type="stmt"/>
            <line num="587" count="0" type="stmt"/>
            <line num="588" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="595" type="cond"/>
            <line num="596" count="0" type="stmt"/>
            <line num="597" count="0" type="stmt"/>
            <line num="598" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="603" count="4006" type="method"/>
            <line num="605" count="4006" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="608" count="6" type="method"/>
            <line num="609" count="6" type="stmt"/>
            <line num="611" count="6" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata2.interpolation">
         <metrics coveredelements="66" complexity="29" loc="367" methods="11" classes="4" statements="78" coveredconditionals="15" coveredmethods="6" elements="117" ncloc="155" files="1" conditionals="28" coveredstatements="45"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/interpolation/RationalFunctionInterpolation.java" name="RationalFunctionInterpolation.java">
            <metrics coveredelements="66" coveredconditionals="15" complexity="29" loc="367" coveredmethods="6" methods="11" elements="117" classes="4" ncloc="155" statements="78" conditionals="28" coveredstatements="45"/>
            <class name="RationalFunctionInterpolation">
               <metrics coveredelements="51" coveredconditionals="12" complexity="23" coveredmethods="4" methods="8" elements="89" statements="59" conditionals="22" coveredstatements="35"/>
            </class>
            <class name="RationalFunctionInterpolation.InterpolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RationalFunctionInterpolation.ExtrapolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RationalFunctionInterpolation.RationalFunction">
               <metrics coveredelements="15" coveredconditionals="3" complexity="6" coveredmethods="2" methods="3" elements="28" statements="19" conditionals="6" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="package" signature="RationalFunction(RandomVariable[],RandomVariable[])" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="RationalFunction(RandomVariable[])" num="95" count="1531" type="method"/>
            <line num="96" count="1531" type="stmt"/>
            <line num="97" count="1531" type="stmt"/>
            <line num="98" count="1531" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double) : RandomVariable" num="107" count="1673" type="method"/>
            <line num="109" count="1673" type="stmt"/>
            <line num="111" count="1673" type="stmt"/>
            <line num="113" count="1673" type="stmt"/>
            <line falsecount="1673" truecount="1673" num="113" type="cond"/>
            <line num="114" count="1673" type="stmt"/>
            <line num="115" count="1673" type="stmt"/>
            <line num="118" count="1673" type="stmt"/>
            <line falsecount="0" truecount="1673" num="118" type="cond"/>
            <line num="119" count="1673" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RationalFunctionInterpolation(double[],RandomVariable[])" num="142" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RationalFunctionInterpolation(double[],RandomVariable[],InterpolationMethod,ExtrapolationMethod)" num="157" count="356" type="method"/>
            <line num="158" count="356" type="stmt"/>
            <line num="159" count="356" type="stmt"/>
            <line num="160" count="356" type="stmt"/>
            <line num="161" count="356" type="stmt"/>
            <line num="162" count="356" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationMethod() : InterpolationMethod" num="171" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getValue(double) : RandomVariable" num="181" count="3666" type="method"/>
            <line num="183" count="3666" type="stmt"/>
            <line num="184" count="3666" type="stmt"/>
            <line falsecount="3310" truecount="356" num="184" type="cond"/>
            <line num="185" count="356" type="stmt"/>
            <line num="190" count="3666" type="stmt"/>
            <line num="191" count="3666" type="stmt"/>
            <line falsecount="2117" truecount="1549" num="191" type="cond"/>
            <line num="192" count="1549" type="stmt"/>
            <line num="195" count="2117" type="stmt"/>
            <line num="198" count="2117" type="stmt"/>
            <line falsecount="1895" truecount="222" num="198" type="cond"/>
            <line num="200" count="222" type="stmt"/>
            <line falsecount="0" truecount="222" num="200" type="cond"/>
            <line num="201" count="222" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="1895" type="stmt"/>
            <line falsecount="1673" truecount="222" num="208" type="cond"/>
            <line num="210" count="222" type="stmt"/>
            <line falsecount="0" truecount="222" num="210" type="cond"/>
            <line num="211" count="222" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="219" count="1673" type="stmt"/>
            <line num="222" count="1673" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="225" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="doCreateRationalFunctions() : void" num="231" count="356" type="method"/>
            <line num="233" count="356" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="270" type="stmt"/>
            <line num="241" count="86" type="stmt"/>
            <line num="242" count="356" type="stmt"/>
            <line num="243" count="356" type="stmt"/>
            <line complexity="3" visibility="private" signature="doCreateRationalFunctionsForPiecewiseConstantInterpolation() : void" num="248" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="256" type="cond"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="258" type="cond"/>
            <line num="259" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="doCreateRationalFunctionsForLinearInterpolation() : void" num="267" count="356" type="method"/>
            <line num="272" count="356" type="stmt"/>
            <line num="275" count="356" type="stmt"/>
            <line falsecount="356" truecount="1531" num="275" type="cond"/>
            <line num="276" count="1531" type="stmt"/>
            <line num="278" count="1531" type="stmt"/>
            <line num="279" count="1531" type="stmt"/>
            <line num="281" count="1531" type="stmt"/>
            <line num="282" count="1531" type="stmt"/>
            <line num="284" count="1531" type="stmt"/>
            <line num="285" count="1531" type="stmt"/>
            <line num="287" count="1531" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate">
         <metrics coveredelements="72" complexity="16" loc="233" methods="6" classes="1" statements="76" coveredconditionals="13" coveredmethods="3" elements="100" ncloc="148" files="1" conditionals="18" coveredstatements="56"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/Utils.java" name="Utils.java">
            <metrics coveredelements="72" coveredconditionals="13" complexity="16" loc="233" coveredmethods="3" methods="6" elements="100" classes="1" ncloc="148" statements="76" conditionals="18" coveredstatements="56"/>
            <class name="Utils">
               <metrics coveredelements="72" coveredconditionals="13" complexity="16" coveredmethods="3" methods="6" elements="100" statements="76" conditionals="18" coveredstatements="56"/>
            </class>
            <line complexity="1" visibility="public" signature="convertTableToLattice(DataTable,QuotingConvention,LocalDate,String,String,SchedulePrototype,SchedulePrototype) : SwaptionDataLattice" num="41" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 45()" num="45" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="convertMapOfTablesToLattice(Map&lt;Integer, DataTable&gt;,QuotingConvention,LocalDate,String,String,SchedulePrototype,SchedulePrototype) : SwaptionDataLattice" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="shiftCashToPhysicalSmile(VolatilityCubeModel,SwaptionDataLattice,SwaptionDataLattice) : SwaptionDataLattice" num="106" count="3" type="method"/>
            <line num="108" count="3" type="stmt"/>
            <line num="110" count="3" type="stmt"/>
            <line num="111" count="6" type="stmt"/>
            <line num="113" count="6" type="stmt"/>
            <line num="114" count="6" type="stmt"/>
            <line num="115" count="6" type="stmt"/>
            <line num="116" count="6" type="stmt"/>
            <line num="118" count="6" type="stmt"/>
            <line num="119" count="30" type="stmt"/>
            <line falsecount="24" truecount="6" num="119" type="cond"/>
            <line num="120" count="6" type="stmt"/>
            <line num="123" count="24" type="stmt"/>
            <line num="124" count="120" type="stmt"/>
            <line num="125" count="597" type="stmt"/>
            <line falsecount="597" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="597" type="stmt"/>
            <line num="130" count="597" type="stmt"/>
            <line num="131" count="597" type="stmt"/>
            <line num="132" count="597" type="stmt"/>
            <line num="138" count="6" type="stmt"/>
            <line num="145" count="6" type="stmt"/>
            <line num="148" count="3" type="stmt"/>
            <line complexity="5" visibility="public" signature="convertCashLatticeToNormalVolatility(SwaptionDataLattice,VolatilityCubeModel) : SwaptionDataLattice" num="159" count="6" type="method"/>
            <line num="162" count="6" type="stmt"/>
            <line num="163" count="6" type="stmt"/>
            <line num="164" count="6" type="stmt"/>
            <line num="166" count="6" type="stmt"/>
            <line num="167" count="6" type="stmt"/>
            <line num="168" count="6" type="stmt"/>
            <line num="169" count="6" type="stmt"/>
            <line num="171" count="6" type="stmt"/>
            <line num="172" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="172" type="cond"/>
            <line num="173" count="3" type="stmt"/>
            <line num="174" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="174" type="cond"/>
            <line num="175" count="3" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="180" count="6" type="stmt"/>
            <line num="181" count="30" type="stmt"/>
            <line num="182" count="150" type="stmt"/>
            <line num="183" count="747" type="stmt"/>
            <line num="184" count="747" type="stmt"/>
            <line num="185" count="747" type="stmt"/>
            <line num="186" count="747" type="stmt"/>
            <line falsecount="372" truecount="375" num="186" type="cond"/>
            <line num="187" count="747" type="stmt"/>
            <line num="188" count="747" type="stmt"/>
            <line num="190" count="747" type="stmt"/>
            <line num="191" count="747" type="stmt"/>
            <line num="192" count="747" type="stmt"/>
            <line falsecount="372" truecount="375" num="192" type="cond"/>
            <line num="193" count="375" type="stmt"/>
            <line num="194" count="375" type="stmt"/>
            <line num="196" count="372" type="stmt"/>
            <line num="197" count="372" type="stmt"/>
            <line num="203" count="6" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunction(double,Schedule) : double" num="218" count="747" type="method"/>
            <line num="220" count="747" type="stmt"/>
            <line num="221" count="747" type="stmt"/>
            <line num="222" count="747" type="stmt"/>
            <line falsecount="747" truecount="7635" num="222" type="cond"/>
            <line num="223" count="7635" type="stmt"/>
            <line num="225" count="747" type="stmt"/>
            <line num="227" count="747" type="stmt"/>
            <line falsecount="747" truecount="0" num="227" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="747" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.model">
         <metrics coveredelements="25" complexity="16" loc="172" methods="10" classes="2" statements="21" coveredconditionals="2" coveredmethods="7" elements="35" ncloc="79" files="2" conditionals="4" coveredstatements="16"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/model/AnalyticModelWithVolatilityCubes.java" name="AnalyticModelWithVolatilityCubes.java">
            <metrics coveredelements="25" coveredconditionals="2" complexity="16" loc="115" coveredmethods="7" methods="10" elements="35" classes="1" ncloc="67" statements="21" conditionals="4" coveredstatements="16"/>
            <class name="AnalyticModelWithVolatilityCubes">
               <metrics coveredelements="25" coveredconditionals="2" complexity="16" coveredmethods="7" methods="10" elements="35" statements="21" conditionals="4" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="AnalyticModelWithVolatilityCubes()" num="33" count="11" type="method"/>
            <line num="34" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelWithVolatilityCubes(LocalDate)" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelWithVolatilityCubes(LocalDate,Map&lt;String, Curve&gt;,Map&lt;String, VolatilitySurface&gt;,Map&lt;String, VolatilityCube&gt;)" num="54" count="21799" type="method"/>
            <line num="56" count="21798" type="stmt"/>
            <line num="57" count="21798" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilityCube(String) : VolatilityCube" num="60" count="17597749" type="method"/>
            <line num="62" count="17602508" type="stmt"/>
            <line complexity="4" visibility="public" signature="addVolatilityCube(VolatilityCube) : VolatilityCubeModel" num="65" count="21757" type="method"/>
            <line num="68" count="21760" type="stmt"/>
            <line num="70" count="21764" type="stmt"/>
            <line falsecount="21765" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="21763" type="stmt"/>
            <line num="75" count="21760" type="stmt"/>
            <line num="77" count="21763" type="stmt"/>
            <line complexity="4" visibility="public" signature="addVolatilityCube(String,VolatilityCube) : VolatilityCubeModel" num="80" count="1" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : AnalyticModelWithVolatilityCubes" num="95" count="21799" type="method"/>
            <line num="97" count="21801" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilityCubeNames() : Set&lt;String&gt;" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilityCubes() : Map&lt;String, VolatilityCube&gt;" num="111" count="21798" type="method"/>
            <line num="113" count="21799" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/model/VolatilityCubeModel.java" name="VolatilityCubeModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="57" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VolatilityCubeModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.volatility.caplet">
         <metrics coveredelements="0" complexity="143" loc="979" methods="48" classes="5" statements="367" coveredconditionals="0" coveredmethods="0" elements="569" ncloc="672" files="5" conditionals="154" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatility/caplet/CapShiftedVol.java" name="CapShiftedVol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="143" coveredmethods="0" methods="2" elements="69" classes="1" ncloc="76" statements="41" conditionals="26" coveredstatements="0"/>
            <class name="CapShiftedVol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="2" elements="69" statements="41" conditionals="26" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CapShiftedVol(Schedule,String,double,boolean,String,String,double)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="18" visibility="public" signature="getValueAsPrice(double,AnalyticModel) : double" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatility/caplet/CapTenorStructure.java" name="CapTenorStructure.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="9" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CapTenorStructure">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatility/caplet/CapVolMarketData.java" name="CapVolMarketData.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="34" loc="206" coveredmethods="0" methods="27" elements="93" classes="1" ncloc="139" statements="52" conditionals="14" coveredstatements="0"/>
            <class name="CapVolMarketData">
               <metrics coveredelements="0" coveredconditionals="0" complexity="34" coveredmethods="0" methods="27" elements="93" statements="52" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="CapVolMarketData(String,String,String,CapTenorStructure,int[],double[],double[][],double,int,int,int)" num="41" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CapVolMarketData(String,String,CapTenorStructure,int[],double[],double[][],double,int)" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCapVolData(int,double) : double" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCapVolData(int,int) : double" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getShift() : double" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfStrikes() : int" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfExpiryDates() : int" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxExpiryInMonths() : int" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxExpiryInYears() : double" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpiryInMonths(int) : int" num="124" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpiryInYears(int) : double" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolMatrix() : double[][]" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrikeVector() : double[]" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpiryVectorInMonths() : int[]" num="140" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpiryVectorInYears() : double[]" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getRowIndex(int) : int" num="148" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrike(int) : double" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getColumnIndex(double) : int" num="161" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCapTenorStructure() : CapTenorStructure" num="170" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlyingTenorInMonths() : int" num="174" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlyingTenorInMonthsBeforeChange() : int" num="178" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTenorChangeTimeInMonths() : int" num="182" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : String" num="186" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndexBeforeChange() : String" num="190" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountIndex() : String" num="194" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCapVolMatrixEntry(int,int,double) : void" num="198" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOffsetCodeFromIndex(String) : String" num="202" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatility/caplet/CapletVolBootstrapping.java" name="CapletVolBootstrapping.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="57" loc="378" coveredmethods="0" methods="8" elements="279" classes="1" ncloc="300" statements="193" conditionals="78" coveredstatements="0"/>
            <class name="CapletVolBootstrapping">
               <metrics coveredelements="0" coveredconditionals="0" complexity="57" coveredmethods="0" methods="8" elements="279" statements="193" conditionals="78" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="CapletVolBootstrapping(CorrelationProvider,CapVolMarketData,AnalyticModel)" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CapletVolBootstrapping(CapVolMarketData,AnalyticModel)" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="33" visibility="public" signature="getCapletVolMatrix() : double[][]" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="211" type="cond"/>
            <line num="212" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="225" type="cond"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="241" type="cond"/>
            <line num="242" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line complexity="16" visibility="public" signature="calculateCapVolsFromCapletVols(double[][]) : double[][]" num="275" count="0" type="method"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="279" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="300" type="cond"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="305" type="cond"/>
            <line num="306" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="306" type="cond"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="309" type="cond"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="324" type="cond"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="328" type="cond"/>
            <line num="329" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="334" type="cond"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="338" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="346" type="cond"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="355" type="cond"/>
            <line num="356" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParsedModel() : AnalyticModel" num="363" count="0" type="method"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="367" count="0" type="method"/>
            <line num="368" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurve() : ForwardCurve" num="371" count="0" type="method"/>
            <line num="372" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCapletFixingTimeVectorInYears() : double[]" num="375" count="0" type="method"/>
            <line num="376" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatility/caplet/CapletVolatilitySurface.java" name="CapletVolatilitySurface.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="33" loc="243" coveredmethods="0" methods="11" elements="128" classes="1" ncloc="152" statements="81" conditionals="36" coveredstatements="0"/>
            <class name="CapletVolatilitySurface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="33" coveredmethods="0" methods="11" elements="128" statements="81" conditionals="36" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CapletVolatilitySurface(String,LocalDate,double[][],double[],double[],ForwardCurve,QuotingConvention,DiscountCurve)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="CapletVolatilitySurface(String,LocalDate,double,double[],double[],ForwardCurve,QuotingConvention,DiscountCurve)" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,double,QuotingConvention) : double" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getValue(AnalyticModel,double,double,QuotingConvention) : double" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuotingConvention() : QuotingConvention" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurve() : ForwardCurve" num="163" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="13" visibility="public" signature="convertFromTo(AnalyticModel,double,double,double,QuotingConvention,QuotingConvention) : double" num="183" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line num="186" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="192" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertFromTo(double,double,double,QuotingConvention,QuotingConvention) : double" num="240" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.process">
         <metrics coveredelements="154" complexity="72" loc="845" methods="41" classes="7" statements="141" coveredconditionals="33" coveredmethods="22" elements="222" ncloc="364" files="6" conditionals="40" coveredstatements="99"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/process/EulerSchemeFromProcessModel.java" name="EulerSchemeFromProcessModel.java">
            <metrics coveredelements="119" coveredconditionals="29" complexity="43" loc="375" coveredmethods="10" methods="16" elements="143" classes="2" ncloc="195" statements="93" conditionals="34" coveredstatements="80"/>
            <class name="EulerSchemeFromProcessModel">
               <metrics coveredelements="119" coveredconditionals="29" complexity="43" coveredmethods="10" methods="16" elements="143" statements="93" conditionals="34" coveredstatements="80"/>
            </class>
            <class name="EulerSchemeFromProcessModel.Scheme">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 63()" num="63" count="80" type="method"/>
            <line num="65" count="80" type="stmt"/>
            <line complexity="1" visibility="public" signature="EulerSchemeFromProcessModel(ProcessModel,IndependentIncrements,Scheme)" num="96" count="977" type="method"/>
            <line num="97" count="977" type="stmt"/>
            <line num="98" count="977" type="stmt"/>
            <line num="99" count="977" type="stmt"/>
            <line complexity="1" visibility="public" signature="EulerSchemeFromProcessModel(ProcessModel,IndependentIncrements)" num="108" count="6756" type="method"/>
            <line num="109" count="6756" type="stmt"/>
            <line num="110" count="6754" type="stmt"/>
            <line complexity="4" visibility="public" signature="getProcessValue(int,int) : RandomVariable" num="119" count="22210295" type="method"/>
            <line num="122" count="22211542" type="stmt"/>
            <line num="123" count="22215608" type="stmt"/>
            <line falsecount="22208943" truecount="6672" num="123" type="cond"/>
            <line num="124" count="6672" type="stmt"/>
            <line num="128" count="22215224" type="stmt"/>
            <line falsecount="22214575" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="133" count="22214597" type="stmt"/>
            <line complexity="3" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="142" count="1205572" type="method"/>
            <line num="145" count="1205606" type="stmt"/>
            <line num="146" count="1205666" type="stmt"/>
            <line falsecount="1205650" truecount="16" num="146" type="cond"/>
            <line num="147" count="16" type="stmt"/>
            <line num="152" count="1205660" type="stmt"/>
            <line complexity="19" visibility="private" signature="doPrecalculateProcess() : void" num="158" count="6688" type="method"/>
            <line num="159" count="6688" type="stmt"/>
            <line falsecount="6688" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="163" count="6688" type="stmt"/>
            <line num="164" count="6688" type="stmt"/>
            <line num="165" count="6688" type="stmt"/>
            <line num="168" count="6687" type="stmt"/>
            <line num="169" count="6688" type="stmt"/>
            <line num="172" count="6688" type="stmt"/>
            <line num="175" count="6688" type="stmt"/>
            <line num="176" count="6688" type="stmt"/>
            <line num="177" count="6688" type="stmt"/>
            <line falsecount="6688" truecount="678382" num="177" type="cond"/>
            <line num="178" count="678388" type="stmt"/>
            <line num="179" count="678393" type="stmt"/>
            <line num="187" count="6688" type="stmt"/>
            <line num="190" count="6684" type="stmt"/>
            <line falsecount="6687" truecount="746791" num="190" type="cond"/>
            <line num="191" count="746805" type="stmt"/>
            <line num="193" count="746805" type="stmt"/>
            <line num="196" count="746800" type="stmt"/>
            <line num="197" count="746798" type="stmt"/>
            <line num="198" count="746799" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="205" count="746805" type="stmt"/>
            <line num="208" count="746809" type="stmt"/>
            <line num="209" count="746807" type="stmt"/>
            <line falsecount="746803" truecount="102407410" num="209" type="cond"/>
            <line num="210" count="102407410" type="stmt"/>
            <line num="212" count="102407415" type="stmt"/>
            <line num="215" count="102407416" type="stmt"/>
            <line falsecount="50885712" truecount="51521701" num="215" type="cond"/>
            <line num="216" count="51521702" type="stmt"/>
            <line num="217" count="51521700" type="stmt"/>
            <line num="220" count="50885714" type="stmt"/>
            <line complexity="5" visibility="public" signature="call() : RandomVariable" num="221" count="50563082" type="method"/>
            <line num="223" count="50666278" type="stmt"/>
            <line falsecount="1410861" truecount="49296605" num="223" type="cond"/>
            <line num="224" count="49342863" type="stmt"/>
            <line num="227" count="50713777" type="stmt"/>
            <line num="230" count="50820378" type="stmt"/>
            <line falsecount="50841959" truecount="0" num="230" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="235" count="50836129" type="stmt"/>
            <line falsecount="0" truecount="50834142" num="235" type="cond"/>
            <line num="236" count="50836915" type="stmt"/>
            <line num="240" count="50848312" type="stmt"/>
            <line num="243" count="50851534" type="stmt"/>
            <line num="251" count="50885706" type="stmt"/>
            <line num="252" count="50885720" type="stmt"/>
            <line num="253" count="50885713" type="stmt"/>
            <line falsecount="0" truecount="50885714" num="253" type="cond"/>
            <line num="254" count="50885716" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="263" count="50885706" type="stmt"/>
            <line num="267" count="746805" type="stmt"/>
            <line falsecount="746800" truecount="102407428" num="267" type="cond"/>
            <line num="268" count="102407429" type="stmt"/>
            <line num="269" count="102407430" type="stmt"/>
            <line num="270" count="102407429" type="stmt"/>
            <line falsecount="51521705" truecount="50885723" num="270" type="cond"/>
            <line num="271" count="50885725" type="stmt"/>
            <line num="273" count="51521704" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="280" count="746802" type="stmt"/>
            <line falsecount="741204" truecount="5600" num="280" type="cond"/>
            <line num="283" count="5600" type="stmt"/>
            <line num="285" count="5600" type="stmt"/>
            <line falsecount="5600" truecount="255200" num="285" type="cond"/>
            <line num="286" count="255200" type="stmt"/>
            <line num="287" count="255200" type="stmt"/>
            <line num="289" count="255200" type="stmt"/>
            <line falsecount="129600" truecount="125600" num="289" type="cond"/>
            <line num="290" count="125600" type="stmt"/>
            <line num="294" count="129600" type="stmt"/>
            <line num="297" count="129600" type="stmt"/>
            <line num="300" count="129600" type="stmt"/>
            <line num="305" count="746800" type="stmt"/>
            <line num="308" count="6687" type="stmt"/>
            <line num="309" count="6687" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="319" count="1007289" type="method"/>
            <line num="321" count="1007289" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="327" count="713878" type="method"/>
            <line num="329" count="713879" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStochasticDriver() : IndependentIncrements" num="335" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getScheme() : Scheme" num="343" count="0" type="method"/>
            <line num="344" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : EulerSchemeFromProcessModel" num="347" count="0" type="method"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedModel(ProcessModel) : MonteCarloProcess" num="352" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : MonteCarloProcess" num="357" count="674" type="method"/>
            <line num="359" count="674" type="stmt"/>
            <line num="360" count="674" type="stmt"/>
            <line num="362" count="674" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : Object" num="365" count="0" type="method"/>
            <line num="367" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="370" count="0" type="method"/>
            <line num="372" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/process/LinearInterpolatedTimeDiscreteProcess.java" name="LinearInterpolatedTimeDiscreteProcess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="159" coveredmethods="0" methods="12" elements="42" classes="1" ncloc="74" statements="28" conditionals="2" coveredstatements="0"/>
            <class name="LinearInterpolatedTimeDiscreteProcess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="12" elements="42" statements="28" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LinearInterpolatedTimeDiscreteProcess(Map&lt;Double, RandomVariable&gt;)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="LinearInterpolatedTimeDiscreteProcess(TimeDiscretization,Map&lt;Double, RandomVariable&gt;)" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(LinearInterpolatedTimeDiscreteProcess) : LinearInterpolatedTimeDiscreteProcess" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : LinearInterpolatedTimeDiscreteProcess" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getProcessValue(double,int) : RandomVariable" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcessValue(int,int) : RandomVariable" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Process" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/process/MonteCarloProcess.java" name="MonteCarloProcess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="83" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MonteCarloProcess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/process/MonteCarloProcessFromProcessModel.java" name="MonteCarloProcessFromProcessModel.java">
            <metrics coveredelements="28" coveredconditionals="2" complexity="13" loc="107" coveredmethods="11" methods="11" elements="28" classes="1" ncloc="54" statements="15" conditionals="2" coveredstatements="15"/>
            <class name="MonteCarloProcessFromProcessModel">
               <metrics coveredelements="28" coveredconditionals="2" complexity="13" coveredmethods="11" methods="11" elements="28" statements="15" conditionals="2" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloProcessFromProcessModel(TimeDiscretization,ProcessModel)" num="34" count="7738" type="method"/>
            <line num="35" count="7736" type="stmt"/>
            <line num="36" count="7734" type="stmt"/>
            <line num="37" count="7727" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : ProcessModel" num="50" count="11022" type="method"/>
            <line num="52" count="11022" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="55" count="275743" type="method"/>
            <line num="57" count="275743" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState() : RandomVariable[]" num="60" count="6687" type="method"/>
            <line num="61" count="6688" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="64" count="752380" type="method"/>
            <line num="65" count="752387" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="68" count="50723582" type="method"/>
            <line num="70" count="50771393" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(int,int,RandomVariable) : RandomVariable" num="73" count="51664765" type="method"/>
            <line num="75" count="51668609" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(int,int,RandomVariable) : RandomVariable" num="78" count="49216436" type="method"/>
            <line num="80" count="49308471" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="87" count="921342" type="method"/>
            <line num="89" count="921377" type="stmt"/>
            <line complexity="3" visibility="public" signature="getTime(int) : double" num="92" count="104213264" type="method"/>
            <line num="94" count="104259068" type="stmt"/>
            <line falsecount="104232912" truecount="736" num="94" type="cond"/>
            <line num="95" count="736" type="stmt"/>
            <line num="97" count="104279893" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="100" count="12635813" type="method"/>
            <line num="102" count="12636139" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/process/Process.java" name="Process.java">
            <metrics coveredelements="7" coveredconditionals="2" complexity="3" loc="92" coveredmethods="1" methods="2" elements="9" classes="1" ncloc="22" statements="5" conditionals="2" coveredstatements="4"/>
            <class name="Process">
               <metrics coveredelements="7" coveredconditionals="2" complexity="3" coveredmethods="1" methods="2" elements="9" statements="5" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="package" signature="getModel() : ProcessModel" num="26" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="getProcessValue(int) : RandomVariable[]" num="35" count="523" type="method"/>
            <line num="36" count="523" type="stmt"/>
            <line num="37" count="523" type="stmt"/>
            <line falsecount="523" truecount="523" num="37" type="cond"/>
            <line num="38" count="523" type="stmt"/>
            <line num="40" count="523" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/process/ProcessTimeDiscretizationProvider.java" name="ProcessTimeDiscretizationProvider.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="29" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ProcessTimeDiscretizationProvider">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.montecarlo.conditionalexpectation">
         <metrics coveredelements="88" complexity="45" loc="551" methods="24" classes="10" statements="112" coveredconditionals="19" coveredmethods="10" elements="176" ncloc="263" files="8" conditionals="40" coveredstatements="59"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/conditionalexpectation/LinearRegression.java" name="LinearRegression.java">
            <metrics coveredelements="24" coveredconditionals="5" complexity="9" loc="89" coveredmethods="2" methods="2" elements="45" classes="1" ncloc="46" statements="29" conditionals="14" coveredstatements="17"/>
            <class name="LinearRegression">
               <metrics coveredelements="24" coveredconditionals="5" complexity="9" coveredmethods="2" methods="2" elements="45" statements="29" conditionals="14" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="LinearRegression(RandomVariable[])" num="25" count="6" type="method"/>
            <line num="26" count="6" type="stmt"/>
            <line num="27" count="6" type="stmt"/>
            <line complexity="8" visibility="public" signature="getRegressionCoefficients(RandomVariable) : double[]" num="36" count="6" type="method"/>
            <line num="37" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
            <line num="40" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="40" type="cond"/>
            <line num="44" count="2" type="stmt"/>
            <line num="46" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="46" type="cond"/>
            <line num="50" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line num="52" count="4" type="stmt"/>
            <line num="53" count="4" type="stmt"/>
            <line num="55" count="4" type="stmt"/>
            <line num="56" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="56" type="cond"/>
            <line num="57" count="4" type="stmt"/>
            <line num="58" count="4" type="stmt"/>
            <line num="60" count="4" type="stmt"/>
            <line num="61" count="4" type="stmt"/>
            <line num="63" count="4" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/conditionalexpectation/MonteCarloConditionalExpectationLinearRegressionFactory.java" name="MonteCarloConditionalExpectationLinearRegressionFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="18" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="MonteCarloConditionalExpectationLinearRegressionFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getConditionalExpectationEstimator(RandomVariable[],RandomVariable[]) : ConditionalExpectationEstimator" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/conditionalexpectation/MonteCarloConditionalExpectationLocalizedOnDependentRegressionFactory.java" name="MonteCarloConditionalExpectationLocalizedOnDependentRegressionFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="27" coveredmethods="0" methods="2" elements="5" classes="1" ncloc="14" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="MonteCarloConditionalExpectationLocalizedOnDependentRegressionFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationLocalizedOnDependentRegressionFactory(double)" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConditionalExpectationEstimator(RandomVariable[],RandomVariable[]) : ConditionalExpectationEstimator" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/conditionalexpectation/MonteCarloConditionalExpectationRegression.java" name="MonteCarloConditionalExpectationRegression.java">
            <metrics coveredelements="64" coveredconditionals="14" complexity="18" loc="177" coveredmethods="8" methods="10" elements="70" classes="3" ncloc="95" statements="44" conditionals="16" coveredstatements="42"/>
            <class name="MonteCarloConditionalExpectationRegression">
               <metrics coveredelements="59" coveredconditionals="14" complexity="16" coveredmethods="6" methods="8" elements="65" statements="41" conditionals="16" coveredstatements="39"/>
            </class>
            <class name="MonteCarloConditionalExpectationRegression.RegressionBasisFunctions">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MonteCarloConditionalExpectationRegression.RegressionBasisFunctionsGiven">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="RegressionBasisFunctionsGiven(RandomVariable[])" num="50" count="4395" type="method"/>
            <line num="51" count="4395" type="stmt"/>
            <line num="52" count="4395" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBasisFunctions() : RandomVariable[]" num="55" count="5322" type="method"/>
            <line num="57" count="5322" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationRegression()" num="68" count="4021" type="method"/>
            <line num="69" count="4021" type="stmt"/>
            <line num="70" count="4021" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationRegression(RandomVariable[])" num="78" count="3647" type="method"/>
            <line num="79" count="3647" type="stmt"/>
            <line num="80" count="3647" type="stmt"/>
            <line num="81" count="3647" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationRegression(RandomVariable[],RandomVariable[])" num="90" count="374" type="method"/>
            <line num="91" count="374" type="stmt"/>
            <line num="92" count="374" type="stmt"/>
            <line num="93" count="374" type="stmt"/>
            <line complexity="2" visibility="public" signature="getConditionalExpectation(RandomVariable) : RandomVariable" num="96" count="2661" type="method"/>
            <line num="99" count="2661" type="stmt"/>
            <line num="102" count="2661" type="stmt"/>
            <line num="103" count="2661" type="stmt"/>
            <line num="104" count="2661" type="stmt"/>
            <line falsecount="2661" truecount="14769" num="104" type="cond"/>
            <line num="105" count="14769" type="stmt"/>
            <line num="108" count="2661" type="stmt"/>
            <line complexity="5" visibility="public" signature="getLinearRegressionParameters(RandomVariable) : double[]" num="118" count="2661" type="method"/>
            <line num="120" count="2661" type="stmt"/>
            <line num="122" count="2661" type="stmt"/>
            <line num="123" count="2661" type="stmt"/>
            <line falsecount="232" truecount="2429" num="123" type="cond"/>
            <line num="125" count="2429" type="stmt"/>
            <line num="126" count="2429" type="stmt"/>
            <line falsecount="2429" truecount="16162" num="126" type="cond"/>
            <line num="127" count="16162" type="stmt"/>
            <line falsecount="16162" truecount="88022" num="127" type="cond"/>
            <line num="128" count="88022" type="stmt"/>
            <line num="129" count="88022" type="stmt"/>
            <line num="133" count="2429" type="stmt"/>
            <line num="138" count="2661" type="stmt"/>
            <line num="139" count="2661" type="stmt"/>
            <line falsecount="2661" truecount="17430" num="139" type="cond"/>
            <line num="140" count="17430" type="stmt"/>
            <line num="144" count="2661" type="stmt"/>
            <line num="146" count="2661" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBasisFunctionsEstimator() : RegressionBasisFunctions" num="149" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBasisFunctionsPredictor() : RegressionBasisFunctions" num="153" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getNonZeroBasisFunctions(RandomVariable[]) : RandomVariable[]" num="157" count="4395" type="method"/>
            <line num="158" count="4395" type="stmt"/>
            <line num="159" count="4395" type="stmt"/>
            <line falsecount="4395" truecount="25992" num="159" type="cond"/>
            <line num="160" count="25992" type="stmt"/>
            <line falsecount="0" truecount="25992" num="160" type="cond"/>
            <line num="161" count="25992" type="stmt"/>
            <line num="165" count="4395" type="stmt"/>
            <line num="167" count="4395" type="stmt"/>
            <line num="168" count="4395" type="stmt"/>
            <line num="169" count="25992" type="stmt"/>
            <line falsecount="0" truecount="25992" num="169" type="cond"/>
            <line num="170" count="25992" type="stmt"/>
            <line num="171" count="25992" type="stmt"/>
            <line num="175" count="4395" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/conditionalexpectation/MonteCarloConditionalExpectationRegressionFactory.java" name="MonteCarloConditionalExpectationRegressionFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="22" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MonteCarloConditionalExpectationRegressionFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/conditionalexpectation/MonteCarloConditionalExpectationRegressionLocalizedOnDependents.java" name="MonteCarloConditionalExpectationRegressionLocalizedOnDependents.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="129" coveredmethods="0" methods="6" elements="38" classes="1" ncloc="51" statements="24" conditionals="8" coveredstatements="0"/>
            <class name="MonteCarloConditionalExpectationRegressionLocalizedOnDependents">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="6" elements="38" statements="24" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationRegressionLocalizedOnDependents(RandomVariable[],RandomVariable[],double)" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationRegressionLocalizedOnDependents(RandomVariable[],double)" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationRegressionLocalizedOnDependents()" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationRegressionLocalizedOnDependents(RandomVariable[])" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationRegressionLocalizedOnDependents(RandomVariable[],RandomVariable[])" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getLinearRegressionParameters(RandomVariable) : double[]" num="92" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/conditionalexpectation/RegressionBasisFunctionsFromProducts.java" name="RegressionBasisFunctionsFromProducts.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="60" coveredmethods="0" methods="3" elements="16" classes="1" ncloc="35" statements="11" conditionals="2" coveredstatements="0"/>
            <class name="RegressionBasisFunctionsFromProducts">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="16" statements="11" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RegressionBasisFunctionsFromProducts(List&lt;AbstractMonteCarloProduct&gt;)" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBasisFunctions(double,MonteCarloSimulationModel) : RandomVariable[]" num="35" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(AbstractMonteCarloProduct) : RandomVariable" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/conditionalexpectation/RegressionBasisFunctionsProvider.java" name="RegressionBasisFunctionsProvider.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="29" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RegressionBasisFunctionsProvider">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.util">
         <metrics coveredelements="0" complexity="9" loc="50" methods="2" classes="1" statements="15" coveredconditionals="0" coveredmethods="0" elements="19" ncloc="31" files="1" conditionals="2" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/util/FileUtilities.java" name="FileUtilities.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="50" coveredmethods="0" methods="2" elements="19" classes="1" ncloc="31" statements="15" conditionals="2" coveredstatements="0"/>
            <class name="FileUtilities">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="2" elements="19" statements="15" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="5" visibility="public" signature="loadObject(File) : Object" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="23" type="cond"/>
            <line num="24" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="writeObject(File,Object) : void" num="38" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.calibration">
         <metrics coveredelements="591" complexity="148" loc="2029" methods="92" classes="7" statements="618" coveredconditionals="50" coveredmethods="51" elements="792" ncloc="1155" files="5" conditionals="82" coveredstatements="490"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/calibration/AbstractCubeCalibration.java" name="AbstractCubeCalibration.java">
            <metrics coveredelements="113" coveredconditionals="8" complexity="33" loc="463" coveredmethods="14" methods="21" elements="154" classes="2" ncloc="226" statements="119" conditionals="14" coveredstatements="91"/>
            <class name="AbstractCubeCalibration">
               <metrics coveredelements="107" coveredconditionals="8" complexity="26" coveredmethods="12" methods="18" elements="127" statements="95" conditionals="14" coveredstatements="87"/>
            </class>
            <class name="AbstractCubeCalibration.SwaptionInfo">
               <metrics coveredelements="6" coveredconditionals="0" complexity="7" coveredmethods="2" methods="3" elements="27" statements="24" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="3" visibility="public" signature="AbstractCubeCalibration(LocalDate,SwaptionDataLattice,SwaptionDataLattice,VolatilityCubeModel,AnnuityMappingType)" num="80" count="2" type="method"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="calibrate(String) : VolatilityCube" num="130" count="2" type="method"/>
            <line num="133" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="runOptimization() : void" num="148" count="2" type="method"/>
            <line num="150" count="2" type="stmt"/>
            <line complexity="7" visibility="public" signature="setValues(double[],double[]) : void" num="157" count="29" type="method"/>
            <line num="161" count="29" type="stmt"/>
            <line num="164" count="28" type="stmt"/>
            <line num="165" count="27" type="stmt"/>
            <line num="166" count="28" type="stmt"/>
            <line num="169" count="28" type="stmt"/>
            <line num="170" count="29" type="stmt"/>
            <line num="171" count="28" type="stmt"/>
            <line num="172" count="28" type="stmt"/>
            <line num="173" count="28" type="stmt"/>
            <line num="174" count="29" type="stmt"/>
            <line num="175" count="28" type="stmt"/>
            <line num="176" count="28" type="stmt"/>
            <line num="178" count="28" type="stmt"/>
            <line num="180" count="29" type="stmt"/>
            <line num="181" count="28" type="stmt"/>
            <line num="182" count="29" type="stmt"/>
            <line num="183" count="3623" type="stmt"/>
            <line num="184" count="3624" type="stmt"/>
            <line num="185" count="3625" type="stmt"/>
            <line num="186" count="3625" type="stmt"/>
            <line num="188" count="3624" type="stmt"/>
            <line falsecount="0" truecount="3624" num="189" type="cond"/>
            <line num="190" count="3624" type="stmt"/>
            <line falsecount="0" truecount="3624" num="191" type="cond"/>
            <line num="194" count="3624" type="stmt"/>
            <line num="195" count="3621" type="stmt"/>
            <line falsecount="3621" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="3623" type="stmt"/>
            <line num="200" count="3625" type="stmt"/>
            <line num="201" count="3624" type="stmt"/>
            <line num="204" count="3624" type="stmt"/>
            <line num="206" count="3624" type="stmt"/>
            <line num="210" count="29" type="stmt"/>
            <line num="211" count="29" type="stmt"/>
            <line num="212" count="29" type="stmt"/>
            <line num="213" count="3596" type="stmt"/>
            <line num="214" count="3596" type="stmt"/>
            <line num="215" count="3596" type="stmt"/>
            <line num="216" count="3596" type="stmt"/>
            <line num="218" count="3596" type="stmt"/>
            <line falsecount="0" truecount="3596" num="219" type="cond"/>
            <line num="220" count="3596" type="stmt"/>
            <line falsecount="0" truecount="3596" num="221" type="cond"/>
            <line num="224" count="3596" type="stmt"/>
            <line num="225" count="3596" type="stmt"/>
            <line falsecount="2871" truecount="725" num="225" type="cond"/>
            <line num="226" count="725" type="stmt"/>
            <line num="228" count="2871" type="stmt"/>
            <line num="230" count="2871" type="stmt"/>
            <line num="231" count="2871" type="stmt"/>
            <line num="234" count="3596" type="stmt"/>
            <line num="237" count="3596" type="stmt"/>
            <line num="265" count="2" type="stmt"/>
            <line num="266" count="2" type="stmt"/>
            <line num="268" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="generateTargets() : void" num="275" count="2" type="method"/>
            <line num="281" count="2" type="stmt"/>
            <line num="282" count="2" type="stmt"/>
            <line num="285" count="2" type="stmt"/>
            <line num="286" count="10" type="stmt"/>
            <line num="287" count="50" type="stmt"/>
            <line num="288" count="250" type="stmt"/>
            <line num="289" count="250" type="stmt"/>
            <line num="294" count="2" type="stmt"/>
            <line num="295" count="10" type="stmt"/>
            <line num="296" count="50" type="stmt"/>
            <line num="297" count="248" type="stmt"/>
            <line num="298" count="248" type="stmt"/>
            <line num="303" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCalibrationParameters(int,int) : void" num="313" count="2" type="method"/>
            <line num="314" count="2" type="stmt"/>
            <line num="315" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxIterations() : int" num="321" count="0" type="method"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfThreads() : int" num="329" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReplicationParameters(boolean,double,double,int) : void" num="341" count="2" type="method"/>
            <line num="342" count="2" type="stmt"/>
            <line num="343" count="2" type="stmt"/>
            <line num="344" count="2" type="stmt"/>
            <line num="345" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="isReplicationUseAsOffset() : boolean" num="351" count="0" type="method"/>
            <line num="352" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationLowerBound() : double" num="358" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationUpperBound() : double" num="365" count="0" type="method"/>
            <line num="366" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationNumberOfEvaluationPoints() : int" num="372" count="0" type="method"/>
            <line num="373" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="379" count="14967" type="method"/>
            <line num="380" count="14967" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : VolatilityCubeModel" num="386" count="37" type="method"/>
            <line num="387" count="37" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="393" count="20943" type="method"/>
            <line num="394" count="20945" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialParameters() : double[]" num="400" count="2" type="method"/>
            <line num="401" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInitialParameters(double[]) : void" num="408" count="2" type="method"/>
            <line num="409" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="SwaptionInfo(int,int,int)" num="431" count="498" type="method"/>
            <line num="432" count="498" type="stmt"/>
            <line num="433" count="498" type="stmt"/>
            <line num="434" count="498" type="stmt"/>
            <line complexity="5" visibility="package" signature="SwaptionInfo(int,int,int,TableConvention)" num="447" count="0" type="method"/>
            <line num="448" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="458" count="7217" type="method"/>
            <line num="460" count="7217" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/calibration/SABRCubeCalibration.java" name="SABRCubeCalibration.java">
            <metrics coveredelements="220" coveredconditionals="20" complexity="58" loc="750" coveredmethods="17" methods="33" elements="316" classes="2" ncloc="434" statements="247" conditionals="36" coveredstatements="183"/>
            <class name="SABRCubeCalibration">
               <metrics coveredelements="214" coveredconditionals="20" complexity="51" coveredmethods="15" methods="30" elements="289" statements="223" conditionals="36" coveredstatements="179"/>
            </class>
            <class name="SABRCubeCalibration.SwaptionInfo">
               <metrics coveredelements="6" coveredconditionals="0" complexity="7" coveredmethods="2" methods="3" elements="27" statements="24" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="3" visibility="public" signature="SABRCubeCalibration(LocalDate,SwaptionDataLattice,SwaptionDataLattice,SwaptionDataLattice,VolatilityCubeModel,AnnuityMappingType)" num="115" count="1" type="method"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="SABRCubeCalibration(LocalDate,SwaptionDataLattice,SwaptionDataLattice,SwaptionDataLattice,VolatilityCubeModel,AnnuityMappingType,double,double,double,double)" num="147" count="1" type="method"/>
            <line num="150" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="calibrate(String,int[]) : SABRVolatilityCube" num="167" count="1" type="method"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="172" type="cond"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="191" count="5" type="stmt"/>
            <line num="194" count="5" type="stmt"/>
            <line num="195" count="5" type="stmt"/>
            <line num="197" count="5" type="stmt"/>
            <line num="200" count="5" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInitialParameters(DataTable,DataTable,DataTable) : void" num="214" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="findInterpolationNodes() : DataTableLight" num="224" count="1" type="method"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="5" type="stmt"/>
            <line num="237" count="25" type="stmt"/>
            <line num="238" count="25" type="stmt"/>
            <line num="239" count="100" type="stmt"/>
            <line falsecount="0" truecount="100" num="239" type="cond"/>
            <line num="240" count="100" type="stmt"/>
            <line num="243" count="25" type="stmt"/>
            <line num="244" count="100" type="stmt"/>
            <line falsecount="1" truecount="99" num="244" type="cond"/>
            <line num="245" count="99" type="stmt"/>
            <line num="250" count="25" type="stmt"/>
            <line falsecount="0" truecount="25" num="250" type="cond"/>
            <line num="251" count="25" type="stmt"/>
            <line num="252" count="25" type="stmt"/>
            <line num="253" count="25" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="261" type="cond"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="264" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="270" count="1" type="stmt"/>
            <line complexity="4" visibility="private" signature="findInitialParameters() : void" num="278" count="1" type="method"/>
            <line num="280" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="280" type="cond"/>
            <line num="281" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="makeSwapRateTable() : void" num="298" count="0" type="method"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="317" type="cond"/>
            <line num="318" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="initializeParameters(int) : void" num="329" count="5" type="method"/>
            <line num="331" count="5" type="stmt"/>
            <line num="332" count="5" type="stmt"/>
            <line num="333" count="5" type="stmt"/>
            <line num="334" count="5" type="stmt"/>
            <line num="335" count="5" type="stmt"/>
            <line num="337" count="5" type="stmt"/>
            <line falsecount="5" truecount="25" num="337" type="cond"/>
            <line num="338" count="25" type="stmt"/>
            <line num="339" count="25" type="stmt"/>
            <line num="340" count="25" type="stmt"/>
            <line num="343" count="5" type="stmt"/>
            <line num="344" count="5" type="stmt"/>
            <line num="345" count="5" type="stmt"/>
            <line complexity="1" visibility="private" signature="generateTargets(int) : void" num="353" count="5" type="method"/>
            <line num="358" count="5" type="stmt"/>
            <line num="359" count="5" type="stmt"/>
            <line num="362" count="5" type="stmt"/>
            <line num="363" count="5" type="stmt"/>
            <line num="366" count="5" type="stmt"/>
            <line num="367" count="25" type="stmt"/>
            <line num="368" count="125" type="stmt"/>
            <line num="369" count="125" type="stmt"/>
            <line num="373" count="5" type="stmt"/>
            <line num="374" count="25" type="stmt"/>
            <line num="375" count="124" type="stmt"/>
            <line num="376" count="124" type="stmt"/>
            <line num="380" count="5" type="stmt"/>
            <line num="381" count="5" type="stmt"/>
            <line num="383" count="5" type="stmt"/>
            <line complexity="2" visibility="protected" signature="applyParameterBounds(double[]) : double[]" num="399" count="290" type="method"/>
            <line num="400" count="290" type="stmt"/>
            <line num="401" count="290" type="stmt"/>
            <line num="403" count="290" type="stmt"/>
            <line falsecount="290" truecount="1450" num="403" type="cond"/>
            <line num="404" count="1450" type="stmt"/>
            <line num="405" count="1450" type="stmt"/>
            <line num="406" count="1450" type="stmt"/>
            <line num="409" count="290" type="stmt"/>
            <line complexity="2" visibility="private" signature="buildSlice(String,double[]) : VolatilityCube" num="419" count="285" type="method"/>
            <line num="421" count="285" type="stmt"/>
            <line num="422" count="285" type="stmt"/>
            <line num="423" count="285" type="stmt"/>
            <line num="425" count="285" type="stmt"/>
            <line num="426" count="285" type="stmt"/>
            <line num="427" count="285" type="stmt"/>
            <line num="429" count="285" type="stmt"/>
            <line num="430" count="285" type="stmt"/>
            <line num="431" count="285" type="stmt"/>
            <line num="432" count="285" type="stmt"/>
            <line falsecount="0" truecount="285" num="432" type="cond"/>
            <line num="433" count="285" type="stmt"/>
            <line num="435" count="285" type="stmt"/>
            <line num="437" count="285" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="448" count="285" type="stmt"/>
            <line num="451" count="285" type="stmt"/>
            <line complexity="1" visibility="private" signature="gatherParameters() : void" num="457" count="5" type="method"/>
            <line num="459" count="5" type="stmt"/>
            <line num="460" count="5" type="stmt"/>
            <line num="461" count="5" type="stmt"/>
            <line num="463" count="5" type="stmt"/>
            <line num="464" count="5" type="stmt"/>
            <line num="465" count="5" type="stmt"/>
            <line num="467" count="5" type="stmt"/>
            <line num="468" count="5" type="stmt"/>
            <line num="469" count="5" type="stmt"/>
            <line complexity="1" visibility="private" signature="runOptimization() : void" num="478" count="5" type="method"/>
            <line num="480" count="5" type="stmt"/>
            <line complexity="7" visibility="public" signature="setValues(double[],double[]) : void" num="488" count="285" type="method"/>
            <line num="492" count="285" type="stmt"/>
            <line num="495" count="285" type="stmt"/>
            <line num="496" count="285" type="stmt"/>
            <line num="497" count="285" type="stmt"/>
            <line num="500" count="285" type="stmt"/>
            <line num="501" count="285" type="stmt"/>
            <line num="502" count="285" type="stmt"/>
            <line num="503" count="285" type="stmt"/>
            <line num="504" count="285" type="stmt"/>
            <line num="505" count="284" type="stmt"/>
            <line num="506" count="285" type="stmt"/>
            <line num="507" count="284" type="stmt"/>
            <line num="509" count="285" type="stmt"/>
            <line num="511" count="285" type="stmt"/>
            <line num="512" count="285" type="stmt"/>
            <line num="513" count="285" type="stmt"/>
            <line num="514" count="7125" type="stmt"/>
            <line num="515" count="7125" type="stmt"/>
            <line num="516" count="7125" type="stmt"/>
            <line num="517" count="7125" type="stmt"/>
            <line num="519" count="7125" type="stmt"/>
            <line falsecount="0" truecount="7125" num="520" type="cond"/>
            <line num="521" count="7125" type="stmt"/>
            <line falsecount="0" truecount="7125" num="522" type="cond"/>
            <line num="525" count="7125" type="stmt"/>
            <line num="526" count="7125" type="stmt"/>
            <line falsecount="7125" truecount="0" num="526" type="cond"/>
            <line num="527" count="0" type="stmt"/>
            <line num="529" count="7125" type="stmt"/>
            <line num="531" count="7125" type="stmt"/>
            <line num="532" count="7125" type="stmt"/>
            <line num="535" count="7125" type="stmt"/>
            <line num="537" count="7125" type="stmt"/>
            <line num="541" count="285" type="stmt"/>
            <line num="542" count="285" type="stmt"/>
            <line num="543" count="285" type="stmt"/>
            <line num="544" count="7100" type="stmt"/>
            <line num="545" count="7101" type="stmt"/>
            <line num="546" count="7101" type="stmt"/>
            <line num="547" count="7101" type="stmt"/>
            <line num="549" count="7101" type="stmt"/>
            <line falsecount="0" truecount="7101" num="550" type="cond"/>
            <line num="551" count="7101" type="stmt"/>
            <line falsecount="0" truecount="7101" num="552" type="cond"/>
            <line num="555" count="7101" type="stmt"/>
            <line num="556" count="7101" type="stmt"/>
            <line falsecount="5676" truecount="1425" num="556" type="cond"/>
            <line num="557" count="1425" type="stmt"/>
            <line num="559" count="5676" type="stmt"/>
            <line num="561" count="5676" type="stmt"/>
            <line num="562" count="5676" type="stmt"/>
            <line num="565" count="7101" type="stmt"/>
            <line num="568" count="7101" type="stmt"/>
            <line num="597" count="5" type="stmt"/>
            <line num="598" count="5" type="stmt"/>
            <line num="600" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCalibrationParameters(int,int) : void" num="611" count="1" type="method"/>
            <line num="612" count="1" type="stmt"/>
            <line num="613" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxIterations() : int" num="619" count="0" type="method"/>
            <line num="620" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfThreads() : int" num="627" count="0" type="method"/>
            <line num="628" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReplicationParameters(boolean,double,double,int) : void" num="639" count="1" type="method"/>
            <line num="640" count="1" type="stmt"/>
            <line num="641" count="1" type="stmt"/>
            <line num="642" count="1" type="stmt"/>
            <line num="643" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isReplicationUseAsOffset() : boolean" num="649" count="0" type="method"/>
            <line num="650" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationLowerBound() : double" num="656" count="0" type="method"/>
            <line num="657" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationUpperBound() : double" num="663" count="0" type="method"/>
            <line num="664" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationNumberOfEvaluationPoints() : int" num="670" count="0" type="method"/>
            <line num="671" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationDecay() : double" num="674" count="0" type="method"/>
            <line num="675" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCorrelationDecay(double) : void" num="679" count="0" type="method"/>
            <line num="680" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIborOisDecorrelation() : double" num="684" count="0" type="method"/>
            <line num="685" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setIborOisDecorrelation(double) : void" num="689" count="0" type="method"/>
            <line num="690" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDisplacement() : double" num="694" count="0" type="method"/>
            <line num="695" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBeta() : double" num="698" count="0" type="method"/>
            <line num="699" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isUseLinearInterpolation() : boolean" num="705" count="0" type="method"/>
            <line num="706" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUseLinearInterpolation(boolean) : void" num="712" count="1" type="method"/>
            <line num="713" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="SwaptionInfo(int,int,int)" num="728" count="249" type="method"/>
            <line num="729" count="249" type="stmt"/>
            <line num="730" count="249" type="stmt"/>
            <line num="731" count="249" type="stmt"/>
            <line complexity="5" visibility="package" signature="SwaptionInfo(int,int,int,TableConvention)" num="734" count="0" type="method"/>
            <line num="735" count="0" type="stmt"/>
            <line num="736" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="739" count="0" type="stmt"/>
            <line num="739" count="0" type="stmt"/>
            <line num="739" count="0" type="stmt"/>
            <line num="739" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="741" count="0" type="stmt"/>
            <line num="741" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="745" count="14226" type="method"/>
            <line num="747" count="14226" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/calibration/SABRCubeParallelCalibration.java" name="SABRCubeParallelCalibration.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="16" loc="121" coveredmethods="4" methods="16" elements="36" classes="1" ncloc="75" statements="20" conditionals="0" coveredstatements="8"/>
            <class name="SABRCubeParallelCalibration">
               <metrics coveredelements="12" coveredconditionals="0" complexity="16" coveredmethods="4" methods="16" elements="36" statements="20" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="SABRCubeParallelCalibration(LocalDate,SwaptionDataLattice,SwaptionDataLattice,SwaptionDataLattice,VolatilityCubeModel,AnnuityMappingType)" num="41" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="buildCube(String,double[]) : VolatilityCube" num="47" count="9" type="method"/>
            <line num="50" count="9" type="stmt"/>
            <line complexity="1" visibility="protected" signature="initializeParameters() : void" num="55" count="1" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="applyParameterBounds(double[]) : double[]" num="61" count="9" type="method"/>
            <line num="63" count="9" type="stmt"/>
            <line num="66" count="9" type="stmt"/>
            <line num="67" count="8" type="stmt"/>
            <line num="69" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialCorrelationDecay() : double" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInitialCorrelationDecay(double) : void" num="76" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialIborOisDecorrelation() : double" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInitialIborOisDecorrelation(double) : void" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialDisplacement() : double" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInitialDisplacement(double) : void" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialBeta() : double" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInitialBeta(double) : void" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialRho() : double" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInitialRho(double) : void" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialVolvol() : double" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInitialVolvol(double) : void" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/calibration/SABRShiftedSmileCalibration.java" name="SABRShiftedSmileCalibration.java">
            <metrics coveredelements="234" coveredconditionals="22" complexity="36" loc="617" coveredmethods="12" methods="17" elements="270" classes="1" ncloc="382" statements="221" conditionals="32" coveredstatements="200"/>
            <class name="SABRShiftedSmileCalibration">
               <metrics coveredelements="234" coveredconditionals="22" complexity="36" coveredmethods="12" methods="17" elements="270" statements="221" conditionals="32" coveredstatements="200"/>
            </class>
            <line complexity="1" visibility="public" signature="createSABRVolatilityCube(String,LocalDate,SwaptionDataLattice,SwaptionDataLattice,SwaptionDataLattice,AnalyticModel,double,double,double,double) : SABRVolatilityCube" num="89" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createVolatilityCubeLattice(String,LocalDate,SwaptionDataLattice,SwaptionDataLattice,SwaptionDataLattice,AnalyticModel) : Map&lt;Integer, DataTable&gt;" num="110" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SABRShiftedSmileCalibration(LocalDate,SwaptionDataLattice,SwaptionDataLattice,SwaptionDataLattice,AnalyticModel,double,double,double,double)" num="142" count="11" type="method"/>
            <line num="145" count="11" type="stmt"/>
            <line num="146" count="11" type="stmt"/>
            <line num="147" count="11" type="stmt"/>
            <line num="148" count="11" type="stmt"/>
            <line num="149" count="11" type="stmt"/>
            <line num="150" count="11" type="stmt"/>
            <line num="151" count="11" type="stmt"/>
            <line num="152" count="11" type="stmt"/>
            <line num="153" count="11" type="stmt"/>
            <line num="154" count="11" type="stmt"/>
            <line num="156" count="11" type="stmt"/>
            <line num="157" count="11" type="stmt"/>
            <line num="158" count="11" type="stmt"/>
            <line num="159" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="build(String) : SABRVolatilityCube" num="170" count="11" type="method"/>
            <line num="172" count="11" type="stmt"/>
            <line num="173" count="11" type="stmt"/>
            <line num="175" count="11" type="stmt"/>
            <line num="176" count="11" type="stmt"/>
            <line num="178" count="11" type="stmt"/>
            <line num="179" count="11" type="stmt"/>
            <line num="181" count="11" type="stmt"/>
            <line complexity="4" visibility="private" signature="calibrateSmilesOnNodes() : void" num="193" count="11" type="method"/>
            <line num="196" count="11" type="stmt"/>
            <line num="197" count="11" type="stmt"/>
            <line num="198" count="11" type="stmt"/>
            <line num="199" count="11" type="stmt"/>
            <line num="200" count="11" type="stmt"/>
            <line num="203" count="11" type="stmt"/>
            <line num="205" count="11" type="stmt"/>
            <line num="206" count="11" type="stmt"/>
            <line num="209" count="11" type="stmt"/>
            <line num="210" count="11" type="stmt"/>
            <line num="211" count="55" type="stmt"/>
            <line num="213" count="11" type="stmt"/>
            <line num="214" count="11" type="stmt"/>
            <line num="215" count="55" type="stmt"/>
            <line num="218" count="11" type="stmt"/>
            <line num="219" count="55" type="stmt"/>
            <line num="220" count="275" type="stmt"/>
            <line num="221" count="275" type="stmt"/>
            <line num="225" count="275" type="stmt"/>
            <line num="226" count="275" type="stmt"/>
            <line num="227" count="2475" type="stmt"/>
            <line falsecount="11" truecount="2464" num="227" type="cond"/>
            <line num="228" count="2464" type="stmt"/>
            <line num="232" count="275" type="stmt"/>
            <line num="233" count="275" type="stmt"/>
            <line num="235" count="275" type="stmt"/>
            <line num="236" count="275" type="stmt"/>
            <line num="237" count="2475" type="stmt"/>
            <line falsecount="11" truecount="2464" num="237" type="cond"/>
            <line num="238" count="2464" type="stmt"/>
            <line num="239" count="2464" type="stmt"/>
            <line num="245" count="275" type="stmt"/>
            <line complexity="2" visibility="public" signature="setValues(double[],double[]) : void" num="253" count="29677" type="method"/>
            <line num="257" count="29683" type="stmt"/>
            <line num="258" count="29682" type="stmt"/>
            <line num="259" count="29680" type="stmt"/>
            <line num="261" count="29683" type="stmt"/>
            <line falsecount="29686" truecount="265974" num="261" type="cond"/>
            <line num="262" count="265999" type="stmt"/>
            <line num="269" count="275" type="stmt"/>
            <line num="273" count="275" type="stmt"/>
            <line num="276" count="275" type="stmt"/>
            <line num="277" count="275" type="stmt"/>
            <line num="278" count="275" type="stmt"/>
            <line num="279" count="275" type="stmt"/>
            <line num="280" count="275" type="stmt"/>
            <line num="282" count="275" type="stmt"/>
            <line num="286" count="11" type="stmt"/>
            <line falsecount="0" truecount="11" num="286" type="cond"/>
            <line num="287" count="11" type="stmt"/>
            <line num="289" count="11" type="stmt"/>
            <line num="291" count="11" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="findInterpolationNodes() : void" num="305" count="11" type="method"/>
            <line num="307" count="11" type="stmt"/>
            <line num="308" count="11" type="stmt"/>
            <line num="309" count="11" type="stmt"/>
            <line num="311" count="11" type="stmt"/>
            <line num="312" count="11" type="stmt"/>
            <line num="313" count="11" type="stmt"/>
            <line num="314" count="11" type="stmt"/>
            <line num="316" count="11" type="stmt"/>
            <line num="317" count="55" type="stmt"/>
            <line num="318" count="275" type="stmt"/>
            <line num="319" count="275" type="stmt"/>
            <line num="320" count="1100" type="stmt"/>
            <line falsecount="0" truecount="1100" num="320" type="cond"/>
            <line num="321" count="1100" type="stmt"/>
            <line num="324" count="275" type="stmt"/>
            <line num="325" count="1100" type="stmt"/>
            <line falsecount="11" truecount="1089" num="325" type="cond"/>
            <line num="326" count="1089" type="stmt"/>
            <line num="331" count="275" type="stmt"/>
            <line falsecount="0" truecount="275" num="331" type="cond"/>
            <line num="332" count="275" type="stmt"/>
            <line num="333" count="275" type="stmt"/>
            <line num="334" count="275" type="stmt"/>
            <line num="338" count="11" type="stmt"/>
            <line num="342" count="11" type="stmt"/>
            <line falsecount="11" truecount="0" num="342" type="cond"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="345" type="cond"/>
            <line num="346" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="makePhysicalVolatilities() : void" num="356" count="11" type="method"/>
            <line num="359" count="11" type="stmt"/>
            <line num="360" count="11" type="stmt"/>
            <line num="361" count="11" type="stmt"/>
            <line num="363" count="11" type="stmt"/>
            <line num="364" count="11" type="stmt"/>
            <line num="365" count="55" type="stmt"/>
            <line num="366" count="275" type="stmt"/>
            <line num="367" count="275" type="stmt"/>
            <line num="369" count="275" type="stmt"/>
            <line num="370" count="275" type="stmt"/>
            <line num="372" count="275" type="stmt"/>
            <line num="373" count="275" type="stmt"/>
            <line num="374" count="275" type="stmt"/>
            <line num="376" count="275" type="stmt"/>
            <line num="381" count="11" type="stmt"/>
            <line num="384" count="11" type="stmt"/>
            <line num="385" count="11" type="stmt"/>
            <line num="387" count="11" type="stmt"/>
            <line num="388" count="11" type="stmt"/>
            <line num="394" count="11" type="stmt"/>
            <line num="395" count="11" type="stmt"/>
            <line num="396" count="11" type="stmt"/>
            <line num="398" count="11" type="stmt"/>
            <line num="400" count="44" type="stmt"/>
            <line num="401" count="44" type="stmt"/>
            <line num="402" count="44" type="stmt"/>
            <line num="404" count="44" type="stmt"/>
            <line num="405" count="44" type="stmt"/>
            <line num="406" count="44" type="stmt"/>
            <line num="409" count="44" type="stmt"/>
            <line num="410" count="220" type="stmt"/>
            <line num="411" count="1100" type="stmt"/>
            <line num="414" count="1100" type="stmt"/>
            <line falsecount="0" truecount="1100" num="414" type="cond"/>
            <line num="415" count="1100" type="stmt"/>
            <line num="416" count="1100" type="stmt"/>
            <line num="418" count="1100" type="stmt"/>
            <line num="419" count="1100" type="stmt"/>
            <line num="420" count="1100" type="stmt"/>
            <line num="424" count="1100" type="stmt"/>
            <line falsecount="11" truecount="1089" num="424" type="cond"/>
            <line num="425" count="1089" type="stmt"/>
            <line num="426" count="1089" type="stmt"/>
            <line num="428" count="1089" type="stmt"/>
            <line num="429" count="1089" type="stmt"/>
            <line num="430" count="1089" type="stmt"/>
            <line num="435" count="44" type="stmt"/>
            <line num="437" count="44" type="stmt"/>
            <line num="441" count="44" type="stmt"/>
            <line num="442" count="44" type="stmt"/>
            <line complexity="2" visibility="private" signature="findPayerVolatilities() : void" num="449" count="11" type="method"/>
            <line num="452" count="11" type="stmt"/>
            <line num="453" count="11" type="stmt"/>
            <line num="455" count="55" type="stmt"/>
            <line num="456" count="55" type="stmt"/>
            <line num="457" count="55" type="stmt"/>
            <line num="459" count="55" type="stmt"/>
            <line num="460" count="275" type="stmt"/>
            <line num="461" count="1375" type="stmt"/>
            <line falsecount="0" truecount="1375" num="461" type="cond"/>
            <line num="463" count="1375" type="stmt"/>
            <line num="464" count="1375" type="stmt"/>
            <line num="466" count="1375" type="stmt"/>
            <line num="467" count="1375" type="stmt"/>
            <line num="468" count="1375" type="stmt"/>
            <line num="470" count="1375" type="stmt"/>
            <line num="471" count="1375" type="stmt"/>
            <line num="472" count="1375" type="stmt"/>
            <line num="477" count="55" type="stmt"/>
            <line num="478" count="55" type="stmt"/>
            <line complexity="2" visibility="private" signature="findReceiverVolatilities() : void" num="486" count="11" type="method"/>
            <line num="489" count="11" type="stmt"/>
            <line num="490" count="11" type="stmt"/>
            <line num="492" count="55" type="stmt"/>
            <line num="493" count="55" type="stmt"/>
            <line num="494" count="55" type="stmt"/>
            <line num="496" count="55" type="stmt"/>
            <line num="497" count="275" type="stmt"/>
            <line num="498" count="1375" type="stmt"/>
            <line falsecount="11" truecount="1364" num="498" type="cond"/>
            <line num="500" count="1364" type="stmt"/>
            <line num="501" count="1364" type="stmt"/>
            <line num="503" count="1364" type="stmt"/>
            <line num="504" count="1364" type="stmt"/>
            <line num="505" count="1364" type="stmt"/>
            <line num="507" count="1364" type="stmt"/>
            <line num="508" count="1364" type="stmt"/>
            <line num="509" count="1364" type="stmt"/>
            <line num="514" count="55" type="stmt"/>
            <line num="515" count="55" type="stmt"/>
            <line complexity="2" visibility="private" signature="makeSwapRateTable() : void" num="522" count="11" type="method"/>
            <line num="524" count="11" type="stmt"/>
            <line num="525" count="11" type="stmt"/>
            <line num="526" count="11" type="stmt"/>
            <line num="528" count="11" type="stmt"/>
            <line num="529" count="11" type="stmt"/>
            <line num="530" count="55" type="stmt"/>
            <line num="531" count="275" type="stmt"/>
            <line num="532" count="275" type="stmt"/>
            <line num="534" count="275" type="stmt"/>
            <line num="535" count="275" type="stmt"/>
            <line num="537" count="275" type="stmt"/>
            <line num="538" count="275" type="stmt"/>
            <line num="539" count="275" type="stmt"/>
            <line num="541" count="275" type="stmt"/>
            <line num="545" count="11" type="stmt"/>
            <line falsecount="0" truecount="11" num="545" type="cond"/>
            <line num="546" count="11" type="stmt"/>
            <line num="549" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCalibrationParameters(int,int) : void" num="560" count="11" type="method"/>
            <line num="561" count="11" type="stmt"/>
            <line num="562" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxIterations() : int" num="568" count="0" type="method"/>
            <line num="569" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfThreads() : int" num="576" count="0" type="method"/>
            <line num="577" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isUseLinearInterpolation() : boolean" num="583" count="0" type="method"/>
            <line num="584" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUseLinearInterpolation(boolean) : void" num="590" count="2" type="method"/>
            <line num="591" count="2" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunction(double,Schedule) : double" num="601" count="2739" type="method"/>
            <line num="603" count="2739" type="stmt"/>
            <line num="604" count="2739" type="stmt"/>
            <line num="605" count="2739" type="stmt"/>
            <line falsecount="2739" truecount="27995" num="605" type="cond"/>
            <line num="606" count="27995" type="stmt"/>
            <line num="608" count="2739" type="stmt"/>
            <line num="610" count="2739" type="stmt"/>
            <line falsecount="2739" truecount="0" num="610" type="cond"/>
            <line num="611" count="0" type="stmt"/>
            <line num="613" count="2739" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/calibration/StaticCubeCalibration.java" name="StaticCubeCalibration.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="5" loc="78" coveredmethods="4" methods="5" elements="16" classes="1" ncloc="38" statements="11" conditionals="0" coveredstatements="8"/>
            <class name="StaticCubeCalibration">
               <metrics coveredelements="12" coveredconditionals="0" complexity="5" coveredmethods="4" methods="5" elements="16" statements="11" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="StaticCubeCalibration(LocalDate,SwaptionDataLattice,SwaptionDataLattice,VolatilityCubeModel,AnnuityMappingType)" num="33" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="StaticCubeCalibration(LocalDate,SwaptionDataLattice,SwaptionDataLattice,VolatilityCubeModel,AnnuityMappingType,double,double)" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="buildCube(String,double[]) : VolatilityCube" num="57" count="21" type="method"/>
            <line num="59" count="22" type="stmt"/>
            <line complexity="1" visibility="protected" signature="initializeParameters() : void" num="62" count="1" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="applyParameterBounds(double[]) : double[]" num="69" count="21" type="method"/>
            <line num="71" count="21" type="stmt"/>
            <line num="72" count="21" type="stmt"/>
            <line num="73" count="21" type="stmt"/>
            <line num="74" count="22" type="stmt"/>
            <line num="75" count="22" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.models">
         <metrics coveredelements="990" complexity="628" loc="6034" methods="250" classes="15" statements="1910" coveredconditionals="232" coveredmethods="75" elements="2818" ncloc="3515" files="7" conditionals="658" coveredstatements="683"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/HullWhiteModel.java" name="HullWhiteModel.java">
            <metrics coveredelements="407" coveredconditionals="78" complexity="105" loc="980" coveredmethods="36" methods="45" elements="509" classes="1" ncloc="638" statements="350" conditionals="114" coveredstatements="293"/>
            <class name="HullWhiteModel">
               <metrics coveredelements="407" coveredconditionals="78" complexity="105" coveredmethods="36" methods="45" elements="509" statements="350" conditionals="114" coveredstatements="293"/>
            </class>
            <line complexity="3" visibility="public" signature="HullWhiteModel(RandomVariableFactory,TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,ShortRateVolatilityModel,Map&lt;String, Object&gt;)" num="164" count="78" type="method"/>
            <line num="174" count="78" type="stmt"/>
            <line num="175" count="78" type="stmt"/>
            <line num="176" count="78" type="stmt"/>
            <line num="177" count="78" type="stmt"/>
            <line num="178" count="78" type="stmt"/>
            <line num="179" count="78" type="stmt"/>
            <line num="181" count="78" type="stmt"/>
            <line num="182" count="78" type="stmt"/>
            <line falsecount="0" truecount="78" num="182" type="cond"/>
            <line num="183" count="78" type="stmt"/>
            <line num="184" count="20" type="stmt"/>
            <line falsecount="0" truecount="20" num="184" type="cond"/>
            <line num="185" count="20" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="193" count="78" type="stmt"/>
            <line num="194" count="77" type="stmt"/>
            <line complexity="1" visibility="public" signature="HullWhiteModel(TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,ShortRateVolatilityModel,Map&lt;String, Object&gt;)" num="207" count="18" type="method"/>
            <line num="215" count="18" type="stmt"/>
            <line complexity="6" visibility="public" signature="of(RandomVariableFactory,TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,ShortRateVolatilityModel,CalibrationProduct[],Map&lt;String, Object&gt;) : HullWhiteModel" num="233" count="2" type="method"/>
            <line num="244" count="2" type="stmt"/>
            <line num="247" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="247" type="cond"/>
            <line num="248" count="2" type="stmt"/>
            <line num="249" count="2" type="stmt"/>
            <line num="250" count="2" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="256" count="2" type="stmt"/>
            <line num="257" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="257" type="cond"/>
            <line num="258" count="2" type="stmt"/>
            <line num="261" count="2" type="stmt"/>
            <line num="263" count="2" type="stmt"/>
            <line num="265" count="2" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="272" count="8738" type="method"/>
            <line num="274" count="8844" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="277" count="148" type="method"/>
            <line num="279" count="148" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="282" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="288" count="19982" type="method"/>
            <line num="290" count="19983" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="293" count="17748" type="method"/>
            <line num="295" count="17799" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="298" count="74" type="method"/>
            <line num="301" count="74" type="stmt"/>
            <line num="302" count="74" type="stmt"/>
            <line complexity="6" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="305" count="15137" type="method"/>
            <line num="307" count="15229" type="stmt"/>
            <line falsecount="15257" truecount="0" num="307" type="cond"/>
            <line num="308" count="0" type="stmt"/>
            <line num="311" count="15265" type="stmt"/>
            <line falsecount="11554" truecount="3904" num="311" type="cond"/>
            <line num="313" count="3816" type="stmt"/>
            <line num="314" count="3954" type="stmt"/>
            <line num="317" count="11536" type="stmt"/>
            <line num="318" count="11384" type="stmt"/>
            <line falsecount="8221" truecount="3137" num="318" type="cond"/>
            <line num="324" count="3093" type="stmt"/>
            <line num="325" count="3278" type="stmt"/>
            <line falsecount="0" truecount="3270" num="325" type="cond"/>
            <line num="326" count="3190" type="stmt"/>
            <line num="328" count="3189" type="stmt"/>
            <line num="329" count="3196" type="stmt"/>
            <line num="330" count="3325" type="stmt"/>
            <line num="333" count="3357" type="stmt"/>
            <line num="338" count="8178" type="stmt"/>
            <line num="340" count="8263" type="stmt"/>
            <line num="343" count="8262" type="stmt"/>
            <line num="346" count="8263" type="stmt"/>
            <line num="347" count="8263" type="stmt"/>
            <line falsecount="0" truecount="8264" num="347" type="cond"/>
            <line num="348" count="8263" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="354" count="8264" type="stmt"/>
            <line num="356" count="8264" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardDiscountBond(MonteCarloProcess,double,double) : RandomVariable" num="359" count="0" type="method"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="367" count="9898" type="method"/>
            <line num="370" count="9893" type="stmt"/>
            <line num="371" count="9918" type="stmt"/>
            <line num="373" count="9918" type="stmt"/>
            <line falsecount="9914" truecount="0" num="373" type="cond"/>
            <line num="374" count="0" type="stmt"/>
            <line num="377" count="9912" type="stmt"/>
            <line num="378" count="9914" type="stmt"/>
            <line falsecount="9283" truecount="624" num="378" type="cond"/>
            <line num="379" count="624" type="stmt"/>
            <line num="381" count="9905" type="stmt"/>
            <line num="383" count="9912" type="stmt"/>
            <line num="384" count="9917" type="stmt"/>
            <line num="386" count="9919" type="stmt"/>
            <line complexity="4" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="389" count="19574" type="method"/>
            <line num="391" count="19681" type="stmt"/>
            <line num="392" count="19783" type="stmt"/>
            <line num="394" count="19810" type="stmt"/>
            <line num="395" count="19720" type="stmt"/>
            <line falsecount="18483" truecount="1232" num="395" type="cond"/>
            <line num="396" count="1229" type="stmt"/>
            <line num="399" count="19720" type="stmt"/>
            <line num="400" count="19792" type="stmt"/>
            <line num="402" count="19774" type="stmt"/>
            <line num="404" count="19794" type="stmt"/>
            <line num="406" count="19783" type="stmt"/>
            <line num="407" count="19789" type="stmt"/>
            <line falsecount="9919" truecount="9918" num="407" type="cond"/>
            <line num="409" count="9904" type="stmt"/>
            <line num="410" count="9910" type="stmt"/>
            <line num="412" count="9919" type="stmt"/>
            <line falsecount="0" truecount="9917" num="412" type="cond"/>
            <line num="414" count="9913" type="stmt"/>
            <line num="415" count="9916" type="stmt"/>
            <line num="416" count="9918" type="stmt"/>
            <line num="417" count="9920" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line num="423" count="19828" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="426" count="2109" type="method"/>
            <line num="428" count="2109" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,double,double,double) : RandomVariable" num="431" count="12766" type="method"/>
            <line num="434" count="12766" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,int,int) : RandomVariable" num="437" count="0" type="method"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="442" count="9106" type="method"/>
            <line num="444" count="9105" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="447" count="294" type="method"/>
            <line num="449" count="294" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriod(int) : double" num="452" count="404" type="method"/>
            <line num="454" count="404" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="457" count="0" type="method"/>
            <line num="459" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnalyticModel() : AnalyticModel" num="462" count="7175" type="method"/>
            <line num="464" count="7177" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="467" count="11528" type="method"/>
            <line num="469" count="11529" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRateCurve() : ForwardCurve" num="472" count="12977" type="method"/>
            <line num="474" count="12980" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORModel" num="477" count="0" type="method"/>
            <line num="479" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="479" type="cond"/>
            <line num="480" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line num="484" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getShortRate(MonteCarloProcess,int) : RandomVariable" num="496" count="30095" type="method"/>
            <line num="497" count="30096" type="stmt"/>
            <line num="498" count="30098" type="stmt"/>
            <line falsecount="40" truecount="30056" num="498" type="cond"/>
            <line num="499" count="30100" type="stmt"/>
            <line num="501" count="30102" type="stmt"/>
            <line num="503" count="30099" type="stmt"/>
            <line num="505" count="30101" type="stmt"/>
            <line num="506" count="30100" type="stmt"/>
            <line num="509" count="30103" type="stmt"/>
            <line num="511" count="30102" type="stmt"/>
            <line complexity="2" visibility="private" signature="getZeroCouponBond(MonteCarloProcess,double,double) : RandomVariable" num="514" count="34643" type="method"/>
            <line num="515" count="34648" type="stmt"/>
            <line num="516" count="34653" type="stmt"/>
            <line falsecount="30099" truecount="4549" num="516" type="cond"/>
            <line num="517" count="4551" type="stmt"/>
            <line num="518" count="4549" type="stmt"/>
            <line num="519" count="4550" type="stmt"/>
            <line num="521" count="30101" type="stmt"/>
            <line num="522" count="30103" type="stmt"/>
            <line num="523" count="30103" type="stmt"/>
            <line num="524" count="30104" type="stmt"/>
            <line complexity="3" visibility="private" signature="getIntegratedDriftAdjustment(MonteCarloProcess,int) : RandomVariable" num="534" count="0" type="method"/>
            <line num="535" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="536" type="cond"/>
            <line num="537" count="0" type="stmt"/>
            <line num="538" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line num="541" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="541" type="cond"/>
            <line num="542" count="0" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getA(MonteCarloProcess,double,double) : RandomVariable" num="562" count="30103" type="method"/>
            <line num="563" count="30102" type="stmt"/>
            <line num="564" count="30103" type="stmt"/>
            <line num="566" count="30102" type="stmt"/>
            <line num="568" count="30102" type="stmt"/>
            <line num="570" count="30103" type="stmt"/>
            <line num="572" count="30103" type="stmt"/>
            <line num="574" count="30104" type="stmt"/>
            <line complexity="4" visibility="private" signature="getMRTime(double,double) : RandomVariable" num="584" count="1520570" type="method"/>
            <line num="585" count="1520874" type="stmt"/>
            <line num="586" count="1521142" type="stmt"/>
            <line falsecount="1390361" truecount="130850" num="586" type="cond"/>
            <line num="587" count="130808" type="stmt"/>
            <line num="590" count="1521097" type="stmt"/>
            <line num="591" count="1520637" type="stmt"/>
            <line falsecount="1342676" truecount="178068" num="591" type="cond"/>
            <line num="592" count="178011" type="stmt"/>
            <line num="595" count="1520752" type="stmt"/>
            <line num="596" count="1520665" type="stmt"/>
            <line num="597" count="1520733" type="stmt"/>
            <line num="598" count="1520700" type="stmt"/>
            <line falsecount="1520249" truecount="13889020" num="598" type="cond"/>
            <line num="599" count="13891546" type="stmt"/>
            <line num="600" count="13824275" type="stmt"/>
            <line num="601" count="13842946" type="stmt"/>
            <line num="602" count="13851909" type="stmt"/>
            <line num="604" count="1520290" type="stmt"/>
            <line num="605" count="1520393" type="stmt"/>
            <line num="606" count="1520906" type="stmt"/>
            <line num="608" count="1520527" type="stmt"/>
            <line complexity="4" visibility="private" signature="getB(double,double) : RandomVariable" num="619" count="80070" type="method"/>
            <line num="620" count="80079" type="stmt"/>
            <line num="621" count="80095" type="stmt"/>
            <line falsecount="39531" truecount="40556" num="621" type="cond"/>
            <line num="622" count="40556" type="stmt"/>
            <line num="625" count="80083" type="stmt"/>
            <line num="626" count="80095" type="stmt"/>
            <line falsecount="39416" truecount="40667" num="626" type="cond"/>
            <line num="627" count="40668" type="stmt"/>
            <line num="630" count="80079" type="stmt"/>
            <line num="631" count="80095" type="stmt"/>
            <line num="632" count="80092" type="stmt"/>
            <line num="633" count="80091" type="stmt"/>
            <line falsecount="80099" truecount="340317" num="633" type="cond"/>
            <line num="634" count="340345" type="stmt"/>
            <line num="635" count="340331" type="stmt"/>
            <line num="636" count="340418" type="stmt"/>
            <line num="639" count="340252" type="stmt"/>
            <line num="641" count="80095" type="stmt"/>
            <line num="642" count="80102" type="stmt"/>
            <line num="643" count="80098" type="stmt"/>
            <line num="647" count="80097" type="stmt"/>
            <line complexity="5" visibility="private" signature="getV(double,double) : RandomVariable" num="660" count="18136" type="method"/>
            <line num="661" count="18151" type="stmt"/>
            <line falsecount="18128" truecount="0" num="661" type="cond"/>
            <line num="662" count="0" type="stmt"/>
            <line num="664" count="18120" type="stmt"/>
            <line num="665" count="18088" type="stmt"/>
            <line falsecount="17442" truecount="624" num="665" type="cond"/>
            <line num="666" count="624" type="stmt"/>
            <line num="669" count="18029" type="stmt"/>
            <line num="670" count="18114" type="stmt"/>
            <line falsecount="9676" truecount="8417" num="670" type="cond"/>
            <line num="671" count="8333" type="stmt"/>
            <line num="674" count="18038" type="stmt"/>
            <line num="675" count="18074" type="stmt"/>
            <line num="676" count="18081" type="stmt"/>
            <line num="677" count="18065" type="stmt"/>
            <line num="678" count="18095" type="stmt"/>
            <line falsecount="17900" truecount="16701" num="678" type="cond"/>
            <line num="679" count="16698" type="stmt"/>
            <line num="680" count="16697" type="stmt"/>
            <line num="681" count="16702" type="stmt"/>
            <line num="682" count="16703" type="stmt"/>
            <line num="683" count="16703" type="stmt"/>
            <line num="684" count="16704" type="stmt"/>
            <line num="689" count="16699" type="stmt"/>
            <line num="690" count="16698" type="stmt"/>
            <line num="692" count="17885" type="stmt"/>
            <line num="693" count="17917" type="stmt"/>
            <line num="694" count="18042" type="stmt"/>
            <line num="695" count="18047" type="stmt"/>
            <line num="696" count="18100" type="stmt"/>
            <line num="697" count="18117" type="stmt"/>
            <line num="703" count="18118" type="stmt"/>
            <line complexity="5" visibility="private" signature="getDV(double,double) : RandomVariable" num="706" count="40005" type="method"/>
            <line num="707" count="40009" type="stmt"/>
            <line falsecount="39967" truecount="40" num="707" type="cond"/>
            <line num="708" count="40" type="stmt"/>
            <line num="710" count="39966" type="stmt"/>
            <line num="711" count="39981" type="stmt"/>
            <line falsecount="39354" truecount="624" num="711" type="cond"/>
            <line num="712" count="624" type="stmt"/>
            <line num="715" count="39971" type="stmt"/>
            <line num="716" count="39980" type="stmt"/>
            <line falsecount="19712" truecount="20261" num="716" type="cond"/>
            <line num="717" count="20260" type="stmt"/>
            <line num="720" count="39967" type="stmt"/>
            <line num="721" count="39977" type="stmt"/>
            <line num="722" count="39977" type="stmt"/>
            <line num="723" count="39972" type="stmt"/>
            <line num="724" count="39982" type="stmt"/>
            <line falsecount="39977" truecount="248541" num="724" type="cond"/>
            <line num="725" count="248543" type="stmt"/>
            <line num="726" count="248533" type="stmt"/>
            <line num="727" count="248573" type="stmt"/>
            <line num="728" count="248580" type="stmt"/>
            <line num="729" count="248592" type="stmt"/>
            <line num="730" count="248541" type="stmt"/>
            <line num="734" count="248514" type="stmt"/>
            <line num="735" count="248537" type="stmt"/>
            <line num="737" count="39975" type="stmt"/>
            <line num="738" count="39974" type="stmt"/>
            <line num="739" count="39982" type="stmt"/>
            <line num="740" count="39981" type="stmt"/>
            <line num="741" count="39983" type="stmt"/>
            <line num="742" count="39982" type="stmt"/>
            <line num="747" count="39983" type="stmt"/>
            <line complexity="4" visibility="public" signature="getShortRateConditionalVariance(double,double) : RandomVariable" num="760" count="30163" type="method"/>
            <line num="761" count="30163" type="stmt"/>
            <line num="762" count="30162" type="stmt"/>
            <line falsecount="30162" truecount="0" num="762" type="cond"/>
            <line num="763" count="0" type="stmt"/>
            <line num="766" count="30160" type="stmt"/>
            <line num="767" count="30164" type="stmt"/>
            <line falsecount="10480" truecount="19683" num="767" type="cond"/>
            <line num="768" count="19684" type="stmt"/>
            <line num="771" count="30164" type="stmt"/>
            <line num="772" count="30164" type="stmt"/>
            <line num="773" count="30164" type="stmt"/>
            <line num="774" count="30163" type="stmt"/>
            <line num="775" count="30163" type="stmt"/>
            <line falsecount="30162" truecount="239300" num="775" type="cond"/>
            <line num="776" count="239303" type="stmt"/>
            <line num="777" count="239284" type="stmt"/>
            <line num="778" count="239332" type="stmt"/>
            <line num="779" count="239328" type="stmt"/>
            <line num="780" count="239331" type="stmt"/>
            <line num="781" count="239303" type="stmt"/>
            <line num="783" count="239276" type="stmt"/>
            <line num="784" count="239304" type="stmt"/>
            <line num="786" count="30163" type="stmt"/>
            <line num="787" count="30162" type="stmt"/>
            <line num="788" count="30164" type="stmt"/>
            <line num="789" count="30164" type="stmt"/>
            <line num="790" count="30164" type="stmt"/>
            <line num="791" count="30163" type="stmt"/>
            <line num="794" count="30163" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegratedBondSquaredVolatility(double,double) : RandomVariable" num="797" count="60" type="method"/>
            <line num="798" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedVolatilityModel(ShortRateVolatilityModel) : HullWhiteModel" num="801" count="58" type="method"/>
            <line num="803" count="58" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilityModel() : ShortRateVolatilityModel" num="806" count="2" type="method"/>
            <line num="808" count="2" type="stmt"/>
            <line complexity="6" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="811" count="0" type="method"/>
            <line num="814" count="0" type="stmt"/>
            <line num="816" count="0" type="stmt"/>
            <line num="818" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="818" type="cond"/>
            <line num="821" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="821" type="cond"/>
            <line num="822" count="0" type="stmt"/>
            <line num="826" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="826" type="cond"/>
            <line num="827" count="0" type="stmt"/>
            <line num="829" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="829" type="cond"/>
            <line num="830" count="0" type="stmt"/>
            <line num="837" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="837" type="cond"/>
            <line num="838" count="0" type="stmt"/>
            <line num="841" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getDiscountFactor(MonteCarloProcess,double) : RandomVariable" num="844" count="8261" type="method"/>
            <line num="845" count="8262" type="stmt"/>
            <line falsecount="0" truecount="8263" num="845" type="cond"/>
            <line num="846" count="8263" type="stmt"/>
            <line num="847" count="8263" type="stmt"/>
            <line falsecount="0" truecount="8264" num="847" type="cond"/>
            <line num="848" count="8264" type="stmt"/>
            <line num="852" count="0" type="stmt"/>
            <line num="853" count="0" type="stmt"/>
            <line num="854" count="0" type="stmt"/>
            <line num="855" count="0" type="stmt"/>
            <line num="856" count="0" type="stmt"/>
            <line num="857" count="0" type="stmt"/>
            <line num="858" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getDiscountFactor(MonteCarloProcess,int) : RandomVariable" num="862" count="8261" type="method"/>
            <line num="863" count="8262" type="stmt"/>
            <line falsecount="0" truecount="8263" num="863" type="cond"/>
            <line num="864" count="8263" type="stmt"/>
            <line num="866" count="8261" type="stmt"/>
            <line num="867" count="8264" type="stmt"/>
            <line falsecount="8190" truecount="74" num="867" type="cond"/>
            <line num="868" count="74" type="stmt"/>
            <line num="869" count="74" type="stmt"/>
            <line num="871" count="74" type="stmt"/>
            <line num="873" count="74" type="stmt"/>
            <line falsecount="74" truecount="9911" num="873" type="cond"/>
            <line num="874" count="9911" type="stmt"/>
            <line num="875" count="9912" type="stmt"/>
            <line num="876" count="9915" type="stmt"/>
            <line num="877" count="9916" type="stmt"/>
            <line num="878" count="9911" type="stmt"/>
            <line num="879" count="9906" type="stmt"/>
            <line num="880" count="9904" type="stmt"/>
            <line num="881" count="9910" type="stmt"/>
            <line num="884" count="8264" type="stmt"/>
            <line num="885" count="8264" type="stmt"/>
            <line complexity="3" visibility="private" signature="getZeroRateFromForwardCurve(MonteCarloProcess,double) : RandomVariable" num="889" count="60193" type="method"/>
            <line num="890" count="60196" type="stmt"/>
            <line falsecount="0" truecount="60199" num="890" type="cond"/>
            <line num="892" count="60195" type="stmt"/>
            <line num="893" count="60202" type="stmt"/>
            <line falsecount="60199" truecount="0" num="893" type="cond"/>
            <line num="894" count="0" type="stmt"/>
            <line num="897" count="60201" type="stmt"/>
            <line num="898" count="60200" type="stmt"/>
            <line complexity="3" visibility="private" signature="getDiscountFactorFromForwardCurve(MonteCarloProcess,double) : RandomVariable" num="901" count="76729" type="method"/>
            <line num="902" count="76731" type="stmt"/>
            <line falsecount="0" truecount="76733" num="902" type="cond"/>
            <line num="903" count="76729" type="stmt"/>
            <line num="904" count="76735" type="stmt"/>
            <line falsecount="9106" truecount="67628" num="904" type="cond"/>
            <line num="905" count="67623" type="stmt"/>
            <line num="908" count="9106" type="stmt"/>
            <line num="909" count="9106" type="stmt"/>
            <line num="910" count="9106" type="stmt"/>
            <line num="911" count="9106" type="stmt"/>
            <line num="912" count="9106" type="stmt"/>
            <line num="913" count="9106" type="stmt"/>
            <line num="914" count="9106" type="stmt"/>
            <line complexity="5" visibility="private" signature="getDiscountFactorFromForwardCurve(MonteCarloProcess,int) : RandomVariable" num="918" count="206225" type="method"/>
            <line num="919" count="206233" type="stmt"/>
            <line num="920" count="206241" type="stmt"/>
            <line falsecount="204971" truecount="1272" num="920" type="cond"/>
            <line num="922" count="1272" type="stmt"/>
            <line falsecount="0" truecount="1272" num="922" type="cond"/>
            <line num="923" count="1272" type="stmt"/>
            <line falsecount="1272" truecount="5156" num="923" type="cond"/>
            <line num="924" count="5156" type="stmt"/>
            <line num="925" count="5157" type="stmt"/>
            <line falsecount="5083" truecount="74" num="925" type="cond"/>
            <line num="926" count="74" type="stmt"/>
            <line num="927" count="74" type="stmt"/>
            <line num="930" count="5083" type="stmt"/>
            <line num="931" count="5082" type="stmt"/>
            <line num="932" count="5083" type="stmt"/>
            <line num="934" count="5156" type="stmt"/>
            <line num="939" count="206242" type="stmt"/>
            <line complexity="4" visibility="private" signature="getForwardRateInitialValue(MonteCarloProcess,int) : RandomVariable" num="942" count="5082" type="method"/>
            <line num="943" count="5082" type="stmt"/>
            <line num="944" count="5083" type="stmt"/>
            <line falsecount="0" truecount="5080" num="944" type="cond"/>
            <line num="946" count="5080" type="stmt"/>
            <line falsecount="0" truecount="5079" num="946" type="cond"/>
            <line num="947" count="5079" type="stmt"/>
            <line falsecount="5083" truecount="5079" num="947" type="cond"/>
            <line num="948" count="5079" type="stmt"/>
            <line num="949" count="5083" type="stmt"/>
            <line num="950" count="5083" type="stmt"/>
            <line num="951" count="5083" type="stmt"/>
            <line num="955" count="5083" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(ObjectInputStream) : void" num="958" count="0" type="method"/>
            <line num="959" count="0" type="stmt"/>
            <line num="964" count="0" type="stmt"/>
            <line num="965" count="0" type="stmt"/>
            <line num="966" count="0" type="stmt"/>
            <line num="967" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="970" count="0" type="method"/>
            <line num="972" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/HullWhiteModelWithConstantCoeff.java" name="HullWhiteModelWithConstantCoeff.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="38" loc="374" coveredmethods="0" methods="27" elements="143" classes="1" ncloc="219" statements="94" conditionals="22" coveredstatements="0"/>
            <class name="HullWhiteModelWithConstantCoeff">
               <metrics coveredelements="0" coveredconditionals="0" complexity="38" coveredmethods="0" methods="27" elements="143" statements="94" conditionals="22" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="HullWhiteModelWithConstantCoeff(TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,double,double,Map&lt;String, ?&gt;)" num="72" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="180" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="203" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="211" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="234" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="245" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,double,double,double) : RandomVariable" num="250" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,int,int) : RandomVariable" num="256" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="261" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="266" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriod(int) : double" num="271" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="276" count="0" type="method"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnalyticModel() : AnalyticModel" num="281" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="286" count="0" type="method"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRateCurve() : ForwardCurve" num="291" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORMarketModel" num="296" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getShortRate(MonteCarloProcess,int) : RandomVariable" num="301" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getZeroCouponBond(MonteCarloProcess,double,double) : RandomVariable" num="306" count="0" type="method"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getA(MonteCarloProcess,double,double) : double" num="322" count="0" type="method"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getB(double,double) : double" num="345" count="0" type="method"/>
            <line num="346" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getShortRateConditionalVariance(double,double) : double" num="359" count="0" type="method"/>
            <line num="360" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegratedBondSquaredVolatility(double,double) : double" num="364" count="0" type="method"/>
            <line num="365" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="368" count="0" type="method"/>
            <line num="371" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/HullWhiteModelWithDirectSimulation.java" name="HullWhiteModelWithDirectSimulation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="60" loc="627" coveredmethods="0" methods="30" elements="299" classes="1" ncloc="368" statements="209" conditionals="60" coveredstatements="0"/>
            <class name="HullWhiteModelWithDirectSimulation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="60" coveredmethods="0" methods="30" elements="299" statements="209" conditionals="60" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="HullWhiteModelWithDirectSimulation(TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,ShortRateVolatilityModel,Map&lt;String, ?&gt;)" num="141" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="161" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="166" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="172" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="177" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="182" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="184" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="195" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="230" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="246" type="cond"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="260" type="cond"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="269" count="0" type="method"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="277" type="cond"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="283" type="cond"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="288" type="cond"/>
            <line num="289" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="306" count="0" type="method"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="312" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="324" count="0" type="method"/>
            <line num="326" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,double,double,double) : RandomVariable" num="329" count="0" type="method"/>
            <line num="332" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,int,int) : RandomVariable" num="335" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="340" count="0" type="method"/>
            <line num="342" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="345" count="0" type="method"/>
            <line num="347" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriod(int) : double" num="350" count="0" type="method"/>
            <line num="352" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="355" count="0" type="method"/>
            <line num="357" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnalyticModel() : AnalyticModel" num="360" count="0" type="method"/>
            <line num="362" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="365" count="0" type="method"/>
            <line num="367" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRateCurve() : ForwardCurve" num="370" count="0" type="method"/>
            <line num="372" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORMarketModel" num="375" count="0" type="method"/>
            <line num="377" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getShortRate(MonteCarloProcess,int) : RandomVariable" num="380" count="0" type="method"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getZeroCouponBond(MonteCarloProcess,double,double) : RandomVariable" num="385" count="0" type="method"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getA(MonteCarloProcess,double,double) : double" num="404" count="0" type="method"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getMRTime(double,double) : double" num="426" count="0" type="method"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="428" type="cond"/>
            <line num="430" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="434" type="cond"/>
            <line num="436" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="442" type="cond"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getB(double,double) : double" num="463" count="0" type="method"/>
            <line num="464" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="465" type="cond"/>
            <line num="467" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="471" type="cond"/>
            <line num="473" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="478" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="479" type="cond"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getV(double,double) : double" num="502" count="0" type="method"/>
            <line num="503" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="503" type="cond"/>
            <line num="504" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="507" type="cond"/>
            <line num="509" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="513" type="cond"/>
            <line num="515" count="0" type="stmt"/>
            <line num="518" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
            <line num="521" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="521" type="cond"/>
            <line num="522" count="0" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line num="525" count="0" type="stmt"/>
            <line num="526" count="0" type="stmt"/>
            <line num="527" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line num="530" count="0" type="stmt"/>
            <line num="531" count="0" type="stmt"/>
            <line num="532" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line num="534" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line num="537" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getDV(double,double) : double" num="540" count="0" type="method"/>
            <line num="541" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="541" type="cond"/>
            <line num="542" count="0" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="545" type="cond"/>
            <line num="547" count="0" type="stmt"/>
            <line num="550" count="0" type="stmt"/>
            <line num="551" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="551" type="cond"/>
            <line num="553" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="557" count="0" type="stmt"/>
            <line num="558" count="0" type="stmt"/>
            <line num="559" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="559" type="cond"/>
            <line num="560" count="0" type="stmt"/>
            <line num="561" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line num="563" count="0" type="stmt"/>
            <line num="564" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line num="569" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="573" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getShortRateConditionalVariance(double,double) : double" num="586" count="0" type="method"/>
            <line num="587" count="0" type="stmt"/>
            <line num="588" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="588" type="cond"/>
            <line num="590" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="594" type="cond"/>
            <line num="596" count="0" type="stmt"/>
            <line num="599" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line num="601" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="602" type="cond"/>
            <line num="603" count="0" type="stmt"/>
            <line num="604" count="0" type="stmt"/>
            <line num="605" count="0" type="stmt"/>
            <line num="606" count="0" type="stmt"/>
            <line num="607" count="0" type="stmt"/>
            <line num="609" count="0" type="stmt"/>
            <line num="610" count="0" type="stmt"/>
            <line num="611" count="0" type="stmt"/>
            <line num="612" count="0" type="stmt"/>
            <line num="614" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegratedBondSquaredVolatility(double,double) : double" num="617" count="0" type="method"/>
            <line num="618" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="621" count="0" type="method"/>
            <line num="624" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/HullWhiteModelWithShiftExtension.java" name="HullWhiteModelWithShiftExtension.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="66" loc="671" coveredmethods="0" methods="32" elements="322" classes="2" ncloc="399" statements="224" conditionals="66" coveredstatements="0"/>
            <class name="HullWhiteModelWithShiftExtension">
               <metrics coveredelements="0" coveredconditionals="0" complexity="66" coveredmethods="0" methods="32" elements="322" statements="224" conditionals="66" coveredstatements="0"/>
            </class>
            <class name="HullWhiteModelWithShiftExtension.DriftFormula">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="HullWhiteModelWithShiftExtension(TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,ShortRateVolatilityModel,Map&lt;String, ?&gt;)" num="145" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="171" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="176" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="181" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="197" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="210" type="cond"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="224" type="cond"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="251" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="258" type="cond"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="272" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="281" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="288" type="cond"/>
            <line num="289" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="297" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="303" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="316" count="0" type="method"/>
            <line num="318" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,double,double,double) : RandomVariable" num="321" count="0" type="method"/>
            <line num="324" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,int,int) : RandomVariable" num="327" count="0" type="method"/>
            <line num="329" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="332" count="0" type="method"/>
            <line num="334" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="337" count="0" type="method"/>
            <line num="339" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriod(int) : double" num="342" count="0" type="method"/>
            <line num="344" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="347" count="0" type="method"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnalyticModel() : AnalyticModel" num="352" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="357" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRateCurve() : ForwardCurve" num="362" count="0" type="method"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORMarketModel" num="367" count="0" type="method"/>
            <line num="369" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getShortRate(MonteCarloProcess,int) : RandomVariable" num="372" count="0" type="method"/>
            <line num="373" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="388" type="cond"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="390" type="cond"/>
            <line num="391" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getZeroCouponBond(MonteCarloProcess,double,double) : RandomVariable" num="399" count="0" type="method"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="401" type="cond"/>
            <line num="402" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getIntegratedDriftAdjustment(MonteCarloProcess,int) : double" num="419" count="0" type="method"/>
            <line num="420" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="421" type="cond"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="426" type="cond"/>
            <line num="428" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="432" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getA(MonteCarloProcess,double,double) : double" num="448" count="0" type="method"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getMRTime(double,double) : double" num="470" count="0" type="method"/>
            <line num="471" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="472" type="cond"/>
            <line num="474" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="478" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="478" type="cond"/>
            <line num="480" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line num="484" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="486" type="cond"/>
            <line num="487" count="0" type="stmt"/>
            <line num="488" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line num="492" count="0" type="stmt"/>
            <line num="493" count="0" type="stmt"/>
            <line num="494" count="0" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getB(double,double) : double" num="507" count="0" type="method"/>
            <line num="508" count="0" type="stmt"/>
            <line num="509" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="509" type="cond"/>
            <line num="511" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="515" type="cond"/>
            <line num="517" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
            <line num="521" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="523" type="cond"/>
            <line num="524" count="0" type="stmt"/>
            <line num="525" count="0" type="stmt"/>
            <line num="526" count="0" type="stmt"/>
            <line num="527" count="0" type="stmt"/>
            <line num="529" count="0" type="stmt"/>
            <line num="530" count="0" type="stmt"/>
            <line num="531" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getV(double,double) : double" num="546" count="0" type="method"/>
            <line num="547" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="547" type="cond"/>
            <line num="548" count="0" type="stmt"/>
            <line num="550" count="0" type="stmt"/>
            <line num="551" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="551" type="cond"/>
            <line num="553" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="557" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="557" type="cond"/>
            <line num="559" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line num="563" count="0" type="stmt"/>
            <line num="564" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="565" type="cond"/>
            <line num="566" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line num="569" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="572" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line num="575" count="0" type="stmt"/>
            <line num="576" count="0" type="stmt"/>
            <line num="577" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="579" count="0" type="stmt"/>
            <line num="581" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getDV(double,double) : double" num="584" count="0" type="method"/>
            <line num="585" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="585" type="cond"/>
            <line num="586" count="0" type="stmt"/>
            <line num="588" count="0" type="stmt"/>
            <line num="589" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="589" type="cond"/>
            <line num="591" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="595" type="cond"/>
            <line num="597" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line num="601" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="603" type="cond"/>
            <line num="604" count="0" type="stmt"/>
            <line num="605" count="0" type="stmt"/>
            <line num="606" count="0" type="stmt"/>
            <line num="607" count="0" type="stmt"/>
            <line num="608" count="0" type="stmt"/>
            <line num="609" count="0" type="stmt"/>
            <line num="611" count="0" type="stmt"/>
            <line num="612" count="0" type="stmt"/>
            <line num="613" count="0" type="stmt"/>
            <line num="614" count="0" type="stmt"/>
            <line num="615" count="0" type="stmt"/>
            <line num="617" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getShortRateConditionalVariance(double,double) : double" num="630" count="0" type="method"/>
            <line num="631" count="0" type="stmt"/>
            <line num="632" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="632" type="cond"/>
            <line num="634" count="0" type="stmt"/>
            <line num="637" count="0" type="stmt"/>
            <line num="638" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="638" type="cond"/>
            <line num="640" count="0" type="stmt"/>
            <line num="643" count="0" type="stmt"/>
            <line num="644" count="0" type="stmt"/>
            <line num="645" count="0" type="stmt"/>
            <line num="646" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="646" type="cond"/>
            <line num="647" count="0" type="stmt"/>
            <line num="648" count="0" type="stmt"/>
            <line num="649" count="0" type="stmt"/>
            <line num="650" count="0" type="stmt"/>
            <line num="651" count="0" type="stmt"/>
            <line num="653" count="0" type="stmt"/>
            <line num="654" count="0" type="stmt"/>
            <line num="655" count="0" type="stmt"/>
            <line num="656" count="0" type="stmt"/>
            <line num="658" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegratedBondSquaredVolatility(double,double) : double" num="661" count="0" type="method"/>
            <line num="662" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="665" count="0" type="method"/>
            <line num="668" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/LIBORMarketModelFromCovarianceModel.java" name="LIBORMarketModelFromCovarianceModel.java">
            <metrics coveredelements="583" coveredconditionals="154" complexity="180" loc="1744" coveredmethods="39" methods="52" elements="736" classes="5" ncloc="922" statements="484" conditionals="200" coveredstatements="390"/>
            <class name="LIBORMarketModelFromCovarianceModel">
               <metrics coveredelements="583" coveredconditionals="154" complexity="180" coveredmethods="39" methods="52" elements="736" statements="484" conditionals="200" coveredstatements="390"/>
            </class>
            <class name="LIBORMarketModelFromCovarianceModel.Measure">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelFromCovarianceModel.StateSpace">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelFromCovarianceModel.Driftapproximation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelFromCovarianceModel.InterpolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="11" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,RandomVariableFactory,LIBORCovarianceModel,Map&lt;String, ?&gt;)" num="247" count="6139" type="method"/>
            <line num="258" count="6140" type="stmt"/>
            <line falsecount="4" truecount="6130" num="258" type="cond"/>
            <line num="259" count="6131" type="stmt"/>
            <line num="261" count="6129" type="stmt"/>
            <line falsecount="4" truecount="6128" num="261" type="cond"/>
            <line num="262" count="6128" type="stmt"/>
            <line num="264" count="6131" type="stmt"/>
            <line falsecount="124" truecount="6007" num="264" type="cond"/>
            <line num="265" count="6010" type="stmt"/>
            <line num="267" count="6136" type="stmt"/>
            <line falsecount="124" truecount="6010" num="267" type="cond"/>
            <line num="268" count="6012" type="stmt"/>
            <line num="271" count="6130" type="stmt"/>
            <line num="272" count="6133" type="stmt"/>
            <line falsecount="6119" truecount="8" num="272" type="cond"/>
            <line num="273" count="8" type="stmt"/>
            <line num="276" count="6135" type="stmt"/>
            <line num="277" count="6136" type="stmt"/>
            <line num="278" count="6136" type="stmt"/>
            <line num="279" count="6136" type="stmt"/>
            <line num="280" count="6139" type="stmt"/>
            <line num="281" count="6139" type="stmt"/>
            <line complexity="6" visibility="public" signature="of(TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,RandomVariableFactory,LIBORCovarianceModel,CalibrationProduct[],Map&lt;String, ?&gt;) : LIBORMarketModelFromCovarianceModel" num="349" count="6140" type="method"/>
            <line num="360" count="6141" type="stmt"/>
            <line num="363" count="6137" type="stmt"/>
            <line falsecount="6126" truecount="12" num="363" type="cond"/>
            <line num="364" count="12" type="stmt"/>
            <line num="365" count="12" type="stmt"/>
            <line falsecount="4" truecount="8" num="365" type="cond"/>
            <line num="366" count="8" type="stmt"/>
            <line num="369" count="12" type="stmt"/>
            <line num="370" count="12" type="stmt"/>
            <line num="371" count="12" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="377" count="12" type="stmt"/>
            <line num="379" count="12" type="stmt"/>
            <line num="381" count="12" type="stmt"/>
            <line num="384" count="6118" type="stmt"/>
            <line complexity="14" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,RandomVariableFactory,LIBORCovarianceModel,CalibrationProduct[],Map&lt;String, ?&gt;)" num="452" count="320" type="method"/>
            <line num="464" count="320" type="stmt"/>
            <line falsecount="9" truecount="311" num="464" type="cond"/>
            <line num="465" count="311" type="stmt"/>
            <line num="467" count="320" type="stmt"/>
            <line falsecount="9" truecount="311" num="467" type="cond"/>
            <line num="468" count="311" type="stmt"/>
            <line num="470" count="320" type="stmt"/>
            <line falsecount="314" truecount="6" num="470" type="cond"/>
            <line num="471" count="6" type="stmt"/>
            <line num="473" count="320" type="stmt"/>
            <line falsecount="220" truecount="100" num="473" type="cond"/>
            <line num="474" count="100" type="stmt"/>
            <line num="477" count="320" type="stmt"/>
            <line num="478" count="320" type="stmt"/>
            <line falsecount="308" truecount="12" num="478" type="cond"/>
            <line num="479" count="12" type="stmt"/>
            <line num="482" count="320" type="stmt"/>
            <line num="483" count="320" type="stmt"/>
            <line num="484" count="320" type="stmt"/>
            <line num="485" count="320" type="stmt"/>
            <line num="486" count="320" type="stmt"/>
            <line num="489" count="320" type="stmt"/>
            <line falsecount="308" truecount="12" num="489" type="cond"/>
            <line num="490" count="12" type="stmt"/>
            <line num="491" count="12" type="stmt"/>
            <line num="492" count="12" type="stmt"/>
            <line num="495" count="0" type="stmt"/>
            <line num="498" count="12" type="stmt"/>
            <line num="501" count="308" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,LIBORCovarianceModel,CalibrationProduct[],Map&lt;String, ?&gt;)" num="569" count="195" type="method"/>
            <line num="579" count="195" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,ForwardCurve,LIBORCovarianceModel)" num="590" count="1" type="method"/>
            <line num="595" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,ForwardCurve,DiscountCurve,LIBORCovarianceModel)" num="607" count="0" type="method"/>
            <line num="613" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,ForwardCurve,LIBORCovarianceModel,SwaptionMarketData)" num="626" count="0" type="method"/>
            <line num="632" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,ForwardCurve,DiscountCurve,LIBORCovarianceModel,SwaptionMarketData)" num="645" count="0" type="method"/>
            <line num="652" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,ForwardCurve,DiscountCurve,LIBORCovarianceModel,SwaptionMarketData,Map&lt;String, ?&gt;)" num="666" count="0" type="method"/>
            <line num="674" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,ForwardCurve,DiscountCurve,LIBORCovarianceModel,CalibrationProduct[],Map&lt;String, ?&gt;)" num="751" count="25" type="method"/>
            <line num="760" count="25" type="stmt"/>
            <line complexity="9" visibility="private" signature="getCalibrationItems(TimeDiscretization,ForwardCurve,SwaptionMarketData,boolean) : CalibrationProduct[]" num="763" count="0" type="method"/>
            <line num="764" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="764" type="cond"/>
            <line num="765" count="0" type="stmt"/>
            <line num="768" count="0" type="stmt"/>
            <line num="769" count="0" type="stmt"/>
            <line num="770" count="0" type="stmt"/>
            <line num="772" count="0" type="stmt"/>
            <line num="773" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="773" type="cond"/>
            <line num="774" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="774" type="cond"/>
            <line num="777" count="0" type="stmt"/>
            <line num="778" count="0" type="stmt"/>
            <line num="780" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="780" type="cond"/>
            <line num="781" count="0" type="stmt"/>
            <line num="783" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="783" type="cond"/>
            <line num="784" count="0" type="stmt"/>
            <line num="787" count="0" type="stmt"/>
            <line num="789" count="0" type="stmt"/>
            <line num="790" count="0" type="stmt"/>
            <line num="791" count="0" type="stmt"/>
            <line num="793" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="793" type="cond"/>
            <line num="794" count="0" type="stmt"/>
            <line num="795" count="0" type="stmt"/>
            <line num="796" count="0" type="stmt"/>
            <line num="798" count="0" type="stmt"/>
            <line num="802" count="0" type="stmt"/>
            <line num="803" count="0" type="stmt"/>
            <line num="806" count="0" type="stmt"/>
            <line num="807" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="807" type="cond"/>
            <line num="808" count="0" type="stmt"/>
            <line num="811" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="811" type="cond"/>
            <line num="812" count="0" type="stmt"/>
            <line num="813" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line num="818" count="0" type="stmt"/>
            <line num="820" count="0" type="stmt"/>
            <line num="821" count="0" type="stmt"/>
            <line num="822" count="0" type="stmt"/>
            <line num="824" count="0" type="stmt"/>
            <line num="826" count="0" type="stmt"/>
            <line num="831" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getReferenceDate() : LocalDateTime" num="834" count="35175" type="method"/>
            <line num="836" count="35539" type="stmt"/>
            <line falsecount="23631" truecount="12173" num="836" type="cond"/>
            <line complexity="3" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="850" count="1256747" type="method"/>
            <line num="852" count="1257157" type="stmt"/>
            <line falsecount="1257153" truecount="0" num="852" type="cond"/>
            <line num="853" count="0" type="stmt"/>
            <line num="856" count="1257212" type="stmt"/>
            <line num="860" count="1258227" type="stmt"/>
            <line falsecount="1073" truecount="1257155" num="860" type="cond"/>
            <line num="861" count="1257153" type="stmt"/>
            <line num="863" count="1257161" type="stmt"/>
            <line num="866" count="1256956" type="stmt"/>
            <line num="868" count="1258111" type="stmt"/>
            <line complexity="3" visibility="private" signature="getNumeraireDefaultableZeroBondAsOfTimeZero(MonteCarloProcess,double) : RandomVariable" num="876" count="1257126" type="method"/>
            <line num="877" count="1257142" type="stmt"/>
            <line num="879" count="1257148" type="stmt"/>
            <line falsecount="0" truecount="1257141" num="879" type="cond"/>
            <line num="881" count="1257114" type="stmt"/>
            <line num="882" count="1257135" type="stmt"/>
            <line falsecount="26391" truecount="1230727" num="882" type="cond"/>
            <line num="883" count="1230694" type="stmt"/>
            <line num="887" count="26385" type="stmt"/>
            <line num="888" count="26379" type="stmt"/>
            <line num="889" count="26382" type="stmt"/>
            <line num="890" count="26384" type="stmt"/>
            <line num="891" count="26389" type="stmt"/>
            <line num="892" count="26398" type="stmt"/>
            <line num="893" count="26397" type="stmt"/>
            <line complexity="4" visibility="private" signature="getNumeraireDefaultableZeroBondAsOfTimeZero(MonteCarloProcess,int) : RandomVariable" num="908" count="1283369" type="method"/>
            <line num="909" count="1283434" type="stmt"/>
            <line num="911" count="1283429" type="stmt"/>
            <line falsecount="0" truecount="1283429" num="911" type="cond"/>
            <line num="912" count="1283359" type="stmt"/>
            <line num="914" count="1283375" type="stmt"/>
            <line num="915" count="1283570" type="stmt"/>
            <line num="917" count="1283570" type="stmt"/>
            <line num="918" count="1283570" type="stmt"/>
            <line falsecount="1278282" truecount="5288" num="918" type="cond"/>
            <line num="919" count="5288" type="stmt"/>
            <line num="920" count="5288" type="stmt"/>
            <line num="921" count="5288" type="stmt"/>
            <line num="923" count="5288" type="stmt"/>
            <line falsecount="5288" truecount="668170" num="923" type="cond"/>
            <line num="924" count="668170" type="stmt"/>
            <line num="925" count="668170" type="stmt"/>
            <line num="926" count="668170" type="stmt"/>
            <line num="927" count="668170" type="stmt"/>
            <line num="928" count="668170" type="stmt"/>
            <line num="929" count="668170" type="stmt"/>
            <line num="930" count="668170" type="stmt"/>
            <line num="931" count="668170" type="stmt"/>
            <line num="933" count="5288" type="stmt"/>
            <line num="935" count="1283570" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardDiscountBond(MonteCarloProcess,double,double) : RandomVariable" num="939" count="0" type="method"/>
            <line num="941" count="0" type="stmt"/>
            <line num="942" count="0" type="stmt"/>
            <line num="943" count="0" type="stmt"/>
            <line num="944" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="ensureCacheConsistency(MonteCarloProcess) : void" num="947" count="4301189" type="method"/>
            <line num="951" count="4301250" type="stmt"/>
            <line falsecount="4295878" truecount="5408" num="951" type="cond"/>
            <line num="953" count="5408" type="stmt"/>
            <line num="954" count="5408" type="stmt"/>
            <line num="955" count="5408" type="stmt"/>
            <line num="956" count="5408" type="stmt"/>
            <line num="957" count="5408" type="stmt"/>
            <line complexity="6" visibility="protected" signature="getNumerairetUnAdjusted(MonteCarloProcess,double) : RandomVariable" num="961" count="2539746" type="method"/>
            <line num="965" count="2540237" type="stmt"/>
            <line num="966" count="2540255" type="stmt"/>
            <line num="967" count="2540609" type="stmt"/>
            <line falsecount="2514193" truecount="26137" num="967" type="cond"/>
            <line num="971" count="26095" type="stmt"/>
            <line num="972" count="26093" type="stmt"/>
            <line num="973" count="26090" type="stmt"/>
            <line falsecount="26044" truecount="0" num="973" type="cond"/>
            <line num="974" count="0" type="stmt"/>
            <line num="976" count="26037" type="stmt"/>
            <line falsecount="25956" truecount="0" num="976" type="cond"/>
            <line num="980" count="0" type="stmt"/>
            <line num="981" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="981" type="cond"/>
            <line num="982" count="0" type="stmt"/>
            <line num="983" count="0" type="stmt"/>
            <line num="984" count="0" type="stmt"/>
            <line num="987" count="25924" type="stmt"/>
            <line falsecount="0" truecount="26002" num="987" type="cond"/>
            <line num="988" count="25939" type="stmt"/>
            <line num="991" count="0" type="stmt"/>
            <line num="997" count="26397" type="stmt"/>
            <line num="999" count="26383" type="stmt"/>
            <line num="1006" count="2514027" type="stmt"/>
            <line complexity="8" visibility="protected" signature="getNumerairetUnAdjustedAtLIBORIndex(MonteCarloProcess,int) : RandomVariable" num="1010" count="3016208" type="method"/>
            <line num="1014" count="3016458" type="stmt"/>
            <line num="1018" count="3017945" type="stmt"/>
            <line num="1023" count="3017946" type="stmt"/>
            <line num="1024" count="3017946" type="stmt"/>
            <line falsecount="2509651" truecount="508294" num="1024" type="cond"/>
            <line num="1025" count="508294" type="stmt"/>
            <line falsecount="507920" truecount="374" num="1025" type="cond"/>
            <line num="1026" count="374" type="stmt"/>
            <line num="1027" count="374" type="stmt"/>
            <line falsecount="374" truecount="0" num="1027" type="cond"/>
            <line num="1028" count="0" type="stmt"/>
            <line num="1032" count="374" type="stmt"/>
            <line num="1037" count="374" type="stmt"/>
            <line falsecount="374" truecount="9522" num="1037" type="cond"/>
            <line num="1038" count="9522" type="stmt"/>
            <line num="1039" count="9522" type="stmt"/>
            <line num="1040" count="9522" type="stmt"/>
            <line num="1043" count="507920" type="stmt"/>
            <line falsecount="0" truecount="507920" num="1043" type="cond"/>
            <line num="1047" count="507920" type="stmt"/>
            <line falsecount="5391" truecount="502529" num="1047" type="cond"/>
            <line num="1048" count="502529" type="stmt"/>
            <line num="1049" count="502529" type="stmt"/>
            <line falsecount="502529" truecount="0" num="1049" type="cond"/>
            <line num="1050" count="0" type="stmt"/>
            <line num="1053" count="502529" type="stmt"/>
            <line num="1054" count="502529" type="stmt"/>
            <line num="1055" count="502528" type="stmt"/>
            <line num="1058" count="5391" type="stmt"/>
            <line num="1061" count="0" type="stmt"/>
            <line num="1063" count="508293" type="stmt"/>
            <line num="1065" count="3017944" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraireAdjustments() : Map&lt;Double, RandomVariable&gt;" num="1069" count="0" type="method"/>
            <line num="1070" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="1073" count="5409" type="method"/>
            <line num="1075" count="5409" type="stmt"/>
            <line num="1076" count="5412" type="stmt"/>
            <line falsecount="5412" truecount="677064" num="1076" type="cond"/>
            <line num="1077" count="677067" type="stmt"/>
            <line num="1078" count="677074" type="stmt"/>
            <line falsecount="631119" truecount="45957" num="1078" type="cond"/>
            <line num="1081" count="5412" type="stmt"/>
            <line num="1082" count="5412" type="stmt"/>
            <line falsecount="5412" truecount="677058" num="1082" type="cond"/>
            <line num="1083" count="677069" type="stmt"/>
            <line num="1085" count="5412" type="stmt"/>
            <line complexity="14" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="1117" count="707176" type="method"/>
            <line num="1119" count="707178" type="stmt"/>
            <line num="1120" count="707178" type="stmt"/>
            <line num="1121" count="707179" type="stmt"/>
            <line falsecount="682159" truecount="25020" num="1121" type="cond"/>
            <line num="1122" count="25020" type="stmt"/>
            <line num="1125" count="707177" type="stmt"/>
            <line num="1128" count="707179" type="stmt"/>
            <line num="1129" count="707178" type="stmt"/>
            <line falsecount="707179" truecount="50959458" num="1129" type="cond"/>
            <line num="1130" count="50959487" type="stmt"/>
            <line num="1133" count="707179" type="stmt"/>
            <line num="1134" count="707179" type="stmt"/>
            <line falsecount="707178" truecount="1011388" num="1134" type="cond"/>
            <line num="1135" count="1011386" type="stmt"/>
            <line num="1138" count="707178" type="stmt"/>
            <line falsecount="1760" truecount="705417" num="1138" type="cond"/>
            <line num="1140" count="705418" type="stmt"/>
            <line falsecount="705418" truecount="50926119" num="1140" type="cond"/>
            <line num="1141" count="50926118" type="stmt"/>
            <line num="1142" count="50926119" type="stmt"/>
            <line num="1143" count="50926126" type="stmt"/>
            <line num="1145" count="50926122" type="stmt"/>
            <line falsecount="49877200" truecount="1048923" num="1145" type="cond"/>
            <line num="1147" count="1048924" type="stmt"/>
            <line num="1150" count="50926126" type="stmt"/>
            <line num="1151" count="50926141" type="stmt"/>
            <line falsecount="50926112" truecount="56982521" num="1151" type="cond"/>
            <line num="1152" count="56982637" type="stmt"/>
            <line num="1153" count="56982462" type="stmt"/>
            <line num="1157" count="1760" type="stmt"/>
            <line falsecount="0" truecount="1760" num="1157" type="cond"/>
            <line num="1159" count="1760" type="stmt"/>
            <line falsecount="1760" truecount="33520" num="1159" type="cond"/>
            <line num="1160" count="33520" type="stmt"/>
            <line num="1161" count="33520" type="stmt"/>
            <line num="1162" count="33520" type="stmt"/>
            <line num="1164" count="33520" type="stmt"/>
            <line falsecount="0" truecount="33520" num="1164" type="cond"/>
            <line num="1165" count="33520" type="stmt"/>
            <line num="1168" count="33520" type="stmt"/>
            <line num="1169" count="33520" type="stmt"/>
            <line falsecount="33520" truecount="177680" num="1169" type="cond"/>
            <line num="1170" count="177680" type="stmt"/>
            <line num="1171" count="177680" type="stmt"/>
            <line num="1176" count="707178" type="stmt"/>
            <line falsecount="655200" truecount="51978" num="1176" type="cond"/>
            <line num="1178" count="51978" type="stmt"/>
            <line falsecount="51977" truecount="1082456" num="1178" type="cond"/>
            <line num="1179" count="1082459" type="stmt"/>
            <line num="1180" count="1082440" type="stmt"/>
            <line num="1184" count="707177" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="1187" count="101604605" type="method"/>
            <line num="1190" count="101697679" type="stmt"/>
            <line complexity="3" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="1193" count="51602981" type="method"/>
            <line num="1195" count="51611568" type="stmt"/>
            <line num="1197" count="51611080" type="stmt"/>
            <line falsecount="50483732" truecount="1128281" num="1197" type="cond"/>
            <line num="1198" count="1128289" type="stmt"/>
            <line num="1201" count="51614510" type="stmt"/>
            <line falsecount="1271883" truecount="50340404" num="1201" type="cond"/>
            <line num="1202" count="50342943" type="stmt"/>
            <line num="1205" count="51600598" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="1208" count="49148615" type="method"/>
            <line num="1210" count="49258610" type="stmt"/>
            <line num="1212" count="49267591" type="stmt"/>
            <line falsecount="48473963" truecount="806781" num="1212" type="cond"/>
            <line num="1213" count="808277" type="stmt"/>
            <line num="1216" count="49314073" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="1219" count="53279898" type="method"/>
            <line num="1221" count="53279906" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDriftApproximationMethod() : Driftapproximation" num="1227" count="0" type="method"/>
            <line num="1228" count="0" type="stmt"/>
            <line complexity="12" visibility="public" signature="getLIBOR(MonteCarloProcess,double,double,double) : RandomVariable" num="1231" count="10820324" type="method"/>
            <line num="1234" count="10820629" type="stmt"/>
            <line num="1235" count="10820239" type="stmt"/>
            <line num="1238" count="10820475" type="stmt"/>
            <line num="1239" count="10820836" type="stmt"/>
            <line num="1241" count="10820378" type="stmt"/>
            <line falsecount="10762570" truecount="58148" num="1241" type="cond"/>
            <line num="1242" count="58113" type="stmt"/>
            <line num="1243" count="58108" type="stmt"/>
            <line falsecount="50145" truecount="7252" num="1243" type="cond"/>
            <line num="1244" count="7244" type="stmt"/>
            <line num="1251" count="10819848" type="stmt"/>
            <line falsecount="10766809" truecount="52845" num="1251" type="cond"/>
            <line num="1252" count="52846" type="stmt"/>
            <line num="1253" count="52846" type="stmt"/>
            <line num="1255" count="14118" type="stmt"/>
            <line num="1256" count="14118" type="stmt"/>
            <line num="1257" count="14118" type="stmt"/>
            <line num="1261" count="10766769" type="stmt"/>
            <line falsecount="10726619" truecount="40165" num="1261" type="cond"/>
            <line num="1262" count="40101" type="stmt"/>
            <line num="1263" count="40126" type="stmt"/>
            <line num="1264" count="40342" type="stmt"/>
            <line num="1265" count="40369" type="stmt"/>
            <line falsecount="40300" truecount="0" num="1265" type="cond"/>
            <line num="1266" count="0" type="stmt"/>
            <line num="1268" count="40281" type="stmt"/>
            <line falsecount="14008" truecount="26221" num="1268" type="cond"/>
            <line num="1269" count="26185" type="stmt"/>
            <line num="1272" count="14006" type="stmt"/>
            <line num="1273" count="14010" type="stmt"/>
            <line num="1274" count="14009" type="stmt"/>
            <line num="1277" count="10726473" type="stmt"/>
            <line falsecount="10726653" truecount="0" num="1277" type="cond"/>
            <line num="1278" count="0" type="stmt"/>
            <line num="1282" count="10726563" type="stmt"/>
            <line falsecount="10256304" truecount="470368" num="1282" type="cond"/>
            <line num="1283" count="470362" type="stmt"/>
            <line num="1287" count="10256351" type="stmt"/>
            <line num="1290" count="10255994" type="stmt"/>
            <line falsecount="10255849" truecount="20544232" num="1290" type="cond"/>
            <line num="1292" count="20545842" type="stmt"/>
            <line num="1293" count="20544138" type="stmt"/>
            <line num="1295" count="20547446" type="stmt"/>
            <line falsecount="20548109" truecount="0" num="1295" type="cond"/>
            <line num="1298" count="10256426" type="stmt"/>
            <line num="1300" count="10255935" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,int,int) : RandomVariable" num="1303" count="21586757" type="method"/>
            <line num="1307" count="21586907" type="stmt"/>
            <line complexity="9" visibility="private" signature="getOnePlusInterpolatedLIBORDt(MonteCarloProcess,int,double,int) : RandomVariable" num="1320" count="54121" type="method"/>
            <line num="1322" count="54258" type="stmt"/>
            <line num="1323" count="54460" type="stmt"/>
            <line num="1324" count="54487" type="stmt"/>
            <line num="1325" count="54424" type="stmt"/>
            <line falsecount="39749" truecount="14612" num="1325" type="cond"/>
            <line num="1327" count="14603" type="stmt"/>
            <line num="1328" count="14619" type="stmt"/>
            <line falsecount="14611" truecount="0" num="1328" type="cond"/>
            <line num="1330" count="0" type="stmt"/>
            <line num="1333" count="54341" type="stmt"/>
            <line num="1335" count="54574" type="stmt"/>
            <line num="1336" count="54579" type="stmt"/>
            <line num="1338" count="54576" type="stmt"/>
            <line num="1339" count="54579" type="stmt"/>
            <line num="1341" count="2" type="stmt"/>
            <line num="1342" count="2" type="stmt"/>
            <line num="1343" count="2" type="stmt"/>
            <line num="1344" count="54559" type="stmt"/>
            <line num="1345" count="54569" type="stmt"/>
            <line num="1346" count="54571" type="stmt"/>
            <line num="1347" count="2" type="stmt"/>
            <line num="1348" count="2" type="stmt"/>
            <line num="1349" count="2" type="stmt"/>
            <line num="1350" count="2" type="stmt"/>
            <line num="1351" count="2" type="stmt"/>
            <line num="1352" count="2" type="stmt"/>
            <line num="1353" count="0" type="stmt"/>
            <line num="1353" count="0" type="stmt"/>
            <line num="1359" count="54571" type="stmt"/>
            <line num="1360" count="54567" type="stmt"/>
            <line num="1362" count="54571" type="stmt"/>
            <line num="1363" count="54574" type="stmt"/>
            <line num="1365" count="2" type="stmt"/>
            <line num="1366" count="2" type="stmt"/>
            <line num="1367" count="2" type="stmt"/>
            <line num="1368" count="54564" type="stmt"/>
            <line num="1369" count="2" type="stmt"/>
            <line num="1370" count="54563" type="stmt"/>
            <line num="1371" count="54563" type="stmt"/>
            <line num="1372" count="0" type="stmt"/>
            <line num="1372" count="0" type="stmt"/>
            <line num="1374" count="54567" type="stmt"/>
            <line num="1376" count="54577" type="stmt"/>
            <line complexity="8" visibility="private" signature="getInterpolationDriftAdjustment(MonteCarloProcess,int,int) : RandomVariable" num="1386" count="2" type="method"/>
            <line num="1388" count="2" type="stmt"/>
            <line num="1390" count="0" type="stmt"/>
            <line num="1391" count="0" type="stmt"/>
            <line num="1392" count="0" type="stmt"/>
            <line num="1394" count="2" type="stmt"/>
            <line num="1395" count="2" type="stmt"/>
            <line num="1396" count="2" type="stmt"/>
            <line num="1397" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="1397" type="cond"/>
            <line num="1399" count="0" type="stmt"/>
            <line num="1402" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="1402" type="cond"/>
            <line num="1403" count="2" type="stmt"/>
            <line num="1405" count="2" type="stmt"/>
            <line num="1408" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="1408" type="cond"/>
            <line num="1409" count="2" type="stmt"/>
            <line num="1412" count="2" type="stmt"/>
            <line num="1413" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="1413" type="cond"/>
            <line num="1414" count="2" type="stmt"/>
            <line num="1415" count="2" type="stmt"/>
            <line num="1418" count="2" type="stmt"/>
            <line num="1422" count="0" type="stmt"/>
            <line num="1424" count="0" type="stmt"/>
            <line num="1424" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="getInterpolationDriftAdjustmentEvaluated(MonteCarloProcess,int,int) : RandomVariable" num="1428" count="2" type="method"/>
            <line num="1431" count="2" type="stmt"/>
            <line num="1432" count="2" type="stmt"/>
            <line num="1433" count="2" type="stmt"/>
            <line num="1435" count="2" type="stmt"/>
            <line num="1440" count="2" type="stmt"/>
            <line num="1445" count="2" type="stmt"/>
            <line num="1446" count="2" type="stmt"/>
            <line falsecount="2" truecount="20" num="1446" type="cond"/>
            <line num="1448" count="20" type="stmt"/>
            <line num="1450" count="2" type="stmt"/>
            <line num="1452" count="2" type="stmt"/>
            <line num="1454" count="2" type="stmt"/>
            <line num="1456" count="2" type="stmt"/>
            <line num="1457" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="1457" type="cond"/>
            <line num="1459" count="2" type="stmt"/>
            <line num="1465" count="2" type="stmt"/>
            <line falsecount="2" truecount="72" num="1465" type="cond"/>
            <line num="1467" count="72" type="stmt"/>
            <line num="1468" count="72" type="stmt"/>
            <line falsecount="72" truecount="720" num="1468" type="cond"/>
            <line num="1470" count="720" type="stmt"/>
            <line num="1471" count="720" type="stmt"/>
            <line falsecount="720" truecount="0" num="1471" type="cond"/>
            <line num="1473" count="0" type="stmt"/>
            <line num="1475" count="720" type="stmt"/>
            <line num="1477" count="72" type="stmt"/>
            <line num="1479" count="72" type="stmt"/>
            <line num="1480" count="72" type="stmt"/>
            <line num="1482" count="72" type="stmt"/>
            <line num="1484" count="72" type="stmt"/>
            <line num="1485" count="72" type="stmt"/>
            <line falsecount="0" truecount="72" num="1485" type="cond"/>
            <line num="1487" count="72" type="stmt"/>
            <line num="1489" count="72" type="stmt"/>
            <line num="1490" count="72" type="stmt"/>
            <line num="1491" count="72" type="stmt"/>
            <line num="1494" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="1497" count="106126608" type="method"/>
            <line num="1499" count="106126640" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="1502" count="3685" type="method"/>
            <line num="1506" count="3685" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="1509" count="0" type="method"/>
            <line num="1512" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getLiborPeriod(int) : double" num="1515" count="1594481392" type="method"/>
            <line num="1517" count="1594569959" type="stmt"/>
            <line falsecount="1594477182" truecount="38731" num="1517" type="cond"/>
            <line num="1518" count="38733" type="stmt"/>
            <line num="1520" count="1594570437" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="1523" count="25127274" type="method"/>
            <line num="1525" count="25129395" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="1528" count="156356" type="method"/>
            <line num="1530" count="156399" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationMethod() : InterpolationMethod" num="1536" count="0" type="method"/>
            <line num="1537" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMeasure() : Measure" num="1543" count="0" type="method"/>
            <line num="1544" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="getIntegratedLIBORCovariance(TimeDiscretization) : double[][][]" num="1547" count="114626" type="method"/>
            <line num="1549" count="114654" type="stmt"/>
            <line num="1550" count="114811" type="stmt"/>
            <line falsecount="113706" truecount="1105" num="1550" type="cond"/>
            <line num="1551" count="1105" type="stmt"/>
            <line num="1553" count="1105" type="stmt"/>
            <line num="1554" count="1105" type="stmt"/>
            <line falsecount="1105" truecount="128815" num="1554" type="cond"/>
            <line num="1555" count="128815" type="stmt"/>
            <line num="1556" count="128815" type="stmt"/>
            <line num="1558" count="128815" type="stmt"/>
            <line falsecount="128815" truecount="18566589" num="1558" type="cond"/>
            <line num="1559" count="18566648" type="stmt"/>
            <line num="1561" count="128815" type="stmt"/>
            <line falsecount="128815" truecount="18566073" num="1561" type="cond"/>
            <line num="1562" count="18566150" type="stmt"/>
            <line num="1564" count="18566200" type="stmt"/>
            <line falsecount="18566177" truecount="1451390766" num="1564" type="cond"/>
            <line num="1565" count="1451432956" type="stmt"/>
            <line num="1566" count="1451452383" type="stmt"/>
            <line falsecount="970721308" truecount="480769104" num="1566" type="cond"/>
            <line num="1567" count="480772087" type="stmt"/>
            <line num="1568" count="480772305" type="stmt"/>
            <line falsecount="480743082" truecount="501306704" num="1568" type="cond"/>
            <line num="1569" count="501391423" type="stmt"/>
            <line num="1572" count="1451471126" type="stmt"/>
            <line num="1578" count="1105" type="stmt"/>
            <line falsecount="1105" truecount="127708" num="1578" type="cond"/>
            <line num="1579" count="127708" type="stmt"/>
            <line num="1580" count="127708" type="stmt"/>
            <line num="1581" count="127709" type="stmt"/>
            <line falsecount="127707" truecount="18435738" num="1581" type="cond"/>
            <line num="1582" count="18436114" type="stmt"/>
            <line falsecount="18435785" truecount="1441666536" num="1582" type="cond"/>
            <line num="1583" count="1441724949" type="stmt"/>
            <line num="1584" count="1441744084" type="stmt"/>
            <line num="1591" count="114795" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnalyticModel() : AnalyticModel" num="1594" count="12616130" type="method"/>
            <line num="1596" count="12617181" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="1599" count="21501780" type="method"/>
            <line num="1601" count="21505020" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRateCurve() : ForwardCurve" num="1604" count="11544853" type="method"/>
            <line num="1606" count="11545757" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwaptionMarketData() : SwaptionMarketData" num="1614" count="0" type="method"/>
            <line num="1615" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCovarianceModel() : LIBORCovarianceModel" num="1618" count="121107" type="method"/>
            <line num="1620" count="121133" type="stmt"/>
            <line complexity="2" visibility="public" signature="clone() : Object" num="1623" count="6004" type="method"/>
            <line num="1625" count="6006" type="stmt"/>
            <line num="1626" count="6007" type="stmt"/>
            <line num="1627" count="6013" type="stmt"/>
            <line num="1628" count="6009" type="stmt"/>
            <line num="1629" count="6011" type="stmt"/>
            <line num="1630" count="6011" type="stmt"/>
            <line num="1631" count="6008" type="stmt"/>
            <line num="1633" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedCovarianceModel(LIBORCovarianceModel) : LIBORMarketModelFromCovarianceModel" num="1641" count="6013" type="method"/>
            <line num="1643" count="6014" type="stmt"/>
            <line num="1644" count="6007" type="stmt"/>
            <line num="1645" count="6004" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORMarketModelFromCovarianceModel" num="1648" count="6" type="method"/>
            <line num="1650" count="6" type="stmt"/>
            <line num="1651" count="6" type="stmt"/>
            <line num="1652" count="6" type="stmt"/>
            <line num="1653" count="6" type="stmt"/>
            <line num="1654" count="6" type="stmt"/>
            <line num="1655" count="6" type="stmt"/>
            <line num="1657" count="6" type="stmt"/>
            <line num="1658" count="6" type="stmt"/>
            <line num="1659" count="6" type="stmt"/>
            <line num="1660" count="6" type="stmt"/>
            <line num="1661" count="6" type="stmt"/>
            <line num="1663" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="1663" type="cond"/>
            <line num="1664" count="0" type="stmt"/>
            <line num="1665" count="0" type="stmt"/>
            <line num="1666" count="0" type="stmt"/>
            <line num="1667" count="0" type="stmt"/>
            <line num="1668" count="0" type="stmt"/>
            <line num="1669" count="0" type="stmt"/>
            <line num="1671" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1671" type="cond"/>
            <line num="1672" count="0" type="stmt"/>
            <line num="1675" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1675" type="cond"/>
            <line num="1676" count="0" type="stmt"/>
            <line num="1680" count="6" type="stmt"/>
            <line num="1681" count="6" type="stmt"/>
            <line complexity="5" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="1684" count="10" type="method"/>
            <line num="1687" count="10" type="stmt"/>
            <line num="1689" count="10" type="stmt"/>
            <line num="1692" count="10" type="stmt"/>
            <line falsecount="10" truecount="800" num="1692" type="cond"/>
            <line num="1693" count="800" type="stmt"/>
            <line num="1694" count="800" type="stmt"/>
            <line num="1695" count="800" type="stmt"/>
            <line num="1699" count="800" type="stmt"/>
            <line num="1703" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="1703" type="cond"/>
            <line num="1704" count="10" type="stmt"/>
            <line num="1706" count="10" type="stmt"/>
            <line falsecount="10" truecount="60" num="1706" type="cond"/>
            <line num="1707" count="60" type="stmt"/>
            <line num="1713" count="10" type="stmt"/>
            <line num="1714" count="0" type="stmt"/>
            <line num="1717" count="10" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(ObjectInputStream) : void" num="1720" count="6" type="method"/>
            <line num="1721" count="6" type="stmt"/>
            <line num="1726" count="6" type="stmt"/>
            <line num="1727" count="6" type="stmt"/>
            <line num="1728" count="6" type="stmt"/>
            <line num="1729" count="6" type="stmt"/>
            <line num="1730" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="1733" count="0" type="method"/>
            <line num="1735" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/LIBORMarketModelStandard.java" name="LIBORMarketModelStandard.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="101" loc="890" coveredmethods="0" methods="39" elements="440" classes="3" ncloc="545" statements="293" conditionals="108" coveredstatements="0"/>
            <class name="LIBORMarketModelStandard">
               <metrics coveredelements="0" coveredconditionals="0" complexity="101" coveredmethods="0" methods="39" elements="440" statements="293" conditionals="108" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelStandard.Driftapproximation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelStandard.Measure">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 61()" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelStandard(TimeDiscretization,ForwardCurve,LIBORCovarianceModel)" num="97" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelStandard(TimeDiscretization,ForwardCurve,DiscountCurve,LIBORCovarianceModel)" num="115" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelStandard(TimeDiscretization,ForwardCurve,LIBORCovarianceModel,SwaptionMarketData)" num="137" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelStandard(TimeDiscretization,ForwardCurve,DiscountCurve,LIBORCovarianceModel,SwaptionMarketData)" num="156" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="LIBORMarketModelStandard(TimeDiscretization,ForwardCurve,DiscountCurve,LIBORCovarianceModel,CalibrationProduct[])" num="178" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="getCalibrationItems(TimeDiscretization,ForwardCurve,SwaptionMarketData) : CalibrationProduct[]" num="206" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="250" type="cond"/>
            <line num="251" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="287" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="291" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="303" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="310" type="cond"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="324" type="cond"/>
            <line num="325" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="329" type="cond"/>
            <line num="330" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="340" type="cond"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="348" count="0" type="method"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="351" type="cond"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="357" type="cond"/>
            <line num="358" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="375" count="0" type="method"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="379" type="cond"/>
            <line num="380" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="386" type="cond"/>
            <line num="387" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="391" type="cond"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="400" type="cond"/>
            <line num="401" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="403" type="cond"/>
            <line num="404" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="407" type="cond"/>
            <line num="408" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="413" type="cond"/>
            <line num="414" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="414" type="cond"/>
            <line num="415" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="420" type="cond"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="428" count="0" type="method"/>
            <line num="432" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="435" count="0" type="method"/>
            <line num="437" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="440" count="0" type="method"/>
            <line num="442" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="448" count="0" type="method"/>
            <line num="450" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDriftApproximationMethod() : Driftapproximation" num="456" count="0" type="method"/>
            <line num="457" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getLIBOR(MonteCarloProcess,double,double,double) : RandomVariable" num="460" count="0" type="method"/>
            <line num="463" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line num="469" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="469" type="cond"/>
            <line num="470" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line num="473" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line num="488" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line num="491" count="0" type="stmt"/>
            <line num="495" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="495" type="cond"/>
            <line num="496" count="0" type="stmt"/>
            <line num="497" count="0" type="stmt"/>
            <line num="498" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="519" type="cond"/>
            <line num="520" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line num="525" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="528" type="cond"/>
            <line num="529" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="535" type="cond"/>
            <line num="536" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="543" type="cond"/>
            <line num="545" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line num="551" count="0" type="stmt"/>
            <line num="553" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,int,int) : RandomVariable" num="556" count="0" type="method"/>
            <line num="560" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="567" count="0" type="method"/>
            <line num="569" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="572" count="0" type="method"/>
            <line num="575" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="578" count="0" type="method"/>
            <line num="582" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLiborPeriod(int) : double" num="588" count="0" type="method"/>
            <line num="590" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="590" type="cond"/>
            <line num="591" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="599" count="0" type="method"/>
            <line num="601" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="607" count="0" type="method"/>
            <line num="609" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="getDrift(MonteCarloProcess,int,int,RandomVariable[],RandomVariable[]) : RandomVariable" num="621" count="0" type="method"/>
            <line num="624" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="624" type="cond"/>
            <line num="625" count="0" type="stmt"/>
            <line num="631" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="631" type="cond"/>
            <line num="632" count="0" type="stmt"/>
            <line num="633" count="0" type="stmt"/>
            <line num="634" count="0" type="stmt"/>
            <line num="636" count="0" type="stmt"/>
            <line num="638" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="638" type="cond"/>
            <line num="639" count="0" type="stmt"/>
            <line num="642" count="0" type="stmt"/>
            <line complexity="6" visibility="protected" signature="getDriftEuler(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable" num="646" count="0" type="method"/>
            <line num="648" count="0" type="stmt"/>
            <line num="651" count="0" type="stmt"/>
            <line num="654" count="0" type="stmt"/>
            <line num="655" count="0" type="stmt"/>
            <line num="656" count="0" type="stmt"/>
            <line num="658" count="0" type="stmt"/>
            <line num="659" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="659" type="cond"/>
            <line num="660" count="0" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line num="663" count="0" type="stmt"/>
            <line num="664" count="0" type="stmt"/>
            <line num="665" count="0" type="stmt"/>
            <line num="666" count="0" type="stmt"/>
            <line num="667" count="0" type="stmt"/>
            <line num="668" count="0" type="stmt"/>
            <line num="672" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="672" type="cond"/>
            <line num="673" count="0" type="stmt"/>
            <line num="674" count="0" type="stmt"/>
            <line num="675" count="0" type="stmt"/>
            <line num="676" count="0" type="stmt"/>
            <line num="677" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="679" type="cond"/>
            <line num="680" count="0" type="stmt"/>
            <line num="684" count="0" type="stmt"/>
            <line num="685" count="0" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="getDriftLineIntegral(MonteCarloProcess,int,int,RandomVariable[],RandomVariable[]) : RandomVariable" num="690" count="0" type="method"/>
            <line num="693" count="0" type="stmt"/>
            <line num="696" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="696" type="cond"/>
            <line num="697" count="0" type="stmt"/>
            <line num="701" count="0" type="stmt"/>
            <line num="704" count="0" type="stmt"/>
            <line num="705" count="0" type="stmt"/>
            <line num="706" count="0" type="stmt"/>
            <line num="708" count="0" type="stmt"/>
            <line num="709" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="709" type="cond"/>
            <line num="710" count="0" type="stmt"/>
            <line num="712" count="0" type="stmt"/>
            <line num="713" count="0" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line num="715" count="0" type="stmt"/>
            <line num="716" count="0" type="stmt"/>
            <line num="717" count="0" type="stmt"/>
            <line num="718" count="0" type="stmt"/>
            <line num="722" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="722" type="cond"/>
            <line num="724" count="0" type="stmt"/>
            <line num="725" count="0" type="stmt"/>
            <line num="733" count="0" type="stmt"/>
            <line num="734" count="0" type="stmt"/>
            <line num="735" count="0" type="stmt"/>
            <line num="736" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="743" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMeasure() : Measure" num="749" count="0" type="method"/>
            <line num="750" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getIntegratedLIBORCovariance(TimeDiscretization) : double[][][]" num="756" count="0" type="method"/>
            <line num="758" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="758" type="cond"/>
            <line num="759" count="0" type="stmt"/>
            <line num="762" count="0" type="stmt"/>
            <line num="764" count="0" type="stmt"/>
            <line num="765" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="765" type="cond"/>
            <line num="767" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="767" type="cond"/>
            <line num="768" count="0" type="stmt"/>
            <line num="769" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="769" type="cond"/>
            <line num="770" count="0" type="stmt"/>
            <line num="771" count="0" type="stmt"/>
            <line num="772" count="0" type="stmt"/>
            <line num="773" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="773" type="cond"/>
            <line num="774" count="0" type="stmt"/>
            <line num="776" count="0" type="stmt"/>
            <line num="781" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="784" count="0" type="method"/>
            <line num="786" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDriftApproximationMethod(Driftapproximation) : void" num="792" count="0" type="method"/>
            <line num="793" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMeasure(Measure) : void" num="799" count="0" type="method"/>
            <line num="800" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnalyticModel() : AnalyticModel" num="803" count="0" type="method"/>
            <line num="805" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="808" count="0" type="method"/>
            <line num="810" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="810" type="cond"/>
            <line num="811" count="0" type="stmt"/>
            <line num="812" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRateCurve() : ForwardCurve" num="818" count="0" type="method"/>
            <line num="820" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwaptionMarketData() : SwaptionMarketData" num="828" count="0" type="method"/>
            <line num="829" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCovarianceModel() : LIBORCovarianceModel" num="835" count="0" type="method"/>
            <line num="837" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedCovarianceModel(LIBORCovarianceModel) : LIBORMarketModelStandard" num="844" count="0" type="method"/>
            <line num="846" count="0" type="stmt"/>
            <line num="847" count="0" type="stmt"/>
            <line num="848" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORMarketModelStandard" num="851" count="0" type="method"/>
            <line num="853" count="0" type="stmt"/>
            <line num="854" count="0" type="stmt"/>
            <line num="855" count="0" type="stmt"/>
            <line num="856" count="0" type="stmt"/>
            <line num="857" count="0" type="stmt"/>
            <line num="859" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="859" type="cond"/>
            <line num="860" count="0" type="stmt"/>
            <line num="862" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="862" type="cond"/>
            <line num="863" count="0" type="stmt"/>
            <line num="865" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="865" type="cond"/>
            <line num="866" count="0" type="stmt"/>
            <line num="868" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="868" type="cond"/>
            <line num="869" count="0" type="stmt"/>
            <line num="871" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="871" type="cond"/>
            <line num="872" count="0" type="stmt"/>
            <line num="875" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="875" type="cond"/>
            <line num="876" count="0" type="stmt"/>
            <line num="879" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="884" count="0" type="method"/>
            <line num="887" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/LIBORMarketModelWithTenorRefinement.java" name="LIBORMarketModelWithTenorRefinement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="78" loc="748" coveredmethods="0" methods="25" elements="369" classes="2" ncloc="424" statements="256" conditionals="88" coveredstatements="0"/>
            <class name="LIBORMarketModelWithTenorRefinement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="78" coveredmethods="0" methods="25" elements="369" statements="256" conditionals="88" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelWithTenorRefinement.Driftapproximation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="6" visibility="public" signature="LIBORMarketModelWithTenorRefinement(TimeDiscretization[],Integer[],AnalyticModel,ForwardCurve,DiscountCurve,TermStructureCovarianceModelInterface,CalibrationProduct[],Map&lt;String, ?&gt;)" num="140" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="224" type="cond"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="258" type="cond"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="267" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="270" type="cond"/>
            <line num="271" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="17" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="305" count="0" type="method"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="316" type="cond"/>
            <line num="317" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="321" type="cond"/>
            <line num="322" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="326" type="cond"/>
            <line num="327" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="335" type="cond"/>
            <line num="336" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="346" type="cond"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="357" type="cond"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="366" type="cond"/>
            <line num="367" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="373" type="cond"/>
            <line num="374" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="384" type="cond"/>
            <line num="385" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="391" type="cond"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="400" type="cond"/>
            <line num="401" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="407" type="cond"/>
            <line num="408" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getIntegratedVariance(MonteCarloProcess,int,double,double) : RandomVariable" num="425" count="0" type="method"/>
            <line num="426" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="431" type="cond"/>
            <line num="432" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="434" type="cond"/>
            <line num="435" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="438" type="cond"/>
            <line num="439" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="getWeightForTenorRefinement(double,double,double,double) : double" num="458" count="0" type="method"/>
            <line num="459" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line num="463" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line num="467" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="467" type="cond"/>
            <line num="468" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="470" type="cond"/>
            <line num="471" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="475" type="cond"/>
            <line num="476" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="478" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="482" type="cond"/>
            <line num="483" count="0" type="stmt"/>
            <line num="484" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line num="488" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="488" type="cond"/>
            <line num="489" count="0" type="stmt"/>
            <line num="491" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="495" count="0" type="method"/>
            <line num="498" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="500" type="cond"/>
            <line num="501" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line num="505" count="0" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="517" count="0" type="method"/>
            <line num="519" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="522" count="0" type="method"/>
            <line num="524" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="527" count="0" type="method"/>
            <line num="529" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getLiborPeriodDiscretization(double) : TimeDiscretization" num="532" count="0" type="method"/>
            <line num="533" count="0" type="stmt"/>
            <line num="534" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line num="537" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="537" type="cond"/>
            <line num="538" count="0" type="stmt"/>
            <line num="539" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="539" type="cond"/>
            <line num="540" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="540" type="cond"/>
            <line num="541" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line num="550" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getStateVariableForPeriod(TimeDiscretization,RandomVariable[],double,double) : RandomVariable" num="553" count="0" type="method"/>
            <line num="555" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="558" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="560" type="cond"/>
            <line num="561" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="562" type="cond"/>
            <line num="563" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line num="566" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="574" type="cond"/>
            <line num="575" count="0" type="stmt"/>
            <line num="576" count="0" type="stmt"/>
            <line num="577" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="579" count="0" type="stmt"/>
            <line num="581" count="0" type="stmt"/>
            <line num="582" count="0" type="stmt"/>
            <line num="583" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="586" type="cond"/>
            <line num="587" count="0" type="stmt"/>
            <line num="589" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line num="592" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBORForStateVariable(TimeDiscretization,RandomVariable[],double,double) : RandomVariable" num="598" count="0" type="method"/>
            <line num="599" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line num="601" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getStateVariable(MonteCarloProcess,int,double,double) : RandomVariable" num="606" count="0" type="method"/>
            <line num="609" count="0" type="stmt"/>
            <line num="610" count="0" type="stmt"/>
            <line num="613" count="0" type="stmt"/>
            <line num="614" count="0" type="stmt"/>
            <line num="616" count="0" type="stmt"/>
            <line num="617" count="0" type="stmt"/>
            <line num="618" count="0" type="stmt"/>
            <line num="620" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="620" type="cond"/>
            <line num="621" count="0" type="stmt"/>
            <line num="622" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="622" type="cond"/>
            <line num="623" count="0" type="stmt"/>
            <line num="625" count="0" type="stmt"/>
            <line num="626" count="0" type="stmt"/>
            <line num="627" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line num="630" count="0" type="stmt"/>
            <line num="633" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="633" type="cond"/>
            <line num="634" count="0" type="stmt"/>
            <line num="635" count="0" type="stmt"/>
            <line num="636" count="0" type="stmt"/>
            <line num="637" count="0" type="stmt"/>
            <line num="638" count="0" type="stmt"/>
            <line num="640" count="0" type="stmt"/>
            <line num="641" count="0" type="stmt"/>
            <line num="644" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="644" type="cond"/>
            <line num="645" count="0" type="stmt"/>
            <line num="647" count="0" type="stmt"/>
            <line num="649" count="0" type="stmt"/>
            <line num="653" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLIBOR(MonteCarloProcess,double,double,double) : RandomVariable" num="657" count="0" type="method"/>
            <line num="659" count="0" type="stmt"/>
            <line num="661" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="661" type="cond"/>
            <line num="662" count="0" type="stmt"/>
            <line num="665" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,int,double,double) : RandomVariable" num="668" count="0" type="method"/>
            <line num="670" count="0" type="stmt"/>
            <line num="671" count="0" type="stmt"/>
            <line num="672" count="0" type="stmt"/>
            <line num="674" count="0" type="stmt"/>
            <line num="675" count="0" type="stmt"/>
            <line num="677" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="680" count="0" type="method"/>
            <line num="682" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="685" count="0" type="method"/>
            <line num="688" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="691" count="0" type="method"/>
            <line num="693" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="696" count="0" type="method"/>
            <line num="698" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnalyticModel() : AnalyticModel" num="711" count="0" type="method"/>
            <line num="713" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="716" count="0" type="method"/>
            <line num="718" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRateCurve() : ForwardCurve" num="721" count="0" type="method"/>
            <line num="723" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : TermStructureModel" num="726" count="0" type="method"/>
            <line num="728" count="0" type="stmt"/>
            <line num="729" count="0" type="stmt"/>
            <line num="731" count="0" type="stmt"/>
            <line num="732" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="732" type="cond"/>
            <line num="733" count="0" type="stmt"/>
            <line num="736" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCovarianceModel() : TermStructureCovarianceModelInterface" num="744" count="0" type="method"/>
            <line num="745" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.time.businessdaycalendar">
         <metrics coveredelements="182" complexity="86" loc="995" methods="38" classes="11" statements="210" coveredconditionals="38" coveredmethods="26" elements="314" ncloc="622" files="9" conditionals="66" coveredstatements="118"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/businessdaycalendar/AbstractBusinessdayCalendar.java" name="AbstractBusinessdayCalendar.java">
            <metrics coveredelements="77" coveredconditionals="22" complexity="44" loc="269" coveredmethods="4" methods="7" elements="178" classes="1" ncloc="212" statements="127" conditionals="44" coveredstatements="51"/>
            <class name="AbstractBusinessdayCalendar">
               <metrics coveredelements="77" coveredconditionals="22" complexity="44" coveredmethods="4" methods="7" elements="178" statements="127" conditionals="44" coveredstatements="51"/>
            </class>
            <line complexity="10" visibility="public" signature="getAdjustedDate(LocalDate,DateRollConvention) : LocalDate" num="28" count="587368408" type="method"/>
            <line num="30" count="588086435" type="stmt"/>
            <line falsecount="588356092" truecount="52" num="30" type="cond"/>
            <line num="31" count="52" type="stmt"/>
            <line num="33" count="588768198" type="stmt"/>
            <line falsecount="400235505" truecount="188667190" num="33" type="cond"/>
            <line num="34" count="188669454" type="stmt"/>
            <line num="35" count="188623643" type="stmt"/>
            <line falsecount="188654163" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="188670434" type="stmt"/>
            <line num="41" count="400381742" type="stmt"/>
            <line falsecount="400321551" truecount="0" num="41" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="49" count="399639480" type="stmt"/>
            <line falsecount="0" truecount="399974075" num="49" type="cond"/>
            <line num="50" count="399978878" type="stmt"/>
            <line falsecount="32280" truecount="400056516" num="50" type="cond"/>
            <line num="51" count="400101317" type="stmt"/>
            <line num="52" count="400065235" type="stmt"/>
            <line falsecount="399429701" truecount="294673670" num="52" type="cond"/>
            <line num="53" count="294880299" type="stmt"/>
            <line num="55" count="400561584" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getRolledDate(LocalDate,int) : LocalDate" num="62" count="395436790" type="method"/>
            <line num="64" count="396161147" type="stmt"/>
            <line num="65" count="396046806" type="stmt"/>
            <line falsecount="16140" truecount="395950600" num="65" type="cond"/>
            <line num="66" count="396783324" type="stmt"/>
            <line falsecount="16140" truecount="396750476" num="66" type="cond"/>
            <line num="67" count="397870537" type="stmt"/>
            <line falsecount="398703903" truecount="46012" num="67" type="cond"/>
            <line num="68" count="46014" type="stmt"/>
            <line num="69" count="46003" type="stmt"/>
            <line num="70" count="46000" type="stmt"/>
            <line num="72" count="399790023" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAdjustedDate(LocalDate,String,DateRollConvention) : LocalDate" num="75" count="188586182" type="method"/>
            <line num="77" count="188592294" type="stmt"/>
            <line complexity="9" visibility="public" signature="getDateFromDateAndOffsetCode(LocalDate,String) : LocalDate" num="80" count="188602005" type="method"/>
            <line num="82" count="188614675" type="stmt"/>
            <line num="84" count="188622786" type="stmt"/>
            <line num="86" count="188630756" type="stmt"/>
            <line num="87" count="188634514" type="stmt"/>
            <line falsecount="188668502" truecount="188624961" num="87" type="cond"/>
            <line num="88" count="188634470" type="stmt"/>
            <line num="89" count="188618505" type="stmt"/>
            <line num="95" count="188491979" type="stmt"/>
            <line falsecount="188511196" truecount="5" num="95" type="cond"/>
            <line num="97" count="5" type="stmt"/>
            <line num="98" count="5" type="stmt"/>
            <line num="100" count="188527526" type="stmt"/>
            <line falsecount="0" truecount="188545751" num="100" type="cond"/>
            <line num="101" count="188584310" type="stmt"/>
            <line num="102" count="188597800" type="stmt"/>
            <line num="104" count="188637748" type="stmt"/>
            <line num="105" count="2339" type="stmt"/>
            <line num="107" count="2339" type="stmt"/>
            <line num="108" count="2339" type="stmt"/>
            <line num="110" count="17" type="stmt"/>
            <line num="112" count="17" type="stmt"/>
            <line num="113" count="17" type="stmt"/>
            <line num="115" count="54" type="stmt"/>
            <line num="117" count="54" type="stmt"/>
            <line num="118" count="54" type="stmt"/>
            <line num="120" count="188659809" type="stmt"/>
            <line num="122" count="188670687" type="stmt"/>
            <line num="123" count="188672523" type="stmt"/>
            <line num="125" count="5588" type="stmt"/>
            <line num="127" count="5588" type="stmt"/>
            <line num="128" count="5588" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="139" count="188657117" type="stmt"/>
            <line complexity="10" visibility="public" signature="createDateFromDateAndOffsetCodes(LocalDate,String[]) : LocalDate[]" num="142" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="convertOffsetCodesToTimes(String[]) : double[]" num="206" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="265" count="0" type="method"/>
            <line num="267" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendar.java" name="BusinessdayCalendar.java">
            <metrics coveredelements="38" coveredconditionals="16" complexity="13" loc="170" coveredmethods="2" methods="2" elements="50" classes="3" ncloc="66" statements="26" conditionals="22" coveredstatements="20"/>
            <class name="BusinessdayCalendar">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="BusinessdayCalendar.DateOffsetUnit">
               <metrics coveredelements="23" coveredconditionals="10" complexity="7" coveredmethods="1" methods="1" elements="27" statements="14" conditionals="12" coveredstatements="12"/>
            </class>
            <class name="BusinessdayCalendar.DateRollConvention">
               <metrics coveredelements="15" coveredconditionals="6" complexity="6" coveredmethods="1" methods="1" elements="23" statements="12" conditionals="10" coveredstatements="8"/>
            </class>
            <line complexity="7" visibility="public" signature="getEnum(String) : DateOffsetUnit" num="33" count="188570835" type="method"/>
            <line num="34" count="188593279" type="stmt"/>
            <line num="36" count="188598794" type="stmt"/>
            <line falsecount="188585717" truecount="2339" num="36" type="cond"/>
            <line num="37" count="2339" type="stmt"/>
            <line num="39" count="188606013" type="stmt"/>
            <line falsecount="188594282" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="188598566" type="stmt"/>
            <line falsecount="188592244" truecount="17" num="42" type="cond"/>
            <line num="43" count="17" type="stmt"/>
            <line num="45" count="188609609" type="stmt"/>
            <line falsecount="188626671" truecount="54" num="45" type="cond"/>
            <line num="46" count="54" type="stmt"/>
            <line num="48" count="188646407" type="stmt"/>
            <line falsecount="5588" truecount="188619998" num="48" type="cond"/>
            <line num="49" count="188650312" type="stmt"/>
            <line num="51" count="5588" type="stmt"/>
            <line falsecount="0" truecount="5588" num="51" type="cond"/>
            <line num="52" count="5588" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getEnum(String) : DateRollConvention" num="72" count="2501" type="method"/>
            <line num="73" count="2501" type="stmt"/>
            <line num="75" count="2501" type="stmt"/>
            <line falsecount="2501" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="2501" type="stmt"/>
            <line falsecount="2499" truecount="2" num="78" type="cond"/>
            <line num="79" count="2" type="stmt"/>
            <line num="81" count="2499" type="stmt"/>
            <line falsecount="2499" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="2499" type="stmt"/>
            <line falsecount="2499" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="2499" type="stmt"/>
            <line falsecount="2499" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="2499" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendarAny.java" name="BusinessdayCalendarAny.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="3" loc="36" coveredmethods="2" methods="3" elements="5" classes="1" ncloc="15" statements="2" conditionals="0" coveredstatements="1"/>
            <class name="BusinessdayCalendarAny">
               <metrics coveredelements="3" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarAny()" num="24" count="9" type="method"/>
            <line complexity="1" visibility="public" signature="isBusinessday(LocalDate) : boolean" num="27" count="187" type="method"/>
            <line num="29" count="187" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendarExcludingGivenHolidays.java" name="BusinessdayCalendarExcludingGivenHolidays.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="6" loc="67" coveredmethods="3" methods="6" elements="15" classes="1" ncloc="37" statements="9" conditionals="0" coveredstatements="6"/>
            <class name="BusinessdayCalendarExcludingGivenHolidays">
               <metrics coveredelements="9" coveredconditionals="0" complexity="6" coveredmethods="3" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingGivenHolidays(String,BusinessdayCalendar,boolean)" num="22" count="4" type="method"/>
            <line num="23" count="4" type="stmt"/>
            <line num="24" count="4" type="stmt"/>
            <line num="25" count="4" type="stmt"/>
            <line num="26" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBaseCalendar() : BusinessdayCalendar" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isExcludingWeekends() : boolean" num="46" count="11" type="method"/>
            <line num="46" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="isBusinessday(LocalDate) : boolean" num="53" count="18" type="method"/>
            <line num="55" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendarExcludingGivenSetOfHolidays.java" name="BusinessdayCalendarExcludingGivenSetOfHolidays.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="35" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="16" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="BusinessdayCalendarExcludingGivenSetOfHolidays">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingGivenSetOfHolidays(String,BusinessdayCalendar,boolean,Set&lt;LocalDate&gt;)" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingGivenSetOfHolidays(String,boolean,Set&lt;LocalDate&gt;)" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHolidays() : Set&lt;LocalDate&gt;" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendarExcludingLONHolidays.java" name="BusinessdayCalendarExcludingLONHolidays.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="4" loc="131" coveredmethods="4" methods="4" elements="12" classes="1" ncloc="98" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="BusinessdayCalendarExcludingLONHolidays">
               <metrics coveredelements="12" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="12" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 104()" num="104" count="1" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="491" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingLONHolidays()" num="116" count="1" type="method"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingLONHolidays(BusinessdayCalendar)" num="125" count="2" type="method"/>
            <line num="126" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHolidays() : Set&lt;LocalDate&gt;" num="129" count="4" type="method"/>
            <line num="130" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendarExcludingNYCHolidays.java" name="BusinessdayCalendarExcludingNYCHolidays.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="4" loc="138" coveredmethods="4" methods="4" elements="12" classes="1" ncloc="106" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="BusinessdayCalendarExcludingNYCHolidays">
               <metrics coveredelements="12" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="12" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 111()" num="111" count="1" type="method"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="546" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingNYCHolidays()" num="123" count="1" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingNYCHolidays(BusinessdayCalendar)" num="132" count="2" type="method"/>
            <line num="133" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHolidays() : Set&lt;LocalDate&gt;" num="136" count="5" type="method"/>
            <line num="137" count="5" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendarExcludingTARGETHolidays.java" name="BusinessdayCalendarExcludingTARGETHolidays.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="5" loc="94" coveredmethods="5" methods="5" elements="28" classes="1" ncloc="50" statements="23" conditionals="0" coveredstatements="23"/>
            <class name="BusinessdayCalendarExcludingTARGETHolidays">
               <metrics coveredelements="28" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="28" statements="23" conditionals="0" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingTARGETHolidays()" num="30" count="2667" type="method"/>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingTARGETHolidays(BusinessdayCalendar)" num="38" count="4" type="method"/>
            <line num="39" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="isBusinessday(LocalDate) : boolean" num="42" count="689954660" type="method"/>
            <line num="44" count="690239053" type="stmt"/>
            <line num="45" count="690333839" type="stmt"/>
            <line num="47" count="690587378" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEasterSunday(LocalDate) : boolean" num="67" count="790555467" type="method"/>
            <line num="68" count="794056024" type="stmt"/>
            <line num="69" count="791898539" type="stmt"/>
            <line num="70" count="790536103" type="stmt"/>
            <line num="71" count="790408473" type="stmt"/>
            <line num="72" count="790124386" type="stmt"/>
            <line num="73" count="789051459" type="stmt"/>
            <line num="74" count="789741086" type="stmt"/>
            <line num="75" count="789661313" type="stmt"/>
            <line num="76" count="787911768" type="stmt"/>
            <line num="77" count="792625825" type="stmt"/>
            <line num="78" count="791454554" type="stmt"/>
            <line num="79" count="791236756" type="stmt"/>
            <line num="80" count="790588881" type="stmt"/>
            <line num="81" count="791129361" type="stmt"/>
            <line num="82" count="791190893" type="stmt"/>
            <line num="84" count="791942517" type="stmt"/>
            <line num="85" count="792242418" type="stmt"/>
            <line num="87" count="794180224" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="90" count="4" type="method"/>
            <line num="92" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendarExcludingWeekends.java" name="BusinessdayCalendarExcludingWeekends.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="4" loc="55" coveredmethods="2" methods="4" elements="7" classes="1" ncloc="22" statements="3" conditionals="0" coveredstatements="1"/>
            <class name="BusinessdayCalendarExcludingWeekends">
               <metrics coveredelements="3" coveredconditionals="0" complexity="4" coveredmethods="2" methods="4" elements="7" statements="3" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingWeekends()" num="29" count="65836" type="method"/>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingWeekends(BusinessdayCalendar)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isBusinessday(LocalDate) : boolean" num="44" count="690361861" type="method"/>
            <line num="46" count="690355335" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.bond">
         <metrics coveredelements="0" complexity="69" loc="539" methods="35" classes="3" statements="123" coveredconditionals="0" coveredmethods="0" elements="206" ncloc="283" files="2" conditionals="48" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/bond/Bond.java" name="Bond.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="50" loc="375" coveredmethods="0" methods="21" elements="163" classes="1" ncloc="192" statements="96" conditionals="46" coveredstatements="0"/>
            <class name="Bond">
               <metrics coveredelements="0" coveredconditionals="0" complexity="50" coveredmethods="0" methods="21" elements="163" statements="96" conditionals="46" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Bond(Schedule,String,String,String,String,double,double,double)" num="64" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Bond(Schedule,String,String,String,double,double)" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Bond(Schedule,String,String,String,String,double,double)" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Bond(Schedule,String,String,String,double)" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="19" visibility="public" signature="getValue(double,AnalyticModel) : double" num="128" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="153" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="192" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCouponPayment(int,AnalyticModel) : double" num="209" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValueWithGivenSpreadOverCurve(double,Curve,double,AnalyticModel) : double" num="235" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="243" type="cond"/>
            <line complexity="1" visibility="public" signature="getValueWithGivenYield(double,double,AnalyticModel) : double" num="256" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getSpread(double,Curve,AnalyticModel) : double" num="270" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="272" type="cond"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getYield(double,AnalyticModel) : double" num="290" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccruedInterest(LocalDate,AnalyticModel) : double" num="309" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccruedInterest(double,AnalyticModel) : double" num="324" count="0" type="method"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule() : Schedule" num="329" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="334" count="0" type="method"/>
            <line num="335" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="338" count="0" type="method"/>
            <line num="339" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSurvivalProbabilityCurveName() : String" num="342" count="0" type="method"/>
            <line num="343" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBasisFactorCurveName() : String" num="346" count="0" type="method"/>
            <line num="347" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixedCoupon() : double" num="350" count="0" type="method"/>
            <line num="351" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatingSpread() : double" num="354" count="0" type="method"/>
            <line num="355" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRecoveryRate() : double" num="358" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="362" count="0" type="method"/>
            <line num="364" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/bond/BondCurve.java" name="BondCurve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="164" coveredmethods="0" methods="14" elements="43" classes="2" ncloc="91" statements="27" conditionals="2" coveredstatements="0"/>
            <class name="BondCurve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="14" elements="43" statements="27" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="BondCurve.Type">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BondCurve(String,LocalDate,Curve,Curve,Type)" num="64" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(AnalyticModel,double) : double" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(double) : double" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(AnalyticModel,double) : double" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getZeroRate(double) : double" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceCurve() : Curve" num="137" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSpreadCurve() : Curve" num="141" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getType() : String" num="145" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="149" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="155" count="0" type="method"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.hybridassetinterestrate">
         <metrics coveredelements="112" complexity="74" loc="688" methods="55" classes="9" statements="136" coveredconditionals="18" coveredmethods="23" elements="223" ncloc="418" files="9" conditionals="32" coveredstatements="71"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/ConvexityAdjustedModel.java" name="ConvexityAdjustedModel.java">
            <metrics coveredelements="28" coveredconditionals="8" complexity="7" loc="66" coveredmethods="2" methods="2" elements="28" classes="1" ncloc="40" statements="18" conditionals="8" coveredstatements="18"/>
            <class name="ConvexityAdjustedModel">
               <metrics coveredelements="28" coveredconditionals="8" complexity="7" coveredmethods="2" methods="2" elements="28" statements="18" conditionals="8" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="ConvexityAdjustedModel(ProcessModel,MonteCarloProcess,Map&lt;Integer,Integer&gt;)" num="28" count="14" type="method"/>
            <line num="29" count="14" type="stmt"/>
            <line num="30" count="14" type="stmt"/>
            <line num="31" count="14" type="stmt"/>
            <line num="32" count="14" type="stmt"/>
            <line complexity="6" visibility="public" signature="getDrift(RandomVariable[],MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="35" count="523" type="method"/>
            <line num="39" count="523" type="stmt"/>
            <line num="41" count="523" type="stmt"/>
            <line num="42" count="523" type="stmt"/>
            <line num="43" count="523" type="stmt"/>
            <line num="45" count="523" type="stmt"/>
            <line falsecount="523" truecount="20920" num="45" type="cond"/>
            <line num="46" count="20920" type="stmt"/>
            <line falsecount="10666" truecount="10254" num="46" type="cond"/>
            <line num="47" count="10254" type="stmt"/>
            <line num="49" count="10254" type="stmt"/>
            <line num="50" count="10254" type="stmt"/>
            <line num="52" count="10254" type="stmt"/>
            <line falsecount="10254" truecount="10254" num="52" type="cond"/>
            <line num="53" count="10254" type="stmt"/>
            <line falsecount="6354" truecount="3900" num="53" type="cond"/>
            <line num="54" count="3900" type="stmt"/>
            <line num="59" count="10254" type="stmt"/>
            <line num="64" count="523" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/CrossCurrencyLIBORMarketModelFromModels.java" name="CrossCurrencyLIBORMarketModelFromModels.java">
            <metrics coveredelements="41" coveredconditionals="7" complexity="18" loc="140" coveredmethods="8" methods="14" elements="55" classes="1" ncloc="94" statements="33" conditionals="8" coveredstatements="26"/>
            <class name="CrossCurrencyLIBORMarketModelFromModels">
               <metrics coveredelements="41" coveredconditionals="7" complexity="18" coveredmethods="8" methods="14" elements="55" statements="33" conditionals="8" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="public" signature="CrossCurrencyLIBORMarketModelFromModels(String,Map&lt;String, LIBORModelMonteCarloSimulationModel&gt;,Map&lt;String, MonteCarloProcessFromProcessModel&gt;)" num="38" count="9" type="method"/>
            <line num="41" count="9" type="stmt"/>
            <line num="42" count="9" type="stmt"/>
            <line num="43" count="9" type="stmt"/>
            <line num="44" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBaseModel() : LIBORModelMonteCarloSimulationModel" num="48" count="56" type="method"/>
            <line num="49" count="56" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="52" count="6" type="method"/>
            <line num="54" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="83" count="22" type="method"/>
            <line num="86" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : MonteCarloSimulationModel" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="94" count="28" type="method"/>
            <line num="96" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(String,double) : RandomVariable" num="99" count="3" type="method"/>
            <line num="101" count="3" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(RiskFactorID,double) : RandomVariable" num="104" count="17" type="method"/>
            <line num="106" count="17" type="stmt"/>
            <line falsecount="11" truecount="6" num="106" type="cond"/>
            <line num="107" count="6" type="stmt"/>
            <line num="108" count="6" type="stmt"/>
            <line num="110" count="6" type="stmt"/>
            <line num="112" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="112" type="cond"/>
            <line num="113" count="4" type="stmt"/>
            <line num="114" count="4" type="stmt"/>
            <line num="118" count="6" type="stmt"/>
            <line num="120" count="11" type="stmt"/>
            <line falsecount="0" truecount="11" num="120" type="cond"/>
            <line num="121" count="11" type="stmt"/>
            <line falsecount="7" truecount="4" num="121" type="cond"/>
            <line num="122" count="4" type="stmt"/>
            <line num="125" count="7" type="stmt"/>
            <line num="126" count="7" type="stmt"/>
            <line num="128" count="7" type="stmt"/>
            <line num="129" count="7" type="stmt"/>
            <line num="130" count="7" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getInterestRateModel(String) : LIBORModelMonteCarloSimulationModel" num="137" count="1" type="method"/>
            <line num="138" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/HybridAssetLIBORModelMonteCarloSimulation.java" name="HybridAssetLIBORModelMonteCarloSimulation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="19" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="HybridAssetLIBORModelMonteCarloSimulation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/HybridAssetLIBORModelMonteCarloSimulationFromModels.java" name="HybridAssetLIBORModelMonteCarloSimulationFromModels.java">
            <metrics coveredelements="27" coveredconditionals="3" complexity="32" loc="233" coveredmethods="7" methods="29" elements="78" classes="1" ncloc="154" statements="43" conditionals="6" coveredstatements="17"/>
            <class name="HybridAssetLIBORModelMonteCarloSimulationFromModels">
               <metrics coveredelements="27" coveredconditionals="3" complexity="32" coveredmethods="7" methods="29" elements="78" statements="43" conditionals="6" coveredstatements="17"/>
            </class>
            <line complexity="2" visibility="public" signature="HybridAssetLIBORModelMonteCarloSimulationFromModels(LIBORModelMonteCarloSimulationModel,AssetModelMonteCarloSimulationModel,DiscountCurve)" num="53" count="2" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="HybridAssetLIBORModelMonteCarloSimulationFromModels(LIBORModelMonteCarloSimulationModel,AssetModelMonteCarloSimulationModel)" num="67" count="2" type="method"/>
            <line num="70" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="103" count="1802" type="method"/>
            <line num="105" count="1802" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriod(int) : double" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(int,int) : RandomVariable" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="138" count="3604" type="method"/>
            <line num="140" count="3604" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(double,double,double) : RandomVariable" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : HybridAssetLIBORModelMonteCarloSimulationFromModels" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBORs(int) : RandomVariable[]" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getNumeraire(double) : RandomVariable" num="159" count="3604" type="method"/>
            <line num="162" count="3604" type="stmt"/>
            <line num="164" count="3604" type="stmt"/>
            <line falsecount="3604" truecount="0" num="164" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="170" count="3604" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(int) : RandomVariable" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBrownianMotion() : BrownianMotion" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : TermStructureModel" num="184" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcess() : MonteCarloProcess" num="189" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : HybridAssetLIBORModelMonteCarloSimulationFromModels" num="198" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfAssets() : int" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(int,int) : RandomVariable" num="209" count="1802" type="method"/>
            <line num="211" count="1802" type="stmt"/>
            <line num="212" count="1802" type="stmt"/>
            <line num="213" count="1802" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAssetValue(double,int) : RandomVariable" num="216" count="1802" type="method"/>
            <line num="218" count="1802" type="stmt"/>
            <line num="221" count="1802" type="stmt"/>
            <line falsecount="1802" truecount="0" num="221" type="cond"/>
            <line num="222" count="0" type="stmt"/>
            <line num="225" count="1802" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="228" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/HybridAssetMonteCarloSimulation.java" name="HybridAssetMonteCarloSimulation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="HybridAssetMonteCarloSimulation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/ModelFactory.java" name="ModelFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="129" coveredmethods="0" methods="4" elements="46" classes="1" ncloc="77" statements="32" conditionals="10" coveredstatements="0"/>
            <class name="ModelFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="4" elements="46" statements="32" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="ModelFactory()" num="34" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="getInstance() : ModelFactory" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getHybridAssetLIBORModel(LIBORModelMonteCarloSimulationModel,BrownianMotion,double[],double,double[][],double[],double[],double[],DiscountCurve) : HybridAssetLIBORModelMonteCarloSimulation" num="62" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setValues(double[],double[]) : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/RiskFactorFX.java" name="RiskFactorFX.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="2" loc="16" coveredmethods="2" methods="2" elements="5" classes="1" ncloc="12" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="RiskFactorFX">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="RiskFactorFX(String)" num="7" count="11" type="method"/>
            <line num="8" count="11" type="stmt"/>
            <line num="9" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="12" count="25" type="method"/>
            <line num="14" count="25" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/RiskFactorForwardRate.java" name="RiskFactorForwardRate.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="4" loc="28" coveredmethods="4" methods="4" elements="11" classes="1" ncloc="22" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="RiskFactorForwardRate">
               <metrics coveredelements="11" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="11" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="RiskFactorForwardRate(String,double,double)" num="9" count="6" type="method"/>
            <line num="10" count="6" type="stmt"/>
            <line num="11" count="6" type="stmt"/>
            <line num="12" count="6" type="stmt"/>
            <line num="13" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="16" count="16" type="method"/>
            <line num="18" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStart() : double" num="21" count="6" type="method"/>
            <line num="22" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodEnd() : double" num="25" count="6" type="method"/>
            <line num="26" count="6" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/RiskFactorID.java" name="RiskFactorID.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="9" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RiskFactorID">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.marketdata2.model">
         <metrics coveredelements="50" complexity="31" loc="389" methods="26" classes="2" statements="71" coveredconditionals="5" coveredmethods="12" elements="107" ncloc="212" files="2" conditionals="10" coveredstatements="33"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/AnalyticModel.java" name="AnalyticModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="118" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="28" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AnalyticModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/AnalyticModelFromCurvesAndVols.java" name="AnalyticModelFromCurvesAndVols.java">
            <metrics coveredelements="50" coveredconditionals="5" complexity="31" loc="271" coveredmethods="12" methods="26" elements="107" classes="1" ncloc="184" statements="71" conditionals="10" coveredstatements="33"/>
            <class name="AnalyticModelFromCurvesAndVols">
               <metrics coveredelements="50" coveredconditionals="5" complexity="31" coveredmethods="12" methods="26" elements="107" statements="71" conditionals="10" coveredstatements="33"/>
            </class>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols()" num="47" count="357" type="method"/>
            <line num="48" count="357" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols(RandomVariableFactory)" num="56" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols(Curve[])" num="65" count="9" type="method"/>
            <line num="66" count="9" type="stmt"/>
            <line num="67" count="9" type="stmt"/>
            <line num="68" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols(RandomVariableFactory,Curve[])" num="78" count="1" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols(Collection&lt;Curve&gt;)" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="97" count="20872" type="method"/>
            <line num="99" count="20872" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurve(String) : Curve" num="102" count="12570" type="method"/>
            <line num="105" count="12570" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurves() : Map&lt;String, Curve&gt;" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addCurve(String,Curve) : AnalyticModel" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addCurve(Curve) : AnalyticModel" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addCurves(Curve) : AnalyticModel" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addCurves(Set&lt;Curve&gt;) : AnalyticModel" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCurve(Curve) : void" num="148" count="348" type="method"/>
            <line num="152" count="348" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCurves(Curve[]) : void" num="161" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDiscountCurve(String) : DiscountCurveInterface" num="168" count="9280" type="method"/>
            <line num="170" count="9280" type="stmt"/>
            <line num="171" count="9280" type="stmt"/>
            <line num="172" count="9280" type="stmt"/>
            <line falsecount="0" truecount="9280" num="172" type="cond"/>
            <line num="173" count="9280" type="stmt"/>
            <line num="176" count="9280" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwardCurve(String) : ForwardCurveInterface" num="179" count="3284" type="method"/>
            <line num="181" count="3284" type="stmt"/>
            <line num="182" count="3284" type="stmt"/>
            <line num="183" count="3284" type="stmt"/>
            <line falsecount="1642" truecount="1642" num="183" type="cond"/>
            <line num="184" count="1642" type="stmt"/>
            <line num="187" count="3284" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilitySurface(String) : VolatilitySurface" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilitySurfaces() : Map&lt;String, VolatilitySurface&gt;" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addVolatilitySurface(VolatilitySurface) : AnalyticModel" num="200" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addVolatilitySurfaces(VolatilitySurface) : AnalyticModel" num="207" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addVolatilitySurfaces(Set&lt;VolatilitySurface&gt;) : AnalyticModel" num="217" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="setVolatilitySurface(VolatilitySurface) : void" num="226" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="set(Object) : void" num="231" count="348" type="method"/>
            <line num="232" count="348" type="stmt"/>
            <line falsecount="0" truecount="348" num="232" type="cond"/>
            <line num="233" count="348" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : AnalyticModelFromCurvesAndVols" num="241" count="348" type="method"/>
            <line num="244" count="348" type="stmt"/>
            <line num="245" count="348" type="stmt"/>
            <line num="246" count="348" type="stmt"/>
            <line num="247" count="348" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneForParameter(Map&lt;ParameterObject, RandomVariable[]&gt;) : AnalyticModel" num="250" count="348" type="method"/>
            <line num="254" count="348" type="stmt"/>
            <line num="257" count="348" type="stmt"/>
            <line falsecount="0" truecount="348" num="257" type="cond"/>
            <line num="258" count="348" type="stmt"/>
            <line num="259" count="348" type="stmt"/>
            <line num="260" count="348" type="stmt"/>
            <line num="264" count="348" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="267" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.finitedifference.experimental">
         <metrics coveredelements="0" complexity="20" loc="150" methods="10" classes="1" statements="53" coveredconditionals="0" coveredmethods="0" elements="81" ncloc="108" files="1" conditionals="18" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/finitedifference/experimental/BlackScholesTheta.java" name="BlackScholesTheta.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="150" coveredmethods="0" methods="10" elements="81" classes="1" ncloc="108" statements="53" conditionals="18" coveredstatements="0"/>
            <class name="BlackScholesTheta">
               <metrics coveredelements="0" coveredconditionals="0" complexity="20" coveredmethods="0" methods="10" elements="81" statements="53" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="V_T(double) : double" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="V_0(double,double) : double" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="V_inf(double,double) : double" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="f_s(double) : double" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="f_t(double) : double" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="f(double,double,double) : double" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="u_0(double) : double" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="u_neg_inf(double,double) : double" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="u_pos_inf(double,double) : double" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="solve() : double[][]" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.timeseries">
         <metrics coveredelements="0" complexity="19" loc="238" methods="19" classes="6" statements="26" coveredconditionals="0" coveredmethods="0" elements="45" ncloc="124" files="6" conditionals="0" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/HistoricalSimulationModel.java" name="HistoricalSimulationModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="41" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="HistoricalSimulationModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/MarketData.java" name="MarketData.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="37" coveredmethods="0" methods="3" elements="8" classes="1" ncloc="18" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="MarketData">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MarketData(Calendar,Map&lt;String,Double&gt;)" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDate() : Calendar" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(String) : double" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/TimeSeries.java" name="TimeSeries.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="17" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TimeSeries">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/TimeSeriesFromArray.java" name="TimeSeriesFromArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="60" coveredmethods="0" methods="8" elements="18" classes="1" ncloc="42" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="TimeSeriesFromArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="18" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TimeSeriesFromArray(double[],double[])" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : double" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfTimePoints() : int" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues() : Iterable&lt;Double&gt;" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Double&gt;" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : Double" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/TimeSeriesModelParametric.java" name="TimeSeriesModelParametric.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="22" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TimeSeriesModelParametric">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/TimeSeriesView.java" name="TimeSeriesView.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="61" coveredmethods="0" methods="8" elements="19" classes="1" ncloc="44" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="TimeSeriesView">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="19" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TimeSeriesView(TimeSeries,int,int)" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="24" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : double" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfTimePoints() : int" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues() : Iterable&lt;Double&gt;" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Double&gt;" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : Double" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.integration">
         <metrics coveredelements="119" complexity="40" loc="577" methods="26" classes="7" statements="108" coveredconditionals="18" coveredmethods="15" elements="158" ncloc="246" files="7" conditionals="24" coveredstatements="86"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/integration/AbstractRealIntegral.java" name="AbstractRealIntegral.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="3" loc="60" coveredmethods="3" methods="3" elements="8" classes="1" ncloc="19" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="AbstractRealIntegral">
               <metrics coveredelements="8" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractRealIntegral(double,double)" num="29" count="130881" type="method"/>
            <line num="30" count="130880" type="stmt"/>
            <line num="31" count="130884" type="stmt"/>
            <line num="32" count="130884" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowerBound() : double" num="41" count="130893" type="method"/>
            <line num="42" count="130897" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUpperBound() : double" num="50" count="130895" type="method"/>
            <line num="51" count="130897" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/integration/MonteCarloIntegrator.java" name="MonteCarloIntegrator.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="6" loc="88" coveredmethods="3" methods="6" elements="20" classes="1" ncloc="37" statements="14" conditionals="0" coveredstatements="11"/>
            <class name="MonteCarloIntegrator">
               <metrics coveredelements="14" coveredconditionals="0" complexity="6" coveredmethods="3" methods="6" elements="20" statements="14" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloIntegrator(double,double,int,int,boolean)" num="36" count="4" type="method"/>
            <line num="37" count="4" type="stmt"/>
            <line num="38" count="4" type="stmt"/>
            <line num="39" count="4" type="stmt"/>
            <line num="40" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloIntegrator(double,double,int,boolean)" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloIntegrator(double,double,int)" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="integrate(DoubleUnaryOperator) : double" num="66" count="8" type="method"/>
            <line num="68" count="8" type="stmt"/>
            <line num="69" count="8" type="stmt"/>
            <line num="70" count="8" type="stmt"/>
            <line num="73" count="8" type="stmt"/>
            <line num="75" count="8" type="stmt"/>
            <line num="78" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfEvaluationPoints() : int" num="81" count="4" type="method"/>
            <line num="82" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSeed() : int" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/integration/PiecewiseContantDoubleUnaryOperator.java" name="PiecewiseContantDoubleUnaryOperator.java">
            <metrics coveredelements="46" coveredconditionals="11" complexity="15" loc="176" coveredmethods="4" methods="8" elements="60" classes="1" ncloc="79" statements="38" conditionals="14" coveredstatements="31"/>
            <class name="PiecewiseContantDoubleUnaryOperator">
               <metrics coveredelements="46" coveredconditionals="11" complexity="15" coveredmethods="4" methods="8" elements="60" statements="38" conditionals="14" coveredstatements="31"/>
            </class>
            <line complexity="1" visibility="public" signature="PiecewiseContantDoubleUnaryOperator(double[],double[])" num="38" count="14" type="method"/>
            <line num="39" count="14" type="stmt"/>
            <line num="40" count="14" type="stmt"/>
            <line num="41" count="12" type="stmt"/>
            <line num="42" count="10" type="stmt"/>
            <line num="44" count="8" type="stmt"/>
            <line num="45" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="PiecewiseContantDoubleUnaryOperator(List&lt;Double&gt;,List&lt;Double&gt;)" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getIntegral(double,double,DoubleUnaryOperator) : double" num="75" count="30" type="method"/>
            <line num="76" count="30" type="stmt"/>
            <line falsecount="30" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="30" type="stmt"/>
            <line falsecount="30" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="30" type="stmt"/>
            <line num="85" count="30" type="stmt"/>
            <line falsecount="4" truecount="26" num="85" type="cond"/>
            <line num="86" count="26" type="stmt"/>
            <line num="89" count="30" type="stmt"/>
            <line num="90" count="30" type="stmt"/>
            <line falsecount="0" truecount="30" num="90" type="cond"/>
            <line num="91" count="30" type="stmt"/>
            <line num="93" count="30" type="stmt"/>
            <line num="95" count="30" type="stmt"/>
            <line falsecount="22" truecount="8" num="95" type="cond"/>
            <line num="97" count="8" type="stmt"/>
            <line num="101" count="22" type="stmt"/>
            <line num="104" count="22" type="stmt"/>
            <line num="107" count="22" type="stmt"/>
            <line falsecount="22" truecount="22" num="107" type="cond"/>
            <line num="108" count="22" type="stmt"/>
            <line num="109" count="22" type="stmt"/>
            <line num="110" count="22" type="stmt"/>
            <line num="111" count="22" type="stmt"/>
            <line num="115" count="22" type="stmt"/>
            <line num="117" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegral(double,double,Function&lt;Double, Double&gt;) : double" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="toPrimitive(Function&lt;Double, Double&gt;) : DoubleUnaryOperator" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegral(double,double) : double" num="147" count="16" type="method"/>
            <line num="148" count="16" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="157" count="12" type="method"/>
            <line num="159" count="12" type="stmt"/>
            <line num="160" count="12" type="stmt"/>
            <line falsecount="4" truecount="8" num="160" type="cond"/>
            <line num="161" count="8" type="stmt"/>
            <line num="163" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Double) : Double" num="172" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/integration/RealIntegral.java" name="RealIntegral.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="25" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RealIntegral">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/integration/RombergRealIntegration.java" name="RombergRealIntegration.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="50" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="20" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="RombergRealIntegration">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RombergRealIntegration(double,double,int)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="integrate(DoubleUnaryOperator) : double" num="38" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="value(double) : double" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/integration/SimpsonRealIntegrator.java" name="SimpsonRealIntegrator.java">
            <metrics coveredelements="22" coveredconditionals="2" complexity="4" loc="76" coveredmethods="3" methods="3" elements="22" classes="1" ncloc="35" statements="17" conditionals="2" coveredstatements="17"/>
            <class name="SimpsonRealIntegrator">
               <metrics coveredelements="22" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="22" statements="17" conditionals="2" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="SimpsonRealIntegrator(double,double,int,boolean)" num="33" count="130877" type="method"/>
            <line num="34" count="130878" type="stmt"/>
            <line num="35" count="130878" type="stmt"/>
            <line num="36" count="130878" type="stmt"/>
            <line num="37" count="130879" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpsonRealIntegrator(double,double,int)" num="47" count="128798" type="method"/>
            <line num="48" count="128795" type="stmt"/>
            <line complexity="2" visibility="public" signature="integrate(DoubleUnaryOperator) : double" num="51" count="130876" type="method"/>
            <line num="53" count="130876" type="stmt"/>
            <line num="54" count="130878" type="stmt"/>
            <line num="55" count="130874" type="stmt"/>
            <line num="57" count="130873" type="stmt"/>
            <line num="59" count="130877" type="stmt"/>
            <line num="60" count="130876" type="stmt"/>
            <line num="62" count="130878" type="stmt"/>
            <line num="64" count="130871" type="stmt"/>
            <line falsecount="128792" truecount="2083" num="64" type="cond"/>
            <line num="65" count="2083" type="stmt"/>
            <line num="68" count="130875" type="stmt"/>
            <line num="72" count="130868" type="stmt"/>
            <line num="74" count="130880" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/integration/TrapezoidalRealIntegrator.java" name="TrapezoidalRealIntegrator.java">
            <metrics coveredelements="29" coveredconditionals="5" complexity="9" loc="102" coveredmethods="2" methods="3" elements="41" classes="1" ncloc="50" statements="30" conditionals="8" coveredstatements="22"/>
            <class name="TrapezoidalRealIntegrator">
               <metrics coveredelements="29" coveredconditionals="5" complexity="9" coveredmethods="2" methods="3" elements="41" statements="30" conditionals="8" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="TrapezoidalRealIntegrator(double,double,double[])" num="30" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="TrapezoidalRealIntegrator(double,double,int)" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="integrate(DoubleUnaryOperator) : double" num="51" count="2" type="method"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="57" type="cond"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="62" type="cond"/>
            <line num="63" count="6" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="69" type="cond"/>
            <line num="70" count="4" type="stmt"/>
            <line num="71" count="4" type="stmt"/>
            <line num="73" count="4" type="stmt"/>
            <line num="75" count="4" type="stmt"/>
            <line num="76" count="4" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.finitedifference.models">
         <metrics coveredelements="53" complexity="22" loc="289" methods="22" classes="4" statements="39" coveredconditionals="0" coveredmethods="18" elements="61" ncloc="166" files="4" conditionals="0" coveredstatements="35"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/finitedifference/models/FDMBlackScholesModel.java" name="FDMBlackScholesModel.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="11" loc="100" coveredmethods="9" methods="11" elements="30" classes="1" ncloc="72" statements="19" conditionals="0" coveredstatements="17"/>
            <class name="FDMBlackScholesModel">
               <metrics coveredelements="26" coveredconditionals="0" complexity="11" coveredmethods="9" methods="11" elements="30" statements="19" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="FDMBlackScholesModel(int,int,int,double,double,double,double,double)" num="29" count="6" type="method"/>
            <line num="38" count="6" type="stmt"/>
            <line num="39" count="6" type="stmt"/>
            <line num="40" count="6" type="stmt"/>
            <line num="42" count="6" type="stmt"/>
            <line num="43" count="6" type="stmt"/>
            <line num="44" count="6" type="stmt"/>
            <line num="45" count="6" type="stmt"/>
            <line num="46" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="varianceOfStockPrice(double) : double" num="49" count="12" type="method"/>
            <line num="51" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardValue(double) : double" num="55" count="12" type="method"/>
            <line num="57" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="60" count="1418" type="method"/>
            <line num="62" count="1418" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLocalVolatility(double,double) : double" num="74" count="50820" type="method"/>
            <line num="76" count="50820" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumTimesteps() : int" num="79" count="228" type="method"/>
            <line num="81" count="228" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumSpacesteps() : int" num="84" count="12" type="method"/>
            <line num="86" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumStandardDeviations() : double" num="89" count="12" type="method"/>
            <line num="91" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,DoubleUnaryOperator,FiniteDifference1DBoundary) : double[][]" num="94" count="6" type="method"/>
            <line num="96" count="6" type="stmt"/>
            <line num="97" count="6" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/finitedifference/models/FDMConstantElasticityOfVarianceModel.java" name="FDMConstantElasticityOfVarianceModel.java">
            <metrics coveredelements="27" coveredconditionals="0" complexity="11" loc="117" coveredmethods="9" methods="11" elements="31" classes="1" ncloc="75" statements="20" conditionals="0" coveredstatements="18"/>
            <class name="FDMConstantElasticityOfVarianceModel">
               <metrics coveredelements="27" coveredconditionals="0" complexity="11" coveredmethods="9" methods="11" elements="31" statements="20" conditionals="0" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="FDMConstantElasticityOfVarianceModel(int,int,int,double,double,double,double,double,double)" num="31" count="4" type="method"/>
            <line num="41" count="4" type="stmt"/>
            <line num="42" count="4" type="stmt"/>
            <line num="43" count="4" type="stmt"/>
            <line num="44" count="4" type="stmt"/>
            <line num="46" count="4" type="stmt"/>
            <line num="47" count="4" type="stmt"/>
            <line num="48" count="4" type="stmt"/>
            <line num="49" count="4" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="varianceOfStockPrice(double) : double" num="57" count="8" type="method"/>
            <line num="59" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardValue(double) : double" num="66" count="8" type="method"/>
            <line num="68" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="74" count="2092" type="method"/>
            <line num="76" count="2092" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLocalVolatility(double,double) : double" num="88" count="103040" type="method"/>
            <line num="90" count="103040" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumTimesteps() : int" num="93" count="332" type="method"/>
            <line num="95" count="332" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumSpacesteps() : int" num="98" count="8" type="method"/>
            <line num="100" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumStandardDeviations() : double" num="103" count="8" type="method"/>
            <line num="105" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,DoubleUnaryOperator,FiniteDifference1DBoundary) : double[][]" num="111" count="4" type="method"/>
            <line num="113" count="4" type="stmt"/>
            <line num="114" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/finitedifference/models/FiniteDifference1DBoundary.java" name="FiniteDifference1DBoundary.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="31" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FiniteDifference1DBoundary">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/finitedifference/models/FiniteDifference1DModel.java" name="FiniteDifference1DModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="41" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="14" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FiniteDifference1DModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.montecarlo.automaticdifferentiation.backward.alternative">
         <metrics coveredelements="0" complexity="694" loc="4151" methods="398" classes="13" statements="1159" coveredconditionals="0" coveredmethods="0" elements="1833" ncloc="2799" files="7" conditionals="276" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/alternative/RandomVariableAAD.java" name="RandomVariableAAD.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="217" loc="1139" coveredmethods="0" methods="106" elements="613" classes="2" ncloc="782" statements="411" conditionals="96" coveredstatements="0"/>
            <class name="RandomVariableAAD">
               <metrics coveredelements="0" coveredconditionals="0" complexity="217" coveredmethods="0" methods="106" elements="613" statements="411" conditionals="96" coveredstatements="0"/>
            </class>
            <class name="RandomVariableAAD.OperatorType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="RandomVariableAAD(int,RandomVariable,int[],OperatorType,ArrayList&lt;Integer&gt;,boolean)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="constructNewAADRandomVariable(RandomVariable,int[],OperatorType,ArrayList&lt;Integer&gt;,boolean) : RandomVariableAAD" num="59" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructNewAADRandomVariable(double) : RandomVariableAAD" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructNewAADRandomVariable(RandomVariable) : RandomVariableAAD" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructNewAADRandomVariable(double,double[]) : RandomVariableAAD" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getParentAADRandomVariables() : RandomVariableAAD[]" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getParentRandomVariableInderfaces() : RandomVariable[]" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="35" visibility="private" signature="apply(OperatorType,RandomVariable[]) : RandomVariable" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="275" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="281" type="cond"/>
            <line complexity="1" visibility="private" signature="getPartialDerivative(int,int) : RandomVariable" num="285" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="58" visibility="private" signature="partialDerivativeWithRespectTo(int) : RandomVariable" num="289" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="296" type="cond"/>
            <line num="297" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="304" type="cond"/>
            <line num="306" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="339" count="0" type="method"/>
            <line num="341" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="341" type="cond"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="350" count="0" type="method"/>
            <line num="352" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="352" type="cond"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="applyAsDouble(double) : double" num="361" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="363" type="cond"/>
            <line falsecount="0" truecount="0" num="363" type="cond"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="379" type="cond"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="389" type="cond"/>
            <line num="390" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="392" type="cond"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="395" type="cond"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="399" count="0" type="method"/>
            <line num="401" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="401" type="cond"/>
            <line num="407" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="410" count="0" type="method"/>
            <line num="412" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="412" type="cond"/>
            <line num="418" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="420" type="cond"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="423" type="cond"/>
            <line num="425" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="427" type="cond"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="431" type="cond"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="436" type="cond"/>
            <line num="437" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="441" type="cond"/>
            <line num="442" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="448" type="cond"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="450" type="cond"/>
            <line num="451" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="457" type="cond"/>
            <line num="458" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="459" type="cond"/>
            <line num="460" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="466" type="cond"/>
            <line num="467" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="468" type="cond"/>
            <line num="469" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line num="473" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="475" type="cond"/>
            <line num="476" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="477" type="cond"/>
            <line num="478" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line num="484" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="484" type="cond"/>
            <line num="485" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="486" type="cond"/>
            <line num="487" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line num="491" count="0" type="stmt"/>
            <line num="492" count="0" type="stmt"/>
            <line num="493" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="493" type="cond"/>
            <line num="494" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="495" count="0" type="method"/>
            <line num="497" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="497" type="cond"/>
            <line num="500" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="500" type="cond"/>
            <line num="501" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="505" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getGradient() : Map&lt;Integer, RandomVariable&gt;" num="520" count="0" type="method"/>
            <line num="522" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line num="526" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="528" type="cond"/>
            <line num="530" count="0" type="stmt"/>
            <line num="532" count="0" type="stmt"/>
            <line num="534" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line num="542" count="0" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getArrayListOfAllIndicesOfDependentRandomVariables() : ArrayList&lt;Integer&gt;" num="551" count="0" type="method"/>
            <line num="553" count="0" type="stmt"/>
            <line num="555" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="555" type="cond"/>
            <line num="557" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="560" type="cond"/>
            <line num="562" count="0" type="stmt"/>
            <line num="564" count="0" type="stmt"/>
            <line num="569" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverageAsRandomVariableAAD(RandomVariable) : RandomVariable" num="575" count="0" type="method"/>
            <line num="577" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVarianceAsRandomVariableAAD(RandomVariable) : RandomVariable" num="580" count="0" type="method"/>
            <line num="582" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviationAsRandomVariableAAD(RandomVariable) : RandomVariable" num="585" count="0" type="method"/>
            <line num="587" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardErrorAsRandomVariableAAD(RandomVariable) : RandomVariable" num="590" count="0" type="method"/>
            <line num="592" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverageAsRandomVariableAAD() : RandomVariable" num="595" count="0" type="method"/>
            <line num="597" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVarianceAsRandomVariableAAD() : RandomVariable" num="600" count="0" type="method"/>
            <line num="602" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVarianceAsRandomVariableAAD() : RandomVariable" num="605" count="0" type="method"/>
            <line num="607" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviationAsRandomVariableAAD() : RandomVariable" num="610" count="0" type="method"/>
            <line num="612" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardErrorAsRandomVariableAAD() : RandomVariable" num="615" count="0" type="method"/>
            <line num="617" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinAsRandomVariableAAD() : RandomVariable" num="620" count="0" type="method"/>
            <line num="622" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxAsRandomVariableAAD() : RandomVariable" num="625" count="0" type="method"/>
            <line num="627" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParentOperator() : OperatorType" num="632" count="0" type="method"/>
            <line num="633" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isConstant() : boolean" num="636" count="0" type="method"/>
            <line num="637" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isVariable() : boolean" num="640" count="0" type="method"/>
            <line num="641" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getFunctionList() : ArrayList&lt;RandomVariableAAD&gt;" num="644" count="0" type="method"/>
            <line num="645" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="resetArrayListOfAllAADRandomVariables() : void" num="648" count="0" type="method"/>
            <line num="649" count="0" type="stmt"/>
            <line num="650" count="0" type="stmt"/>
            <line num="651" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setIsConstantTo(boolean) : void" num="655" count="0" type="method"/>
            <line num="656" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getRandomVariableInterface() : RandomVariable" num="659" count="0" type="method"/>
            <line num="660" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getRandomVariableInterfaceOfIndex(int) : RandomVariable" num="663" count="0" type="method"/>
            <line num="664" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getFunctionIndex() : int" num="667" count="0" type="method"/>
            <line num="668" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParentIDs() : int[]" num="671" count="0" type="method"/>
            <line num="672" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getChildrenIndices() : ArrayList&lt;Integer&gt;" num="675" count="0" type="method"/>
            <line num="676" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="676" type="cond"/>
            <line num="677" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getNumberOfParentVariables() : int" num="682" count="0" type="method"/>
            <line num="683" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="683" type="cond"/>
            <line num="684" count="0" type="stmt"/>
            <line num="686" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getAADRandomVariableFromList(int) : RandomVariableAAD" num="689" count="0" type="method"/>
            <line num="690" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="addToChildrenIndices(int) : void" num="693" count="0" type="method"/>
            <line num="694" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(RandomVariable) : boolean" num="704" count="0" type="method"/>
            <line num="706" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="712" count="0" type="method"/>
            <line num="714" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="717" count="0" type="method"/>
            <line num="719" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="725" count="0" type="method"/>
            <line num="727" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="733" count="0" type="method"/>
            <line num="735" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="741" count="0" type="method"/>
            <line num="743" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizations() : double[]" num="749" count="0" type="method"/>
            <line num="751" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : Double" num="754" count="0" type="method"/>
            <line num="756" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : double" num="762" count="0" type="method"/>
            <line num="764" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : double" num="770" count="0" type="method"/>
            <line num="772" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage() : double" num="778" count="0" type="method"/>
            <line num="780" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage(RandomVariable) : double" num="786" count="0" type="method"/>
            <line num="788" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="794" count="0" type="method"/>
            <line num="796" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance(RandomVariable) : double" num="802" count="0" type="method"/>
            <line num="804" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVariance() : double" num="810" count="0" type="method"/>
            <line num="812" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="818" count="0" type="method"/>
            <line num="820" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="826" count="0" type="method"/>
            <line num="828" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError() : double" num="834" count="0" type="method"/>
            <line num="836" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError(RandomVariable) : double" num="842" count="0" type="method"/>
            <line num="844" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double) : double" num="850" count="0" type="method"/>
            <line num="852" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="858" count="0" type="method"/>
            <line num="860" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantileExpectation(double,double) : double" num="866" count="0" type="method"/>
            <line num="868" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(double[]) : double[]" num="874" count="0" type="method"/>
            <line num="876" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(int,double) : double[][]" num="882" count="0" type="method"/>
            <line num="884" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="890" count="0" type="method"/>
            <line num="892" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="895" count="0" type="method"/>
            <line num="897" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="903" count="0" type="method"/>
            <line num="905" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="911" count="0" type="method"/>
            <line num="913" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="919" count="0" type="method"/>
            <line num="921" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="927" count="0" type="method"/>
            <line num="929" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="935" count="0" type="method"/>
            <line num="937" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="943" count="0" type="method"/>
            <line num="945" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="948" count="0" type="method"/>
            <line num="950" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="956" count="0" type="method"/>
            <line num="958" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="964" count="0" type="method"/>
            <line num="966" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="972" count="0" type="method"/>
            <line num="974" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="980" count="0" type="method"/>
            <line num="982" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="988" count="0" type="method"/>
            <line num="990" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="996" count="0" type="method"/>
            <line num="998" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(RandomVariable) : RandomVariable" num="1004" count="0" type="method"/>
            <line num="1006" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="1012" count="0" type="method"/>
            <line num="1014" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="1017" count="0" type="method"/>
            <line num="1019" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="1025" count="0" type="method"/>
            <line num="1027" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(RandomVariable) : RandomVariable" num="1033" count="0" type="method"/>
            <line num="1035" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="1038" count="0" type="method"/>
            <line num="1040" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="1046" count="0" type="method"/>
            <line num="1048" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="1054" count="0" type="method"/>
            <line num="1056" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="1062" count="0" type="method"/>
            <line num="1064" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="1070" count="0" type="method"/>
            <line num="1072" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="1075" count="0" type="method"/>
            <line num="1077" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="1080" count="0" type="method"/>
            <line num="1082" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="1085" count="0" type="method"/>
            <line num="1087" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="1090" count="0" type="method"/>
            <line num="1092" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="1095" count="0" type="method"/>
            <line num="1097" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="1100" count="0" type="method"/>
            <line num="1102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="1105" count="0" type="method"/>
            <line num="1107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNaN() : RandomVariable" num="1110" count="0" type="method"/>
            <line num="1112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="1115" count="0" type="method"/>
            <line num="1117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizationsStream() : DoubleStream" num="1120" count="0" type="method"/>
            <line num="1122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="1125" count="0" type="method"/>
            <line num="1127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="1130" count="0" type="method"/>
            <line num="1132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="1135" count="0" type="method"/>
            <line num="1137" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/alternative/RandomVariableDifferentiableAADPathwise.java" name="RandomVariableDifferentiableAADPathwise.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="170" loc="954" coveredmethods="0" methods="94" elements="430" classes="3" ncloc="717" statements="258" conditionals="78" coveredstatements="0"/>
            <class name="RandomVariableDifferentiableAADPathwise">
               <metrics coveredelements="0" coveredconditionals="0" complexity="89" coveredmethods="0" methods="85" elements="195" statements="104" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="RandomVariableDifferentiableAADPathwise.OperatorType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RandomVariableDifferentiableAADPathwise.OperatorTreeNode">
               <metrics coveredelements="0" coveredconditionals="0" complexity="81" coveredmethods="0" methods="9" elements="235" statements="154" conditionals="72" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="package" signature="OperatorTreeNode(OperatorType,List&lt;RandomVariable&gt;)" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line complexity="3" visibility="public" signature="apply(RandomVariable) : OperatorTreeNode" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line complexity="3" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line complexity="1" visibility="package" signature="OperatorTreeNode(OperatorType,List&lt;OperatorTreeNode&gt;,List&lt;RandomVariable&gt;)" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="propagateDerivativesFromResultToArgument(Map&lt;Long, RandomVariable&gt;) : void" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="62" visibility="private" signature="getPartialDerivative(OperatorTreeNode) : RandomVariable" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="154" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="228" type="cond"/>
            <line num="229" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="235" type="cond"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="246" type="cond"/>
            <line num="247" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="253" type="cond"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="255" type="cond"/>
            <line num="256" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="262" type="cond"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="264" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="266" type="cond"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(double) : RandomVariableDifferentiableAADPathwise" num="285" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(RandomVariable) : RandomVariableDifferentiableAADPathwise" num="289" count="0" type="method"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADPathwise(double)" num="293" count="0" type="method"/>
            <line num="294" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADPathwise(double,double[])" num="297" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADPathwise(RandomVariable)" num="301" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="RandomVariableDifferentiableAADPathwise(RandomVariable,List&lt;RandomVariable&gt;,OperatorType)" num="305" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariable() : RandomVariable" num="311" count="0" type="method"/>
            <line num="312" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperatorTreeNode() : OperatorTreeNode" num="315" count="0" type="method"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getID() : Long" num="319" count="0" type="method"/>
            <line num="321" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getGradient(Set&lt;Long&gt;) : Map&lt;Long, RandomVariable&gt;" num="324" count="0" type="method"/>
            <line num="328" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="337" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="345" type="cond"/>
            <line num="346" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="350" type="cond"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTangents(Set&lt;Long&gt;) : Map&lt;Long, RandomVariable&gt;" num="367" count="0" type="method"/>
            <line num="369" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverageAsRandomVariableAAD(RandomVariable) : RandomVariable" num="375" count="0" type="method"/>
            <line num="377" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVarianceAsRandomVariableAAD(RandomVariable) : RandomVariable" num="383" count="0" type="method"/>
            <line num="385" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviationAsRandomVariableAAD(RandomVariable) : RandomVariable" num="391" count="0" type="method"/>
            <line num="393" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardErrorAsRandomVariableAAD(RandomVariable) : RandomVariable" num="399" count="0" type="method"/>
            <line num="401" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverageAsRandomVariableAAD() : RandomVariable" num="407" count="0" type="method"/>
            <line num="409" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVarianceAsRandomVariableAAD() : RandomVariable" num="415" count="0" type="method"/>
            <line num="417" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVarianceAsRandomVariableAAD() : RandomVariable" num="423" count="0" type="method"/>
            <line num="425" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviationAsRandomVariableAAD() : RandomVariable" num="431" count="0" type="method"/>
            <line num="433" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardErrorAsRandomVariableAAD() : RandomVariable" num="439" count="0" type="method"/>
            <line num="441" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinAsRandomVariableAAD() : RandomVariable" num="447" count="0" type="method"/>
            <line num="449" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxAsRandomVariableAAD() : RandomVariable" num="455" count="0" type="method"/>
            <line num="457" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues() : RandomVariable" num="463" count="0" type="method"/>
            <line num="465" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(RandomVariable) : boolean" num="471" count="0" type="method"/>
            <line num="473" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="479" count="0" type="method"/>
            <line num="481" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="484" count="0" type="method"/>
            <line num="486" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="489" count="0" type="method"/>
            <line num="491" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="497" count="0" type="method"/>
            <line num="499" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="505" count="0" type="method"/>
            <line num="507" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizations() : double[]" num="513" count="0" type="method"/>
            <line num="515" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : Double" num="518" count="0" type="method"/>
            <line num="520" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : double" num="526" count="0" type="method"/>
            <line num="528" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : double" num="534" count="0" type="method"/>
            <line num="536" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage() : double" num="542" count="0" type="method"/>
            <line num="544" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage(RandomVariable) : double" num="550" count="0" type="method"/>
            <line num="552" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="558" count="0" type="method"/>
            <line num="560" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance(RandomVariable) : double" num="566" count="0" type="method"/>
            <line num="568" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVariance() : double" num="574" count="0" type="method"/>
            <line num="576" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="582" count="0" type="method"/>
            <line num="584" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="590" count="0" type="method"/>
            <line num="592" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError() : double" num="598" count="0" type="method"/>
            <line num="600" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError(RandomVariable) : double" num="606" count="0" type="method"/>
            <line num="608" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double) : double" num="614" count="0" type="method"/>
            <line num="616" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="622" count="0" type="method"/>
            <line num="624" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantileExpectation(double,double) : double" num="630" count="0" type="method"/>
            <line num="632" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(double[]) : double[]" num="638" count="0" type="method"/>
            <line num="640" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(int,double) : double[][]" num="646" count="0" type="method"/>
            <line num="648" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="654" count="0" type="method"/>
            <line num="656" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="659" count="0" type="method"/>
            <line num="661" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="667" count="0" type="method"/>
            <line num="669" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="675" count="0" type="method"/>
            <line num="677" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="683" count="0" type="method"/>
            <line num="685" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="691" count="0" type="method"/>
            <line num="693" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="699" count="0" type="method"/>
            <line num="701" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="707" count="0" type="method"/>
            <line num="709" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="715" count="0" type="method"/>
            <line num="717" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="723" count="0" type="method"/>
            <line num="725" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="731" count="0" type="method"/>
            <line num="733" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="739" count="0" type="method"/>
            <line num="741" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="747" count="0" type="method"/>
            <line num="749" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="755" count="0" type="method"/>
            <line num="757" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="766" count="0" type="method"/>
            <line num="768" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(RandomVariable) : RandomVariable" num="777" count="0" type="method"/>
            <line num="779" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="788" count="0" type="method"/>
            <line num="790" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="796" count="0" type="method"/>
            <line num="798" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(RandomVariable) : RandomVariableDifferentiable" num="807" count="0" type="method"/>
            <line num="809" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(RandomVariable) : RandomVariable" num="815" count="0" type="method"/>
            <line num="817" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="823" count="0" type="method"/>
            <line num="825" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="831" count="0" type="method"/>
            <line num="833" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="839" count="0" type="method"/>
            <line num="841" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="850" count="0" type="method"/>
            <line num="852" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="858" count="0" type="method"/>
            <line num="860" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="866" count="0" type="method"/>
            <line num="868" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="874" count="0" type="method"/>
            <line num="876" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="882" count="0" type="method"/>
            <line num="884" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="893" count="0" type="method"/>
            <line num="895" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="901" count="0" type="method"/>
            <line num="903" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="909" count="0" type="method"/>
            <line num="911" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="917" count="0" type="method"/>
            <line num="919" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNaN() : RandomVariable" num="925" count="0" type="method"/>
            <line num="927" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="930" count="0" type="method"/>
            <line num="932" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizationsStream() : DoubleStream" num="935" count="0" type="method"/>
            <line num="937" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="940" count="0" type="method"/>
            <line num="942" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="945" count="0" type="method"/>
            <line num="947" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="950" count="0" type="method"/>
            <line num="952" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/alternative/RandomVariableDifferentiableAADPathwiseFactory.java" name="RandomVariableDifferentiableAADPathwiseFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="50" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="RandomVariableDifferentiableAADPathwiseFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADPathwiseFactory()" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADPathwiseFactory(RandomVariableFactory)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double) : RandomVariableDifferentiable" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double[]) : RandomVariableDifferentiable" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/alternative/RandomVariableDifferentiableAADStochasticNonOptimized.java" name="RandomVariableDifferentiableAADStochasticNonOptimized.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="169" loc="953" coveredmethods="0" methods="94" elements="428" classes="3" ncloc="717" statements="258" conditionals="76" coveredstatements="0"/>
            <class name="RandomVariableDifferentiableAADStochasticNonOptimized">
               <metrics coveredelements="0" coveredconditionals="0" complexity="89" coveredmethods="0" methods="85" elements="195" statements="104" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="RandomVariableDifferentiableAADStochasticNonOptimized.OperatorType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RandomVariableDifferentiableAADStochasticNonOptimized.OperatorTreeNode">
               <metrics coveredelements="0" coveredconditionals="0" complexity="80" coveredmethods="0" methods="9" elements="233" statements="154" conditionals="70" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="package" signature="OperatorTreeNode(OperatorType,List&lt;RandomVariable&gt;)" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line complexity="3" visibility="public" signature="apply(RandomVariable) : OperatorTreeNode" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line complexity="3" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line complexity="1" visibility="package" signature="OperatorTreeNode(OperatorType,List&lt;OperatorTreeNode&gt;,List&lt;RandomVariable&gt;)" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="propagateDerivativesFromResultToArgument(Map&lt;Long, RandomVariable&gt;) : void" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="61" visibility="private" signature="getPartialDerivative(OperatorTreeNode) : RandomVariable" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="225" type="cond"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="243" type="cond"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="245" type="cond"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="252" type="cond"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="261" type="cond"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="263" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="265" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="268" type="cond"/>
            <line num="269" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(double) : RandomVariableDifferentiableAADStochasticNonOptimized" num="284" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(RandomVariable) : RandomVariableDifferentiableAADStochasticNonOptimized" num="288" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADStochasticNonOptimized(double)" num="292" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADStochasticNonOptimized(double,double[])" num="296" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADStochasticNonOptimized(RandomVariable)" num="300" count="0" type="method"/>
            <line num="301" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="RandomVariableDifferentiableAADStochasticNonOptimized(RandomVariable,List&lt;RandomVariable&gt;,OperatorType)" num="304" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariable() : RandomVariable" num="310" count="0" type="method"/>
            <line num="311" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperatorTreeNode() : OperatorTreeNode" num="314" count="0" type="method"/>
            <line num="315" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getID() : Long" num="318" count="0" type="method"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getGradient(Set&lt;Long&gt;) : Map&lt;Long, RandomVariable&gt;" num="323" count="0" type="method"/>
            <line num="327" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="336" type="cond"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="344" type="cond"/>
            <line num="345" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="349" type="cond"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTangents(Set&lt;Long&gt;) : Map&lt;Long, RandomVariable&gt;" num="366" count="0" type="method"/>
            <line num="368" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverageAsRandomVariableAAD(RandomVariable) : RandomVariable" num="374" count="0" type="method"/>
            <line num="376" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVarianceAsRandomVariableAAD(RandomVariable) : RandomVariable" num="382" count="0" type="method"/>
            <line num="384" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviationAsRandomVariableAAD(RandomVariable) : RandomVariable" num="390" count="0" type="method"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardErrorAsRandomVariableAAD(RandomVariable) : RandomVariable" num="398" count="0" type="method"/>
            <line num="400" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverageAsRandomVariableAAD() : RandomVariable" num="406" count="0" type="method"/>
            <line num="408" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVarianceAsRandomVariableAAD() : RandomVariable" num="414" count="0" type="method"/>
            <line num="416" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVarianceAsRandomVariableAAD() : RandomVariable" num="422" count="0" type="method"/>
            <line num="424" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviationAsRandomVariableAAD() : RandomVariable" num="430" count="0" type="method"/>
            <line num="432" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardErrorAsRandomVariableAAD() : RandomVariable" num="438" count="0" type="method"/>
            <line num="440" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinAsRandomVariableAAD() : RandomVariable" num="446" count="0" type="method"/>
            <line num="448" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxAsRandomVariableAAD() : RandomVariable" num="454" count="0" type="method"/>
            <line num="456" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues() : RandomVariable" num="462" count="0" type="method"/>
            <line num="464" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(RandomVariable) : boolean" num="470" count="0" type="method"/>
            <line num="472" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="478" count="0" type="method"/>
            <line num="480" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="483" count="0" type="method"/>
            <line num="485" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="488" count="0" type="method"/>
            <line num="490" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="496" count="0" type="method"/>
            <line num="498" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="504" count="0" type="method"/>
            <line num="506" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizations() : double[]" num="512" count="0" type="method"/>
            <line num="514" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : Double" num="517" count="0" type="method"/>
            <line num="519" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : double" num="525" count="0" type="method"/>
            <line num="527" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : double" num="533" count="0" type="method"/>
            <line num="535" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage() : double" num="541" count="0" type="method"/>
            <line num="543" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage(RandomVariable) : double" num="549" count="0" type="method"/>
            <line num="551" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="557" count="0" type="method"/>
            <line num="559" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance(RandomVariable) : double" num="565" count="0" type="method"/>
            <line num="567" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVariance() : double" num="573" count="0" type="method"/>
            <line num="575" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="581" count="0" type="method"/>
            <line num="583" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="589" count="0" type="method"/>
            <line num="591" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError() : double" num="597" count="0" type="method"/>
            <line num="599" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError(RandomVariable) : double" num="605" count="0" type="method"/>
            <line num="607" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double) : double" num="613" count="0" type="method"/>
            <line num="615" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="621" count="0" type="method"/>
            <line num="623" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantileExpectation(double,double) : double" num="629" count="0" type="method"/>
            <line num="631" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(double[]) : double[]" num="637" count="0" type="method"/>
            <line num="639" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(int,double) : double[][]" num="645" count="0" type="method"/>
            <line num="647" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="653" count="0" type="method"/>
            <line num="655" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="658" count="0" type="method"/>
            <line num="660" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="666" count="0" type="method"/>
            <line num="668" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="674" count="0" type="method"/>
            <line num="676" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="682" count="0" type="method"/>
            <line num="684" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="690" count="0" type="method"/>
            <line num="692" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="698" count="0" type="method"/>
            <line num="700" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="706" count="0" type="method"/>
            <line num="708" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="714" count="0" type="method"/>
            <line num="716" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="722" count="0" type="method"/>
            <line num="724" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="730" count="0" type="method"/>
            <line num="732" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="738" count="0" type="method"/>
            <line num="740" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="746" count="0" type="method"/>
            <line num="748" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="754" count="0" type="method"/>
            <line num="756" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="765" count="0" type="method"/>
            <line num="767" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(RandomVariable) : RandomVariable" num="776" count="0" type="method"/>
            <line num="778" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="787" count="0" type="method"/>
            <line num="789" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="795" count="0" type="method"/>
            <line num="797" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(RandomVariable) : RandomVariableDifferentiable" num="806" count="0" type="method"/>
            <line num="808" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(RandomVariable) : RandomVariable" num="814" count="0" type="method"/>
            <line num="816" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="822" count="0" type="method"/>
            <line num="824" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="830" count="0" type="method"/>
            <line num="832" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="838" count="0" type="method"/>
            <line num="840" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="849" count="0" type="method"/>
            <line num="851" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="857" count="0" type="method"/>
            <line num="859" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="865" count="0" type="method"/>
            <line num="867" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="873" count="0" type="method"/>
            <line num="875" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="881" count="0" type="method"/>
            <line num="883" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="892" count="0" type="method"/>
            <line num="894" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="900" count="0" type="method"/>
            <line num="902" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="908" count="0" type="method"/>
            <line num="910" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="916" count="0" type="method"/>
            <line num="918" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNaN() : RandomVariable" num="924" count="0" type="method"/>
            <line num="926" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="929" count="0" type="method"/>
            <line num="931" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizationsStream() : DoubleStream" num="934" count="0" type="method"/>
            <line num="936" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="939" count="0" type="method"/>
            <line num="941" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="944" count="0" type="method"/>
            <line num="946" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="949" count="0" type="method"/>
            <line num="951" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/alternative/RandomVariableDifferentiableAADStochasticNonOptimizedFactory.java" name="RandomVariableDifferentiableAADStochasticNonOptimizedFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="49" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="RandomVariableDifferentiableAADStochasticNonOptimizedFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADStochasticNonOptimizedFactory()" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADStochasticNonOptimizedFactory(RandomVariableFactory)" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double) : RandomVariableDifferentiable" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double[]) : RandomVariableDifferentiable" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/alternative/RandomVariableUniqueVariable.java" name="RandomVariableUniqueVariable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="121" loc="894" coveredmethods="0" methods="87" elements="323" classes="2" ncloc="492" statements="210" conditionals="26" coveredstatements="0"/>
            <class name="RandomVariableUniqueVariable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="121" coveredmethods="0" methods="87" elements="323" statements="210" conditionals="26" coveredstatements="0"/>
            </class>
            <class name="RandomVariableUniqueVariable.OperatorType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomVariableUniqueVariable(int,boolean,ArrayList&lt;RandomVariableUniqueVariable&gt;,OperatorType)" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableUniqueVariable(double,double[],boolean,ArrayList&lt;RandomVariableUniqueVariable&gt;,OperatorType)" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableUniqueVariable(RandomVariable,boolean,ArrayList&lt;RandomVariableUniqueVariable&gt;,OperatorType)" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableUniqueVariable(double,double[],boolean)" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableUniqueVariable(RandomVariable,boolean)" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableUniqueVariable(double,double[])" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableUniqueVariable(RandomVariable)" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="constructRandomVariableUniqueVariable(RandomVariable,boolean,ArrayList&lt;RandomVariableUniqueVariable&gt;,OperatorType) : void" num="82" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getParentIDs() : int[]" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariableID() : int" num="118" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isConstant() : boolean" num="122" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParentVariables() : ArrayList&lt;RandomVariableUniqueVariable&gt;" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParentOperatorType() : OperatorType" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getListOfAllVariables() : ArrayList&lt;RandomVariable&gt;" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParentRandomVariables() : ArrayList&lt;RandomVariable&gt;" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getRandomVariable() : RandomVariable" num="149" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isVariable() : boolean" num="153" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(RandomVariable) : boolean" num="164" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="175" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="188" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizations() : double[]" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : Double" num="209" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : double" num="217" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : double" num="226" count="0" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage() : double" num="235" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage(RandomVariable) : double" num="244" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="253" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance(RandomVariable) : double" num="262" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVariance() : double" num="271" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="280" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="289" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError() : double" num="298" count="0" type="method"/>
            <line num="301" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError(RandomVariable) : double" num="307" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double) : double" num="316" count="0" type="method"/>
            <line num="319" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="325" count="0" type="method"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantileExpectation(double,double) : double" num="334" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(double[]) : double[]" num="343" count="0" type="method"/>
            <line num="345" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(int,double) : double[][]" num="351" count="0" type="method"/>
            <line num="353" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="359" count="0" type="method"/>
            <line num="361" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="371" count="0" type="method"/>
            <line num="374" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="380" count="0" type="method"/>
            <line num="383" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="389" count="0" type="method"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="398" count="0" type="method"/>
            <line num="401" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="407" count="0" type="method"/>
            <line num="410" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="416" count="0" type="method"/>
            <line num="418" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="421" count="0" type="method"/>
            <line num="423" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="429" count="0" type="method"/>
            <line num="431" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="437" count="0" type="method"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="445" count="0" type="method"/>
            <line num="447" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="453" count="0" type="method"/>
            <line num="455" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="461" count="0" type="method"/>
            <line num="463" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="469" count="0" type="method"/>
            <line num="471" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(RandomVariable) : RandomVariable" num="477" count="0" type="method"/>
            <line num="479" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="485" count="0" type="method"/>
            <line num="487" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="490" count="0" type="method"/>
            <line num="492" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="498" count="0" type="method"/>
            <line num="500" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(RandomVariable) : RandomVariable" num="506" count="0" type="method"/>
            <line num="508" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="511" count="0" type="method"/>
            <line num="513" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="519" count="0" type="method"/>
            <line num="522" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="528" count="0" type="method"/>
            <line num="531" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="537" count="0" type="method"/>
            <line num="540" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="546" count="0" type="method"/>
            <line num="549" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="552" count="0" type="method"/>
            <line num="554" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="560" count="0" type="method"/>
            <line num="563" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="569" count="0" type="method"/>
            <line num="572" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="578" count="0" type="method"/>
            <line num="581" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="587" count="0" type="method"/>
            <line num="590" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="596" count="0" type="method"/>
            <line num="599" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="605" count="0" type="method"/>
            <line num="608" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNaN() : RandomVariable" num="614" count="0" type="method"/>
            <line num="616" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isUpcastableToRandomVariableUniqueVariable(Object) : boolean" num="626" count="0" type="method"/>
            <line num="627" count="0" type="stmt"/>
            <line complexity="13" visibility="private" signature="apply(OperatorType,RandomVariable[]) : RandomVariableUniqueVariable" num="634" count="0" type="method"/>
            <line num="636" count="0" type="stmt"/>
            <line num="638" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="638" type="cond"/>
            <line num="642" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="642" type="cond"/>
            <line num="646" count="0" type="stmt"/>
            <line num="649" count="0" type="stmt"/>
            <line num="652" count="0" type="stmt"/>
            <line num="655" count="0" type="stmt"/>
            <line num="657" count="0" type="stmt"/>
            <line num="659" count="0" type="stmt"/>
            <line num="660" count="0" type="stmt"/>
            <line num="661" count="0" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line num="663" count="0" type="stmt"/>
            <line num="664" count="0" type="stmt"/>
            <line num="665" count="0" type="stmt"/>
            <line num="666" count="0" type="stmt"/>
            <line num="667" count="0" type="stmt"/>
            <line num="668" count="0" type="stmt"/>
            <line num="669" count="0" type="stmt"/>
            <line num="670" count="0" type="stmt"/>
            <line num="671" count="0" type="stmt"/>
            <line num="672" count="0" type="stmt"/>
            <line num="673" count="0" type="stmt"/>
            <line num="674" count="0" type="stmt"/>
            <line num="675" count="0" type="stmt"/>
            <line num="676" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line num="680" count="0" type="stmt"/>
            <line num="681" count="0" type="stmt"/>
            <line num="682" count="0" type="stmt"/>
            <line num="683" count="0" type="stmt"/>
            <line num="684" count="0" type="stmt"/>
            <line num="685" count="0" type="stmt"/>
            <line num="686" count="0" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line num="688" count="0" type="stmt"/>
            <line num="689" count="0" type="stmt"/>
            <line num="690" count="0" type="stmt"/>
            <line num="693" count="0" type="stmt"/>
            <line num="694" count="0" type="stmt"/>
            <line num="698" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getGradient() : RandomVariable[]" num="709" count="0" type="method"/>
            <line num="712" count="0" type="stmt"/>
            <line num="713" count="0" type="stmt"/>
            <line num="715" count="0" type="stmt"/>
            <line num="718" count="0" type="stmt"/>
            <line num="725" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="725" type="cond"/>
            <line num="727" count="0" type="stmt"/>
            <line num="730" count="0" type="stmt"/>
            <line num="732" count="0" type="stmt"/>
            <line num="734" count="0" type="stmt"/>
            <line num="741" count="0" type="stmt"/>
            <line num="744" count="0" type="stmt"/>
            <line num="746" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="746" type="cond"/>
            <line num="747" count="0" type="stmt"/>
            <line num="750" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getListOfDependingTrueVariables() : ArrayList&lt;RandomVariableUniqueVariable&gt;" num="753" count="0" type="method"/>
            <line num="755" count="0" type="stmt"/>
            <line num="757" count="0" type="stmt"/>
            <line num="758" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="758" type="cond"/>
            <line num="759" count="0" type="stmt"/>
            <line num="760" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="760" type="cond"/>
            <line num="761" count="0" type="stmt"/>
            <line num="765" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getIDsOfVariablesInList() : int[]" num="768" count="0" type="method"/>
            <line num="769" count="0" type="stmt"/>
            <line num="771" count="0" type="stmt"/>
            <line num="773" count="0" type="stmt"/>
            <line num="774" count="0" type="stmt"/>
            <line num="777" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getNumberOfVariablesInList() : int" num="780" count="0" type="method"/>
            <line num="781" count="0" type="stmt"/>
            <line complexity="15" visibility="private" signature="getPartialDerivative(int,int) : RandomVariable" num="789" count="0" type="method"/>
            <line num="791" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="791" type="cond"/>
            <line num="792" count="0" type="stmt"/>
            <line num="795" count="0" type="stmt"/>
            <line num="796" count="0" type="stmt"/>
            <line num="798" count="0" type="stmt"/>
            <line num="800" count="0" type="stmt"/>
            <line num="802" count="0" type="stmt"/>
            <line num="803" count="0" type="stmt"/>
            <line num="804" count="0" type="stmt"/>
            <line num="805" count="0" type="stmt"/>
            <line num="806" count="0" type="stmt"/>
            <line num="807" count="0" type="stmt"/>
            <line num="808" count="0" type="stmt"/>
            <line num="809" count="0" type="stmt"/>
            <line num="810" count="0" type="stmt"/>
            <line num="811" count="0" type="stmt"/>
            <line num="812" count="0" type="stmt"/>
            <line num="813" count="0" type="stmt"/>
            <line num="814" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line num="816" count="0" type="stmt"/>
            <line num="817" count="0" type="stmt"/>
            <line num="818" count="0" type="stmt"/>
            <line num="819" count="0" type="stmt"/>
            <line num="822" count="0" type="stmt"/>
            <line num="823" count="0" type="stmt"/>
            <line num="824" count="0" type="stmt"/>
            <line num="825" count="0" type="stmt"/>
            <line num="826" count="0" type="stmt"/>
            <line num="827" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="827" type="cond"/>
            <line num="828" count="0" type="stmt"/>
            <line num="830" count="0" type="stmt"/>
            <line num="831" count="0" type="stmt"/>
            <line num="832" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="832" type="cond"/>
            <line num="833" count="0" type="stmt"/>
            <line num="835" count="0" type="stmt"/>
            <line num="837" count="0" type="stmt"/>
            <line num="838" count="0" type="stmt"/>
            <line num="839" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="839" type="cond"/>
            <line num="840" count="0" type="stmt"/>
            <line num="842" count="0" type="stmt"/>
            <line num="844" count="0" type="stmt"/>
            <line num="847" count="0" type="stmt"/>
            <line num="848" count="0" type="stmt"/>
            <line num="851" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="854" count="0" type="method"/>
            <line num="856" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="860" type="cond"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="864" count="0" type="method"/>
            <line num="867" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="870" count="0" type="method"/>
            <line num="872" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizationsStream() : DoubleStream" num="875" count="0" type="method"/>
            <line num="877" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="880" count="0" type="method"/>
            <line num="882" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="885" count="0" type="method"/>
            <line num="887" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="890" count="0" type="method"/>
            <line num="892" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/alternative/RandomVariableUniqueVariableFactory.java" name="RandomVariableUniqueVariableFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="112" coveredmethods="0" methods="9" elements="23" classes="1" ncloc="47" statements="14" conditionals="0" coveredstatements="0"/>
            <class name="RandomVariableUniqueVariableFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="23" statements="14" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomVariableUniqueVariableFactory()" num="31" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(RandomVariable,boolean,ArrayList&lt;RandomVariableUniqueVariable&gt;,RandomVariableUniqueVariable.OperatorType) : RandomVariable" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double,boolean) : RandomVariable" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double[],boolean) : RandomVariable" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(RandomVariable) : RandomVariable" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double) : RandomVariable" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double[]) : RandomVariable" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getListOfAllVariables() : ArrayList&lt;RandomVariable&gt;" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfEntriesInList() : int" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.finitedifference.products">
         <metrics coveredelements="22" complexity="11" loc="140" methods="10" classes="3" statements="16" coveredconditionals="0" coveredmethods="9" elements="28" ncloc="74" files="3" conditionals="2" coveredstatements="13"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/finitedifference/products/FDMEuropeanCallOption.java" name="FDMEuropeanCallOption.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="5" loc="55" coveredmethods="5" methods="5" elements="12" classes="1" ncloc="30" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="FDMEuropeanCallOption">
               <metrics coveredelements="12" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="FDMEuropeanCallOption(double,double)" num="19" count="6" type="method"/>
            <line num="20" count="6" type="stmt"/>
            <line num="21" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,FiniteDifference1DModel) : double[][]" num="24" count="6" type="method"/>
            <line num="31" count="6" type="stmt"/>
            <line num="33" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="34" count="794" type="method"/>
            <line num="36" count="794" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValueAtLowerBoundary(FiniteDifference1DModel,double,double) : double" num="46" count="600" type="method"/>
            <line num="48" count="600" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValueAtUpperBoundary(FiniteDifference1DModel,double,double) : double" num="51" count="900" type="method"/>
            <line num="53" count="900" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/finitedifference/products/FDMEuropeanPutOption.java" name="FDMEuropeanPutOption.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="4" loc="47" coveredmethods="4" methods="4" elements="10" classes="1" ncloc="24" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="FDMEuropeanPutOption">
               <metrics coveredelements="10" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="FDMEuropeanPutOption(double,double)" num="16" count="4" type="method"/>
            <line num="17" count="4" type="stmt"/>
            <line num="18" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,FiniteDifference1DModel) : double[][]" num="21" count="4" type="method"/>
            <line num="28" count="4" type="stmt"/>
            <line num="30" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValueAtLowerBoundary(FiniteDifference1DModel,double,double) : double" num="38" count="460" type="method"/>
            <line num="40" count="460" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValueAtUpperBoundary(FiniteDifference1DModel,double,double) : double" num="43" count="690" type="method"/>
            <line num="45" count="690" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/finitedifference/products/FiniteDifference1DProduct.java" name="FiniteDifference1DProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="38" coveredmethods="0" methods="1" elements="6" classes="1" ncloc="20" statements="3" conditionals="2" coveredstatements="0"/>
            <class name="FiniteDifference1DProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="package" signature="getValue(double,Model) : Object" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="27" type="cond"/>
            <line num="28" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling">
         <metrics coveredelements="0" complexity="9" loc="314" methods="6" classes="11" statements="7" coveredconditionals="0" coveredmethods="0" elements="19" ncloc="71" files="11" conditionals="6" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/DescribedModel.java" name="DescribedModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="27" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DescribedModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/DescribedProduct.java" name="DescribedProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="19" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DescribedProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/InterestRateProductDescriptor.java" name="InterestRateProductDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="11" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InterestRateProductDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/Model.java" name="Model.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="19" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Model">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/ModelDescriptor.java" name="ModelDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="31" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ModelDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/ModelFactory.java" name="ModelFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="29" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ModelFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/Product.java" name="Product.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="46" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="6" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="Product">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getValues(double,Model) : Map&lt;String, Object&gt;" num="45" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/ProductDescriptor.java" name="ProductDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="32" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ProductDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/ProductFactory.java" name="ProductFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="26" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ProductFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/SingleAssetProductDescriptor.java" name="SingleAssetProductDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="17" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SingleAssetProductDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/UnsupportedProduct.java" name="UnsupportedProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="57" coveredmethods="0" methods="5" elements="17" classes="1" ncloc="29" statements="6" conditionals="6" coveredstatements="0"/>
            <class name="UnsupportedProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="5" elements="17" statements="6" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="UnsupportedProduct(Exception)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,Model) : Object" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line complexity="2" visibility="public" signature="getValue(double,AnalyticModel) : double" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line complexity="2" visibility="public" signature="getValues(double,Model) : Map&lt;String, Object&gt;" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.assetderivativevaluation.models">
         <metrics coveredelements="462" complexity="208" loc="2591" methods="180" classes="10" statements="465" coveredconditionals="41" coveredmethods="106" elements="701" ncloc="1401" files="9" conditionals="56" coveredstatements="315"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/BachelierModel.java" name="BachelierModel.java">
            <metrics coveredelements="39" coveredconditionals="2" complexity="18" loc="203" coveredmethods="10" methods="17" elements="53" classes="1" ncloc="101" statements="34" conditionals="2" coveredstatements="27"/>
            <class name="BachelierModel">
               <metrics coveredelements="39" coveredconditionals="2" complexity="18" coveredmethods="10" methods="17" elements="53" statements="34" conditionals="2" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="BachelierModel(RandomVariableFactory,RandomVariable,RandomVariable,RandomVariable)" num="72" count="288" type="method"/>
            <line num="73" count="288" type="stmt"/>
            <line num="74" count="288" type="stmt"/>
            <line num="75" count="288" type="stmt"/>
            <line num="76" count="288" type="stmt"/>
            <line num="77" count="288" type="stmt"/>
            <line complexity="1" visibility="public" signature="BachelierModel(double,double,double)" num="87" count="20" type="method"/>
            <line num="91" count="20" type="stmt"/>
            <line num="93" count="20" type="stmt"/>
            <line num="94" count="20" type="stmt"/>
            <line num="95" count="20" type="stmt"/>
            <line num="96" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="99" count="300" type="method"/>
            <line num="101" count="300" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="104" count="3000" type="method"/>
            <line num="106" count="3000" type="stmt"/>
            <line num="107" count="3000" type="stmt"/>
            <line falsecount="3000" truecount="3000" num="107" type="cond"/>
            <line num="108" count="3000" type="stmt"/>
            <line num="110" count="3000" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="113" count="3000" type="method"/>
            <line num="115" count="3000" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="118" count="3300" type="method"/>
            <line num="120" count="3300" type="stmt"/>
            <line num="121" count="3300" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="124" count="3000" type="method"/>
            <line num="126" count="3000" type="stmt"/>
            <line num="127" count="3000" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="130" count="664" type="method"/>
            <line num="132" count="664" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="135" count="600" type="method"/>
            <line num="137" count="600" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : BachelierModel" num="150" count="288" type="method"/>
            <line num="155" count="288" type="stmt"/>
            <line num="157" count="288" type="stmt"/>
            <line num="158" count="288" type="stmt"/>
            <line num="159" count="288" type="stmt"/>
            <line num="161" count="288" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="164" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : RandomVariable" num="178" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : RandomVariable" num="187" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : RandomVariable" num="196" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getImpliedBachelierVolatility(double) : RandomVariable" num="200" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/BlackScholesModel.java" name="BlackScholesModel.java">
            <metrics coveredelements="48" coveredconditionals="6" complexity="20" loc="203" coveredmethods="16" methods="17" elements="50" classes="1" ncloc="104" statements="27" conditionals="6" coveredstatements="26"/>
            <class name="BlackScholesModel">
               <metrics coveredelements="48" coveredconditionals="6" complexity="20" coveredmethods="16" methods="17" elements="50" statements="27" conditionals="6" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesModel(RandomVariable,RandomVariable,RandomVariable,RandomVariableFactory)" num="63" count="431" type="method"/>
            <line num="68" count="431" type="stmt"/>
            <line num="70" count="431" type="stmt"/>
            <line num="71" count="431" type="stmt"/>
            <line num="72" count="431" type="stmt"/>
            <line num="73" count="431" type="stmt"/>
            <line num="76" count="431" type="stmt"/>
            <line num="77" count="431" type="stmt"/>
            <line num="78" count="431" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlackScholesModel(double,double,double,RandomVariableFactory)" num="89" count="369" type="method"/>
            <line num="94" count="369" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlackScholesModel(double,double,double)" num="104" count="45" type="method"/>
            <line num="108" count="45" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="111" count="429" type="method"/>
            <line num="113" count="429" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="116" count="14382" type="method"/>
            <line num="118" count="14382" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="121" count="24636" type="method"/>
            <line num="123" count="24636" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="126" count="14811" type="method"/>
            <line num="128" count="14811" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="131" count="14372" type="method"/>
            <line num="133" count="14372" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="136" count="11565" type="method"/>
            <line num="138" count="11565" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="141" count="2427" type="method"/>
            <line num="143" count="2427" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="151" count="1363" type="method"/>
            <line num="153" count="1363" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : BlackScholesModel" num="156" count="314" type="method"/>
            <line num="161" count="314" type="stmt"/>
            <line falsecount="158" truecount="156" num="161" type="cond"/>
            <line num="162" count="314" type="stmt"/>
            <line falsecount="307" truecount="7" num="162" type="cond"/>
            <line num="163" count="314" type="stmt"/>
            <line falsecount="163" truecount="151" num="163" type="cond"/>
            <line num="165" count="314" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue(MonteCarloProcess) : RandomVariable[]" num="173" count="8" type="method"/>
            <line num="175" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : RandomVariable" num="183" count="408326" type="method"/>
            <line num="184" count="408326" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : RandomVariable" num="192" count="408182" type="method"/>
            <line num="193" count="408182" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="196" count="6" type="method"/>
            <line num="198" count="6" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/BlackScholesModelWithCurves.java" name="BlackScholesModelWithCurves.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="17" loc="191" coveredmethods="9" methods="15" elements="47" classes="1" ncloc="102" statements="28" conditionals="4" coveredstatements="20"/>
            <class name="BlackScholesModelWithCurves">
               <metrics coveredelements="29" coveredconditionals="0" complexity="17" coveredmethods="9" methods="15" elements="47" statements="28" conditionals="4" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesModelWithCurves(RandomVariable,DiscountCurve,RandomVariable,DiscountCurve,RandomVariableFactory)" num="65" count="4" type="method"/>
            <line num="71" count="4" type="stmt"/>
            <line num="72" count="4" type="stmt"/>
            <line num="73" count="4" type="stmt"/>
            <line num="74" count="4" type="stmt"/>
            <line num="75" count="4" type="stmt"/>
            <line num="77" count="4" type="stmt"/>
            <line num="78" count="4" type="stmt"/>
            <line num="79" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlackScholesModelWithCurves(Double,DiscountCurve,Double,DiscountCurve,RandomVariableFactory)" num="91" count="4" type="method"/>
            <line num="97" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="100" count="4" type="method"/>
            <line num="102" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="105" count="40" type="method"/>
            <line num="107" count="40" type="stmt"/>
            <line num="108" count="40" type="stmt"/>
            <line num="110" count="40" type="stmt"/>
            <line num="112" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="115" count="40" type="method"/>
            <line num="117" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="120" count="44" type="method"/>
            <line num="122" count="44" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="125" count="40" type="method"/>
            <line num="127" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="130" count="8" type="method"/>
            <line num="132" count="8" type="stmt"/>
            <line num="134" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="137" count="8" type="method"/>
            <line num="139" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="147" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : BlackScholesModelWithCurves" num="152" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue(MonteCarloProcess) : RandomVariable[]" num="178" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : RandomVariable" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/DisplacedLognomalModel.java" name="DisplacedLognomalModel.java">
            <metrics coveredelements="32" coveredconditionals="2" complexity="20" loc="232" coveredmethods="10" methods="19" elements="55" classes="1" ncloc="120" statements="34" conditionals="2" coveredstatements="20"/>
            <class name="DisplacedLognomalModel">
               <metrics coveredelements="32" coveredconditionals="2" complexity="20" coveredmethods="10" methods="19" elements="55" statements="34" conditionals="2" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="DisplacedLognomalModel(RandomVariableFactory,RandomVariable,RandomVariable,RandomVariable,RandomVariable)" num="75" count="3" type="method"/>
            <line num="81" count="3" type="stmt"/>
            <line num="82" count="3" type="stmt"/>
            <line num="83" count="3" type="stmt"/>
            <line num="84" count="3" type="stmt"/>
            <line num="85" count="3" type="stmt"/>
            <line num="86" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="DisplacedLognomalModel(RandomVariableFactory,double,double,double,double)" num="98" count="3" type="method"/>
            <line num="104" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="DisplacedLognomalModel(double,double,double,double)" num="121" count="3" type="method"/>
            <line num="126" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="129" count="3" type="method"/>
            <line num="131" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="134" count="300" type="method"/>
            <line num="136" count="300" type="stmt"/>
            <line num="137" count="300" type="stmt"/>
            <line falsecount="300" truecount="300" num="137" type="cond"/>
            <line num="138" count="300" type="stmt"/>
            <line num="140" count="300" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="143" count="300" type="method"/>
            <line num="145" count="300" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="148" count="303" type="method"/>
            <line num="150" count="303" type="stmt"/>
            <line num="151" count="303" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="154" count="300" type="method"/>
            <line num="156" count="300" type="stmt"/>
            <line num="157" count="300" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="160" count="6" type="method"/>
            <line num="162" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="165" count="6" type="method"/>
            <line num="167" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="175" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : DisplacedLognomalModel" num="180" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableFactory() : RandomVariableFactory" num="203" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : RandomVariable" num="207" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : RandomVariable" num="216" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDisplacement() : RandomVariable" num="220" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : RandomVariable" num="229" count="0" type="method"/>
            <line num="230" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/HestonModel.java" name="HestonModel.java">
            <metrics coveredelements="101" coveredconditionals="16" complexity="40" loc="523" coveredmethods="12" methods="27" elements="159" classes="2" ncloc="302" statements="106" conditionals="26" coveredstatements="73"/>
            <class name="HestonModel">
               <metrics coveredelements="101" coveredconditionals="16" complexity="40" coveredmethods="12" methods="27" elements="159" statements="106" conditionals="26" coveredstatements="73"/>
            </class>
            <class name="HestonModel.Scheme">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="HestonModel(HestonModelDescriptor,Scheme,RandomVariableFactory)" num="127" count="4" type="method"/>
            <line num="130" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModel(RandomVariable,DiscountCurve,RandomVariable,DiscountCurve,RandomVariable,RandomVariable,RandomVariable,RandomVariable,Scheme,RandomVariableFactory)" num="158" count="4" type="method"/>
            <line num="170" count="4" type="stmt"/>
            <line num="172" count="4" type="stmt"/>
            <line num="173" count="4" type="stmt"/>
            <line num="174" count="4" type="stmt"/>
            <line num="175" count="4" type="stmt"/>
            <line num="176" count="4" type="stmt"/>
            <line num="177" count="4" type="stmt"/>
            <line num="178" count="4" type="stmt"/>
            <line num="179" count="4" type="stmt"/>
            <line num="180" count="4" type="stmt"/>
            <line num="181" count="4" type="stmt"/>
            <line num="182" count="4" type="stmt"/>
            <line num="184" count="4" type="stmt"/>
            <line num="186" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModel(RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,Scheme,RandomVariableFactory)" num="203" count="6" type="method"/>
            <line num="215" count="6" type="stmt"/>
            <line num="217" count="6" type="stmt"/>
            <line num="218" count="6" type="stmt"/>
            <line num="219" count="6" type="stmt"/>
            <line num="220" count="6" type="stmt"/>
            <line num="221" count="6" type="stmt"/>
            <line num="222" count="6" type="stmt"/>
            <line num="223" count="6" type="stmt"/>
            <line num="224" count="6" type="stmt"/>
            <line num="225" count="6" type="stmt"/>
            <line num="226" count="6" type="stmt"/>
            <line num="227" count="6" type="stmt"/>
            <line num="229" count="6" type="stmt"/>
            <line num="231" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModel(double,double,double,double,double,double,double,double,Scheme,RandomVariableFactory)" num="248" count="3" type="method"/>
            <line num="260" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModel(double,double,double,double,double,double,double,double,Scheme)" num="286" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModel(double,double,double,double,double,double,double,Scheme)" num="312" count="3" type="method"/>
            <line num="322" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="325" count="7" type="method"/>
            <line num="328" count="7" type="stmt"/>
            <line falsecount="0" truecount="7" num="328" type="cond"/>
            <line num="329" count="7" type="stmt"/>
            <line num="330" count="7" type="stmt"/>
            <line num="333" count="7" type="stmt"/>
            <line complexity="4" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="336" count="520" type="method"/>
            <line num="338" count="520" type="stmt"/>
            <line num="339" count="520" type="stmt"/>
            <line falsecount="0" truecount="520" num="339" type="cond"/>
            <line num="340" count="520" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="341" type="cond"/>
            <line num="342" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="347" count="520" type="stmt"/>
            <line num="349" count="520" type="stmt"/>
            <line num="350" count="520" type="stmt"/>
            <line falsecount="300" truecount="220" num="350" type="cond"/>
            <line num="351" count="220" type="stmt"/>
            <line num="352" count="220" type="stmt"/>
            <line num="354" count="220" type="stmt"/>
            <line num="355" count="220" type="stmt"/>
            <line num="358" count="300" type="stmt"/>
            <line num="361" count="520" type="stmt"/>
            <line num="362" count="520" type="stmt"/>
            <line num="364" count="520" type="stmt"/>
            <line complexity="5" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="367" count="1040" type="method"/>
            <line num="369" count="1040" type="stmt"/>
            <line num="370" count="1040" type="stmt"/>
            <line falsecount="0" truecount="1040" num="370" type="cond"/>
            <line num="371" count="1040" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="372" type="cond"/>
            <line num="373" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="378" count="1040" type="stmt"/>
            <line num="380" count="1040" type="stmt"/>
            <line falsecount="520" truecount="520" num="380" type="cond"/>
            <line num="381" count="520" type="stmt"/>
            <line num="382" count="520" type="stmt"/>
            <line num="384" count="520" type="stmt"/>
            <line falsecount="0" truecount="520" num="384" type="cond"/>
            <line num="385" count="520" type="stmt"/>
            <line num="386" count="520" type="stmt"/>
            <line num="387" count="520" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="393" count="1040" type="stmt"/>
            <line complexity="3" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="396" count="1054" type="method"/>
            <line num="398" count="1054" type="stmt"/>
            <line falsecount="527" truecount="527" num="398" type="cond"/>
            <line num="399" count="527" type="stmt"/>
            <line num="401" count="527" type="stmt"/>
            <line falsecount="0" truecount="527" num="401" type="cond"/>
            <line num="402" count="527" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="409" count="1026" type="method"/>
            <line num="411" count="1033" type="stmt"/>
            <line falsecount="520" truecount="520" num="411" type="cond"/>
            <line num="412" count="520" type="stmt"/>
            <line num="414" count="520" type="stmt"/>
            <line falsecount="0" truecount="520" num="414" type="cond"/>
            <line num="415" count="520" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="422" count="76" type="method"/>
            <line num="424" count="76" type="stmt"/>
            <line falsecount="68" truecount="8" num="424" type="cond"/>
            <line num="425" count="8" type="stmt"/>
            <line num="428" count="68" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="432" count="14" type="method"/>
            <line num="434" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="437" count="0" type="method"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="442" count="0" type="method"/>
            <line num="444" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : HestonModel" num="447" count="0" type="method"/>
            <line num="452" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="467" count="0" type="method"/>
            <line num="469" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : RandomVariable" num="474" count="0" type="method"/>
            <line num="475" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : RandomVariable" num="483" count="0" type="method"/>
            <line num="484" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : RandomVariable" num="492" count="0" type="method"/>
            <line num="493" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="496" count="0" type="method"/>
            <line num="497" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="500" count="0" type="method"/>
            <line num="501" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTheta() : RandomVariable" num="504" count="0" type="method"/>
            <line num="505" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKappa() : RandomVariable" num="508" count="0" type="method"/>
            <line num="509" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getXi() : RandomVariable" num="512" count="0" type="method"/>
            <line num="513" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRho() : RandomVariable" num="516" count="0" type="method"/>
            <line num="517" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getScheme() : Scheme" num="520" count="0" type="method"/>
            <line num="521" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/InhomogeneousDisplacedLognomalModel.java" name="InhomogeneousDisplacedLognomalModel.java">
            <metrics coveredelements="43" coveredconditionals="5" complexity="23" loc="265" coveredmethods="11" methods="20" elements="68" classes="1" ncloc="143" statements="42" conditionals="6" coveredstatements="27"/>
            <class name="InhomogeneousDisplacedLognomalModel">
               <metrics coveredelements="43" coveredconditionals="5" complexity="23" coveredmethods="11" methods="20" elements="68" statements="42" conditionals="6" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="InhomogeneousDisplacedLognomalModel(RandomVariableFactory,RandomVariable,RandomVariable,RandomVariable,RandomVariable,boolean)" num="72" count="3" type="method"/>
            <line num="79" count="3" type="stmt"/>
            <line num="80" count="3" type="stmt"/>
            <line num="81" count="3" type="stmt"/>
            <line num="82" count="3" type="stmt"/>
            <line num="83" count="3" type="stmt"/>
            <line num="84" count="3" type="stmt"/>
            <line num="85" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="InhomogeneousDisplacedLognomalModel(RandomVariableFactory,double,double,double,double,boolean)" num="98" count="3" type="method"/>
            <line num="105" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="InhomogeneousDisplacedLognomalModel(double,double,double,double,boolean)" num="123" count="3" type="method"/>
            <line num="129" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="InhomogeneousDisplacedLognomalModel(double,double,double,double)" num="140" count="3" type="method"/>
            <line num="145" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="148" count="3" type="method"/>
            <line num="150" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="153" count="300" type="method"/>
            <line num="155" count="300" type="stmt"/>
            <line num="156" count="300" type="stmt"/>
            <line num="157" count="300" type="stmt"/>
            <line num="158" count="300" type="stmt"/>
            <line num="159" count="300" type="stmt"/>
            <line falsecount="300" truecount="300" num="159" type="cond"/>
            <line num="160" count="300" type="stmt"/>
            <line num="161" count="300" type="stmt"/>
            <line falsecount="300" truecount="0" num="161" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="172" count="300" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="175" count="300" type="method"/>
            <line num="177" count="300" type="stmt"/>
            <line num="178" count="300" type="stmt"/>
            <line falsecount="300" truecount="300" num="178" type="cond"/>
            <line num="179" count="300" type="stmt"/>
            <line num="181" count="300" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="184" count="303" type="method"/>
            <line num="186" count="303" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="189" count="600" type="method"/>
            <line num="191" count="600" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="194" count="6" type="method"/>
            <line num="196" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="199" count="6" type="method"/>
            <line num="201" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="209" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : InhomogeneousDisplacedLognomalModel" num="214" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="229" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableFactory() : RandomVariableFactory" num="236" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : RandomVariable" num="240" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : RandomVariable" num="249" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDisplacement() : RandomVariable" num="253" count="0" type="method"/>
            <line num="254" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : RandomVariable" num="262" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/InhomogenousBachelierModel.java" name="InhomogenousBachelierModel.java">
            <metrics coveredelements="46" coveredconditionals="2" complexity="18" loc="207" coveredmethods="10" methods="17" elements="62" classes="1" ncloc="110" statements="43" conditionals="2" coveredstatements="34"/>
            <class name="InhomogenousBachelierModel">
               <metrics coveredelements="46" coveredconditionals="2" complexity="18" coveredmethods="10" methods="17" elements="62" statements="43" conditionals="2" coveredstatements="34"/>
            </class>
            <line complexity="1" visibility="public" signature="InhomogenousBachelierModel(RandomVariableFactory,RandomVariable,RandomVariable,RandomVariable)" num="66" count="72" type="method"/>
            <line num="67" count="72" type="stmt"/>
            <line num="68" count="72" type="stmt"/>
            <line num="69" count="72" type="stmt"/>
            <line num="70" count="72" type="stmt"/>
            <line num="71" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="InhomogenousBachelierModel(double,double,double)" num="81" count="8" type="method"/>
            <line num="85" count="8" type="stmt"/>
            <line num="87" count="8" type="stmt"/>
            <line num="88" count="8" type="stmt"/>
            <line num="89" count="8" type="stmt"/>
            <line num="90" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="93" count="78" type="method"/>
            <line num="95" count="78" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="98" count="1050" type="method"/>
            <line num="100" count="1050" type="stmt"/>
            <line num="101" count="1050" type="stmt"/>
            <line num="102" count="1050" type="stmt"/>
            <line falsecount="1050" truecount="1050" num="102" type="cond"/>
            <line num="103" count="1050" type="stmt"/>
            <line num="105" count="1050" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="108" count="1050" type="method"/>
            <line num="110" count="1050" type="stmt"/>
            <line num="111" count="1050" type="stmt"/>
            <line num="112" count="1050" type="stmt"/>
            <line num="113" count="1050" type="stmt"/>
            <line num="114" count="1050" type="stmt"/>
            <line num="115" count="1050" type="stmt"/>
            <line num="116" count="1050" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="119" count="1128" type="method"/>
            <line num="121" count="1128" type="stmt"/>
            <line num="122" count="1128" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="125" count="1050" type="method"/>
            <line num="127" count="1050" type="stmt"/>
            <line num="128" count="1050" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="131" count="183" type="method"/>
            <line num="133" count="183" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="136" count="156" type="method"/>
            <line num="138" count="156" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="141" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : InhomogenousBachelierModel" num="151" count="72" type="method"/>
            <line num="156" count="72" type="stmt"/>
            <line num="158" count="72" type="stmt"/>
            <line num="159" count="72" type="stmt"/>
            <line num="160" count="72" type="stmt"/>
            <line num="162" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : RandomVariable" num="179" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : RandomVariable" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : RandomVariable" num="197" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getImpliedBachelierVolatility(double) : RandomVariable" num="201" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/MertonModel.java" name="MertonModel.java">
            <metrics coveredelements="66" coveredconditionals="4" complexity="25" loc="426" coveredmethods="15" methods="23" elements="100" classes="1" ncloc="235" statements="73" conditionals="4" coveredstatements="47"/>
            <class name="MertonModel">
               <metrics coveredelements="66" coveredconditionals="4" complexity="25" coveredmethods="15" methods="23" elements="100" statements="73" conditionals="4" coveredstatements="47"/>
            </class>
            <line complexity="1" visibility="public" signature="MertonModel(RandomVariable,DiscountCurve,RandomVariable,DiscountCurve,RandomVariable,RandomVariable,RandomVariable,RandomVariableFactory)" num="95" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(double,DiscountCurve,double,DiscountCurve,double,double,double,RandomVariableFactory)" num="130" count="2" type="method"/>
            <line num="140" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariableFactory)" num="166" count="3" type="method"/>
            <line num="176" count="3" type="stmt"/>
            <line num="178" count="3" type="stmt"/>
            <line num="179" count="3" type="stmt"/>
            <line num="180" count="3" type="stmt"/>
            <line num="181" count="3" type="stmt"/>
            <line num="182" count="3" type="stmt"/>
            <line num="183" count="3" type="stmt"/>
            <line num="184" count="3" type="stmt"/>
            <line num="185" count="3" type="stmt"/>
            <line num="186" count="3" type="stmt"/>
            <line num="187" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(double,double,double,double,double,double,double,RandomVariableFactory)" num="202" count="3" type="method"/>
            <line num="212" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(MertonModelDescriptor)" num="227" count="2" type="method"/>
            <line num="228" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(double,DiscountCurve,double,DiscountCurve,double,double,double)" num="248" count="2" type="method"/>
            <line num="257" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(double,double,double,double,double,double,double)" num="272" count="3" type="method"/>
            <line num="281" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(double,double,double,double,double,double)" num="294" count="3" type="method"/>
            <line num="302" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="305" count="505" type="method"/>
            <line num="307" count="505" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="310" count="500" type="method"/>
            <line num="312" count="500" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="315" count="5" type="method"/>
            <line num="317" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="320" count="94" type="method"/>
            <line num="322" count="94" type="stmt"/>
            <line falsecount="90" truecount="4" num="322" type="cond"/>
            <line num="323" count="4" type="stmt"/>
            <line num="326" count="90" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="330" count="500" type="method"/>
            <line num="332" count="500" type="stmt"/>
            <line num="333" count="500" type="stmt"/>
            <line falsecount="300" truecount="200" num="333" type="cond"/>
            <line num="334" count="200" type="stmt"/>
            <line num="335" count="200" type="stmt"/>
            <line num="337" count="200" type="stmt"/>
            <line num="340" count="300" type="stmt"/>
            <line num="342" count="500" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="349" count="500" type="method"/>
            <line num="351" count="500" type="stmt"/>
            <line num="352" count="500" type="stmt"/>
            <line num="353" count="500" type="stmt"/>
            <line num="354" count="500" type="stmt"/>
            <line num="356" count="500" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="359" count="10" type="method"/>
            <line num="361" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="364" count="0" type="method"/>
            <line num="366" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="369" count="204" type="method"/>
            <line num="371" count="204" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : ProcessModel" num="374" count="0" type="method"/>
            <line num="379" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : RandomVariable" num="395" count="0" type="method"/>
            <line num="396" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : RandomVariable" num="402" count="0" type="method"/>
            <line num="403" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpIntensity() : RandomVariable" num="409" count="0" type="method"/>
            <line num="410" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpSizeMean() : RandomVariable" num="416" count="0" type="method"/>
            <line num="417" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpSizeStdDev() : RandomVariable" num="423" count="0" type="method"/>
            <line num="424" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/VarianceGammaModel.java" name="VarianceGammaModel.java">
            <metrics coveredelements="58" coveredconditionals="4" complexity="27" loc="341" coveredmethods="13" methods="25" elements="107" classes="1" ncloc="184" statements="78" conditionals="4" coveredstatements="41"/>
            <class name="VarianceGammaModel">
               <metrics coveredelements="58" coveredconditionals="4" complexity="27" coveredmethods="13" methods="25" elements="107" statements="78" conditionals="4" coveredstatements="41"/>
            </class>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(RandomVariable,DiscountCurve,DiscountCurve,RandomVariable,RandomVariable,RandomVariable,RandomVariableFactory)" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariableFactory)" num="88" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(VarianceGammaModelDescriptor)" num="108" count="2" type="method"/>
            <line num="109" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(double,DiscountCurve,DiscountCurve,double,double,double,RandomVariableFactory)" num="128" count="2" type="method"/>
            <line num="131" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(double,DiscountCurve,DiscountCurve,double,double,double)" num="154" count="2" type="method"/>
            <line num="156" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(double,double,double,double,double,double)" num="169" count="3" type="method"/>
            <line num="171" count="3" type="stmt"/>
            <line num="172" count="3" type="stmt"/>
            <line num="173" count="3" type="stmt"/>
            <line num="174" count="3" type="stmt"/>
            <line num="175" count="3" type="stmt"/>
            <line num="176" count="3" type="stmt"/>
            <line num="177" count="3" type="stmt"/>
            <line num="178" count="3" type="stmt"/>
            <line num="179" count="3" type="stmt"/>
            <line num="180" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(double,double,double,double,double)" num="193" count="3" type="method"/>
            <line num="194" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="197" count="505" type="method"/>
            <line num="199" count="505" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="202" count="500" type="method"/>
            <line num="204" count="500" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="207" count="5" type="method"/>
            <line num="209" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="212" count="68" type="method"/>
            <line num="214" count="68" type="stmt"/>
            <line falsecount="64" truecount="4" num="214" type="cond"/>
            <line num="215" count="4" type="stmt"/>
            <line num="218" count="64" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="222" count="500" type="method"/>
            <line num="224" count="500" type="stmt"/>
            <line num="226" count="500" type="stmt"/>
            <line falsecount="300" truecount="200" num="226" type="cond"/>
            <line num="227" count="200" type="stmt"/>
            <line num="228" count="200" type="stmt"/>
            <line num="230" count="200" type="stmt"/>
            <line num="233" count="300" type="stmt"/>
            <line num="237" count="500" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="240" count="500" type="method"/>
            <line num="243" count="500" type="stmt"/>
            <line num="244" count="500" type="stmt"/>
            <line num="245" count="500" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="248" count="10" type="method"/>
            <line num="250" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="253" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="258" count="704" type="method"/>
            <line num="260" count="704" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : ProcessModel" num="263" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="284" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : RandomVariable" num="291" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="298" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountRate() : RandomVariable" num="305" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSigma() : RandomVariable" num="312" count="0" type="method"/>
            <line num="313" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTheta() : RandomVariable" num="319" count="0" type="method"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNu() : RandomVariable" num="326" count="0" type="method"/>
            <line num="327" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="333" count="0" type="method"/>
            <line num="335" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.model.volatilities">
         <metrics coveredelements="271" complexity="94" loc="1402" methods="87" classes="9" statements="292" coveredconditionals="9" coveredmethods="54" elements="393" ncloc="750" files="9" conditionals="14" coveredstatements="208"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/model/volatilities/SABRVolatilityCube.java" name="SABRVolatilityCube.java">
            <metrics coveredelements="55" coveredconditionals="2" complexity="16" loc="190" coveredmethods="14" methods="14" elements="59" classes="1" ncloc="107" statements="41" conditionals="4" coveredstatements="39"/>
            <class name="SABRVolatilityCube">
               <metrics coveredelements="55" coveredconditionals="2" complexity="16" coveredmethods="14" methods="14" elements="59" statements="41" conditionals="4" coveredstatements="39"/>
            </class>
            <line complexity="1" visibility="public" signature="SABRVolatilityCube(String,LocalDate,DataTable,double,double,DataTable,DataTable,DataTable,double)" num="62" count="4" type="method"/>
            <line num="65" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="SABRVolatilityCube(String,LocalDate,DataTable,double,double,DataTable,DataTable,DataTable,double,double)" num="82" count="305" type="method"/>
            <line num="85" count="305" type="stmt"/>
            <line num="86" count="305" type="stmt"/>
            <line num="87" count="305" type="stmt"/>
            <line num="88" count="305" type="stmt"/>
            <line num="89" count="305" type="stmt"/>
            <line num="90" count="305" type="stmt"/>
            <line num="91" count="305" type="stmt"/>
            <line num="92" count="305" type="stmt"/>
            <line num="93" count="305" type="stmt"/>
            <line num="94" count="305" type="stmt"/>
            <line num="95" count="305" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(VolatilityCubeModel,double,double,double,QuotingConvention) : double" num="98" count="7745724" type="method"/>
            <line num="101" count="7746861" type="stmt"/>
            <line falsecount="7747083" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="7747026" type="stmt"/>
            <line falsecount="7747069" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="109" count="7747070" type="stmt"/>
            <line num="110" count="7745788" type="stmt"/>
            <line num="111" count="7745796" type="stmt"/>
            <line num="112" count="7745883" type="stmt"/>
            <line num="114" count="7746154" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double,QuotingConvention) : double" num="118" count="3000" type="method"/>
            <line num="120" count="3000" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="123" count="1290" type="method"/>
            <line num="125" count="1290" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="128" count="14395" type="method"/>
            <line num="130" count="14395" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationDecay() : double" num="133" count="19682" type="method"/>
            <line num="135" count="19682" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : Map&lt;String, Object&gt;" num="138" count="2" type="method"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowestStrike(VolatilityCubeModel) : double" num="153" count="42685" type="method"/>
            <line num="155" count="42686" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIborOisDecorrelation() : double" num="158" count="13450" type="method"/>
            <line num="160" count="13450" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlyingTable() : DataTable" num="166" count="1" type="method"/>
            <line num="167" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRhoTable() : DataTable" num="173" count="1" type="method"/>
            <line num="174" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBaseVolTable() : DataTable" num="180" count="1" type="method"/>
            <line num="181" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolvolTable() : DataTable" num="187" count="1" type="method"/>
            <line num="188" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/model/volatilities/SABRVolatilityCubeParallel.java" name="SABRVolatilityCubeParallel.java">
            <metrics coveredelements="43" coveredconditionals="2" complexity="12" loc="164" coveredmethods="9" methods="10" elements="49" classes="1" ncloc="91" statements="35" conditionals="4" coveredstatements="32"/>
            <class name="SABRVolatilityCubeParallel">
               <metrics coveredelements="43" coveredconditionals="2" complexity="12" coveredmethods="9" methods="10" elements="49" statements="35" conditionals="4" coveredstatements="32"/>
            </class>
            <line complexity="1" visibility="public" signature="SABRVolatilityCubeParallel(String,LocalDate,DataTable,double,double,double,double,DataTable,double)" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SABRVolatilityCubeParallel(String,LocalDate,DataTable,double,double,double,double,DataTable,double,double)" num="81" count="22" type="method"/>
            <line num="83" count="22" type="stmt"/>
            <line num="84" count="22" type="stmt"/>
            <line num="85" count="22" type="stmt"/>
            <line num="86" count="22" type="stmt"/>
            <line num="87" count="22" type="stmt"/>
            <line num="88" count="22" type="stmt"/>
            <line num="89" count="22" type="stmt"/>
            <line num="90" count="22" type="stmt"/>
            <line num="91" count="22" type="stmt"/>
            <line num="92" count="22" type="stmt"/>
            <line num="93" count="22" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(VolatilityCubeModel,double,double,double,QuotingConvention) : double" num="96" count="1340430" type="method"/>
            <line num="99" count="1340433" type="stmt"/>
            <line falsecount="1340442" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="1340441" type="stmt"/>
            <line falsecount="1340443" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="107" count="1340444" type="stmt"/>
            <line num="108" count="1340461" type="stmt"/>
            <line num="113" count="1340461" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double,QuotingConvention) : double" num="117" count="275" type="method"/>
            <line num="119" count="275" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="122" count="507" type="method"/>
            <line num="124" count="507" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="127" count="2299" type="method"/>
            <line num="129" count="2299" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationDecay() : double" num="132" count="2041" type="method"/>
            <line num="134" count="2041" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : Map&lt;String, Object&gt;" num="137" count="1" type="method"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowestStrike(VolatilityCubeModel) : double" num="153" count="6325" type="method"/>
            <line num="155" count="6325" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIborOisDecorrelation() : double" num="159" count="2041" type="method"/>
            <line num="161" count="2041" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/model/volatilities/SABRVolatilityCubeParallelFactory.java" name="SABRVolatilityCubeParallelFactory.java">
            <metrics coveredelements="61" coveredconditionals="0" complexity="5" loc="210" coveredmethods="5" methods="5" elements="61" classes="1" ncloc="113" statements="56" conditionals="0" coveredstatements="56"/>
            <class name="SABRVolatilityCubeParallelFactory">
               <metrics coveredelements="61" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="61" statements="56" conditionals="0" coveredstatements="56"/>
            </class>
            <line complexity="1" visibility="public" signature="createSABRVolatilityCubeParallel(String,LocalDate,SchedulePrototype,SchedulePrototype,double,double,double,double,double,double,SwaptionDataLattice,VolatilityCubeModel,String) : SABRVolatilityCubeParallel" num="72" count="11" type="method"/>
            <line num="76" count="11" type="stmt"/>
            <line num="80" count="11" type="stmt"/>
            <line complexity="1" visibility="private" signature="SABRVolatilityCubeParallelFactory(String,LocalDate,SchedulePrototype,SchedulePrototype,double,double,double,double,double,double,SwaptionDataLattice,VolatilityCubeModel,String)" num="100" count="11" type="method"/>
            <line num="103" count="11" type="stmt"/>
            <line num="104" count="11" type="stmt"/>
            <line num="105" count="11" type="stmt"/>
            <line num="106" count="11" type="stmt"/>
            <line num="107" count="11" type="stmt"/>
            <line num="108" count="11" type="stmt"/>
            <line num="109" count="11" type="stmt"/>
            <line num="110" count="11" type="stmt"/>
            <line num="111" count="11" type="stmt"/>
            <line num="112" count="11" type="stmt"/>
            <line num="113" count="11" type="stmt"/>
            <line num="114" count="11" type="stmt"/>
            <line num="115" count="11" type="stmt"/>
            <line num="116" count="11" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildParallel() : SABRVolatilityCubeParallel" num="124" count="11" type="method"/>
            <line num="126" count="11" type="stmt"/>
            <line num="127" count="11" type="stmt"/>
            <line num="129" count="11" type="stmt"/>
            <line complexity="1" visibility="private" signature="makeSwapRateTable() : DataTable" num="136" count="11" type="method"/>
            <line num="138" count="11" type="stmt"/>
            <line num="139" count="11" type="stmt"/>
            <line num="140" count="11" type="stmt"/>
            <line num="142" count="11" type="stmt"/>
            <line num="143" count="55" type="stmt"/>
            <line num="144" count="275" type="stmt"/>
            <line num="145" count="275" type="stmt"/>
            <line num="147" count="275" type="stmt"/>
            <line num="148" count="275" type="stmt"/>
            <line num="150" count="275" type="stmt"/>
            <line num="151" count="275" type="stmt"/>
            <line num="152" count="275" type="stmt"/>
            <line num="154" count="275" type="stmt"/>
            <line num="158" count="11" type="stmt"/>
            <line complexity="1" visibility="private" signature="makeBaseVolTable() : DataTable" num="167" count="11" type="method"/>
            <line num="169" count="11" type="stmt"/>
            <line num="170" count="11" type="stmt"/>
            <line num="171" count="11" type="stmt"/>
            <line num="173" count="11" type="stmt"/>
            <line num="174" count="11" type="stmt"/>
            <line num="175" count="55" type="stmt"/>
            <line num="176" count="275" type="stmt"/>
            <line num="177" count="275" type="stmt"/>
            <line num="179" count="275" type="stmt"/>
            <line num="183" count="11" type="stmt"/>
            <line num="186" count="11" type="stmt"/>
            <line num="189" count="11" type="stmt"/>
            <line num="190" count="11" type="stmt"/>
            <line num="191" count="55" type="stmt"/>
            <line num="193" count="275" type="stmt"/>
            <line num="194" count="275" type="stmt"/>
            <line num="196" count="275" type="stmt"/>
            <line num="197" count="275" type="stmt"/>
            <line num="198" count="275" type="stmt"/>
            <line num="200" count="275" type="stmt"/>
            <line num="201" count="275" type="stmt"/>
            <line num="202" count="275" type="stmt"/>
            <line num="207" count="11" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/model/volatilities/SABRVolatilityCubeSingleSmile.java" name="SABRVolatilityCubeSingleSmile.java">
            <metrics coveredelements="24" coveredconditionals="1" complexity="14" loc="189" coveredmethods="6" methods="13" elements="69" classes="1" ncloc="118" statements="54" conditionals="2" coveredstatements="17"/>
            <class name="SABRVolatilityCubeSingleSmile">
               <metrics coveredelements="24" coveredconditionals="1" complexity="14" coveredmethods="6" methods="13" elements="69" statements="54" conditionals="2" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="SABRVolatilityCubeSingleSmile(String,LocalDate,double,double,double,double,double,double)" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SABRVolatilityCubeSingleSmile(String,LocalDate,double,double,double,double,double,double,double)" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SABRVolatilityCubeSingleSmile(String,LocalDate,double,double,double,double,double,double,double,double)" num="108" count="1" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(VolatilityCubeModel,double,double,double,QuotingConvention) : double" num="123" count="4074" type="method"/>
            <line num="127" count="4074" type="stmt"/>
            <line falsecount="0" truecount="4074" num="127" type="cond"/>
            <line num="128" count="4074" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double,QuotingConvention) : double" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="145" count="3" type="method"/>
            <line num="147" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationDecay() : double" num="160" count="42" type="method"/>
            <line num="162" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : Map&lt;String, Object&gt;" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowestStrike(VolatilityCubeModel) : double" num="180" count="4" type="method"/>
            <line num="182" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIborOisDecorrelation() : double" num="185" count="1" type="method"/>
            <line num="187" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/model/volatilities/ScaledVolatilityCube.java" name="ScaledVolatilityCube.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="11" loc="100" coveredmethods="7" methods="11" elements="32" classes="1" ncloc="66" statements="21" conditionals="0" coveredstatements="13"/>
            <class name="ScaledVolatilityCube">
               <metrics coveredelements="20" coveredconditionals="0" complexity="11" coveredmethods="7" methods="11" elements="32" statements="21" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="ScaledVolatilityCube(String,LocalDate,String,double,double,double)" num="36" count="20441" type="method"/>
            <line num="37" count="20439" type="stmt"/>
            <line num="38" count="20443" type="stmt"/>
            <line num="39" count="20443" type="stmt"/>
            <line num="40" count="20442" type="stmt"/>
            <line num="41" count="20442" type="stmt"/>
            <line num="42" count="20442" type="stmt"/>
            <line num="43" count="20442" type="stmt"/>
            <line complexity="1" visibility="public" signature="ScaledVolatilityCube(String,LocalDate,String,double,double)" num="46" count="20444" type="method"/>
            <line num="47" count="20442" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(VolatilityCubeModel,double,double,double,QuotingConvention) : double" num="50" count="6065379" type="method"/>
            <line num="53" count="6066244" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double,QuotingConvention) : double" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="61" count="40881" type="method"/>
            <line num="63" count="40881" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="66" count="40887" type="method"/>
            <line num="68" count="40888" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceCubeName() : String" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationDecay() : double" num="75" count="441094" type="method"/>
            <line num="77" count="441100" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : Map&lt;String, Object&gt;" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowestStrike(VolatilityCubeModel) : double" num="90" count="40889" type="method"/>
            <line num="92" count="40890" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIborOisDecorrelation() : double" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/model/volatilities/StaticVolatilityCube.java" name="StaticVolatilityCube.java">
            <metrics coveredelements="27" coveredconditionals="0" complexity="11" loc="115" coveredmethods="9" methods="11" elements="31" classes="1" ncloc="64" statements="20" conditionals="0" coveredstatements="18"/>
            <class name="StaticVolatilityCube">
               <metrics coveredelements="27" coveredconditionals="0" complexity="11" coveredmethods="9" methods="11" elements="31" statements="20" conditionals="0" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="StaticVolatilityCube(String,LocalDate,double,double,double)" num="38" count="21" type="method"/>
            <line num="39" count="21" type="stmt"/>
            <line num="40" count="22" type="stmt"/>
            <line num="41" count="21" type="stmt"/>
            <line num="42" count="21" type="stmt"/>
            <line num="43" count="22" type="stmt"/>
            <line num="44" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="StaticVolatilityCube(String,LocalDate,double,double)" num="55" count="21" type="method"/>
            <line num="56" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="StaticVolatilityCube(String,LocalDate,double)" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(VolatilityCubeModel,double,double,double,QuotingConvention) : double" num="70" count="2287134" type="method"/>
            <line num="73" count="2287640" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double,QuotingConvention) : double" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="81" count="519" type="method"/>
            <line num="83" count="519" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="86" count="5219" type="method"/>
            <line num="88" count="5220" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationDecay() : double" num="91" count="4947" type="method"/>
            <line num="93" count="4948" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIborOisDecorrelation() : double" num="96" count="4951" type="method"/>
            <line num="98" count="4951" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : Map&lt;String, Object&gt;" num="101" count="1" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowestStrike(VolatilityCubeModel) : double" num="110" count="15383" type="method"/>
            <line num="112" count="15383" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/model/volatilities/VolVolCube.java" name="VolVolCube.java">
            <metrics coveredelements="26" coveredconditionals="4" complexity="13" loc="130" coveredmethods="2" methods="11" elements="44" classes="1" ncloc="81" statements="29" conditionals="4" coveredstatements="20"/>
            <class name="VolVolCube">
               <metrics coveredelements="26" coveredconditionals="4" complexity="13" coveredmethods="2" methods="11" elements="44" statements="29" conditionals="4" coveredstatements="20"/>
            </class>
            <line complexity="3" visibility="public" signature="VolVolCube(String,LocalDate,String,Schedule,double[])" num="50" count="20598" type="method"/>
            <line num="51" count="20597" type="stmt"/>
            <line num="52" count="20598" type="stmt"/>
            <line num="53" count="20599" type="stmt"/>
            <line num="54" count="20599" type="stmt"/>
            <line num="55" count="20599" type="stmt"/>
            <line num="57" count="20598" type="stmt"/>
            <line num="58" count="20598" type="stmt"/>
            <line falsecount="20598" truecount="213382" num="58" type="cond"/>
            <line num="59" count="213386" type="stmt"/>
            <line num="61" count="20598" type="stmt"/>
            <line num="63" count="20599" type="stmt"/>
            <line num="64" count="20599" type="stmt"/>
            <line falsecount="20599" truecount="213383" num="64" type="cond"/>
            <line num="65" count="213387" type="stmt"/>
            <line num="67" count="20599" type="stmt"/>
            <line num="69" count="20598" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(VolatilityCubeModel,double,double,double,QuotingConvention) : double" num="72" count="447365" type="method"/>
            <line num="75" count="447370" type="stmt"/>
            <line num="76" count="447367" type="stmt"/>
            <line num="78" count="447385" type="stmt"/>
            <line num="79" count="447366" type="stmt"/>
            <line num="80" count="447357" type="stmt"/>
            <line num="82" count="447369" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceCubeName() : String" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double,QuotingConvention) : double" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationDecay() : double" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : Map&lt;String, Object&gt;" num="114" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowestStrike(VolatilityCubeModel) : double" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIborOisDecorrelation() : double" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/model/volatilities/VolatilityCube.java" name="VolatilityCube.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="87" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VolatilityCube">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/model/volatilities/VolatilityCubeFactory.java" name="VolatilityCubeFactory.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="12" loc="217" coveredmethods="2" methods="12" elements="48" classes="1" ncloc="95" statements="36" conditionals="0" coveredstatements="13"/>
            <class name="VolatilityCubeFactory">
               <metrics coveredelements="15" coveredconditionals="0" complexity="12" coveredmethods="2" methods="12" elements="48" statements="36" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="VolatilityCubeFactory(LocalDate,SwaptionDataLattice,SwaptionDataLattice,SwaptionDataLattice,double,double,double,double,AnnuityMappingType)" num="60" count="9" type="method"/>
            <line num="62" count="9" type="stmt"/>
            <line num="64" count="9" type="stmt"/>
            <line num="65" count="9" type="stmt"/>
            <line num="66" count="9" type="stmt"/>
            <line num="67" count="9" type="stmt"/>
            <line num="68" count="9" type="stmt"/>
            <line num="69" count="9" type="stmt"/>
            <line num="70" count="9" type="stmt"/>
            <line num="71" count="9" type="stmt"/>
            <line num="72" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="buildParallelSABRCube(String,double,double,SwaptionDataLattice,VolatilityCubeModel) : SABRVolatilityCubeParallel" num="85" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="buildShiftedSmileSABRCube(String,VolatilityCubeModel) : SABRVolatilityCube" num="104" count="9" type="method"/>
            <line num="107" count="9" type="stmt"/>
            <line num="109" count="9" type="stmt"/>
            <line num="111" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="buildSABRVolatilityCube(String,VolatilityCubeModel,int[]) : SABRVolatilityCube" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="buildSABRVolatilityCube(String,VolatilityCubeModel,int[],DataTable,DataTable,DataTable) : SABRVolatilityCube" num="147" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfThreads() : int" num="162" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxIterations() : int" num="168" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCalibrationParameters(int,int) : void" num="178" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReplicationParameters(double,double,int) : void" num="190" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationLowerBound() : double" num="199" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationUpperBound() : double" num="206" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationNumberOfEvaluationPoints() : double" num="213" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.optimizer">
         <metrics coveredelements="791" complexity="329" loc="3575" methods="159" classes="21" statements="752" coveredconditionals="204" coveredmethods="82" elements="1197" ncloc="1680" files="17" conditionals="286" coveredstatements="505"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/GoldenSectionSearch.java" name="GoldenSectionSearch.java">
            <metrics coveredelements="67" coveredconditionals="16" complexity="25" loc="258" coveredmethods="8" methods="11" elements="105" classes="1" ncloc="123" statements="70" conditionals="24" coveredstatements="43"/>
            <class name="GoldenSectionSearch">
               <metrics coveredelements="67" coveredconditionals="16" complexity="25" coveredmethods="8" methods="11" elements="105" statements="70" conditionals="24" coveredstatements="43"/>
            </class>
            <line complexity="5" visibility="public" signature="main(String[]) : void" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="GoldenSectionSearch(double,double)" num="92" count="1021803" type="method"/>
            <line num="93" count="1021792" type="stmt"/>
            <line num="94" count="1021802" type="stmt"/>
            <line num="95" count="1021804" type="stmt"/>
            <line num="96" count="1021797" type="stmt"/>
            <line num="98" count="1021808" type="stmt"/>
            <line num="99" count="1021809" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestPoint() : double" num="105" count="1021811" type="method"/>
            <line num="107" count="1021812" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNextPoint() : double" num="115" count="97529329" type="method"/>
            <line num="116" count="97549848" type="stmt"/>
            <line num="117" count="97565216" type="stmt"/>
            <line complexity="10" visibility="public" signature="setValue(double) : void" num="127" count="97506077" type="method"/>
            <line num="128" count="97520279" type="stmt"/>
            <line falsecount="97519905" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="97542186" type="stmt"/>
            <line falsecount="94501887" truecount="3065227" num="132" type="cond"/>
            <line num="136" count="3065231" type="stmt"/>
            <line num="138" count="3065245" type="stmt"/>
            <line falsecount="1021803" truecount="2043532" num="138" type="cond"/>
            <line num="139" count="2043544" type="stmt"/>
            <line num="141" count="1021809" type="stmt"/>
            <line falsecount="0" truecount="1021803" num="141" type="cond"/>
            <line num="142" count="1021810" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="152" count="94498929" type="stmt"/>
            <line falsecount="47875918" truecount="46710722" num="152" type="cond"/>
            <line num="154" count="46709851" type="stmt"/>
            <line falsecount="29000244" truecount="17730282" num="154" type="cond"/>
            <line num="158" count="17730619" type="stmt"/>
            <line num="159" count="17730492" type="stmt"/>
            <line num="161" count="17730605" type="stmt"/>
            <line num="162" count="17729415" type="stmt"/>
            <line num="167" count="29000085" type="stmt"/>
            <line num="168" count="28999841" type="stmt"/>
            <line num="172" count="47873226" type="stmt"/>
            <line falsecount="37352596" truecount="10536072" num="172" type="cond"/>
            <line num="176" count="10536233" type="stmt"/>
            <line num="177" count="10536487" type="stmt"/>
            <line num="179" count="10536459" type="stmt"/>
            <line num="180" count="10536382" type="stmt"/>
            <line num="185" count="37355988" type="stmt"/>
            <line num="186" count="37358784" type="stmt"/>
            <line num="193" count="94518497" type="stmt"/>
            <line falsecount="48867859" truecount="45733637" num="193" type="cond"/>
            <line num="194" count="45737586" type="stmt"/>
            <line num="196" count="48869309" type="stmt"/>
            <line num="202" count="94507586" type="stmt"/>
            <line falsecount="93855729" truecount="713197" num="202" type="cond"/>
            <line num="203" count="713198" type="stmt"/>
            <line num="205" count="94587471" type="stmt"/>
            <line num="208" count="97646591" type="stmt"/>
            <line num="209" count="97645653" type="stmt"/>
            <line complexity="2" visibility="public" signature="optimize() : GoldenSectionSearch" num="212" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="value(double) : double" num="221" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGoldenSection(double,double) : double" num="234" count="96577628" type="method"/>
            <line num="235" count="96602573" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfIterations() : int" num="241" count="97558764" type="method"/>
            <line num="242" count="97625145" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccuracy() : double" num="248" count="98559242" type="method"/>
            <line num="249" count="98610489" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDone() : boolean" num="255" count="98296093" type="method"/>
            <line num="256" count="98360496" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/LevenbergMarquardt.java" name="LevenbergMarquardt.java">
            <metrics coveredelements="240" coveredconditionals="55" complexity="80" loc="895" coveredmethods="26" methods="36" elements="320" classes="2" ncloc="408" statements="208" conditionals="76" coveredstatements="159"/>
            <class name="LevenbergMarquardt">
               <metrics coveredelements="240" coveredconditionals="55" complexity="80" coveredmethods="26" methods="36" elements="320" statements="208" conditionals="76" coveredstatements="159"/>
            </class>
            <class name="LevenbergMarquardt.RegularizationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="main(String[]) : void" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LevenbergMarquardt(RegularizationMethod,double[],double[],int,ExecutorService)" num="240" count="883" type="method"/>
            <line num="241" count="883" type="stmt"/>
            <line num="242" count="883" type="stmt"/>
            <line num="243" count="883" type="stmt"/>
            <line num="244" count="883" type="stmt"/>
            <line num="245" count="883" type="stmt"/>
            <line num="247" count="883" type="stmt"/>
            <line num="248" count="883" type="stmt"/>
            <line num="250" count="883" type="stmt"/>
            <line num="251" count="883" type="stmt"/>
            <line num="252" count="883" type="stmt"/>
            <line complexity="1" visibility="public" signature="LevenbergMarquardt(double[],double[],int,ExecutorService)" num="263" count="6" type="method"/>
            <line num="264" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="LevenbergMarquardt(RegularizationMethod,double[],double[],int,int)" num="277" count="877" type="method"/>
            <line num="278" count="877" type="stmt"/>
            <line num="280" count="877" type="stmt"/>
            <line complexity="1" visibility="public" signature="LevenbergMarquardt(double[],double[],int,int)" num="291" count="789" type="method"/>
            <line num="292" count="789" type="stmt"/>
            <line complexity="1" visibility="public" signature="LevenbergMarquardt(List&lt;Number&gt;,List&lt;Number&gt;,int,ExecutorService)" num="303" count="2" type="method"/>
            <line num="304" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="LevenbergMarquardt(List&lt;Number&gt;,List&lt;Number&gt;,int,int)" num="315" count="2" type="method"/>
            <line num="316" count="2" type="stmt"/>
            <line num="318" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="LevenbergMarquardt()" num="324" count="2" type="method"/>
            <line num="325" count="2" type="stmt"/>
            <line num="326" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="numberListToDoubleArray(List&lt;Number&gt;) : double[]" num="335" count="4" type="method"/>
            <line num="336" count="4" type="stmt"/>
            <line num="337" count="4" type="stmt"/>
            <line falsecount="4" truecount="8" num="337" type="cond"/>
            <line num="338" count="8" type="stmt"/>
            <line num="340" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="LevenbergMarquardt(int)" num="348" count="0" type="method"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setInitialParameters(double[]) : LevenbergMarquardt" num="361" count="2" type="method"/>
            <line num="362" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="362" type="cond"/>
            <line num="363" count="0" type="stmt"/>
            <line num="365" count="2" type="stmt"/>
            <line num="366" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="setParameterSteps(double[]) : LevenbergMarquardt" num="377" count="90" type="method"/>
            <line num="378" count="90" type="stmt"/>
            <line falsecount="90" truecount="0" num="378" type="cond"/>
            <line num="379" count="0" type="stmt"/>
            <line num="381" count="90" type="stmt"/>
            <line num="382" count="90" type="stmt"/>
            <line complexity="2" visibility="public" signature="setTargetValues(double[]) : LevenbergMarquardt" num="392" count="2" type="method"/>
            <line num="393" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="393" type="cond"/>
            <line num="394" count="0" type="stmt"/>
            <line num="396" count="2" type="stmt"/>
            <line num="397" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="setMaxIteration(int) : LevenbergMarquardt" num="407" count="2" type="method"/>
            <line num="408" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="408" type="cond"/>
            <line num="409" count="0" type="stmt"/>
            <line num="411" count="2" type="stmt"/>
            <line num="412" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="setWeights(double[]) : LevenbergMarquardt" num="421" count="2" type="method"/>
            <line num="422" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="422" type="cond"/>
            <line num="423" count="0" type="stmt"/>
            <line num="425" count="2" type="stmt"/>
            <line num="426" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="setErrorTolerance(double) : LevenbergMarquardt" num="437" count="588" type="method"/>
            <line num="438" count="588" type="stmt"/>
            <line falsecount="588" truecount="0" num="438" type="cond"/>
            <line num="439" count="0" type="stmt"/>
            <line num="441" count="588" type="stmt"/>
            <line num="442" count="588" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambda() : double" num="451" count="0" type="method"/>
            <line num="452" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLambda(double) : LevenbergMarquardt" num="462" count="88" type="method"/>
            <line num="463" count="88" type="stmt"/>
            <line num="464" count="88" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambdaMultiplicator() : double" num="473" count="0" type="method"/>
            <line num="474" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setLambdaMultiplicator(double) : void" num="485" count="0" type="method"/>
            <line num="486" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="486" type="cond"/>
            <line num="487" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambdaDivisor() : double" num="498" count="0" type="method"/>
            <line num="499" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setLambdaDivisor(double) : void" num="510" count="0" type="method"/>
            <line num="511" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="511" type="cond"/>
            <line num="512" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestFitParameters() : double[]" num="517" count="893" type="method"/>
            <line num="519" count="893" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootMeanSquaredError() : double" num="522" count="32" type="method"/>
            <line num="524" count="32" type="stmt"/>
            <line complexity="1" visibility="private" signature="setErrorMeanSquaredCurrent(double) : void" num="530" count="0" type="method"/>
            <line num="531" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIterations() : int" num="534" count="88" type="method"/>
            <line num="536" count="88" type="stmt"/>
            <line complexity="5" visibility="public" signature="setDerivatives(double[],double[][]) : void" num="557" count="69351" type="method"/>
            <line num="561" count="69351" type="stmt"/>
            <line num="562" count="69351" type="stmt"/>
            <line falsecount="69351" truecount="351810" num="562" type="cond"/>
            <line num="563" count="351810" type="stmt"/>
            <line num="564" count="351810" type="stmt"/>
            <line num="566" count="351810" type="stmt"/>
            <line num="567" count="351810" type="stmt"/>
            <line complexity="5" visibility="public" signature="call() : double[]" num="568" count="351485" type="method"/>
            <line num="570" count="351507" type="stmt"/>
            <line num="571" count="351542" type="stmt"/>
            <line falsecount="347301" truecount="4270" num="571" type="cond"/>
            <line num="572" count="4270" type="stmt"/>
            <line num="580" count="347324" type="stmt"/>
            <line num="584" count="351585" type="stmt"/>
            <line num="587" count="351570" type="stmt"/>
            <line num="588" count="351610" type="stmt"/>
            <line num="591" count="0" type="stmt"/>
            <line num="593" count="351600" type="stmt"/>
            <line falsecount="351311" truecount="3708047" num="593" type="cond"/>
            <line num="594" count="3708116" type="stmt"/>
            <line num="595" count="3707161" type="stmt"/>
            <line num="596" count="3707552" type="stmt"/>
            <line falsecount="3700518" truecount="8274" num="596" type="cond"/>
            <line num="597" count="8274" type="stmt"/>
            <line num="600" count="351358" type="stmt"/>
            <line num="603" count="351810" type="stmt"/>
            <line falsecount="3012" truecount="348798" num="603" type="cond"/>
            <line num="604" count="348798" type="stmt"/>
            <line num="605" count="348798" type="stmt"/>
            <line num="608" count="3012" type="stmt"/>
            <line num="609" count="3012" type="stmt"/>
            <line num="610" count="3012" type="stmt"/>
            <line num="614" count="69351" type="stmt"/>
            <line falsecount="69351" truecount="351810" num="614" type="cond"/>
            <line num="615" count="351810" type="stmt"/>
            <line num="616" count="351810" type="stmt"/>
            <line num="619" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="done() : boolean" num="629" count="198772" type="method"/>
            <line num="631" count="198772" type="stmt"/>
            <line complexity="9" visibility="public" signature="run() : void" num="645" count="887" type="method"/>
            <line num="648" count="887" type="stmt"/>
            <line falsecount="14" truecount="873" num="648" type="cond"/>
            <line num="649" count="873" type="stmt"/>
            <line falsecount="0" truecount="873" num="649" type="cond"/>
            <line num="650" count="873" type="stmt"/>
            <line num="651" count="873" type="stmt"/>
            <line num="655" count="887" type="stmt"/>
            <line num="658" count="887" type="stmt"/>
            <line num="659" count="887" type="stmt"/>
            <line num="661" count="887" type="stmt"/>
            <line num="662" count="887" type="stmt"/>
            <line num="663" count="887" type="stmt"/>
            <line num="665" count="887" type="stmt"/>
            <line num="666" count="887" type="stmt"/>
            <line num="667" count="887" type="stmt"/>
            <line num="669" count="887" type="stmt"/>
            <line num="670" count="887" type="stmt"/>
            <line num="672" count="887" type="stmt"/>
            <line num="674" count="887" type="stmt"/>
            <line num="676" count="198084" type="stmt"/>
            <line num="679" count="198084" type="stmt"/>
            <line num="682" count="198084" type="stmt"/>
            <line num="688" count="198084" type="stmt"/>
            <line falsecount="128235" truecount="69849" num="688" type="cond"/>
            <line num="689" count="69849" type="stmt"/>
            <line num="692" count="69849" type="stmt"/>
            <line num="693" count="69849" type="stmt"/>
            <line num="694" count="69849" type="stmt"/>
            <line num="697" count="69849" type="stmt"/>
            <line num="700" count="69849" type="stmt"/>
            <line num="702" count="128235" type="stmt"/>
            <line num="705" count="128235" type="stmt"/>
            <line num="709" count="198084" type="stmt"/>
            <line falsecount="887" truecount="197197" num="709" type="cond"/>
            <line num="710" count="197197" type="stmt"/>
            <line num="712" count="887" type="stmt"/>
            <line num="716" count="197197" type="stmt"/>
            <line falsecount="197197" truecount="0" num="716" type="cond"/>
            <line num="718" count="0" type="stmt"/>
            <line num="723" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="723" type="cond"/>
            <line num="724" count="0" type="stmt"/>
            <line num="726" count="0" type="stmt"/>
            <line num="732" count="887" type="stmt"/>
            <line falsecount="14" truecount="873" num="732" type="cond"/>
            <line num="733" count="873" type="stmt"/>
            <line num="734" count="873" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMeanSquaredError(double[]) : double" num="739" count="198084" type="method"/>
            <line num="740" count="198084" type="stmt"/>
            <line num="742" count="198084" type="stmt"/>
            <line falsecount="198084" truecount="1477264" num="742" type="cond"/>
            <line num="743" count="1477264" type="stmt"/>
            <line num="744" count="1477264" type="stmt"/>
            <line num="747" count="198084" type="stmt"/>
            <line complexity="13" visibility="private" signature="updateParameterTest() : void" num="755" count="197197" type="method"/>
            <line num="756" count="197197" type="stmt"/>
            <line falsecount="127664" truecount="69533" num="756" type="cond"/>
            <line num="757" count="69533" type="stmt"/>
            <line num="758" count="69533" type="stmt"/>
            <line num="761" count="197197" type="stmt"/>
            <line num="763" count="197197" type="stmt"/>
            <line falsecount="197197" truecount="199048" num="763" type="cond"/>
            <line num="764" count="199048" type="stmt"/>
            <line num="766" count="199048" type="stmt"/>
            <line falsecount="199048" truecount="961529" num="766" type="cond"/>
            <line num="767" count="961529" type="stmt"/>
            <line falsecount="961529" truecount="3320184" num="767" type="cond"/>
            <line num="768" count="3320184" type="stmt"/>
            <line num="769" count="3320184" type="stmt"/>
            <line falsecount="3320184" truecount="72791703" num="769" type="cond"/>
            <line num="770" count="72791703" type="stmt"/>
            <line num="772" count="3320184" type="stmt"/>
            <line falsecount="2358655" truecount="961529" num="772" type="cond"/>
            <line num="773" count="961529" type="stmt"/>
            <line falsecount="957305" truecount="4224" num="773" type="cond"/>
            <line num="775" count="4224" type="stmt"/>
            <line num="779" count="957305" type="stmt"/>
            <line falsecount="956356" truecount="949" num="779" type="cond"/>
            <line num="780" count="949" type="stmt"/>
            <line num="783" count="956356" type="stmt"/>
            <line num="788" count="3320184" type="stmt"/>
            <line num="789" count="3320184" type="stmt"/>
            <line num="794" count="199048" type="stmt"/>
            <line falsecount="199048" truecount="961529" num="794" type="cond"/>
            <line num="795" count="961529" type="stmt"/>
            <line num="796" count="961529" type="stmt"/>
            <line num="797" count="961529" type="stmt"/>
            <line falsecount="961529" truecount="8430580" num="797" type="cond"/>
            <line num="798" count="8430580" type="stmt"/>
            <line num="800" count="961529" type="stmt"/>
            <line num="803" count="199048" type="stmt"/>
            <line num="806" count="199048" type="stmt"/>
            <line num="808" count="1851" type="stmt"/>
            <line num="809" count="1851" type="stmt"/>
            <line num="814" count="197197" type="stmt"/>
            <line falsecount="197197" truecount="954404" num="814" type="cond"/>
            <line num="815" count="954404" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : LevenbergMarquardt" num="826" count="2" type="method"/>
            <line num="828" count="2" type="stmt"/>
            <line num="829" count="2" type="stmt"/>
            <line num="830" count="2" type="stmt"/>
            <line num="831" count="2" type="stmt"/>
            <line num="832" count="2" type="stmt"/>
            <line num="833" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedTargetValues(double[],double[],boolean) : LevenbergMarquardt" num="854" count="2" type="method"/>
            <line num="855" count="2" type="stmt"/>
            <line num="856" count="2" type="stmt"/>
            <line num="857" count="2" type="stmt"/>
            <line num="859" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="859" type="cond"/>
            <line num="860" count="2" type="stmt"/>
            <line num="863" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedTargetValues(List&lt;Number&gt;,List&lt;Number&gt;,boolean) : LevenbergMarquardt" num="884" count="0" type="method"/>
            <line num="885" count="0" type="stmt"/>
            <line num="886" count="0" type="stmt"/>
            <line num="887" count="0" type="stmt"/>
            <line num="889" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="889" type="cond"/>
            <line num="890" count="0" type="stmt"/>
            <line num="893" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/Optimizer.java" name="Optimizer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="52" coveredmethods="0" methods="0" elements="0" classes="2" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Optimizer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Optimizer.ObjectiveFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/OptimizerFactory.java" name="OptimizerFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="24" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="OptimizerFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/OptimizerFactoryCMAES.java" name="OptimizerFactoryCMAES.java">
            <metrics coveredelements="42" coveredconditionals="4" complexity="21" loc="143" coveredmethods="11" methods="15" elements="66" classes="1" ncloc="110" statements="43" conditionals="8" coveredstatements="27"/>
            <class name="OptimizerFactoryCMAES">
               <metrics coveredelements="42" coveredconditionals="4" complexity="21" coveredmethods="11" methods="15" elements="66" statements="43" conditionals="8" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="OptimizerFactoryCMAES(double,int,double[],double[],double[])" num="27" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="OptimizerFactoryCMAES(double,int,double[])" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="OptimizerFactoryCMAES(double,int)" num="47" count="2" type="method"/>
            <line num="48" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,double[],double[]) : Optimizer" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,double[],double[],double[],double[]) : Optimizer" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getOptimizer(ObjectiveFunction,double[],double[],double[],double[],double[]) : Optimizer" num="66" count="2" type="method"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="69" type="cond"/>
            <line num="70" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="70" type="cond"/>
            <line num="71" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="71" type="cond"/>
            <line num="74" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestFitParameters() : double[]" num="79" count="2" type="method"/>
            <line num="81" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootMeanSquaredError() : double" num="84" count="2" type="method"/>
            <line num="86" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIterations() : int" num="89" count="2" type="method"/>
            <line num="91" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="91" type="cond"/>
            <line complexity="2" visibility="public" signature="run() : void" num="94" count="2" type="method"/>
            <line num="96" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="computeObjectiveValue(double[]) : double" num="97" count="1754" type="method"/>
            <line num="99" count="1754" type="stmt"/>
            <line num="100" count="1754" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="1754" type="stmt"/>
            <line num="105" count="1754" type="stmt"/>
            <line num="106" count="3508" type="stmt"/>
            <line num="108" count="1754" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGoalType() : org.apache.commons.math3.optim.nonlinear.scalar.GoalType" num="111" count="2" type="method"/>
            <line num="113" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStartPoint() : double[]" num="116" count="6" type="method"/>
            <line num="118" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowerBound() : double[]" num="121" count="1890" type="method"/>
            <line num="123" count="1890" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUpperBound() : double[]" num="126" count="1890" type="method"/>
            <line num="128" count="1890" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/OptimizerFactoryLevenbergMarquardt.java" name="OptimizerFactoryLevenbergMarquardt.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="8" loc="74" coveredmethods="7" methods="8" elements="21" classes="1" ncloc="53" statements="13" conditionals="0" coveredstatements="12"/>
            <class name="OptimizerFactoryLevenbergMarquardt">
               <metrics coveredelements="19" coveredconditionals="0" complexity="8" coveredmethods="7" methods="8" elements="21" statements="13" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="OptimizerFactoryLevenbergMarquardt(LevenbergMarquardt.RegularizationMethod,double,int,double,int)" num="23" count="112" type="method"/>
            <line num="24" count="112" type="stmt"/>
            <line num="25" count="112" type="stmt"/>
            <line num="26" count="112" type="stmt"/>
            <line num="27" count="112" type="stmt"/>
            <line num="28" count="112" type="stmt"/>
            <line num="29" count="112" type="stmt"/>
            <line complexity="1" visibility="public" signature="OptimizerFactoryLevenbergMarquardt(LevenbergMarquardt.RegularizationMethod,int,double,int)" num="32" count="106" type="method"/>
            <line num="33" count="106" type="stmt"/>
            <line complexity="1" visibility="public" signature="OptimizerFactoryLevenbergMarquardt(int,double,int)" num="36" count="106" type="method"/>
            <line num="37" count="106" type="stmt"/>
            <line complexity="1" visibility="public" signature="OptimizerFactoryLevenbergMarquardt(int,int)" num="40" count="4" type="method"/>
            <line num="41" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,double[],double[]) : Optimizer" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,double[],double[],double[],double[]) : Optimizer" num="49" count="62" type="method"/>
            <line num="51" count="62" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,double[],double[],double[],double[],double[]) : Optimizer" num="54" count="88" type="method"/>
            <line num="56" count="88" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="65" count="22666" type="method"/>
            <line num="67" count="22664" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/SolverException.java" name="SolverException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="46" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="13" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="SolverException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SolverException(String)" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SolverException(Throwable)" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SolverException(String,Throwable)" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/StochasticLevenbergMarquardt.java" name="StochasticLevenbergMarquardt.java">
            <metrics coveredelements="148" coveredconditionals="40" complexity="63" loc="712" coveredmethods="8" methods="25" elements="247" classes="2" ncloc="327" statements="160" conditionals="62" coveredstatements="100"/>
            <class name="StochasticLevenbergMarquardt">
               <metrics coveredelements="148" coveredconditionals="40" complexity="63" coveredmethods="8" methods="25" elements="247" statements="160" conditionals="62" coveredstatements="100"/>
            </class>
            <class name="StochasticLevenbergMarquardt.RegularizationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="main(String[]) : void" num="174" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="186" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="199" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticLevenbergMarquardt(RegularizationMethod,RandomVariable[],RandomVariable[],RandomVariable[],int,double,ExecutorService)" num="227" count="4" type="method"/>
            <line num="228" count="4" type="stmt"/>
            <line num="229" count="4" type="stmt"/>
            <line num="230" count="4" type="stmt"/>
            <line num="231" count="4" type="stmt"/>
            <line num="232" count="4" type="stmt"/>
            <line num="233" count="4" type="stmt"/>
            <line num="234" count="4" type="stmt"/>
            <line num="235" count="4" type="stmt"/>
            <line num="236" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticLevenbergMarquardt(RandomVariable[],RandomVariable[],RandomVariable[],int,double,ExecutorService)" num="249" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticLevenbergMarquardt(RegularizationMethod,RandomVariable[],RandomVariable[],RandomVariable[],int,double,int)" num="264" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambda() : double" num="276" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLambda(double) : void" num="286" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambdaMultiplicator() : double" num="296" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setLambdaMultiplicator(double) : void" num="308" count="0" type="method"/>
            <line num="309" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="309" type="cond"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambdaDivisor() : double" num="321" count="0" type="method"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setLambdaDivisor(double) : void" num="333" count="0" type="method"/>
            <line num="334" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="334" type="cond"/>
            <line num="335" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestFitParameters() : RandomVariable[]" num="340" count="4" type="method"/>
            <line num="342" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootMeanSquaredError() : double" num="345" count="0" type="method"/>
            <line num="347" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setErrorMeanSquaredCurrent(double) : void" num="353" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIterations() : int" num="357" count="4" type="method"/>
            <line num="359" count="4" type="stmt"/>
            <line complexity="1" visibility="protected" signature="prepareAndSetValues(RandomVariable[],RandomVariable[]) : void" num="362" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="prepareAndSetDerivatives(RandomVariable[],RandomVariable[],RandomVariable[][]) : void" num="366" count="0" type="method"/>
            <line num="367" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="setDerivatives(RandomVariable[],RandomVariable[][]) : void" num="388" count="36" type="method"/>
            <line num="392" count="36" type="stmt"/>
            <line num="393" count="36" type="stmt"/>
            <line num="394" count="36" type="stmt"/>
            <line falsecount="36" truecount="1728" num="394" type="cond"/>
            <line num="395" count="1728" type="stmt"/>
            <line num="396" count="1728" type="stmt"/>
            <line num="398" count="1728" type="stmt"/>
            <line num="399" count="1728" type="stmt"/>
            <line complexity="4" visibility="public" signature="call() : RandomVariable[]" num="400" count="1728" type="method"/>
            <line num="402" count="1728" type="stmt"/>
            <line num="403" count="1728" type="stmt"/>
            <line falsecount="1728" truecount="0" num="403" type="cond"/>
            <line num="404" count="0" type="stmt"/>
            <line num="412" count="1728" type="stmt"/>
            <line num="416" count="1728" type="stmt"/>
            <line num="419" count="1728" type="stmt"/>
            <line num="420" count="1728" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="425" count="1728" type="stmt"/>
            <line falsecount="1728" truecount="266112" num="425" type="cond"/>
            <line num="426" count="266112" type="stmt"/>
            <line num="429" count="1728" type="stmt"/>
            <line num="432" count="1728" type="stmt"/>
            <line falsecount="1728" truecount="0" num="432" type="cond"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="437" count="1728" type="stmt"/>
            <line num="438" count="1728" type="stmt"/>
            <line num="439" count="1728" type="stmt"/>
            <line num="443" count="36" type="stmt"/>
            <line falsecount="36" truecount="1728" num="443" type="cond"/>
            <line num="444" count="1728" type="stmt"/>
            <line num="445" count="1728" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="done() : boolean" num="458" count="58" type="method"/>
            <line num="460" count="58" type="stmt"/>
            <line complexity="24" visibility="public" signature="run() : void" num="468" count="4" type="method"/>
            <line num="471" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="471" type="cond"/>
            <line num="472" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="472" type="cond"/>
            <line num="473" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="478" count="4" type="stmt"/>
            <line num="481" count="4" type="stmt"/>
            <line num="482" count="4" type="stmt"/>
            <line num="484" count="4" type="stmt"/>
            <line num="485" count="4" type="stmt"/>
            <line num="487" count="4" type="stmt"/>
            <line num="488" count="4" type="stmt"/>
            <line num="489" count="4" type="stmt"/>
            <line num="490" count="4" type="stmt"/>
            <line num="492" count="4" type="stmt"/>
            <line num="493" count="4" type="stmt"/>
            <line num="494" count="4" type="stmt"/>
            <line num="496" count="4" type="stmt"/>
            <line num="498" count="58" type="stmt"/>
            <line num="501" count="58" type="stmt"/>
            <line num="504" count="58" type="stmt"/>
            <line num="510" count="58" type="stmt"/>
            <line num="512" count="58" type="stmt"/>
            <line falsecount="24" truecount="34" num="512" type="cond"/>
            <line num="513" count="34" type="stmt"/>
            <line num="514" count="34" type="stmt"/>
            <line num="515" count="34" type="stmt"/>
            <line num="516" count="34" type="stmt"/>
            <line num="520" count="58" type="stmt"/>
            <line falsecount="54" truecount="4" num="520" type="cond"/>
            <line num="521" count="4" type="stmt"/>
            <line num="527" count="54" type="stmt"/>
            <line num="528" count="54" type="stmt"/>
            <line falsecount="24" truecount="30" num="528" type="cond"/>
            <line num="529" count="30" type="stmt"/>
            <line num="532" count="24" type="stmt"/>
            <line num="539" count="54" type="stmt"/>
            <line num="544" count="54" type="stmt"/>
            <line num="546" count="54" type="stmt"/>
            <line num="547" count="54" type="stmt"/>
            <line num="549" count="54" type="stmt"/>
            <line num="550" count="54" type="stmt"/>
            <line falsecount="54" truecount="54" num="550" type="cond"/>
            <line num="552" count="54" type="stmt"/>
            <line falsecount="54" truecount="2592" num="552" type="cond"/>
            <line num="553" count="2592" type="stmt"/>
            <line falsecount="2592" truecount="63504" num="553" type="cond"/>
            <line num="554" count="63504" type="stmt"/>
            <line num="555" count="63504" type="stmt"/>
            <line falsecount="63504" truecount="9779616" num="555" type="cond"/>
            <line num="556" count="9779616" type="stmt"/>
            <line falsecount="2599866" truecount="7179750" num="556" type="cond"/>
            <line num="557" count="7179750" type="stmt"/>
            <line num="560" count="63504" type="stmt"/>
            <line falsecount="60912" truecount="2592" num="560" type="cond"/>
            <line num="561" count="2592" type="stmt"/>
            <line falsecount="0" truecount="2592" num="561" type="cond"/>
            <line num="563" count="2592" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="567" type="cond"/>
            <line num="568" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="576" count="63504" type="stmt"/>
            <line num="577" count="63504" type="stmt"/>
            <line num="582" count="54" type="stmt"/>
            <line falsecount="54" truecount="2592" num="582" type="cond"/>
            <line num="583" count="2592" type="stmt"/>
            <line num="584" count="2592" type="stmt"/>
            <line num="585" count="2592" type="stmt"/>
            <line falsecount="2592" truecount="399168" num="585" type="cond"/>
            <line num="586" count="399168" type="stmt"/>
            <line falsecount="82422" truecount="316746" num="586" type="cond"/>
            <line num="587" count="316746" type="stmt"/>
            <line num="590" count="2592" type="stmt"/>
            <line num="593" count="54" type="stmt"/>
            <line num="595" count="54" type="stmt"/>
            <line num="596" count="54" type="stmt"/>
            <line num="598" count="0" type="stmt"/>
            <line num="599" count="0" type="stmt"/>
            <line num="604" count="54" type="stmt"/>
            <line falsecount="54" truecount="2592" num="604" type="cond"/>
            <line num="605" count="2592" type="stmt"/>
            <line num="609" count="54" type="stmt"/>
            <line falsecount="54" truecount="0" num="609" type="cond"/>
            <line num="611" count="0" type="stmt"/>
            <line num="616" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="616" type="cond"/>
            <line num="617" count="0" type="stmt"/>
            <line num="619" count="0" type="stmt"/>
            <line num="625" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="625" type="cond"/>
            <line num="626" count="0" type="stmt"/>
            <line num="627" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMeanSquaredError(RandomVariable[]) : double" num="632" count="58" type="method"/>
            <line num="633" count="58" type="stmt"/>
            <line num="635" count="58" type="stmt"/>
            <line falsecount="58" truecount="8932" num="635" type="cond"/>
            <line num="636" count="8932" type="stmt"/>
            <line num="637" count="8932" type="stmt"/>
            <line num="640" count="58" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : StochasticLevenbergMarquardt" num="650" count="0" type="method"/>
            <line num="652" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedTargetValues(RandomVariable[],RandomVariable[],boolean) : StochasticLevenbergMarquardt" num="673" count="0" type="method"/>
            <line num="674" count="0" type="stmt"/>
            <line num="675" count="0" type="stmt"/>
            <line num="677" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="677" type="cond"/>
            <line num="678" count="0" type="stmt"/>
            <line num="681" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedTargetValues(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;,boolean) : StochasticLevenbergMarquardt" num="702" count="0" type="method"/>
            <line num="703" count="0" type="stmt"/>
            <line num="704" count="0" type="stmt"/>
            <line num="706" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="706" type="cond"/>
            <line num="707" count="0" type="stmt"/>
            <line num="710" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/StochasticLevenbergMarquardtAD.java" name="StochasticLevenbergMarquardtAD.java">
            <metrics coveredelements="54" coveredconditionals="23" complexity="20" loc="190" coveredmethods="4" methods="5" elements="60" classes="1" ncloc="81" statements="29" conditionals="26" coveredstatements="27"/>
            <class name="StochasticLevenbergMarquardtAD">
               <metrics coveredelements="54" coveredconditionals="23" complexity="20" coveredmethods="4" methods="5" elements="60" statements="29" conditionals="26" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="StochasticLevenbergMarquardtAD(RegularizationMethod,RandomVariable[],RandomVariable[],RandomVariable[],int,double,ExecutorService,boolean)" num="108" count="4" type="method"/>
            <line num="114" count="4" type="stmt"/>
            <line num="115" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticLevenbergMarquardtAD(RegularizationMethod,RandomVariable[],RandomVariable[],RandomVariable[],int,double,ExecutorService)" num="118" count="4" type="method"/>
            <line num="123" count="4" type="stmt"/>
            <line complexity="3" visibility="protected" signature="prepareAndSetValues(RandomVariable[],RandomVariable[]) : void" num="127" count="1786" type="method"/>
            <line num="132" count="1786" type="stmt"/>
            <line falsecount="1786" truecount="85728" num="132" type="cond"/>
            <line num="133" count="85728" type="stmt"/>
            <line falsecount="84768" truecount="960" num="133" type="cond"/>
            <line num="134" count="960" type="stmt"/>
            <line num="138" count="1786" type="stmt"/>
            <line complexity="14" visibility="protected" signature="prepareAndSetDerivatives(RandomVariable[],RandomVariable[],RandomVariable[][]) : void" num="141" count="54" type="method"/>
            <line num="146" count="54" type="stmt"/>
            <line num="147" count="54" type="stmt"/>
            <line falsecount="54" truecount="900" num="147" type="cond"/>
            <line num="148" count="900" type="stmt"/>
            <line num="151" count="54" type="stmt"/>
            <line falsecount="0" truecount="54" num="151" type="cond"/>
            <line num="152" count="54" type="stmt"/>
            <line num="153" count="54" type="stmt"/>
            <line falsecount="54" truecount="2772" num="153" type="cond"/>
            <line num="154" count="2772" type="stmt"/>
            <line num="157" count="54" type="stmt"/>
            <line falsecount="36" truecount="18" num="157" type="cond"/>
            <line num="158" count="18" type="stmt"/>
            <line num="162" count="54" type="stmt"/>
            <line falsecount="36" truecount="18" num="162" type="cond"/>
            <line num="163" count="18" type="stmt"/>
            <line num="164" count="18" type="stmt"/>
            <line falsecount="18" truecount="0" num="164" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Integer) : Map&lt;Long, RandomVariable&gt;" num="167" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="174" count="18" type="stmt"/>
            <line falsecount="18" truecount="2772" num="174" type="cond"/>
            <line num="175" count="2772" type="stmt"/>
            <line falsecount="180" truecount="2592" num="175" type="cond"/>
            <line num="176" count="2592" type="stmt"/>
            <line falsecount="2592" truecount="0" num="176" type="cond"/>
            <line num="177" count="2592" type="stmt"/>
            <line falsecount="2592" truecount="124416" num="177" type="cond"/>
            <line num="178" count="124416" type="stmt"/>
            <line num="179" count="124416" type="stmt"/>
            <line falsecount="73782" truecount="50634" num="179" type="cond"/>
            <line num="180" count="50634" type="stmt"/>
            <line num="187" count="36" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/StochasticOptimizer.java" name="StochasticOptimizer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="52" coveredmethods="0" methods="0" elements="0" classes="2" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="StochasticOptimizer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="StochasticOptimizer.ObjectiveFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/StochasticOptimizerFactory.java" name="StochasticOptimizerFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="29" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="StochasticOptimizerFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/StochasticOptimizerFactoryLevenbergMarquardt.java" name="StochasticOptimizerFactoryLevenbergMarquardt.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="52" coveredmethods="0" methods="5" elements="14" classes="1" ncloc="34" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="StochasticOptimizerFactoryLevenbergMarquardt">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="14" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StochasticOptimizerFactoryLevenbergMarquardt(StochasticLevenbergMarquardt.RegularizationMethod,int,double,int)" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticOptimizerFactoryLevenbergMarquardt(int,double,int)" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticOptimizerFactoryLevenbergMarquardt(int,int)" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/StochasticOptimizerFactoryLevenbergMarquardtAD.java" name="StochasticOptimizerFactoryLevenbergMarquardtAD.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="46" coveredmethods="0" methods="4" elements="11" classes="1" ncloc="29" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="StochasticOptimizerFactoryLevenbergMarquardtAD">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="11" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StochasticOptimizerFactoryLevenbergMarquardtAD(int,double,int)" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticOptimizerFactoryLevenbergMarquardtAD(int,int)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/StochasticOptimizerFactoryPathwiseLevenbergMarquardtAD.java" name="StochasticOptimizerFactoryPathwiseLevenbergMarquardtAD.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="55" coveredmethods="0" methods="6" elements="15" classes="1" ncloc="36" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="StochasticOptimizerFactoryPathwiseLevenbergMarquardtAD">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StochasticOptimizerFactoryPathwiseLevenbergMarquardtAD(int,RandomVariable,int)" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticOptimizerFactoryPathwiseLevenbergMarquardtAD(int,int)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/StochasticPathwiseLevenbergMarquardt.java" name="StochasticPathwiseLevenbergMarquardt.java">
            <metrics coveredelements="180" coveredconditionals="54" complexity="71" loc="725" coveredmethods="11" methods="27" elements="274" classes="1" ncloc="335" statements="171" conditionals="76" coveredstatements="115"/>
            <class name="StochasticPathwiseLevenbergMarquardt">
               <metrics coveredelements="180" coveredconditionals="54" complexity="71" coveredmethods="11" methods="27" elements="274" statements="171" conditionals="76" coveredstatements="115"/>
            </class>
            <line complexity="2" visibility="public" signature="main(String[]) : void" num="154" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="167" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="180" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="StochasticPathwiseLevenbergMarquardt(RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[],int,RandomVariable,ExecutorService)" num="208" count="14" type="method"/>
            <line num="209" count="14" type="stmt"/>
            <line num="210" count="14" type="stmt"/>
            <line num="211" count="14" type="stmt"/>
            <line num="212" count="14" type="stmt"/>
            <line num="213" count="14" type="stmt"/>
            <line num="214" count="14" type="stmt"/>
            <line num="215" count="14" type="stmt"/>
            <line falsecount="14" truecount="0" num="215" type="cond"/>
            <line num="217" count="14" type="stmt"/>
            <line falsecount="8" truecount="6" num="217" type="cond"/>
            <line num="218" count="6" type="stmt"/>
            <line num="219" count="6" type="stmt"/>
            <line falsecount="6" truecount="27" num="219" type="cond"/>
            <line num="220" count="27" type="stmt"/>
            <line num="224" count="14" type="stmt"/>
            <line num="225" count="14" type="stmt"/>
            <line complexity="2" visibility="public" signature="StochasticPathwiseLevenbergMarquardt(RandomVariable[],RandomVariable[],int,int)" num="236" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line complexity="1" visibility="public" signature="StochasticPathwiseLevenbergMarquardt(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;,int,ExecutorService)" num="248" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticPathwiseLevenbergMarquardt(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;,int,int)" num="260" count="0" type="method"/>
            <line num="261" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="numberListToDoubleArray(List&lt;RandomVariable&gt;) : RandomVariable[]" num="270" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="272" type="cond"/>
            <line num="273" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambda() : double[]" num="284" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLambda(double[]) : void" num="294" count="0" type="method"/>
            <line num="295" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambdaMultiplicator() : double" num="304" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setLambdaMultiplicator(double) : void" num="316" count="0" type="method"/>
            <line num="317" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="317" type="cond"/>
            <line num="318" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambdaDivisor() : double" num="329" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setLambdaDivisor(double) : void" num="341" count="0" type="method"/>
            <line num="342" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="342" type="cond"/>
            <line num="343" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestFitParameters() : RandomVariable[]" num="348" count="14" type="method"/>
            <line num="350" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootMeanSquaredError() : double" num="353" count="8" type="method"/>
            <line num="355" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="setErrorMeanSquaredCurrent(RandomVariable) : void" num="361" count="0" type="method"/>
            <line num="362" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIterations() : int" num="365" count="14" type="method"/>
            <line num="367" count="14" type="stmt"/>
            <line complexity="1" visibility="protected" signature="prepareAndSetValues(RandomVariable[],RandomVariable[]) : void" num="370" count="2212" type="method"/>
            <line num="371" count="2212" type="stmt"/>
            <line complexity="1" visibility="protected" signature="prepareAndSetDerivatives(RandomVariable[],RandomVariable[],RandomVariable[][]) : void" num="374" count="1356" type="method"/>
            <line num="375" count="1356" type="stmt"/>
            <line complexity="5" visibility="public" signature="setDerivatives(RandomVariable[],RandomVariable[][]) : void" num="396" count="344" type="method"/>
            <line num="400" count="344" type="stmt"/>
            <line num="401" count="344" type="stmt"/>
            <line num="402" count="344" type="stmt"/>
            <line falsecount="344" truecount="844" num="402" type="cond"/>
            <line num="403" count="844" type="stmt"/>
            <line num="404" count="844" type="stmt"/>
            <line num="406" count="844" type="stmt"/>
            <line num="407" count="844" type="stmt"/>
            <line complexity="4" visibility="public" signature="call() : RandomVariable[]" num="408" count="844" type="method"/>
            <line num="410" count="844" type="stmt"/>
            <line num="411" count="844" type="stmt"/>
            <line falsecount="276" truecount="568" num="411" type="cond"/>
            <line num="412" count="568" type="stmt"/>
            <line num="420" count="276" type="stmt"/>
            <line num="424" count="844" type="stmt"/>
            <line num="427" count="844" type="stmt"/>
            <line num="428" count="844" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="433" count="844" type="stmt"/>
            <line falsecount="844" truecount="1852" num="433" type="cond"/>
            <line num="434" count="1852" type="stmt"/>
            <line num="435" count="1852" type="stmt"/>
            <line num="437" count="844" type="stmt"/>
            <line num="440" count="844" type="stmt"/>
            <line falsecount="844" truecount="0" num="440" type="cond"/>
            <line num="441" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line num="445" count="844" type="stmt"/>
            <line num="446" count="844" type="stmt"/>
            <line num="447" count="844" type="stmt"/>
            <line num="451" count="344" type="stmt"/>
            <line falsecount="344" truecount="844" num="451" type="cond"/>
            <line num="452" count="844" type="stmt"/>
            <line num="453" count="844" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="done() : boolean" num="466" count="1876" type="method"/>
            <line num="468" count="1876" type="stmt"/>
            <line complexity="25" visibility="public" signature="run() : void" num="476" count="14" type="method"/>
            <line num="478" count="14" type="stmt"/>
            <line num="481" count="14" type="stmt"/>
            <line num="482" count="14" type="stmt"/>
            <line num="484" count="14" type="stmt"/>
            <line num="485" count="14" type="stmt"/>
            <line num="487" count="14" type="stmt"/>
            <line num="488" count="14" type="stmt"/>
            <line num="489" count="14" type="stmt"/>
            <line num="490" count="14" type="stmt"/>
            <line num="492" count="14" type="stmt"/>
            <line num="494" count="14" type="stmt"/>
            <line num="496" count="1876" type="stmt"/>
            <line num="499" count="1876" type="stmt"/>
            <line num="502" count="1876" type="stmt"/>
            <line num="508" count="1876" type="stmt"/>
            <line num="510" count="1876" type="stmt"/>
            <line falsecount="1876" truecount="3923" num="510" type="cond"/>
            <line num="511" count="3923" type="stmt"/>
            <line num="513" count="1876" type="stmt"/>
            <line falsecount="1876" truecount="2113" num="513" type="cond"/>
            <line num="514" count="2113" type="stmt"/>
            <line num="518" count="1876" type="stmt"/>
            <line num="519" count="1876" type="stmt"/>
            <line num="522" count="1876" type="stmt"/>
            <line falsecount="1862" truecount="14" num="522" type="cond"/>
            <line num="523" count="14" type="stmt"/>
            <line num="528" count="1862" type="stmt"/>
            <line num="529" count="1862" type="stmt"/>
            <line falsecount="1848" truecount="14" num="529" type="cond"/>
            <line num="530" count="14" type="stmt"/>
            <line num="531" count="14" type="stmt"/>
            <line num="533" count="1862" type="stmt"/>
            <line falsecount="1848" truecount="14" num="533" type="cond"/>
            <line num="534" count="14" type="stmt"/>
            <line num="535" count="14" type="stmt"/>
            <line num="541" count="1862" type="stmt"/>
            <line falsecount="1862" truecount="1862" num="541" type="cond"/>
            <line num="542" count="1862" type="stmt"/>
            <line num="543" count="1862" type="stmt"/>
            <line falsecount="800" truecount="1062" num="543" type="cond"/>
            <line num="550" count="1862" type="stmt"/>
            <line num="555" count="1862" type="stmt"/>
            <line num="556" count="1862" type="stmt"/>
            <line falsecount="1862" truecount="1862" num="556" type="cond"/>
            <line num="558" count="1862" type="stmt"/>
            <line num="559" count="1862" type="stmt"/>
            <line num="561" count="1862" type="stmt"/>
            <line num="562" count="1862" type="stmt"/>
            <line falsecount="1862" truecount="1886" num="562" type="cond"/>
            <line num="564" count="1886" type="stmt"/>
            <line falsecount="1886" truecount="3928" num="564" type="cond"/>
            <line num="565" count="3928" type="stmt"/>
            <line falsecount="3928" truecount="6258" num="565" type="cond"/>
            <line num="566" count="6258" type="stmt"/>
            <line num="567" count="6258" type="stmt"/>
            <line falsecount="6258" truecount="9138" num="567" type="cond"/>
            <line num="568" count="9138" type="stmt"/>
            <line num="570" count="6258" type="stmt"/>
            <line falsecount="2330" truecount="3928" num="570" type="cond"/>
            <line num="571" count="3928" type="stmt"/>
            <line falsecount="3928" truecount="0" num="571" type="cond"/>
            <line num="572" count="0" type="stmt"/>
            <line num="574" count="3928" type="stmt"/>
            <line num="578" count="6258" type="stmt"/>
            <line num="579" count="6258" type="stmt"/>
            <line num="584" count="1886" type="stmt"/>
            <line falsecount="1886" truecount="3928" num="584" type="cond"/>
            <line num="585" count="3928" type="stmt"/>
            <line num="586" count="3928" type="stmt"/>
            <line falsecount="3928" truecount="4936" num="586" type="cond"/>
            <line num="587" count="4936" type="stmt"/>
            <line num="589" count="3928" type="stmt"/>
            <line num="592" count="1886" type="stmt"/>
            <line num="594" count="1886" type="stmt"/>
            <line num="595" count="1862" type="stmt"/>
            <line falsecount="1862" truecount="3880" num="595" type="cond"/>
            <line num="596" count="3880" type="stmt"/>
            <line num="598" count="1862" type="stmt"/>
            <line num="600" count="24" type="stmt"/>
            <line num="601" count="24" type="stmt"/>
            <line num="607" count="1862" type="stmt"/>
            <line falsecount="1862" truecount="3880" num="607" type="cond"/>
            <line num="608" count="3880" type="stmt"/>
            <line falsecount="0" truecount="3880" num="608" type="cond"/>
            <line num="612" count="1862" type="stmt"/>
            <line falsecount="1862" truecount="0" num="612" type="cond"/>
            <line num="614" count="0" type="stmt"/>
            <line num="617" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="617" type="cond"/>
            <line num="618" count="0" type="stmt"/>
            <line num="620" count="0" type="stmt"/>
            <line num="626" count="14" type="stmt"/>
            <line falsecount="14" truecount="0" num="626" type="cond"/>
            <line num="627" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMeanSquaredError(RandomVariable[]) : RandomVariable" num="633" count="1876" type="method"/>
            <line num="635" count="1876" type="stmt"/>
            <line num="637" count="1876" type="stmt"/>
            <line falsecount="1876" truecount="2113" num="637" type="cond"/>
            <line num="638" count="2113" type="stmt"/>
            <line num="639" count="2113" type="stmt"/>
            <line num="642" count="1876" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : StochasticPathwiseLevenbergMarquardt" num="652" count="0" type="method"/>
            <line num="663" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedTargetValues(RandomVariable[],RandomVariable[],boolean) : StochasticPathwiseLevenbergMarquardt" num="684" count="0" type="method"/>
            <line num="685" count="0" type="stmt"/>
            <line num="686" count="0" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line num="689" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="689" type="cond"/>
            <line num="690" count="0" type="stmt"/>
            <line num="693" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedTargetValues(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;,boolean) : StochasticPathwiseLevenbergMarquardt" num="714" count="0" type="method"/>
            <line num="715" count="0" type="stmt"/>
            <line num="716" count="0" type="stmt"/>
            <line num="717" count="0" type="stmt"/>
            <line num="719" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="719" type="cond"/>
            <line num="720" count="0" type="stmt"/>
            <line num="723" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/StochasticPathwiseLevenbergMarquardtAD.java" name="StochasticPathwiseLevenbergMarquardtAD.java">
            <metrics coveredelements="30" coveredconditionals="12" complexity="15" loc="166" coveredmethods="3" methods="6" elements="39" classes="1" ncloc="54" statements="19" conditionals="14" coveredstatements="15"/>
            <class name="StochasticPathwiseLevenbergMarquardtAD">
               <metrics coveredelements="30" coveredconditionals="12" complexity="15" coveredmethods="3" methods="6" elements="39" statements="19" conditionals="14" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="StochasticPathwiseLevenbergMarquardtAD(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;,int,ExecutorService)" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticPathwiseLevenbergMarquardtAD(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;,int,int)" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticPathwiseLevenbergMarquardtAD(RandomVariable[],RandomVariable[],int,int)" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticPathwiseLevenbergMarquardtAD(RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[],int,RandomVariable,ExecutorService)" num="118" count="2" type="method"/>
            <line num="122" count="2" type="stmt"/>
            <line complexity="3" visibility="protected" signature="prepareAndSetValues(RandomVariable[],RandomVariable[]) : void" num="126" count="508" type="method"/>
            <line num="131" count="508" type="stmt"/>
            <line falsecount="508" truecount="1016" num="131" type="cond"/>
            <line num="132" count="1016" type="stmt"/>
            <line falsecount="0" truecount="1016" num="132" type="cond"/>
            <line num="133" count="1016" type="stmt"/>
            <line num="137" count="508" type="stmt"/>
            <line complexity="8" visibility="protected" signature="prepareAndSetDerivatives(RandomVariable[],RandomVariable[],RandomVariable[][]) : void" num="140" count="506" type="method"/>
            <line num="145" count="506" type="stmt"/>
            <line num="146" count="506" type="stmt"/>
            <line falsecount="506" truecount="1012" num="146" type="cond"/>
            <line num="147" count="1012" type="stmt"/>
            <line num="149" count="506" type="stmt"/>
            <line falsecount="506" truecount="506" num="149" type="cond"/>
            <line num="150" count="506" type="stmt"/>
            <line num="154" count="506" type="stmt"/>
            <line falsecount="0" truecount="506" num="154" type="cond"/>
            <line num="155" count="506" type="stmt"/>
            <line falsecount="506" truecount="506" num="155" type="cond"/>
            <line num="156" count="506" type="stmt"/>
            <line num="157" count="506" type="stmt"/>
            <line falsecount="506" truecount="1012" num="157" type="cond"/>
            <line num="158" count="1012" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/StochasticPathwiseOptimizerFactoryLevenbergMarquardt.java" name="StochasticPathwiseOptimizerFactoryLevenbergMarquardt.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="6" loc="56" coveredmethods="4" methods="6" elements="15" classes="1" ncloc="37" statements="9" conditionals="0" coveredstatements="7"/>
            <class name="StochasticPathwiseOptimizerFactoryLevenbergMarquardt">
               <metrics coveredelements="11" coveredconditionals="0" complexity="6" coveredmethods="4" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="StochasticPathwiseOptimizerFactoryLevenbergMarquardt(int,double,int)" num="22" count="6" type="method"/>
            <line num="23" count="6" type="stmt"/>
            <line num="24" count="6" type="stmt"/>
            <line num="25" count="6" type="stmt"/>
            <line num="26" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticPathwiseOptimizerFactoryLevenbergMarquardt(int,int)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="38" count="6" type="method"/>
            <line num="40" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="43" count="6" type="method"/>
            <line num="45" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="50" count="342" type="method"/>
            <line num="52" count="342" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.timeseries.models.parametric">
         <metrics coveredelements="0" complexity="177" loc="2263" methods="106" classes="13" statements="927" coveredconditionals="0" coveredmethods="0" elements="1145" ncloc="1503" files="7" conditionals="112" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/models/parametric/ARMAGARCH.java" name="ARMAGARCH.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="37" loc="409" coveredmethods="0" methods="19" elements="214" classes="2" ncloc="281" statements="171" conditionals="24" coveredstatements="0"/>
            <class name="ARMAGARCH">
               <metrics coveredelements="0" coveredconditionals="0" complexity="36" coveredmethods="0" methods="18" elements="200" statements="158" conditionals="24" coveredstatements="0"/>
            </class>
            <class name="ARMAGARCH.GARCHMaxLikelihoodFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="14" statements="13" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ARMAGARCH(TimeSeries)" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getLogLikelihoodForParameters(double[]) : double" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getLastResidualForParameters(double[]) : double" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getSzenarios(double[]) : double[]" num="141" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="180" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getQuantilPredictionsForParameters(double[],double[]) : double[]" num="187" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestParameters() : Map&lt;String, Object&gt;" num="221" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getBestParameters(Map&lt;String, Object&gt;) : Map&lt;String, Object&gt;" num="229" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="value(double[]) : double" num="237" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="266" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="281" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="291" type="cond"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeObjectiveValue(double[]) : double" num="303" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGoalType() : org.apache.commons.math3.optim.nonlinear.scalar.GoalType" num="311" count="0" type="method"/>
            <line num="314" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStartPoint() : double[]" num="320" count="0" type="method"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowerBound() : double[]" num="328" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUpperBound() : double[]" num="336" count="0" type="method"/>
            <line num="338" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="restrictToOpenSet(double,double,double) : double" num="384" count="0" type="method"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneCalibrated(TimeSeries) : TimeSeriesModelParametric" num="390" count="0" type="method"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(int,int) : HistoricalSimulationModel" num="395" count="0" type="method"/>
            <line num="397" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : double[]" num="400" count="0" type="method"/>
            <line num="402" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterNames() : String[]" num="405" count="0" type="method"/>
            <line num="407" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/models/parametric/DisplacedLognormal.java" name="DisplacedLognormal.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="25" loc="330" coveredmethods="0" methods="13" elements="180" classes="2" ncloc="215" statements="145" conditionals="22" coveredstatements="0"/>
            <class name="DisplacedLognormal">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="12" elements="163" statements="129" conditionals="22" coveredstatements="0"/>
            </class>
            <class name="DisplacedLognormal.GARCHMaxLikelihoodFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="17" statements="16" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="DisplacedLognormal(double[])" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="DisplacedLognormal(double[],double)" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="DisplacedLognormal(double[],int,int)" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="DisplacedLognormal(double[],double,int,int)" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(int,int) : HistoricalSimulationModel" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(double,int,int) : HistoricalSimulationModel" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getLogLikelihoodForParameters(double,double,double,double) : double" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLastResidualForParameters(double,double,double,double) : double" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getQuantilPredictionsForParameters(double,double,double,double,double[]) : double[]" num="145" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestParameters() : Map&lt;String, Object&gt;" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getBestParameters(Map&lt;String, Object&gt;) : Map&lt;String, Object&gt;" num="202" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="value(double[]) : double" num="210" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="250" type="cond"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="restrictToOpenSet(double,double,double) : double" num="325" count="0" type="method"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/models/parametric/DisplacedLognormalARMAGARCH.java" name="DisplacedLognormalARMAGARCH.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="27" loc="370" coveredmethods="0" methods="20" elements="181" classes="2" ncloc="254" statements="151" conditionals="10" coveredstatements="0"/>
            <class name="DisplacedLognormalARMAGARCH">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="19" elements="167" statements="138" conditionals="10" coveredstatements="0"/>
            </class>
            <class name="DisplacedLognormalARMAGARCH.GARCHMaxLikelihoodFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="14" statements="13" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DisplacedLognormalARMAGARCH(TimeSeries)" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DisplacedLognormalARMAGARCH(TimeSeries,double)" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DisplacedLognormalARMAGARCH(TimeSeries,double,double)" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLogLikelihoodForParameters(double[]) : double" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLastResidualForParameters(double[]) : double" num="131" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getSzenarios(double[]) : double[]" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestParameters() : Map&lt;String, Object&gt;" num="189" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getBestParameters(Map&lt;String, Object&gt;) : Map&lt;String, Object&gt;" num="197" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="value(double[]) : double" num="205" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="249" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="259" type="cond"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeObjectiveValue(double[]) : double" num="271" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGoalType() : org.apache.commons.math3.optim.nonlinear.scalar.GoalType" num="279" count="0" type="method"/>
            <line num="282" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStartPoint() : double[]" num="288" count="0" type="method"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowerBound() : double[]" num="296" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUpperBound() : double[]" num="304" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="restrictToOpenSet(double,double,double) : double" num="345" count="0" type="method"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneCalibrated(TimeSeries) : TimeSeriesModelParametric" num="351" count="0" type="method"/>
            <line num="353" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(int,int) : HistoricalSimulationModel" num="356" count="0" type="method"/>
            <line num="358" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : double[]" num="361" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterNames() : String[]" num="366" count="0" type="method"/>
            <line num="368" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/models/parametric/DisplacedLognormalGARCH.java" name="DisplacedLognormalGARCH.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="27" loc="347" coveredmethods="0" methods="15" elements="186" classes="2" ncloc="234" statements="151" conditionals="20" coveredstatements="0"/>
            <class name="DisplacedLognormalGARCH">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="14" elements="169" statements="135" conditionals="20" coveredstatements="0"/>
            </class>
            <class name="DisplacedLognormalGARCH.GARCHMaxLikelihoodFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="17" statements="16" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="DisplacedLognormalGARCH(double[])" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="DisplacedLognormalGARCH(double[],double)" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="DisplacedLognormalGARCH(double[],int,int)" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="DisplacedLognormalGARCH(double[],double,int,int)" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(int,int) : HistoricalSimulationModel" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(double,int,int) : HistoricalSimulationModel" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLogLikelihoodForParameters(double,double,double,double) : double" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLastResidualForParameters(double,double,double,double) : double" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getSzenarios(double,double,double,double) : double[]" num="142" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getQuantilPredictionsForParameters(double,double,double,double,double[]) : double[]" num="162" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestParameters() : Map&lt;String, Object&gt;" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getBestParameters(Map&lt;String, Object&gt;) : Map&lt;String, Object&gt;" num="203" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="value(double[]) : double" num="211" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="251" type="cond"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="279" count="0" type="method"/>
            <line num="281" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="289" type="cond"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="restrictToOpenSet(double,double,double) : double" num="342" count="0" type="method"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/models/parametric/DisplacedLognormalGJRGARCH.java" name="DisplacedLognormalGJRGARCH.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="30" loc="371" coveredmethods="0" methods="20" elements="187" classes="2" ncloc="254" statements="151" conditionals="16" coveredstatements="0"/>
            <class name="DisplacedLognormalGJRGARCH">
               <metrics coveredelements="0" coveredconditionals="0" complexity="29" coveredmethods="0" methods="19" elements="173" statements="138" conditionals="16" coveredstatements="0"/>
            </class>
            <class name="DisplacedLognormalGJRGARCH.GARCHMaxLikelihoodFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="14" statements="13" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DisplacedLognormalGJRGARCH(TimeSeries)" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DisplacedLognormalGJRGARCH(TimeSeries,double)" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DisplacedLognormalGJRGARCH(TimeSeries,double,double)" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getLogLikelihoodForParameters(double[]) : double" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getLastResidualForParameters(double[]) : double" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getSzenarios(double[]) : double[]" num="158" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestParameters() : Map&lt;String, Object&gt;" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getBestParameters(Map&lt;String, Object&gt;) : Map&lt;String, Object&gt;" num="198" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="value(double[]) : double" num="206" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="235" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="250" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeObjectiveValue(double[]) : double" num="272" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGoalType() : org.apache.commons.math3.optim.nonlinear.scalar.GoalType" num="280" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStartPoint() : double[]" num="289" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowerBound() : double[]" num="297" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUpperBound() : double[]" num="305" count="0" type="method"/>
            <line num="307" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="restrictToOpenSet(double,double,double) : double" num="346" count="0" type="method"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneCalibrated(TimeSeries) : TimeSeriesModelParametric" num="352" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(int,int) : HistoricalSimulationModel" num="357" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : double[]" num="362" count="0" type="method"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterNames() : String[]" num="367" count="0" type="method"/>
            <line num="369" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/models/parametric/GARCH.java" name="GARCH.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="304" coveredmethods="0" methods="12" elements="139" classes="2" ncloc="186" statements="115" conditionals="12" coveredstatements="0"/>
            <class name="GARCH">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="11" elements="126" statements="103" conditionals="12" coveredstatements="0"/>
            </class>
            <class name="GARCH.GARCHMaxLikelihoodFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="13" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="GARCH(double[])" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="GARCH(double[],int,int)" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(int,int) : GARCH" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLogLikelihoodForParameters(double,double,double) : double" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLastResidualForParameters(double,double,double) : double" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getSzenarios(double,double,double) : double[]" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getQuantilPredictionsForParameters(double,double,double,double[]) : double[]" num="137" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestParameters() : Map&lt;String, Object&gt;" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getBestParameters(Map&lt;String, Object&gt;) : Map&lt;String, Object&gt;" num="173" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="value(double[]) : double" num="181" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="239" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="restrictToOpenSet(double,double,double) : double" num="299" count="0" type="method"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/models/parametric/SimpleHistroricalSimulation.java" name="SimpleHistroricalSimulation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="132" coveredmethods="0" methods="7" elements="58" classes="1" ncloc="79" statements="43" conditionals="8" coveredstatements="0"/>
            <class name="SimpleHistroricalSimulation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="7" elements="58" statements="43" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SimpleHistroricalSimulation(double[])" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleHistroricalSimulation(double[],int,int)" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(int,int) : HistoricalSimulationModel" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getSzenarios(int) : double[]" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getQuantilPredictions(int,double[]) : double[]" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestParameters() : Map&lt;String, Object&gt;" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestParameters(Map&lt;String, Object&gt;) : Map&lt;String, Object&gt;" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.exception">
         <metrics coveredelements="0" complexity="4" loc="56" methods="4" classes="1" statements="3" coveredconditionals="0" coveredmethods="0" elements="7" ncloc="15" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/exception/CalculationException.java" name="CalculationException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="56" coveredmethods="0" methods="4" elements="7" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="CalculationException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="7" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CalculationException()" num="22" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="CalculationException(String)" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalculationException(Throwable)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalculationException(String,Throwable)" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.time.daycount">
         <metrics coveredelements="125" complexity="122" loc="1363" methods="49" classes="17" statements="202" coveredconditionals="23" coveredmethods="21" elements="359" ncloc="524" files="17" conditionals="108" coveredstatements="81"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention.java" name="DayCountConvention.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="45" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DayCountConvention">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConventionFactory.java" name="DayCountConventionFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="98" coveredmethods="0" methods="4" elements="37" classes="1" ncloc="40" statements="19" conditionals="14" coveredstatements="0"/>
            <class name="DayCountConventionFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="4" elements="37" statements="19" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="DayCountConventionFactory()" num="25" count="0" type="method"/>
            <line complexity="8" visibility="public" signature="getDayCountConvention(String) : DayCountConvention" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycount(LocalDate,LocalDate,String) : double" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate,String) : double" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_30E_360.java" name="DayCountConvention_30E_360.java">
            <metrics coveredelements="19" coveredconditionals="2" complexity="7" loc="92" coveredmethods="4" methods="4" elements="23" classes="1" ncloc="34" statements="15" conditionals="4" coveredstatements="13"/>
            <class name="DayCountConvention_30E_360">
               <metrics coveredelements="19" coveredconditionals="2" complexity="7" coveredmethods="4" methods="4" elements="23" statements="15" conditionals="4" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_30E_360(boolean)" num="48" count="752" type="method"/>
            <line num="49" count="752" type="stmt"/>
            <line complexity="1" visibility="public" signature="DayCountConvention_30E_360()" num="55" count="752" type="method"/>
            <line num="56" count="752" type="stmt"/>
            <line complexity="4" visibility="public" signature="getDaycount(LocalDate,LocalDate) : double" num="62" count="11654" type="method"/>
            <line num="64" count="11654" type="stmt"/>
            <line falsecount="11654" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="68" count="11654" type="stmt"/>
            <line num="69" count="11654" type="stmt"/>
            <line num="70" count="11654" type="stmt"/>
            <line num="72" count="11654" type="stmt"/>
            <line num="73" count="11654" type="stmt"/>
            <line num="74" count="11654" type="stmt"/>
            <line num="76" count="11654" type="stmt"/>
            <line num="78" count="11654" type="stmt"/>
            <line falsecount="11654" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="11654" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="88" count="11654" type="method"/>
            <line num="90" count="11654" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_30E_360_ISDA.java" name="DayCountConvention_30E_360_ISDA.java">
            <metrics coveredelements="24" coveredconditionals="5" complexity="10" loc="90" coveredmethods="3" methods="4" elements="28" classes="1" ncloc="39" statements="18" conditionals="6" coveredstatements="16"/>
            <class name="DayCountConvention_30E_360_ISDA">
               <metrics coveredelements="24" coveredconditionals="5" complexity="10" coveredmethods="3" methods="4" elements="28" statements="18" conditionals="6" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_30E_360_ISDA(boolean)" num="39" count="2" type="method"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="DayCountConvention_30E_360_ISDA()" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getDaycount(LocalDate,LocalDate) : double" num="53" count="44" type="method"/>
            <line num="55" count="44" type="stmt"/>
            <line falsecount="44" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="59" count="44" type="stmt"/>
            <line num="60" count="44" type="stmt"/>
            <line num="61" count="44" type="stmt"/>
            <line num="63" count="44" type="stmt"/>
            <line num="64" count="44" type="stmt"/>
            <line num="65" count="44" type="stmt"/>
            <line num="69" count="44" type="stmt"/>
            <line num="70" count="44" type="stmt"/>
            <line num="73" count="44" type="stmt"/>
            <line falsecount="18" truecount="26" num="73" type="cond"/>
            <line num="74" count="26" type="stmt"/>
            <line num="76" count="44" type="stmt"/>
            <line falsecount="21" truecount="23" num="76" type="cond"/>
            <line num="77" count="23" type="stmt"/>
            <line num="80" count="44" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="86" count="44" type="method"/>
            <line num="88" count="44" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_30U_360.java" name="DayCountConvention_30U_360.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="106" coveredmethods="0" methods="4" elements="30" classes="1" ncloc="50" statements="18" conditionals="8" coveredstatements="0"/>
            <class name="DayCountConvention_30U_360">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="4" elements="30" statements="18" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_30U_360()" num="44" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="DayCountConvention_30U_360(boolean)" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="12" visibility="public" signature="getDaycount(LocalDate,LocalDate) : double" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT.java" name="DayCountConvention_ACT.java">
            <metrics coveredelements="7" coveredconditionals="1" complexity="4" loc="57" coveredmethods="3" methods="3" elements="9" classes="1" ncloc="16" statements="4" conditionals="2" coveredstatements="3"/>
            <class name="DayCountConvention_ACT">
               <metrics coveredelements="7" coveredconditionals="1" complexity="4" coveredmethods="3" methods="3" elements="9" statements="4" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT()" num="24" count="10133878" type="method"/>
            <line complexity="2" visibility="public" signature="getDaycount(LocalDate,LocalDate) : double" num="30" count="1806932388" type="method"/>
            <line num="32" count="1820335226" type="stmt"/>
            <line falsecount="1820610532" truecount="0" num="32" type="cond"/>
            <line num="33" count="0" type="stmt"/>
            <line num="36" count="1831933867" type="stmt"/>
            <line complexity="1" visibility="public" signature="daysBetween(LocalDate,LocalDate) : double" num="54" count="1809527564" type="method"/>
            <line num="55" count="1819135660" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT_360.java" name="DayCountConvention_ACT_360.java">
            <metrics coveredelements="6" coveredconditionals="1" complexity="3" loc="57" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="16" statements="4" conditionals="2" coveredstatements="3"/>
            <class name="DayCountConvention_ACT_360">
               <metrics coveredelements="6" coveredconditionals="1" complexity="3" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_360()" num="40" count="10132181" type="method"/>
            <line complexity="2" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="47" count="849688134" type="method"/>
            <line num="49" count="850864738" type="stmt"/>
            <line falsecount="850666111" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="850669221" type="stmt"/>
            <line num="55" count="848645019" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT_365.java" name="DayCountConvention_ACT_365.java">
            <metrics coveredelements="8" coveredconditionals="2" complexity="3" loc="51" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="16" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="DayCountConvention_ACT_365">
               <metrics coveredelements="8" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_365()" num="38" count="81" type="method"/>
            <line complexity="2" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="41" count="1044305881" type="method"/>
            <line num="43" count="1044191658" type="stmt"/>
            <line falsecount="1000354684" truecount="40986549" num="43" type="cond"/>
            <line num="44" count="40988838" type="stmt"/>
            <line num="47" count="1000945675" type="stmt"/>
            <line num="49" count="995951317" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT_365A.java" name="DayCountConvention_ACT_365A.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="81" coveredmethods="0" methods="2" elements="32" classes="1" ncloc="36" statements="16" conditionals="14" coveredstatements="0"/>
            <class name="DayCountConvention_ACT_365A">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="2" elements="32" statements="16" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_365A()" num="39" count="0" type="method"/>
            <line complexity="10" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT_365L.java" name="DayCountConvention_ACT_365L.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="55" coveredmethods="0" methods="2" elements="13" classes="1" ncloc="20" statements="7" conditionals="4" coveredstatements="0"/>
            <class name="DayCountConvention_ACT_365L">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="2" elements="13" statements="7" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_365L()" num="35" count="0" type="method"/>
            <line complexity="3" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT_ACT_AFB.java" name="DayCountConvention_ACT_ACT_AFB.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="112" coveredmethods="0" methods="3" elements="41" classes="1" ncloc="45" statements="22" conditionals="16" coveredstatements="0"/>
            <class name="DayCountConvention_ACT_ACT_AFB">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="3" elements="41" statements="22" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_ACT_AFB()" num="56" count="0" type="method"/>
            <line complexity="11" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT_ACT_ICMA.java" name="DayCountConvention_ACT_ACT_ICMA.java">
            <metrics coveredelements="19" coveredconditionals="3" complexity="5" loc="103" coveredmethods="2" methods="2" elements="24" classes="1" ncloc="41" statements="16" conditionals="6" coveredstatements="14"/>
            <class name="DayCountConvention_ACT_ACT_ICMA">
               <metrics coveredelements="19" coveredconditionals="3" complexity="5" coveredmethods="2" methods="2" elements="24" statements="16" conditionals="6" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_ACT_ICMA(ArrayList&lt;Period&gt;,int)" num="64" count="2" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="73" count="3" type="method"/>
            <line num="75" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="3" type="stmt"/>
            <line num="80" count="3" type="stmt"/>
            <line num="82" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="82" type="cond"/>
            <line num="83" count="3" type="stmt"/>
            <line num="85" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="85" type="cond"/>
            <line num="86" count="3" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="3" type="stmt"/>
            <line num="92" count="3" type="stmt"/>
            <line num="94" count="3" type="stmt"/>
            <line num="101" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT_ACT_ISDA.java" name="DayCountConvention_ACT_ACT_ISDA.java">
            <metrics coveredelements="18" coveredconditionals="3" complexity="7" loc="113" coveredmethods="3" methods="4" elements="26" classes="1" ncloc="38" statements="16" conditionals="6" coveredstatements="12"/>
            <class name="DayCountConvention_ACT_ACT_ISDA">
               <metrics coveredelements="18" coveredconditionals="3" complexity="7" coveredmethods="3" methods="4" elements="26" statements="16" conditionals="6" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_ACT_ISDA(boolean)" num="53" count="3" type="method"/>
            <line num="54" count="3" type="stmt"/>
            <line num="55" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_ACT_ISDA()" num="61" count="3" type="method"/>
            <line num="62" count="3" type="stmt"/>
            <line complexity="4" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="68" count="10" type="method"/>
            <line num="70" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="80" count="10" type="stmt"/>
            <line num="85" count="10" type="stmt"/>
            <line num="87" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="10" type="stmt"/>
            <line num="96" count="10" type="stmt"/>
            <line num="97" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="102" count="10" type="stmt"/>
            <line num="104" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT_ACT_YEARFRAC.java" name="DayCountConvention_ACT_ACT_YEARFRAC.java">
            <metrics coveredelements="24" coveredconditionals="6" complexity="12" loc="133" coveredmethods="2" methods="3" elements="37" classes="1" ncloc="53" statements="22" conditionals="12" coveredstatements="16"/>
            <class name="DayCountConvention_ACT_ACT_YEARFRAC">
               <metrics coveredelements="24" coveredconditionals="6" complexity="12" coveredmethods="2" methods="3" elements="37" statements="22" conditionals="12" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_ACT_YEARFRAC()" num="51" count="1" type="method"/>
            <line complexity="10" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="57" count="3" type="method"/>
            <line num="59" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="67" count="3" type="stmt"/>
            <line num="69" count="3" type="stmt"/>
            <line num="70" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="70" type="cond"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="89" type="cond"/>
            <line num="91" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="98" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="123" count="3" type="stmt"/>
            <line num="125" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_NL_365.java" name="DayCountConvention_NL_365.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="75" coveredmethods="0" methods="3" elements="30" classes="1" ncloc="37" statements="15" conditionals="12" coveredstatements="0"/>
            <class name="DayCountConvention_NL_365">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="3" elements="30" statements="15" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_NL_365()" num="34" count="0" type="method"/>
            <line complexity="7" visibility="public" signature="getDaycount(LocalDate,LocalDate) : double" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_NONE.java" name="DayCountConvention_NONE.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="42" coveredmethods="0" methods="3" elements="5" classes="1" ncloc="16" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="DayCountConvention_NONE">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_NONE()" num="30" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getDaycount(LocalDate,LocalDate) : double" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_UNKNOWN.java" name="DayCountConvention_UNKNOWN.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="53" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="21" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="DayCountConvention_UNKNOWN">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_UNKNOWN()" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DayCountConvention_UNKNOWN(String)" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycount(LocalDate,LocalDate) : double" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.information">
         <metrics coveredelements="21" complexity="10" loc="64" methods="5" classes="1" statements="16" coveredconditionals="2" coveredmethods="4" elements="25" ncloc="34" files="1" conditionals="4" coveredstatements="15"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/information/Library.java" name="Library.java">
            <metrics coveredelements="21" coveredconditionals="2" complexity="10" loc="64" coveredmethods="4" methods="5" elements="25" classes="1" ncloc="34" statements="16" conditionals="4" coveredstatements="15"/>
            <class name="Library">
               <metrics coveredelements="21" coveredconditionals="2" complexity="10" coveredmethods="4" methods="5" elements="25" statements="16" conditionals="4" coveredstatements="15"/>
            </class>
            <line complexity="4" visibility="package" signature="&lt;clinit&gt;, line 21()" num="21" count="2" type="method"/>
            <line num="22" count="2" type="stmt"/>
            <line num="23" count="2" type="stmt"/>
            <line num="23" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="Library()" num="30" count="0" type="method"/>
            <line complexity="1" visibility="private" signature="getProperites() : Properties" num="32" count="4" type="method"/>
            <line num="33" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="getVersionString() : String" num="41" count="2" type="method"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="44" type="cond"/>
            <line num="45" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getBuildString() : String" num="56" count="2" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="59" type="cond"/>
            <line num="60" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.automaticdifferentiation.forward">
         <metrics coveredelements="325" complexity="220" loc="1110" methods="96" classes="4" statements="338" coveredconditionals="81" coveredmethods="61" elements="576" ncloc="845" files="2" conditionals="142" coveredstatements="183"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/forward/RandomVariableDifferentiableAD.java" name="RandomVariableDifferentiableAD.java">
            <metrics coveredelements="315" coveredconditionals="81" complexity="215" loc="1060" coveredmethods="56" methods="91" elements="566" classes="3" ncloc="819" statements="333" conditionals="142" coveredstatements="178"/>
            <class name="RandomVariableDifferentiableAD">
               <metrics coveredelements="149" coveredconditionals="17" complexity="104" coveredmethods="50" methods="83" elements="249" statements="132" conditionals="34" coveredstatements="82"/>
            </class>
            <class name="RandomVariableDifferentiableAD.OperatorType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RandomVariableDifferentiableAD.OperatorTreeNode">
               <metrics coveredelements="166" coveredconditionals="64" complexity="111" coveredmethods="6" methods="8" elements="317" statements="201" conditionals="108" coveredstatements="96"/>
            </class>
            <line complexity="3" visibility="package" signature="OperatorTreeNode(OperatorType,List&lt;RandomVariable&gt;,Object)" num="76" count="954934" type="method"/>
            <line num="77" count="954931" type="stmt"/>
            <line falsecount="49159" truecount="905775" num="78" type="cond"/>
            <line complexity="3" visibility="public" signature="apply(RandomVariable) : OperatorTreeNode" num="79" count="2097363" type="method"/>
            <line num="81" count="2097388" type="stmt"/>
            <line falsecount="697877" truecount="1399529" num="81" type="cond"/>
            <line falsecount="49159" truecount="905773" num="84" type="cond"/>
            <line complexity="3" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="85" count="2097370" type="method"/>
            <line num="87" count="2097386" type="stmt"/>
            <line falsecount="697871" truecount="1399522" num="87" type="cond"/>
            <line complexity="28" visibility="package" signature="OperatorTreeNode(OperatorType,List&lt;OperatorTreeNode&gt;,List&lt;RandomVariable&gt;,Object)" num="94" count="954929" type="method"/>
            <line num="95" count="954931" type="stmt"/>
            <line num="96" count="954932" type="stmt"/>
            <line num="97" count="954932" type="stmt"/>
            <line num="98" count="954929" type="stmt"/>
            <line num="99" count="954929" type="stmt"/>
            <line num="101" count="954930" type="stmt"/>
            <line falsecount="713469" truecount="241462" num="101" type="cond"/>
            <line num="103" count="241462" type="stmt"/>
            <line num="105" count="713464" type="stmt"/>
            <line falsecount="713463" truecount="4" num="105" type="cond"/>
            <line num="107" count="4" type="stmt"/>
            <line num="109" count="713461" type="stmt"/>
            <line falsecount="475939" truecount="237517" num="109" type="cond"/>
            <line num="111" count="237517" type="stmt"/>
            <line falsecount="237517" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="237517" type="stmt"/>
            <line falsecount="41193" truecount="196324" num="114" type="cond"/>
            <line num="115" count="196324" type="stmt"/>
            <line num="118" count="475944" type="stmt"/>
            <line falsecount="452500" truecount="23443" num="118" type="cond"/>
            <line num="120" count="23443" type="stmt"/>
            <line falsecount="5517" truecount="17926" num="120" type="cond"/>
            <line num="121" count="17926" type="stmt"/>
            <line num="124" count="452504" type="stmt"/>
            <line falsecount="154718" truecount="297784" num="124" type="cond"/>
            <line num="126" count="297782" type="stmt"/>
            <line num="128" count="297781" type="stmt"/>
            <line falsecount="182713" truecount="115065" num="128" type="cond"/>
            <line num="129" count="115067" type="stmt"/>
            <line num="131" count="297783" type="stmt"/>
            <line falsecount="1573" truecount="296212" num="131" type="cond"/>
            <line num="132" count="296213" type="stmt"/>
            <line num="135" count="154719" type="stmt"/>
            <line falsecount="154138" truecount="584" num="135" type="cond"/>
            <line num="137" count="584" type="stmt"/>
            <line falsecount="584" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="584" type="stmt"/>
            <line falsecount="584" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="584" type="stmt"/>
            <line falsecount="584" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="147" count="154139" type="stmt"/>
            <line falsecount="153259" truecount="880" num="147" type="cond"/>
            <line num="148" count="880" type="stmt"/>
            <line falsecount="880" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="154" count="954931" type="stmt"/>
            <line complexity="7" visibility="private" signature="propagateDerivativesFromResultToArgument(Map&lt;Long, RandomVariable&gt;) : void" num="157" count="20672" type="method"/>
            <line num="158" count="20672" type="stmt"/>
            <line falsecount="20672" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="20672" type="stmt"/>
            <line falsecount="20672" truecount="41120" num="161" type="cond"/>
            <line num="162" count="41120" type="stmt"/>
            <line num="163" count="41120" type="stmt"/>
            <line falsecount="4008" truecount="37112" num="163" type="cond"/>
            <line num="164" count="37112" type="stmt"/>
            <line num="166" count="37112" type="stmt"/>
            <line num="167" count="37112" type="stmt"/>
            <line num="168" count="37112" type="stmt"/>
            <line num="171" count="37112" type="stmt"/>
            <line falsecount="37108" truecount="4" num="171" type="cond"/>
            <line num="172" count="4" type="stmt"/>
            <line num="175" count="37112" type="stmt"/>
            <line falsecount="37112" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="180" count="37112" type="stmt"/>
            <line falsecount="16220" truecount="20892" num="180" type="cond"/>
            <line num="181" count="20892" type="stmt"/>
            <line num="184" count="16220" type="stmt"/>
            <line num="187" count="37112" type="stmt"/>
            <line complexity="63" visibility="private" signature="getPartialDerivative(OperatorTreeNode,int) : RandomVariable" num="192" count="37112" type="method"/>
            <line num="194" count="37112" type="stmt"/>
            <line falsecount="37112" truecount="0" num="194" type="cond"/>
            <line num="195" count="0" type="stmt"/>
            <line num="198" count="37112" type="stmt"/>
            <line falsecount="36052" truecount="1060" num="198" type="cond"/>
            <line num="199" count="37112" type="stmt"/>
            <line falsecount="36468" truecount="644" num="199" type="cond"/>
            <line num="200" count="37112" type="stmt"/>
            <line falsecount="36524" truecount="588" num="200" type="cond"/>
            <line num="202" count="37112" type="stmt"/>
            <line num="204" count="37112" type="stmt"/>
            <line num="206" count="4" type="stmt"/>
            <line num="207" count="4" type="stmt"/>
            <line num="208" count="4" type="stmt"/>
            <line num="209" count="12" type="stmt"/>
            <line num="210" count="12" type="stmt"/>
            <line num="211" count="12" type="stmt"/>
            <line num="212" count="200" type="stmt"/>
            <line num="213" count="200" type="stmt"/>
            <line num="214" count="200" type="stmt"/>
            <line num="215" count="4" type="stmt"/>
            <line num="216" count="4" type="stmt"/>
            <line num="217" count="4" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="4" type="stmt"/>
            <line num="228" count="4" type="stmt"/>
            <line num="229" count="4" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="242" count="0" type="method"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="251" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="253" type="cond"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="196" type="stmt"/>
            <line num="258" count="196" type="stmt"/>
            <line num="259" count="196" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="36040" type="stmt"/>
            <line num="267" count="36040" type="stmt"/>
            <line num="268" count="36040" type="stmt"/>
            <line num="269" count="8" type="stmt"/>
            <line num="270" count="8" type="stmt"/>
            <line falsecount="4" truecount="4" num="270" type="cond"/>
            <line num="271" count="8" type="stmt"/>
            <line num="272" count="32" type="stmt"/>
            <line num="273" count="32" type="stmt"/>
            <line falsecount="12" truecount="20" num="273" type="cond"/>
            <line num="274" count="32" type="stmt"/>
            <line num="275" count="8" type="stmt"/>
            <line num="276" count="8" type="stmt"/>
            <line falsecount="4" truecount="4" num="276" type="cond"/>
            <line num="277" count="8" type="stmt"/>
            <line num="278" count="16" type="stmt"/>
            <line num="279" count="16" type="stmt"/>
            <line falsecount="8" truecount="8" num="279" type="cond"/>
            <line num="280" count="8" type="stmt"/>
            <line num="283" count="8" type="stmt"/>
            <line num="285" count="16" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="287" type="cond"/>
            <line num="288" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="295" type="cond"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="298" type="cond"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="302" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="306" type="cond"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="312" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="588" type="stmt"/>
            <line num="315" count="588" type="stmt"/>
            <line falsecount="392" truecount="196" num="315" type="cond"/>
            <line num="316" count="196" type="stmt"/>
            <line num="317" count="392" type="stmt"/>
            <line falsecount="196" truecount="196" num="317" type="cond"/>
            <line num="318" count="196" type="stmt"/>
            <line num="320" count="196" type="stmt"/>
            <line num="322" count="588" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="324" type="cond"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="326" type="cond"/>
            <line num="327" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="333" type="cond"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="335" type="cond"/>
            <line num="336" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="342" type="cond"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="344" type="cond"/>
            <line num="345" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="351" type="cond"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="353" type="cond"/>
            <line num="354" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="360" type="cond"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="370" type="cond"/>
            <line num="371" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="380" count="37112" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(double) : RandomVariableDifferentiableAD" num="390" count="0" type="method"/>
            <line num="391" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(RandomVariable) : RandomVariableDifferentiableAD" num="394" count="0" type="method"/>
            <line num="395" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAD(double)" num="398" count="0" type="method"/>
            <line num="399" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAD(double,double[])" num="402" count="0" type="method"/>
            <line num="403" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAD(RandomVariable)" num="406" count="49159" type="method"/>
            <line num="407" count="49159" type="stmt"/>
            <line complexity="1" visibility="private" signature="RandomVariableDifferentiableAD(RandomVariable,List&lt;RandomVariable&gt;,OperatorType)" num="410" count="954930" type="method"/>
            <line num="411" count="954926" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAD(RandomVariable,List&lt;RandomVariable&gt;,ConditionalExpectationEstimator,OperatorType)" num="414" count="954926" type="method"/>
            <line num="415" count="954928" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAD(RandomVariable,List&lt;RandomVariable&gt;,ConditionalExpectationEstimator,OperatorType,int)" num="418" count="954936" type="method"/>
            <line num="419" count="954935" type="stmt"/>
            <line num="420" count="954935" type="stmt"/>
            <line num="421" count="954936" type="stmt"/>
            <line num="423" count="954929" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperatorTreeNode() : OperatorTreeNode" num="426" count="1399913" type="method"/>
            <line num="427" count="1399913" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues() : RandomVariable" num="435" count="2827605" type="method"/>
            <line num="437" count="2827728" type="stmt"/>
            <line complexity="1" visibility="public" signature="getID() : Long" num="440" count="332" type="method"/>
            <line num="442" count="332" type="stmt"/>
            <line complexity="5" visibility="public" signature="getGradient(Set&lt;Long&gt;) : Map&lt;Long, RandomVariable&gt;" num="453" count="52" type="method"/>
            <line num="457" count="52" type="stmt"/>
            <line num="460" count="52" type="stmt"/>
            <line num="463" count="52" type="stmt"/>
            <line num="464" count="52" type="stmt"/>
            <line num="466" count="52" type="stmt"/>
            <line falsecount="52" truecount="20944" num="466" type="cond"/>
            <line num="468" count="20944" type="stmt"/>
            <line num="469" count="20944" type="stmt"/>
            <line num="470" count="20944" type="stmt"/>
            <line num="473" count="20944" type="stmt"/>
            <line num="474" count="20944" type="stmt"/>
            <line falsecount="272" truecount="20672" num="474" type="cond"/>
            <line num="475" count="20672" type="stmt"/>
            <line num="478" count="20672" type="stmt"/>
            <line num="479" count="41120" type="stmt"/>
            <line falsecount="4008" truecount="37112" num="479" type="cond"/>
            <line num="480" count="37112" type="stmt"/>
            <line num="481" count="37112" type="stmt"/>
            <line num="486" count="20672" type="stmt"/>
            <line num="490" count="20944" type="stmt"/>
            <line num="493" count="52" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTangents(Set&lt;Long&gt;) : Map&lt;Long, RandomVariable&gt;" num="496" count="0" type="method"/>
            <line num="498" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(RandomVariable) : boolean" num="506" count="2" type="method"/>
            <line num="508" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="511" count="220" type="method"/>
            <line num="513" count="220" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="516" count="1530734" type="method"/>
            <line num="518" count="1530863" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="521" count="20200" type="method"/>
            <line num="523" count="20200" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="526" count="482" type="method"/>
            <line num="528" count="482" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="531" count="402" type="method"/>
            <line num="533" count="402" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizations() : double[]" num="536" count="593" type="method"/>
            <line num="538" count="593" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : Double" num="541" count="0" type="method"/>
            <line num="543" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : double" num="546" count="1" type="method"/>
            <line num="548" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : double" num="551" count="0" type="method"/>
            <line num="553" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage() : double" num="556" count="6224" type="method"/>
            <line num="558" count="6224" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage(RandomVariable) : double" num="561" count="0" type="method"/>
            <line num="563" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="566" count="69" type="method"/>
            <line num="568" count="69" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance(RandomVariable) : double" num="571" count="0" type="method"/>
            <line num="573" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVariance() : double" num="576" count="0" type="method"/>
            <line num="578" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="581" count="485" type="method"/>
            <line num="583" count="485" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="586" count="0" type="method"/>
            <line num="588" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError() : double" num="591" count="164" type="method"/>
            <line num="593" count="164" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError(RandomVariable) : double" num="596" count="0" type="method"/>
            <line num="598" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double) : double" num="601" count="5" type="method"/>
            <line num="603" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="606" count="0" type="method"/>
            <line num="608" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantileExpectation(double,double) : double" num="611" count="0" type="method"/>
            <line num="613" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(double[]) : double[]" num="616" count="18" type="method"/>
            <line num="618" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(int,double) : double[][]" num="621" count="0" type="method"/>
            <line num="623" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="630" count="15570" type="method"/>
            <line num="632" count="15570" type="stmt"/>
            <line num="633" count="15570" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="636" count="28803" type="method"/>
            <line num="638" count="28804" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="644" count="400" type="method"/>
            <line num="646" count="400" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="652" count="1578" type="method"/>
            <line num="654" count="1578" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="660" count="4766" type="method"/>
            <line num="662" count="4766" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="668" count="25223" type="method"/>
            <line num="670" count="25223" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="676" count="15155" type="method"/>
            <line num="678" count="15155" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="684" count="1444" type="method"/>
            <line num="686" count="1444" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="692" count="4" type="method"/>
            <line num="694" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConditionalExpectation(ConditionalExpectationEstimator) : RandomVariable" num="700" count="2" type="method"/>
            <line num="702" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="710" count="8050" type="method"/>
            <line num="712" count="8050" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="718" count="17" type="method"/>
            <line num="720" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="726" count="30755" type="method"/>
            <line num="728" count="30755" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="734" count="1720" type="method"/>
            <line num="736" count="1720" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="742" count="0" type="method"/>
            <line num="744" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="750" count="0" type="method"/>
            <line num="752" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="add(RandomVariable) : RandomVariable" num="762" count="220227" type="method"/>
            <line num="764" count="220227" type="stmt"/>
            <line falsecount="220227" truecount="0" num="764" type="cond"/>
            <line num="766" count="0" type="stmt"/>
            <line num="769" count="220227" type="stmt"/>
            <line complexity="2" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="775" count="14890" type="method"/>
            <line num="777" count="14890" type="stmt"/>
            <line falsecount="14890" truecount="0" num="777" type="cond"/>
            <line num="779" count="0" type="stmt"/>
            <line num="782" count="14890" type="stmt"/>
            <line complexity="2" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="788" count="1" type="method"/>
            <line num="790" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="790" type="cond"/>
            <line num="792" count="0" type="stmt"/>
            <line num="795" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="801" count="212294" type="method"/>
            <line num="803" count="212294" type="stmt"/>
            <line falsecount="212294" truecount="0" num="803" type="cond"/>
            <line num="805" count="0" type="stmt"/>
            <line num="808" count="212294" type="stmt"/>
            <line complexity="2" visibility="public" signature="div(RandomVariable) : RandomVariable" num="814" count="8288" type="method"/>
            <line num="816" count="8288" type="stmt"/>
            <line falsecount="8288" truecount="0" num="816" type="cond"/>
            <line num="818" count="0" type="stmt"/>
            <line num="821" count="8288" type="stmt"/>
            <line complexity="2" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="827" count="0" type="method"/>
            <line num="829" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="829" type="cond"/>
            <line num="831" count="0" type="stmt"/>
            <line num="834" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="840" count="13" type="method"/>
            <line num="842" count="13" type="stmt"/>
            <line falsecount="13" truecount="0" num="842" type="cond"/>
            <line num="844" count="0" type="stmt"/>
            <line num="847" count="13" type="stmt"/>
            <line complexity="2" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="853" count="5" type="method"/>
            <line num="855" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="855" type="cond"/>
            <line num="857" count="0" type="stmt"/>
            <line num="860" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="866" count="584" type="method"/>
            <line num="868" count="584" type="stmt"/>
            <line falsecount="584" truecount="0" num="868" type="cond"/>
            <line num="870" count="0" type="stmt"/>
            <line num="873" count="584" type="stmt"/>
            <line complexity="2" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="879" count="30020" type="method"/>
            <line num="881" count="30020" type="stmt"/>
            <line falsecount="30020" truecount="0" num="881" type="cond"/>
            <line num="883" count="0" type="stmt"/>
            <line num="886" count="30020" type="stmt"/>
            <line complexity="1" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="897" count="880" type="method"/>
            <line num="899" count="880" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="905" count="2672" type="method"/>
            <line num="907" count="2672" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="913" count="196" type="method"/>
            <line num="915" count="196" type="stmt"/>
            <line complexity="2" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="921" count="43290" type="method"/>
            <line num="923" count="43364" type="stmt"/>
            <line falsecount="43419" truecount="0" num="923" type="cond"/>
            <line num="925" count="0" type="stmt"/>
            <line num="928" count="43439" type="stmt"/>
            <line complexity="3" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="934" count="254277" type="method"/>
            <line num="936" count="254282" type="stmt"/>
            <line falsecount="254285" truecount="0" num="936" type="cond"/>
            <line num="938" count="0" type="stmt"/>
            <line num="941" count="254286" type="stmt"/>
            <line complexity="3" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="947" count="0" type="method"/>
            <line num="949" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="949" type="cond"/>
            <line num="951" count="0" type="stmt"/>
            <line num="954" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="960" count="0" type="method"/>
            <line num="962" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="962" type="cond"/>
            <line num="964" count="0" type="stmt"/>
            <line num="967" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNaN() : RandomVariable" num="977" count="0" type="method"/>
            <line num="979" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="982" count="0" type="method"/>
            <line num="984" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizationsStream() : DoubleStream" num="987" count="0" type="method"/>
            <line num="989" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="992" count="0" type="method"/>
            <line num="994" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="997" count="0" type="method"/>
            <line num="999" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="1002" count="0" type="method"/>
            <line num="1004" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVarianceAsRandomVariableAAD() : RandomVariable" num="1007" count="0" type="method"/>
            <line num="1009" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVarianceAsRandomVariableAAD() : RandomVariable" num="1015" count="0" type="method"/>
            <line num="1017" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviationAsRandomVariableAAD() : RandomVariable" num="1023" count="0" type="method"/>
            <line num="1025" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardErrorAsRandomVariableAAD() : RandomVariable" num="1031" count="0" type="method"/>
            <line num="1033" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinAsRandomVariableAAD() : RandomVariable" num="1039" count="0" type="method"/>
            <line num="1041" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxAsRandomVariableAAD() : RandomVariable" num="1047" count="0" type="method"/>
            <line num="1049" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTangents() : Map&lt;Long, RandomVariable&gt;" num="1055" count="0" type="method"/>
            <line num="1058" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/forward/RandomVariableDifferentiableADFactory.java" name="RandomVariableDifferentiableADFactory.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="5" loc="50" coveredmethods="5" methods="5" elements="10" classes="1" ncloc="26" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="RandomVariableDifferentiableADFactory">
               <metrics coveredelements="10" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableADFactory()" num="25" count="17" type="method"/>
            <line num="26" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableADFactory(RandomVariableFactory)" num="32" count="24" type="method"/>
            <line num="33" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double) : RandomVariableDifferentiable" num="36" count="32118" type="method"/>
            <line num="38" count="32118" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double[]) : RandomVariableDifferentiable" num="41" count="17041" type="method"/>
            <line num="43" count="17041" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="46" count="21" type="method"/>
            <line num="48" count="21" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.concurrency">
         <metrics coveredelements="5" complexity="6" loc="56" methods="6" classes="1" statements="7" coveredconditionals="0" coveredmethods="2" elements="13" ncloc="30" files="1" conditionals="0" coveredstatements="3"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/concurrency/FutureWrapper.java" name="FutureWrapper.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="6" loc="56" coveredmethods="2" methods="6" elements="13" classes="1" ncloc="30" statements="7" conditionals="0" coveredstatements="3"/>
            <class name="FutureWrapper">
               <metrics coveredelements="5" coveredconditionals="0" complexity="6" coveredmethods="2" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="FutureWrapper(V)" num="27" count="4758" type="method"/>
            <line num="28" count="4758" type="stmt"/>
            <line num="29" count="4758" type="stmt"/>
            <line complexity="1" visibility="public" signature="cancel(boolean) : boolean" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : V" num="37" count="4758" type="method"/>
            <line num="39" count="4758" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(long,TimeUnit) : V" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isCancelled() : boolean" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDone() : boolean" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.products">
         <metrics coveredelements="1002" complexity="412" loc="5469" methods="186" classes="38" statements="1458" coveredconditionals="172" coveredmethods="73" elements="2026" ncloc="2839" files="33" conditionals="382" coveredstatements="757"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/AbstractLIBORMonteCarloProduct.java" name="AbstractLIBORMonteCarloProduct.java">
            <metrics coveredelements="14" coveredconditionals="1" complexity="8" loc="74" coveredmethods="4" methods="6" elements="20" classes="1" ncloc="46" statements="12" conditionals="2" coveredstatements="9"/>
            <class name="AbstractLIBORMonteCarloProduct">
               <metrics coveredelements="14" coveredconditionals="1" complexity="8" coveredmethods="4" methods="6" elements="20" statements="12" conditionals="2" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractLIBORMonteCarloProduct(String)" num="29" count="12005" type="method"/>
            <line num="30" count="12005" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractLIBORMonteCarloProduct()" num="36" count="290923" type="method"/>
            <line num="37" count="290923" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValueForModifiedData(double,MonteCarloSimulationModel,Map&lt;String, Object&gt;) : RandomVariable" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues(double,LIBORModelMonteCarloSimulationModel) : Map&lt;String, Object&gt;" num="48" count="246" type="method"/>
            <line num="50" count="246" type="stmt"/>
            <line num="51" count="246" type="stmt"/>
            <line num="52" count="246" type="stmt"/>
            <line num="53" count="246" type="stmt"/>
            <line num="54" count="246" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,MonteCarloSimulationModel) : RandomVariable" num="57" count="85427" type="method"/>
            <line num="60" count="86504" type="stmt"/>
            <line falsecount="0" truecount="86258" num="60" type="cond"/>
            <line num="61" count="86432" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorDrift(LIBORModelMonteCarloSimulationModel,LIBORModelMonteCarloSimulationModel) : FactorDrift" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/BermudanSwaption.java" name="BermudanSwaption.java">
            <metrics coveredelements="77" coveredconditionals="7" complexity="30" loc="312" coveredmethods="7" methods="17" elements="135" classes="1" ncloc="171" statements="92" conditionals="26" coveredstatements="63"/>
            <class name="BermudanSwaption">
               <metrics coveredelements="77" coveredconditionals="7" complexity="30" coveredmethods="7" methods="17" elements="135" statements="92" conditionals="26" coveredstatements="63"/>
            </class>
            <line complexity="1" visibility="public" signature="BermudanSwaption(boolean[],double[],double[],double[],double[],double[],boolean,RegressionBasisFunctionsProvider)" num="52" count="64" type="method"/>
            <line num="53" count="64" type="stmt"/>
            <line num="54" count="64" type="stmt"/>
            <line num="55" count="64" type="stmt"/>
            <line num="56" count="64" type="stmt"/>
            <line num="57" count="64" type="stmt"/>
            <line num="58" count="64" type="stmt"/>
            <line num="59" count="64" type="stmt"/>
            <line num="60" count="64" type="stmt"/>
            <line num="61" count="64" type="stmt"/>
            <line complexity="1" visibility="public" signature="BermudanSwaption(boolean[],double[],double[],double[],double[],double[],boolean)" num="73" count="64" type="method"/>
            <line num="74" count="64" type="stmt"/>
            <line complexity="1" visibility="public" signature="BermudanSwaption(boolean[],double[],double[],double[],double[],double[])" num="85" count="64" type="method"/>
            <line num="86" count="64" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValues(double,LIBORModelMonteCarloSimulationModel) : Map&lt;String, Object&gt;" num="89" count="140" type="method"/>
            <line num="93" count="140" type="stmt"/>
            <line num="94" count="140" type="stmt"/>
            <line num="95" count="140" type="stmt"/>
            <line num="98" count="140" type="stmt"/>
            <line falsecount="140" truecount="1000" num="98" type="cond"/>
            <line num="100" count="1000" type="stmt"/>
            <line num="101" count="1000" type="stmt"/>
            <line num="102" count="1000" type="stmt"/>
            <line num="103" count="1000" type="stmt"/>
            <line num="104" count="1000" type="stmt"/>
            <line num="105" count="1000" type="stmt"/>
            <line num="108" count="1000" type="stmt"/>
            <line num="111" count="1000" type="stmt"/>
            <line num="114" count="1000" type="stmt"/>
            <line num="115" count="1000" type="stmt"/>
            <line num="116" count="1000" type="stmt"/>
            <line num="119" count="1000" type="stmt"/>
            <line falsecount="0" truecount="1000" num="119" type="cond"/>
            <line num="120" count="1000" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="1000" type="stmt"/>
            <line falsecount="0" truecount="1000" num="127" type="cond"/>
            <line num="128" count="1000" type="stmt"/>
            <line num="131" count="1000" type="stmt"/>
            <line num="134" count="1000" type="stmt"/>
            <line num="138" count="1000" type="stmt"/>
            <line num="140" count="1000" type="stmt"/>
            <line num="147" count="140" type="stmt"/>
            <line num="148" count="140" type="stmt"/>
            <line num="149" count="140" type="stmt"/>
            <line num="151" count="140" type="stmt"/>
            <line num="152" count="140" type="stmt"/>
            <line num="153" count="140" type="stmt"/>
            <line num="154" count="140" type="stmt"/>
            <line num="155" count="140" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="168" count="140" type="method"/>
            <line num="170" count="140" type="stmt"/>
            <line complexity="2" visibility="public" signature="getConditionalExpectationEstimator(double,LIBORModelMonteCarloSimulationModel) : ConditionalExpectationEstimator" num="181" count="1000" type="method"/>
            <line num="182" count="1000" type="stmt"/>
            <line falsecount="1000" truecount="0" num="182" type="cond"/>
            <line num="183" count="1000" type="stmt"/>
            <line num="185" count="1000" type="stmt"/>
            <line complexity="2" visibility="public" signature="getBasisFunctions(double,MonteCarloSimulationModel) : RandomVariable[]" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getBasisFunctions(double,LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="214" count="1000" type="method"/>
            <line num="216" count="1000" type="stmt"/>
            <line num="219" count="1000" type="stmt"/>
            <line num="220" count="1000" type="stmt"/>
            <line num="222" count="1000" type="stmt"/>
            <line num="223" count="1000" type="stmt"/>
            <line falsecount="1000" truecount="0" num="223" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="1000" type="stmt"/>
            <line falsecount="1000" truecount="0" num="226" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line num="231" count="1000" type="stmt"/>
            <line num="232" count="1000" type="stmt"/>
            <line num="233" count="1000" type="stmt"/>
            <line num="234" count="1000" type="stmt"/>
            <line num="238" count="1000" type="stmt"/>
            <line num="239" count="1000" type="stmt"/>
            <line num="240" count="1000" type="stmt"/>
            <line num="241" count="1000" type="stmt"/>
            <line num="245" count="1000" type="stmt"/>
            <line num="246" count="1000" type="stmt"/>
            <line num="250" count="1000" type="stmt"/>
            <line complexity="4" visibility="public" signature="getExerciseTimes() : double[]" num="253" count="0" type="method"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="255" type="cond"/>
            <line num="256" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="256" type="cond"/>
            <line num="257" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="263" type="cond"/>
            <line num="264" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getFixingDates(double) : double[]" num="269" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="271" type="cond"/>
            <line num="272" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="272" type="cond"/>
            <line num="273" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="279" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwap() : SimpleSwap" num="284" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentDates() : double[]" num="288" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodNotionals() : double[]" num="292" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapRates() : double[]" num="296" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodLengths() : double[]" num="300" count="0" type="method"/>
            <line num="301" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFinalMaturity() : double" num="304" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIsCallable() : boolean" num="308" count="0" type="method"/>
            <line num="309" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/BermudanSwaptionFromSwapSchedules.java" name="BermudanSwaptionFromSwapSchedules.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="46" loc="548" coveredmethods="0" methods="26" elements="244" classes="2" ncloc="322" statements="178" conditionals="40" coveredstatements="0"/>
            <class name="BermudanSwaptionFromSwapSchedules">
               <metrics coveredelements="0" coveredconditionals="0" complexity="46" coveredmethods="0" methods="26" elements="244" statements="178" conditionals="40" coveredstatements="0"/>
            </class>
            <class name="BermudanSwaptionFromSwapSchedules.SwaptionType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="BermudanSwaptionFromSwapSchedules(LocalDateTime,SwaptionType,LocalDate[],LocalDate,double[],double[],Schedule[],Schedule[],MonteCarloConditionalExpectationRegressionFactory,RegressionBasisFunctionsProvider)" num="87" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BermudanSwaptionFromSwapSchedules(LocalDateTime,SwaptionType,LocalDate[],LocalDate,double[],double[],Schedule[],Schedule[],RegressionBasisFunctionsProvider)" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BermudanSwaptionFromSwapSchedules(LocalDateTime,SwaptionType,LocalDate[],LocalDate,double[],double[],Schedule[],Schedule[])" num="134" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BermudanSwaptionFromSwapSchedules(LocalDateTime,SwaptionType,LocalDate[],LocalDate,double,double,Schedule[],Schedule[])" num="152" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="160" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExerciseDates() : LocalDate[]" num="172" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwaptionType() : SwaptionType" num="179" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapEndDate() : LocalDate" num="186" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValues(double,LIBORModelMonteCarloSimulationModel) : Map&lt;String, Object&gt;" num="190" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="199" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="230" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="255" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getExerciseProbabilitiesFromTimes(LocalDateTime,RandomVariable) : double[]" num="268" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="272" type="cond"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getProcessTimeDiscretization(LocalDateTime) : TimeDiscretization" num="284" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="288" type="cond"/>
            <line num="289" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Period) : Double" num="295" count="0" type="method"/>
            <line num="296" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getValueUnderlyingNumeraireRelative(LIBORModelMonteCarloSimulationModel,Schedule,boolean,double,double) : RandomVariable" num="316" count="0" type="method"/>
            <line num="318" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="318" type="cond"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="330" type="cond"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="338" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="342" type="cond"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConditionalExpectationEstimator(double,LIBORModelMonteCarloSimulationModel) : ConditionalExpectationEstimator" num="360" count="0" type="method"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBasisFunctions(double,MonteCarloSimulationModel) : RandomVariable[]" num="366" count="0" type="method"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getBasisFunctions(double,LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="380" count="0" type="method"/>
            <line num="382" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(LocalDate) : double" num="385" count="0" type="method"/>
            <line num="386" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="394" type="cond"/>
            <line num="395" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="397" type="cond"/>
            <line num="398" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="412" type="cond"/>
            <line num="413" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBasisFunctionsProviderWithSwapRates() : RegressionBasisFunctionsProvider" num="433" count="0" type="method"/>
            <line num="434" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getBasisFunctions(double,MonteCarloSimulationModel) : RandomVariable[]" num="435" count="0" type="method"/>
            <line num="437" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(LocalDate) : double" num="442" count="0" type="method"/>
            <line num="443" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="451" type="cond"/>
            <line num="452" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="454" type="cond"/>
            <line num="455" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="466" type="cond"/>
            <line num="467" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line num="469" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBasisFunctionsProviderWithForwardRates() : RegressionBasisFunctionsProvider" num="487" count="0" type="method"/>
            <line num="488" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getBasisFunctions(double,MonteCarloSimulationModel) : RandomVariable[]" num="489" count="0" type="method"/>
            <line num="491" count="0" type="stmt"/>
            <line num="493" count="0" type="stmt"/>
            <line num="495" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(LocalDate) : double" num="496" count="0" type="method"/>
            <line num="497" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="507" type="cond"/>
            <line num="508" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="510" type="cond"/>
            <line num="511" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line num="517" count="0" type="stmt"/>
            <line num="518" count="0" type="stmt"/>
            <line num="521" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line num="526" count="0" type="stmt"/>
            <line num="527" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line num="531" count="0" type="stmt"/>
            <line num="532" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line num="537" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="542" count="0" type="method"/>
            <line num="544" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/Bond.java" name="Bond.java">
            <metrics coveredelements="24" coveredconditionals="2" complexity="8" loc="103" coveredmethods="4" methods="6" elements="28" classes="1" ncloc="47" statements="20" conditionals="2" coveredstatements="18"/>
            <class name="Bond">
               <metrics coveredelements="24" coveredconditionals="2" complexity="8" coveredmethods="4" methods="6" elements="28" statements="20" conditionals="2" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="Bond(LocalDateTime,double)" num="30" count="82" type="method"/>
            <line num="31" count="82" type="stmt"/>
            <line num="32" count="82" type="stmt"/>
            <line num="33" count="82" type="stmt"/>
            <line complexity="1" visibility="public" signature="Bond(double)" num="39" count="1534" type="method"/>
            <line num="40" count="1534" type="stmt"/>
            <line num="41" count="1534" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="54" count="1698" type="method"/>
            <line num="57" count="1698" type="stmt"/>
            <line num="58" count="1698" type="stmt"/>
            <line num="59" count="1698" type="stmt"/>
            <line falsecount="1616" truecount="82" num="59" type="cond"/>
            <line num="60" count="82" type="stmt"/>
            <line num="66" count="1698" type="stmt"/>
            <line num="67" count="1698" type="stmt"/>
            <line num="70" count="1698" type="stmt"/>
            <line num="71" count="1698" type="stmt"/>
            <line num="74" count="1698" type="stmt"/>
            <line num="75" count="1698" type="stmt"/>
            <line num="76" count="1698" type="stmt"/>
            <line num="79" count="1698" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="85" count="82" type="method"/>
            <line num="86" count="82" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMaturity(double) : void" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/CMSOption.java" name="CMSOption.java">
            <metrics coveredelements="46" coveredconditionals="4" complexity="6" loc="144" coveredmethods="3" methods="3" elements="51" classes="1" ncloc="75" statements="42" conditionals="6" coveredstatements="39"/>
            <class name="CMSOption">
               <metrics coveredelements="46" coveredconditionals="4" complexity="6" coveredmethods="3" methods="3" elements="51" statements="42" conditionals="6" coveredstatements="39"/>
            </class>
            <line complexity="1" visibility="public" signature="CMSOption(double,double[],double[],double[],double)" num="41" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="65" count="1" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line falsecount="1" truecount="6" num="74" type="cond"/>
            <line num="76" count="6" type="stmt"/>
            <line num="77" count="6" type="stmt"/>
            <line num="79" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="79" type="cond"/>
            <line num="82" count="6" type="stmt"/>
            <line num="85" count="6" type="stmt"/>
            <line num="86" count="6" type="stmt"/>
            <line num="89" count="6" type="stmt"/>
            <line num="90" count="6" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(ForwardCurve,double) : double" num="132" count="1" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/CancelableSwap.java" name="CancelableSwap.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="172" coveredmethods="0" methods="4" elements="66" classes="1" ncloc="86" statements="54" conditionals="8" coveredstatements="0"/>
            <class name="CancelableSwap">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="4" elements="66" statements="54" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CancelableSwap(boolean[],double[],double[],double[],double[],double[])" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="63" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getConditionalExpectationEstimator(int,LIBORModelMonteCarloSimulationModel) : ConditionalExpectationEstimator" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getRegressionBasisFunctions(double,LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/Caplet.java" name="Caplet.java">
            <metrics coveredelements="28" coveredconditionals="2" complexity="9" loc="169" coveredmethods="4" methods="4" elements="48" classes="2" ncloc="74" statements="36" conditionals="8" coveredstatements="22"/>
            <class name="Caplet">
               <metrics coveredelements="28" coveredconditionals="2" complexity="9" coveredmethods="4" methods="4" elements="48" statements="36" conditionals="8" coveredstatements="22"/>
            </class>
            <class name="Caplet.ValueUnit">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Caplet(double,double,double,double,boolean,ValueUnit)" num="60" count="209" type="method"/>
            <line num="61" count="209" type="stmt"/>
            <line num="62" count="209" type="stmt"/>
            <line num="63" count="209" type="stmt"/>
            <line num="64" count="209" type="stmt"/>
            <line num="65" count="209" type="stmt"/>
            <line num="66" count="209" type="stmt"/>
            <line num="67" count="209" type="stmt"/>
            <line complexity="1" visibility="public" signature="Caplet(double,double,double,boolean)" num="86" count="13" type="method"/>
            <line num="87" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="Caplet(double,double,double)" num="100" count="13" type="method"/>
            <line num="101" count="13" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="114" count="333" type="method"/>
            <line num="117" count="333" type="stmt"/>
            <line num="120" count="333" type="stmt"/>
            <line num="121" count="333" type="stmt"/>
            <line num="122" count="333" type="stmt"/>
            <line num="129" count="333" type="stmt"/>
            <line num="130" count="333" type="stmt"/>
            <line falsecount="0" truecount="333" num="130" type="cond"/>
            <line num="131" count="333" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="136" count="333" type="stmt"/>
            <line num="138" count="333" type="stmt"/>
            <line num="139" count="333" type="stmt"/>
            <line num="140" count="333" type="stmt"/>
            <line num="142" count="333" type="stmt"/>
            <line falsecount="0" truecount="333" num="142" type="cond"/>
            <line num="143" count="333" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/DigitalCaplet.java" name="DigitalCaplet.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="2" loc="86" coveredmethods="2" methods="2" elements="19" classes="1" ncloc="34" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="DigitalCaplet">
               <metrics coveredelements="19" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="19" statements="17" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="DigitalCaplet(double,double,double,double)" num="39" count="424" type="method"/>
            <line num="41" count="424" type="stmt"/>
            <line num="42" count="424" type="stmt"/>
            <line num="43" count="424" type="stmt"/>
            <line num="44" count="424" type="stmt"/>
            <line num="45" count="424" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="58" count="424" type="method"/>
            <line num="62" count="424" type="stmt"/>
            <line num="63" count="424" type="stmt"/>
            <line num="66" count="424" type="stmt"/>
            <line num="68" count="424" type="stmt"/>
            <line num="69" count="424" type="stmt"/>
            <line num="72" count="424" type="stmt"/>
            <line num="73" count="424" type="stmt"/>
            <line num="75" count="424" type="stmt"/>
            <line num="78" count="424" type="stmt"/>
            <line num="79" count="424" type="stmt"/>
            <line num="81" count="424" type="stmt"/>
            <line num="84" count="424" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/DigitalFloorlet.java" name="DigitalFloorlet.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="82" coveredmethods="0" methods="2" elements="27" classes="1" ncloc="40" statements="21" conditionals="4" coveredstatements="0"/>
            <class name="DigitalFloorlet">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="2" elements="27" statements="21" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DigitalFloorlet(double,double)" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="43" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/FlexiCap.java" name="FlexiCap.java">
            <metrics coveredelements="31" coveredconditionals="3" complexity="5" loc="119" coveredmethods="2" methods="3" elements="35" classes="1" ncloc="54" statements="28" conditionals="4" coveredstatements="26"/>
            <class name="FlexiCap">
               <metrics coveredelements="31" coveredconditionals="3" complexity="5" coveredmethods="2" methods="3" elements="35" statements="28" conditionals="4" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="public" signature="FlexiCap(double[],double[],double[],int)" num="41" count="156" type="method"/>
            <line num="46" count="156" type="stmt"/>
            <line num="47" count="156" type="stmt"/>
            <line num="48" count="156" type="stmt"/>
            <line num="49" count="156" type="stmt"/>
            <line num="50" count="156" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="63" count="156" type="method"/>
            <line num="67" count="156" type="stmt"/>
            <line num="72" count="156" type="stmt"/>
            <line num="74" count="156" type="stmt"/>
            <line falsecount="156" truecount="6162" num="74" type="cond"/>
            <line num="76" count="6162" type="stmt"/>
            <line num="77" count="6162" type="stmt"/>
            <line num="80" count="6162" type="stmt"/>
            <line falsecount="6162" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="6162" type="stmt"/>
            <line num="85" count="6162" type="stmt"/>
            <line num="88" count="6162" type="stmt"/>
            <line num="89" count="6162" type="stmt"/>
            <line num="90" count="6162" type="stmt"/>
            <line num="93" count="6162" type="stmt"/>
            <line num="94" count="6162" type="stmt"/>
            <line num="95" count="6162" type="stmt"/>
            <line num="97" count="6162" type="stmt"/>
            <line num="100" count="6162" type="stmt"/>
            <line num="103" count="6162" type="stmt"/>
            <line num="106" count="156" type="stmt"/>
            <line num="107" count="156" type="stmt"/>
            <line num="108" count="156" type="stmt"/>
            <line num="110" count="156" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrikes() : double[]" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/ForwardRateVolatilitySurfaceCurvature.java" name="ForwardRateVolatilitySurfaceCurvature.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="176" coveredmethods="0" methods="4" elements="51" classes="1" ncloc="61" statements="35" conditionals="12" coveredstatements="0"/>
            <class name="ForwardRateVolatilitySurfaceCurvature">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="4" elements="51" statements="35" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardRateVolatilitySurfaceCurvature()" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardRateVolatilitySurfaceCurvature(double)" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValues(double,LIBORMarketModel) : RandomVariable" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/LIBORBond.java" name="LIBORBond.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="63" coveredmethods="0" methods="4" elements="13" classes="1" ncloc="26" statements="7" conditionals="2" coveredstatements="0"/>
            <class name="LIBORBond">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="13" statements="7" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORBond(double)" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/MoneyMarketAccount.java" name="MoneyMarketAccount.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="95" coveredmethods="0" methods="4" elements="26" classes="1" ncloc="38" statements="16" conditionals="6" coveredstatements="0"/>
            <class name="MoneyMarketAccount">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="26" statements="16" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MoneyMarketAccount(double,double,double)" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MoneyMarketAccount(double,double)" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MoneyMarketAccount()" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/Portfolio.java" name="Portfolio.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="158" coveredmethods="0" methods="8" elements="58" classes="1" ncloc="78" statements="36" conditionals="14" coveredstatements="0"/>
            <class name="Portfolio">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="8" elements="58" statements="36" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Portfolio(AbstractLIBORMonteCarloProduct,double)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="Portfolio(AbstractLIBORMonteCarloProduct[],double[])" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="Portfolio(String,AbstractLIBORMonteCarloProduct[],double[])" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCurrency() : String" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line complexity="4" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProducts() : TermStructureMonteCarloProduct[]" num="148" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getWeights() : double[]" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SimpleCappedFlooredFloatingRateBond.java" name="SimpleCappedFlooredFloatingRateBond.java">
            <metrics coveredelements="35" coveredconditionals="5" complexity="6" loc="86" coveredmethods="2" methods="2" elements="41" classes="1" ncloc="52" statements="31" conditionals="8" coveredstatements="28"/>
            <class name="SimpleCappedFlooredFloatingRateBond">
               <metrics coveredelements="35" coveredconditionals="5" complexity="6" coveredmethods="2" methods="2" elements="41" statements="31" conditionals="8" coveredstatements="28"/>
            </class>
            <line complexity="1" visibility="public" signature="SimpleCappedFlooredFloatingRateBond(String,double[],double[],double[],double[],double[],double)" num="27" count="4" type="method"/>
            <line num="28" count="4" type="stmt"/>
            <line num="29" count="4" type="stmt"/>
            <line num="30" count="4" type="stmt"/>
            <line num="31" count="4" type="stmt"/>
            <line num="32" count="4" type="stmt"/>
            <line num="33" count="4" type="stmt"/>
            <line num="34" count="4" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="37" count="4" type="method"/>
            <line num="41" count="4" type="stmt"/>
            <line num="43" count="4" type="stmt"/>
            <line falsecount="4" truecount="40" num="43" type="cond"/>
            <line num="44" count="40" type="stmt"/>
            <line num="45" count="40" type="stmt"/>
            <line num="46" count="40" type="stmt"/>
            <line num="49" count="40" type="stmt"/>
            <line num="52" count="40" type="stmt"/>
            <line falsecount="40" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="57" count="40" type="stmt"/>
            <line falsecount="40" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="62" count="40" type="stmt"/>
            <line falsecount="40" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="40" type="stmt"/>
            <line num="68" count="40" type="stmt"/>
            <line num="69" count="40" type="stmt"/>
            <line num="71" count="40" type="stmt"/>
            <line num="75" count="4" type="stmt"/>
            <line num="76" count="4" type="stmt"/>
            <line num="77" count="4" type="stmt"/>
            <line num="78" count="4" type="stmt"/>
            <line num="80" count="4" type="stmt"/>
            <line num="81" count="4" type="stmt"/>
            <line num="82" count="4" type="stmt"/>
            <line num="84" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SimpleSwap.java" name="SimpleSwap.java">
            <metrics coveredelements="35" coveredconditionals="4" complexity="17" loc="212" coveredmethods="4" methods="14" elements="66" classes="1" ncloc="121" statements="46" conditionals="6" coveredstatements="27"/>
            <class name="SimpleSwap">
               <metrics coveredelements="35" coveredconditionals="4" complexity="17" coveredmethods="4" methods="14" elements="66" statements="46" conditionals="6" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="SimpleSwap(double[],double[],double[],boolean,double[])" num="39" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleSwap(double[],double[],double[],boolean,double)" num="62" count="1676" type="method"/>
            <line num="68" count="1676" type="stmt"/>
            <line num="69" count="1676" type="stmt"/>
            <line num="70" count="1676" type="stmt"/>
            <line num="71" count="1676" type="stmt"/>
            <line num="72" count="1676" type="stmt"/>
            <line num="73" count="1676" type="stmt"/>
            <line num="74" count="1676" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleSwap(double[],double[],double[],double)" num="86" count="120" type="method"/>
            <line num="91" count="120" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleSwap(double[],double[],double[],double[])" num="102" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleSwap(double[],double[],double[])" num="118" count="1556" type="method"/>
            <line num="123" count="1556" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="136" count="1676" type="method"/>
            <line num="138" count="1676" type="stmt"/>
            <line num="140" count="1676" type="stmt"/>
            <line falsecount="1676" truecount="5156" num="140" type="cond"/>
            <line num="142" count="5156" type="stmt"/>
            <line num="143" count="5156" type="stmt"/>
            <line num="144" count="5156" type="stmt"/>
            <line num="145" count="5156" type="stmt"/>
            <line num="147" count="5156" type="stmt"/>
            <line falsecount="5156" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="152" count="5156" type="stmt"/>
            <line num="153" count="5156" type="stmt"/>
            <line num="154" count="5156" type="stmt"/>
            <line falsecount="5156" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="158" count="5156" type="stmt"/>
            <line num="159" count="5156" type="stmt"/>
            <line num="160" count="5156" type="stmt"/>
            <line num="162" count="5156" type="stmt"/>
            <line num="165" count="1676" type="stmt"/>
            <line num="166" count="1676" type="stmt"/>
            <line num="167" count="1676" type="stmt"/>
            <line num="169" count="1676" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="172" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStartTime() : double" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixingDates() : double[]" num="184" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotional() : double[]" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapRates() : double[]" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentDates() : double[]" num="196" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodLengths() : double[]" num="200" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="203" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SimpleZeroSwap.java" name="SimpleZeroSwap.java">
            <metrics coveredelements="33" coveredconditionals="5" complexity="8" loc="131" coveredmethods="2" methods="4" elements="42" classes="1" ncloc="67" statements="30" conditionals="8" coveredstatements="26"/>
            <class name="SimpleZeroSwap">
               <metrics coveredelements="33" coveredconditionals="5" complexity="8" coveredmethods="2" methods="4" elements="42" statements="30" conditionals="8" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="public" signature="SimpleZeroSwap(double[],double[],double[],AbstractIndex,boolean)" num="39" count="20" type="method"/>
            <line num="45" count="20" type="stmt"/>
            <line num="46" count="20" type="stmt"/>
            <line num="47" count="20" type="stmt"/>
            <line num="48" count="20" type="stmt"/>
            <line num="49" count="20" type="stmt"/>
            <line num="50" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleZeroSwap(double[],double[],double[],boolean)" num="61" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleZeroSwap(double[],double[],double[])" num="76" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="93" count="40" type="method"/>
            <line num="95" count="40" type="stmt"/>
            <line num="97" count="40" type="stmt"/>
            <line num="98" count="40" type="stmt"/>
            <line falsecount="40" truecount="400" num="98" type="cond"/>
            <line num="100" count="400" type="stmt"/>
            <line num="101" count="400" type="stmt"/>
            <line num="102" count="400" type="stmt"/>
            <line num="103" count="400" type="stmt"/>
            <line num="105" count="400" type="stmt"/>
            <line falsecount="400" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="110" count="400" type="stmt"/>
            <line falsecount="0" truecount="400" num="110" type="cond"/>
            <line num="111" count="400" type="stmt"/>
            <line num="112" count="400" type="stmt"/>
            <line falsecount="400" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="400" type="stmt"/>
            <line num="117" count="400" type="stmt"/>
            <line num="118" count="400" type="stmt"/>
            <line num="120" count="400" type="stmt"/>
            <line num="122" count="400" type="stmt"/>
            <line num="125" count="40" type="stmt"/>
            <line num="126" count="40" type="stmt"/>
            <line num="127" count="40" type="stmt"/>
            <line num="129" count="40" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/Swap.java" name="Swap.java">
            <metrics coveredelements="15" coveredconditionals="2" complexity="6" loc="100" coveredmethods="3" methods="5" elements="21" classes="1" ncloc="46" statements="14" conditionals="2" coveredstatements="10"/>
            <class name="Swap">
               <metrics coveredelements="15" coveredconditionals="2" complexity="6" coveredmethods="3" methods="5" elements="21" statements="14" conditionals="2" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="Swap(TermStructureMonteCarloProduct,TermStructureMonteCarloProduct)" num="40" count="233" type="method"/>
            <line num="41" count="233" type="stmt"/>
            <line num="42" count="233" type="stmt"/>
            <line num="43" count="233" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swap(Notional,Schedule,AbstractIndex,double,Schedule,AbstractIndex,double)" num="57" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swap(double[],double[],double[])" num="76" count="60" type="method"/>
            <line num="81" count="60" type="stmt"/>
            <line num="82" count="60" type="stmt"/>
            <line num="83" count="60" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="86" count="1481" type="method"/>
            <line num="88" count="1481" type="stmt"/>
            <line num="89" count="1481" type="stmt"/>
            <line falsecount="60" truecount="1421" num="89" type="cond"/>
            <line num="90" count="1421" type="stmt"/>
            <line num="93" count="1481" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwapLeg.java" name="SwapLeg.java">
            <metrics coveredelements="60" coveredconditionals="17" complexity="15" loc="177" coveredmethods="4" methods="4" elements="70" classes="1" ncloc="90" statements="44" conditionals="22" coveredstatements="39"/>
            <class name="SwapLeg">
               <metrics coveredelements="60" coveredconditionals="17" complexity="15" coveredmethods="4" methods="4" elements="70" statements="44" conditionals="22" coveredstatements="39"/>
            </class>
            <line complexity="7" visibility="public" signature="SwapLeg(Schedule,Notional,AbstractIndex,double,boolean,boolean,boolean)" num="47" count="480" type="method"/>
            <line num="48" count="480" type="stmt"/>
            <line num="50" count="480" type="stmt"/>
            <line falsecount="4" truecount="476" num="50" type="cond"/>
            <line num="59" count="480" type="stmt"/>
            <line num="60" count="480" type="stmt"/>
            <line falsecount="480" truecount="4422" num="60" type="cond"/>
            <line num="61" count="4422" type="stmt"/>
            <line num="62" count="4422" type="stmt"/>
            <line num="63" count="4422" type="stmt"/>
            <line num="70" count="4422" type="stmt"/>
            <line falsecount="4422" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="4422" type="stmt"/>
            <line num="75" count="4422" type="stmt"/>
            <line falsecount="1390" truecount="3032" num="75" type="cond"/>
            <line num="76" count="3032" type="stmt"/>
            <line falsecount="2952" truecount="80" num="76" type="cond"/>
            <line num="77" count="80" type="stmt"/>
            <line num="79" count="2952" type="stmt"/>
            <line num="83" count="1390" type="stmt"/>
            <line num="86" count="4422" type="stmt"/>
            <line num="87" count="4422" type="stmt"/>
            <line num="89" count="4422" type="stmt"/>
            <line falsecount="4422" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="94" count="480" type="stmt"/>
            <line complexity="6" visibility="public" signature="SwapLeg(Schedule,Notional[],AbstractIndex,double[],boolean,boolean)" num="107" count="4" type="method"/>
            <line num="108" count="4" type="stmt"/>
            <line num="109" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="120" count="4" type="stmt"/>
            <line num="121" count="4" type="stmt"/>
            <line falsecount="4" truecount="280" num="121" type="cond"/>
            <line num="122" count="280" type="stmt"/>
            <line num="124" count="280" type="stmt"/>
            <line num="125" count="280" type="stmt"/>
            <line num="126" count="280" type="stmt"/>
            <line num="127" count="280" type="stmt"/>
            <line num="128" count="280" type="stmt"/>
            <line num="135" count="280" type="stmt"/>
            <line falsecount="280" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="280" type="stmt"/>
            <line num="140" count="280" type="stmt"/>
            <line falsecount="140" truecount="140" num="140" type="cond"/>
            <line num="141" count="140" type="stmt"/>
            <line falsecount="140" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="140" type="stmt"/>
            <line num="148" count="140" type="stmt"/>
            <line num="151" count="280" type="stmt"/>
            <line num="153" count="280" type="stmt"/>
            <line num="156" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Schedule,Notional,AbstractIndex,double,boolean)" num="168" count="480" type="method"/>
            <line num="169" count="480" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="172" count="2870" type="method"/>
            <line num="174" count="2870" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwapWithComponents.java" name="SwapWithComponents.java">
            <metrics coveredelements="27" coveredconditionals="4" complexity="4" loc="93" coveredmethods="2" methods="2" elements="27" classes="1" ncloc="48" statements="21" conditionals="4" coveredstatements="21"/>
            <class name="SwapWithComponents">
               <metrics coveredelements="27" coveredconditionals="4" complexity="4" coveredmethods="2" methods="2" elements="27" statements="21" conditionals="4" coveredstatements="21"/>
            </class>
            <line complexity="3" visibility="public" signature="SwapWithComponents(double[],double[],double[])" num="36" count="60" type="method"/>
            <line num="40" count="60" type="stmt"/>
            <line num="50" count="60" type="stmt"/>
            <line num="52" count="60" type="stmt"/>
            <line num="54" count="60" type="stmt"/>
            <line num="55" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="55" type="cond"/>
            <line num="56" count="300" type="stmt"/>
            <line num="57" count="300" type="stmt"/>
            <line num="58" count="300" type="stmt"/>
            <line num="60" count="60" type="stmt"/>
            <line num="61" count="60" type="stmt"/>
            <line num="63" count="60" type="stmt"/>
            <line num="64" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="64" type="cond"/>
            <line num="65" count="300" type="stmt"/>
            <line num="66" count="300" type="stmt"/>
            <line num="68" count="300" type="stmt"/>
            <line num="69" count="300" type="stmt"/>
            <line num="71" count="60" type="stmt"/>
            <line num="72" count="60" type="stmt"/>
            <line num="74" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="87" count="60" type="method"/>
            <line num="89" count="60" type="stmt"/>
            <line num="91" count="60" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaprateCovarianceAnalyticApproximation.java" name="SwaprateCovarianceAnalyticApproximation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="93" coveredmethods="0" methods="3" elements="33" classes="1" ncloc="48" statements="22" conditionals="8" coveredstatements="0"/>
            <class name="SwaprateCovarianceAnalyticApproximation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="33" statements="22" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaprateCovarianceAnalyticApproximation(double[],double[])" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,MonteCarloSimulationModel) : RandomVariable" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValues(double,TimeDiscretization,LIBORMarketModel) : RandomVariable" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/Swaption.java" name="Swaption.java">
            <metrics coveredelements="76" coveredconditionals="11" complexity="21" loc="267" coveredmethods="6" methods="14" elements="94" classes="1" ncloc="141" statements="68" conditionals="12" coveredstatements="59"/>
            <class name="Swaption">
               <metrics coveredelements="76" coveredconditionals="11" complexity="21" coveredmethods="6" methods="14" elements="94" statements="68" conditionals="12" coveredstatements="59"/>
            </class>
            <line complexity="1" visibility="public" signature="Swaption(double,double[],double[],double[],double[],double)" num="57" count="1445" type="method"/>
            <line num="58" count="1445" type="stmt"/>
            <line num="59" count="1445" type="stmt"/>
            <line num="60" count="1445" type="stmt"/>
            <line num="61" count="1445" type="stmt"/>
            <line num="62" count="1445" type="stmt"/>
            <line num="63" count="1445" type="stmt"/>
            <line num="64" count="1445" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swaption(double,double[],double[],double[],double[])" num="76" count="5" type="method"/>
            <line num="77" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swaption(double,double[],double[],double[])" num="88" count="1440" type="method"/>
            <line num="93" count="1440" type="stmt"/>
            <line complexity="2" visibility="public" signature="Swaption(double,TimeDiscretization,double)" num="103" count="278416" type="method"/>
            <line num="107" count="278414" type="stmt"/>
            <line num="108" count="278415" type="stmt"/>
            <line num="110" count="278416" type="stmt"/>
            <line num="111" count="278412" type="stmt"/>
            <line num="112" count="278411" type="stmt"/>
            <line falsecount="278412" truecount="5770359" num="112" type="cond"/>
            <line num="113" count="5770762" type="stmt"/>
            <line num="114" count="5770366" type="stmt"/>
            <line num="117" count="278413" type="stmt"/>
            <line num="119" count="278412" type="stmt"/>
            <line num="120" count="278413" type="stmt"/>
            <line num="122" count="278413" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="135" count="626164" type="method"/>
            <line num="140" count="626168" type="stmt"/>
            <line num="143" count="626173" type="stmt"/>
            <line falsecount="586472" truecount="10730559" num="143" type="cond"/>
            <line num="145" count="10731045" type="stmt"/>
            <line num="146" count="10731034" type="stmt"/>
            <line num="147" count="10730925" type="stmt"/>
            <line num="149" count="10730802" type="stmt"/>
            <line falsecount="10730613" truecount="238" num="149" type="cond"/>
            <line num="150" count="238" type="stmt"/>
            <line num="153" count="10730579" type="stmt"/>
            <line falsecount="10730036" truecount="406" num="153" type="cond"/>
            <line num="156" count="10730416" type="stmt"/>
            <line num="159" count="10690487" type="stmt"/>
            <line num="163" count="10690803" type="stmt"/>
            <line num="164" count="10691361" type="stmt"/>
            <line num="165" count="10691385" type="stmt"/>
            <line falsecount="400" truecount="10690273" num="165" type="cond"/>
            <line num="166" count="10690809" type="stmt"/>
            <line num="167" count="10690130" type="stmt"/>
            <line num="168" count="10689999" type="stmt"/>
            <line num="169" count="10690006" type="stmt"/>
            <line num="172" count="10689948" type="stmt"/>
            <line num="173" count="10689958" type="stmt"/>
            <line num="174" count="10690008" type="stmt"/>
            <line num="178" count="10691028" type="stmt"/>
            <line num="181" count="10690569" type="stmt"/>
            <line num="187" count="586710" type="stmt"/>
            <line num="189" count="586710" type="stmt"/>
            <line num="190" count="586686" type="stmt"/>
            <line num="191" count="586712" type="stmt"/>
            <line num="193" count="586701" type="stmt"/>
            <line num="194" count="586701" type="stmt"/>
            <line num="195" count="586710" type="stmt"/>
            <line num="197" count="586693" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(ForwardCurve,double) : double" num="208" count="1" type="method"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="211" type="cond"/>
            <line num="212" count="0" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="229" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExerciseIndicator(LIBORModelMonteCarloSimulationModel) : RandomVariable" num="239" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExerciseDate() : double" num="244" count="0" type="method"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixingDates() : double[]" num="248" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentDates() : double[]" num="252" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodLengths() : double[]" num="256" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwaprates() : double[]" num="260" count="0" type="method"/>
            <line num="261" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotional() : double" num="264" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionATM.java" name="SwaptionATM.java">
            <metrics coveredelements="21" coveredconditionals="2" complexity="9" loc="76" coveredmethods="3" methods="3" elements="28" classes="1" ncloc="44" statements="21" conditionals="4" coveredstatements="16"/>
            <class name="SwaptionATM">
               <metrics coveredelements="21" coveredconditionals="2" complexity="9" coveredmethods="3" methods="3" elements="28" statements="21" conditionals="4" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionATM(double[],ValueUnit)" num="26" count="1232" type="method"/>
            <line num="27" count="1232" type="stmt"/>
            <line num="28" count="1232" type="stmt"/>
            <line num="29" count="1232" type="stmt"/>
            <line complexity="7" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="32" count="276265" type="method"/>
            <line num="35" count="276266" type="stmt"/>
            <line num="36" count="276272" type="stmt"/>
            <line falsecount="0" truecount="276270" num="36" type="cond"/>
            <line num="38" count="276262" type="stmt"/>
            <line num="39" count="276255" type="stmt"/>
            <line falsecount="0" truecount="276261" num="39" type="cond"/>
            <line num="42" count="276272" type="stmt"/>
            <line num="45" count="276276" type="stmt"/>
            <line num="48" count="276271" type="stmt"/>
            <line num="50" count="258313" type="stmt"/>
            <line num="51" count="576" type="stmt"/>
            <line num="52" count="576" type="stmt"/>
            <line num="53" count="257732" type="stmt"/>
            <line num="54" count="257747" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getImpliedBachelierATMOptionVolatility(RandomVariable,double,double) : RandomVariable" num="73" count="257744" type="method"/>
            <line num="74" count="257747" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionAnalyticApproximation.java" name="SwaptionAnalyticApproximation.java">
            <metrics coveredelements="110" coveredconditionals="25" complexity="24" loc="286" coveredmethods="4" methods="5" elements="118" classes="1" ncloc="146" statements="85" conditionals="28" coveredstatements="81"/>
            <class name="SwaptionAnalyticApproximation">
               <metrics coveredelements="110" coveredconditionals="25" complexity="24" coveredmethods="4" methods="5" elements="118" statements="85" conditionals="28" coveredstatements="81"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionAnalyticApproximation(double,TimeDiscretization)" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionAnalyticApproximation(double,double[],ValueUnit)" num="93" count="1585" type="method"/>
            <line num="94" count="1585" type="stmt"/>
            <line num="95" count="1585" type="stmt"/>
            <line num="96" count="1585" type="stmt"/>
            <line num="97" count="1585" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="100" count="13373" type="method"/>
            <line num="102" count="13375" type="stmt"/>
            <line num="103" count="13378" type="stmt"/>
            <line falsecount="0" truecount="13371" num="103" type="cond"/>
            <line num="104" count="13364" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getValues(double,TimeDiscretization,LIBORMarketModel) : RandomVariable" num="122" count="13347" type="method"/>
            <line num="123" count="13354" type="stmt"/>
            <line falsecount="13357" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="13357" type="stmt"/>
            <line num="128" count="13374" type="stmt"/>
            <line num="130" count="13363" type="stmt"/>
            <line num="131" count="13351" type="stmt"/>
            <line num="132" count="13365" type="stmt"/>
            <line num="134" count="13361" type="stmt"/>
            <line num="135" count="13342" type="stmt"/>
            <line num="138" count="13352" type="stmt"/>
            <line num="141" count="13364" type="stmt"/>
            <line num="142" count="13361" type="stmt"/>
            <line falsecount="13277" truecount="117661" num="142" type="cond"/>
            <line num="144" count="118740" type="stmt"/>
            <line falsecount="116312" truecount="593435" num="144" type="cond"/>
            <line num="145" count="602607" type="stmt"/>
            <line num="148" count="117944" type="stmt"/>
            <line num="152" count="13275" type="stmt"/>
            <line falsecount="13286" truecount="1" num="152" type="cond"/>
            <line num="153" count="1" type="stmt"/>
            <line num="156" count="13298" type="stmt"/>
            <line num="159" count="13308" type="stmt"/>
            <line falsecount="1176" truecount="12150" num="159" type="cond"/>
            <line num="160" count="12152" type="stmt"/>
            <line num="162" count="1176" type="stmt"/>
            <line falsecount="0" truecount="1176" num="162" type="cond"/>
            <line num="164" count="1176" type="stmt"/>
            <line num="165" count="1176" type="stmt"/>
            <line num="167" count="1176" type="stmt"/>
            <line num="169" count="1176" type="stmt"/>
            <line num="170" count="1176" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="getLogSwaprateDerivative(TimeDiscretization,DiscountCurve,ForwardCurve) : Map&lt;String, double[]&gt;" num="188" count="13335" type="method"/>
            <line num="193" count="13348" type="stmt"/>
            <line num="195" count="13359" type="stmt"/>
            <line falsecount="1584" truecount="11762" num="196" type="cond"/>
            <line num="201" count="11752" type="stmt"/>
            <line num="203" count="1584" type="stmt"/>
            <line num="204" count="1585" type="stmt"/>
            <line num="205" count="1584" type="stmt"/>
            <line num="210" count="1585" type="stmt"/>
            <line falsecount="1297" truecount="288" num="210" type="cond"/>
            <line num="211" count="288" type="stmt"/>
            <line num="213" count="1584" type="stmt"/>
            <line num="215" count="1583" type="stmt"/>
            <line num="216" count="1582" type="stmt"/>
            <line num="219" count="1583" type="stmt"/>
            <line num="220" count="1584" type="stmt"/>
            <line num="223" count="1585" type="stmt"/>
            <line num="224" count="1585" type="stmt"/>
            <line num="227" count="1585" type="stmt"/>
            <line num="230" count="1585" type="stmt"/>
            <line falsecount="1585" truecount="8966" num="230" type="cond"/>
            <line num="231" count="8963" type="stmt"/>
            <line num="233" count="8962" type="stmt"/>
            <line num="234" count="8964" type="stmt"/>
            <line num="238" count="1585" type="stmt"/>
            <line num="239" count="1585" type="stmt"/>
            <line num="240" count="1585" type="stmt"/>
            <line falsecount="1585" truecount="8665" num="240" type="cond"/>
            <line num="241" count="8662" type="stmt"/>
            <line num="242" count="8665" type="stmt"/>
            <line num="243" count="8664" type="stmt"/>
            <line num="247" count="1585" type="stmt"/>
            <line num="249" count="1585" type="stmt"/>
            <line num="250" count="1585" type="stmt"/>
            <line falsecount="1585" truecount="8965" num="250" type="cond"/>
            <line num="251" count="8964" type="stmt"/>
            <line num="252" count="8964" type="stmt"/>
            <line num="255" count="1585" type="stmt"/>
            <line num="256" count="1585" type="stmt"/>
            <line num="257" count="1585" type="stmt"/>
            <line falsecount="1585" truecount="8963" num="257" type="cond"/>
            <line num="258" count="8962" type="stmt"/>
            <line falsecount="1885" truecount="7078" num="258" type="cond"/>
            <line num="259" count="7079" type="stmt"/>
            <line num="262" count="8963" type="stmt"/>
            <line num="263" count="8964" type="stmt"/>
            <line num="265" count="8963" type="stmt"/>
            <line num="267" count="8962" type="stmt"/>
            <line num="268" count="8961" type="stmt"/>
            <line num="269" count="8964" type="stmt"/>
            <line num="271" count="8962" type="stmt"/>
            <line num="276" count="1585" type="stmt"/>
            <line num="277" count="1585" type="stmt"/>
            <line num="278" count="1585" type="stmt"/>
            <line num="279" count="1585" type="stmt"/>
            <line num="281" count="1585" type="stmt"/>
            <line num="283" count="1585" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionAnalyticApproximationRebonato.java" name="SwaptionAnalyticApproximationRebonato.java">
            <metrics coveredelements="93" coveredconditionals="23" complexity="21" loc="253" coveredmethods="4" methods="5" elements="106" classes="1" ncloc="120" statements="73" conditionals="28" coveredstatements="66"/>
            <class name="SwaptionAnalyticApproximationRebonato">
               <metrics coveredelements="93" coveredconditionals="23" complexity="21" coveredmethods="4" methods="5" elements="106" statements="73" conditionals="28" coveredstatements="66"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionAnalyticApproximationRebonato(double,TimeDiscretization)" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionAnalyticApproximationRebonato(double,double[],ValueUnit)" num="89" count="120" type="method"/>
            <line num="90" count="120" type="stmt"/>
            <line num="91" count="120" type="stmt"/>
            <line num="92" count="120" type="stmt"/>
            <line num="93" count="120" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="96" count="120" type="method"/>
            <line num="98" count="120" type="stmt"/>
            <line num="99" count="120" type="stmt"/>
            <line falsecount="0" truecount="120" num="99" type="cond"/>
            <line num="100" count="120" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getValues(double,TimeDiscretization,LIBORMarketModel) : RandomVariable" num="118" count="120" type="method"/>
            <line num="119" count="120" type="stmt"/>
            <line falsecount="120" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="120" type="stmt"/>
            <line num="124" count="120" type="stmt"/>
            <line num="126" count="120" type="stmt"/>
            <line num="127" count="120" type="stmt"/>
            <line num="128" count="120" type="stmt"/>
            <line num="130" count="120" type="stmt"/>
            <line num="131" count="120" type="stmt"/>
            <line num="134" count="120" type="stmt"/>
            <line num="137" count="120" type="stmt"/>
            <line num="138" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="138" type="cond"/>
            <line num="140" count="600" type="stmt"/>
            <line falsecount="600" truecount="1200" num="140" type="cond"/>
            <line num="141" count="1200" type="stmt"/>
            <line num="144" count="600" type="stmt"/>
            <line num="148" count="120" type="stmt"/>
            <line falsecount="120" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="120" type="stmt"/>
            <line num="155" count="120" type="stmt"/>
            <line falsecount="120" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="160" count="120" type="stmt"/>
            <line num="161" count="120" type="stmt"/>
            <line num="163" count="120" type="stmt"/>
            <line num="165" count="120" type="stmt"/>
            <line num="166" count="120" type="stmt"/>
            <line complexity="9" visibility="public" signature="getLogSwaprateDerivative(TimeDiscretization,DiscountCurve,ForwardCurve,double[]) : Map&lt;String, double[]&gt;" num="181" count="120" type="method"/>
            <line num="185" count="120" type="stmt"/>
            <line num="186" count="120" type="stmt"/>
            <line falsecount="120" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="191" count="120" type="stmt"/>
            <line num="192" count="120" type="stmt"/>
            <line num="195" count="120" type="stmt"/>
            <line num="196" count="120" type="stmt"/>
            <line num="199" count="120" type="stmt"/>
            <line num="200" count="120" type="stmt"/>
            <line num="203" count="120" type="stmt"/>
            <line num="206" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="206" type="cond"/>
            <line num="207" count="600" type="stmt"/>
            <line num="209" count="600" type="stmt"/>
            <line num="210" count="600" type="stmt"/>
            <line num="214" count="120" type="stmt"/>
            <line num="215" count="120" type="stmt"/>
            <line num="216" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="216" type="cond"/>
            <line num="217" count="600" type="stmt"/>
            <line num="218" count="600" type="stmt"/>
            <line num="219" count="600" type="stmt"/>
            <line num="222" count="120" type="stmt"/>
            <line num="223" count="120" type="stmt"/>
            <line num="224" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="224" type="cond"/>
            <line num="225" count="600" type="stmt"/>
            <line falsecount="120" truecount="480" num="225" type="cond"/>
            <line num="226" count="480" type="stmt"/>
            <line num="228" count="600" type="stmt"/>
            <line num="232" count="120" type="stmt"/>
            <line num="234" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="234" type="cond"/>
            <line num="235" count="600" type="stmt"/>
            <line falsecount="120" truecount="480" num="235" type="cond"/>
            <line num="236" count="480" type="stmt"/>
            <line num="239" count="600" type="stmt"/>
            <line num="240" count="600" type="stmt"/>
            <line falsecount="120" truecount="480" num="240" type="cond"/>
            <line num="242" count="600" type="stmt"/>
            <line num="246" count="120" type="stmt"/>
            <line num="247" count="120" type="stmt"/>
            <line num="248" count="120" type="stmt"/>
            <line num="249" count="120" type="stmt"/>
            <line num="251" count="120" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionFactory.java" name="SwaptionFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="42" coveredmethods="0" methods="2" elements="18" classes="1" ncloc="22" statements="10" conditionals="6" coveredstatements="0"/>
            <class name="SwaptionFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="2" elements="18" statements="10" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="SwaptionFactory()" num="22" count="0" type="method"/>
            <line complexity="4" visibility="public" signature="createSwaption(String,double,TimeDiscretization,String) : TermStructureMonteCarloProduct" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="27" type="cond"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="31" type="cond"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionFromSwapSchedules.java" name="SwaptionFromSwapSchedules.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="22" loc="227" coveredmethods="0" methods="7" elements="108" classes="2" ncloc="161" statements="83" conditionals="18" coveredstatements="0"/>
            <class name="SwaptionFromSwapSchedules">
               <metrics coveredelements="0" coveredconditionals="0" complexity="22" coveredmethods="0" methods="7" elements="108" statements="83" conditionals="18" coveredstatements="0"/>
            </class>
            <class name="SwaptionFromSwapSchedules.SwaptionType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionFromSwapSchedules(LocalDateTime,SwaptionType,LocalDate,Schedule,Schedule,double,double,ValueUnit)" num="47" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="67" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcessTimeDiscretization(LocalDateTime) : TimeDiscretization" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Period) : Double" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExerciseDate() : LocalDate" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValueOfLegAnalytic(double,LIBORModelMonteCarloSimulationModel,Schedule,boolean,double,double) : RandomVariable" num="184" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="211" type="cond"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="220" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionGeneralizedAnalyticApproximation.java" name="SwaptionGeneralizedAnalyticApproximation.java">
            <metrics coveredelements="110" coveredconditionals="24" complexity="34" loc="433" coveredmethods="4" methods="6" elements="190" classes="3" ncloc="236" statements="140" conditionals="44" coveredstatements="82"/>
            <class name="SwaptionGeneralizedAnalyticApproximation">
               <metrics coveredelements="110" coveredconditionals="24" complexity="34" coveredmethods="4" methods="6" elements="190" statements="140" conditionals="44" coveredstatements="82"/>
            </class>
            <class name="SwaptionGeneralizedAnalyticApproximation.StateSpace">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SwaptionGeneralizedAnalyticApproximation.ValueUnit">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionGeneralizedAnalyticApproximation(double,double[],ValueUnit,StateSpace)" num="105" count="1044" type="method"/>
            <line num="106" count="1044" type="stmt"/>
            <line num="107" count="1044" type="stmt"/>
            <line num="108" count="1044" type="stmt"/>
            <line num="109" count="1044" type="stmt"/>
            <line num="110" count="1044" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionGeneralizedAnalyticApproximation(double,TimeDiscretization,StateSpace)" num="123" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="127" count="107536" type="method"/>
            <line num="129" count="107538" type="stmt"/>
            <line num="130" count="107537" type="stmt"/>
            <line falsecount="0" truecount="107542" num="130" type="cond"/>
            <line num="131" count="107542" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getValues(double,TimeDiscretization,LIBORMarketModel) : RandomVariable" num="149" count="107526" type="method"/>
            <line num="150" count="107538" type="stmt"/>
            <line falsecount="107532" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="154" count="107535" type="stmt"/>
            <line num="155" count="107510" type="stmt"/>
            <line num="157" count="107495" type="stmt"/>
            <line num="158" count="107504" type="stmt"/>
            <line num="159" count="107513" type="stmt"/>
            <line num="160" count="107492" type="stmt"/>
            <line num="162" count="107488" type="stmt"/>
            <line falsecount="107451" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="168" count="107468" type="stmt"/>
            <line num="169" count="100541" type="stmt"/>
            <line num="173" count="100510" type="stmt"/>
            <line num="176" count="100573" type="stmt"/>
            <line num="177" count="100568" type="stmt"/>
            <line falsecount="99667" truecount="3281873" num="177" type="cond"/>
            <line num="179" count="3251821" type="stmt"/>
            <line falsecount="3091436" truecount="26626245" num="179" type="cond"/>
            <line num="180" count="27290182" type="stmt"/>
            <line num="183" count="3250762" type="stmt"/>
            <line num="187" count="99698" type="stmt"/>
            <line falsecount="99768" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="191" count="99850" type="stmt"/>
            <line num="194" count="99918" type="stmt"/>
            <line falsecount="60" truecount="99854" num="194" type="cond"/>
            <line num="195" count="99971" type="stmt"/>
            <line num="199" count="60" type="stmt"/>
            <line num="200" count="60" type="stmt"/>
            <line num="202" count="60" type="stmt"/>
            <line num="203" count="60" type="stmt"/>
            <line num="204" count="60" type="stmt"/>
            <line falsecount="60" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="60" type="stmt"/>
            <line num="211" count="60" type="stmt"/>
            <line complexity="11" visibility="public" signature="getLogSwapRateDerivative(TimeDiscretization,DiscountCurve,ForwardCurve) : Map&lt;String, double[]&gt;" num="226" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="239" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="290" type="cond"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="298" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="298" type="cond"/>
            <line num="299" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="getSwapRateDerivative(TimeDiscretization,AnalyticModel,DiscountCurve,ForwardCurve) : Map&lt;String, double[]&gt;" num="337" count="107480" type="method"/>
            <line num="342" count="107516" type="stmt"/>
            <line num="344" count="107514" type="stmt"/>
            <line falsecount="8186" truecount="99317" num="345" type="cond"/>
            <line num="350" count="99324" type="stmt"/>
            <line num="352" count="8183" type="stmt"/>
            <line num="353" count="8185" type="stmt"/>
            <line num="354" count="8185" type="stmt"/>
            <line num="359" count="8185" type="stmt"/>
            <line falsecount="8177" truecount="0" num="359" type="cond"/>
            <line num="360" count="0" type="stmt"/>
            <line num="363" count="8186" type="stmt"/>
            <line num="364" count="8181" type="stmt"/>
            <line num="367" count="8182" type="stmt"/>
            <line num="368" count="8182" type="stmt"/>
            <line num="371" count="8177" type="stmt"/>
            <line num="372" count="1272" type="stmt"/>
            <line num="375" count="1272" type="stmt"/>
            <line num="378" count="1271" type="stmt"/>
            <line falsecount="1272" truecount="43628" num="378" type="cond"/>
            <line num="379" count="43629" type="stmt"/>
            <line num="381" count="43631" type="stmt"/>
            <line num="382" count="43633" type="stmt"/>
            <line num="386" count="1272" type="stmt"/>
            <line num="387" count="1272" type="stmt"/>
            <line num="388" count="1272" type="stmt"/>
            <line falsecount="1272" truecount="22120" num="388" type="cond"/>
            <line num="389" count="22120" type="stmt"/>
            <line num="390" count="22120" type="stmt"/>
            <line num="391" count="22120" type="stmt"/>
            <line num="395" count="1272" type="stmt"/>
            <line num="397" count="1272" type="stmt"/>
            <line num="398" count="1272" type="stmt"/>
            <line falsecount="1272" truecount="43640" num="398" type="cond"/>
            <line num="399" count="43640" type="stmt"/>
            <line num="400" count="43640" type="stmt"/>
            <line num="403" count="1272" type="stmt"/>
            <line num="404" count="1272" type="stmt"/>
            <line num="405" count="1272" type="stmt"/>
            <line falsecount="1272" truecount="43631" num="405" type="cond"/>
            <line num="406" count="43631" type="stmt"/>
            <line falsecount="22789" truecount="20848" num="406" type="cond"/>
            <line num="407" count="20847" type="stmt"/>
            <line num="410" count="43630" type="stmt"/>
            <line num="411" count="43629" type="stmt"/>
            <line num="413" count="43632" type="stmt"/>
            <line num="415" count="43630" type="stmt"/>
            <line num="416" count="43636" type="stmt"/>
            <line num="417" count="43636" type="stmt"/>
            <line num="419" count="43634" type="stmt"/>
            <line num="423" count="1272" type="stmt"/>
            <line num="424" count="1272" type="stmt"/>
            <line num="425" count="1272" type="stmt"/>
            <line num="426" count="1272" type="stmt"/>
            <line num="428" count="1272" type="stmt"/>
            <line num="430" count="1272" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionSimple.java" name="SwaptionSimple.java">
            <metrics coveredelements="33" coveredconditionals="9" complexity="15" loc="109" coveredmethods="3" methods="4" elements="47" classes="1" ncloc="65" statements="29" conditionals="14" coveredstatements="21"/>
            <class name="SwaptionSimple">
               <metrics coveredelements="33" coveredconditionals="9" complexity="15" coveredmethods="3" methods="4" elements="47" statements="29" conditionals="14" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionSimple(double,TimeDiscretization)" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionSimple(double,double[],ValueUnit)" num="49" count="1900" type="method"/>
            <line num="50" count="1900" type="stmt"/>
            <line num="51" count="1900" type="stmt"/>
            <line num="52" count="1900" type="stmt"/>
            <line num="53" count="1900" type="stmt"/>
            <line num="54" count="1900" type="stmt"/>
            <line complexity="12" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="67" count="318040" type="method"/>
            <line num="69" count="318037" type="stmt"/>
            <line num="71" count="296502" type="stmt"/>
            <line falsecount="295640" truecount="864" num="71" type="cond"/>
            <line num="72" count="864" type="stmt"/>
            <line num="75" count="295642" type="stmt"/>
            <line num="76" count="295650" type="stmt"/>
            <line falsecount="5519" truecount="290129" num="76" type="cond"/>
            <line num="78" count="295642" type="stmt"/>
            <line num="79" count="295653" type="stmt"/>
            <line num="80" count="295650" type="stmt"/>
            <line num="81" count="295651" type="stmt"/>
            <line falsecount="5520" truecount="290133" num="81" type="cond"/>
            <line num="83" count="295653" type="stmt"/>
            <line falsecount="290131" truecount="5520" num="83" type="cond"/>
            <line num="84" count="5520" type="stmt"/>
            <line num="85" count="5519" type="stmt"/>
            <line num="87" count="290130" type="stmt"/>
            <line falsecount="0" truecount="290130" num="87" type="cond"/>
            <line num="88" count="290129" type="stmt"/>
            <line num="89" count="290130" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="104" count="30" type="method"/>
            <line num="106" count="30" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionSingleCurve.java" name="SwaptionSingleCurve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="205" coveredmethods="0" methods="6" elements="71" classes="1" ncloc="105" statements="55" conditionals="10" coveredstatements="0"/>
            <class name="SwaptionSingleCurve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="6" elements="71" statements="55" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionSingleCurve(double,double[],double[],double[],double[])" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionSingleCurve(double,double[],double[],double[])" num="65" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="SwaptionSingleCurve(double,TimeDiscretization,double)" num="85" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="115" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(ForwardCurve,double) : double" num="175" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionSingleCurveAnalyticApproximation.java" name="SwaptionSingleCurveAnalyticApproximation.java">
            <metrics coveredelements="87" coveredconditionals="18" complexity="18" loc="222" coveredmethods="4" methods="5" elements="97" classes="1" ncloc="109" statements="70" conditionals="22" coveredstatements="65"/>
            <class name="SwaptionSingleCurveAnalyticApproximation">
               <metrics coveredelements="87" coveredconditionals="18" complexity="18" coveredmethods="4" methods="5" elements="97" statements="70" conditionals="22" coveredstatements="65"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionSingleCurveAnalyticApproximation(double,TimeDiscretization)" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionSingleCurveAnalyticApproximation(double,double[],ValueUnit)" num="68" count="120" type="method"/>
            <line num="69" count="120" type="stmt"/>
            <line num="70" count="120" type="stmt"/>
            <line num="71" count="120" type="stmt"/>
            <line num="72" count="120" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="75" count="120" type="method"/>
            <line num="77" count="120" type="stmt"/>
            <line num="78" count="120" type="stmt"/>
            <line falsecount="0" truecount="120" num="78" type="cond"/>
            <line num="79" count="120" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getValues(double,TimeDiscretization,LIBORMarketModel) : RandomVariable" num="97" count="120" type="method"/>
            <line num="98" count="120" type="stmt"/>
            <line falsecount="120" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="102" count="120" type="stmt"/>
            <line num="103" count="120" type="stmt"/>
            <line num="105" count="120" type="stmt"/>
            <line num="106" count="120" type="stmt"/>
            <line num="107" count="120" type="stmt"/>
            <line num="109" count="120" type="stmt"/>
            <line num="110" count="120" type="stmt"/>
            <line num="111" count="120" type="stmt"/>
            <line num="112" count="120" type="stmt"/>
            <line num="115" count="120" type="stmt"/>
            <line num="118" count="120" type="stmt"/>
            <line num="119" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="119" type="cond"/>
            <line num="121" count="600" type="stmt"/>
            <line falsecount="600" truecount="1200" num="121" type="cond"/>
            <line num="122" count="1200" type="stmt"/>
            <line num="125" count="600" type="stmt"/>
            <line num="129" count="120" type="stmt"/>
            <line falsecount="120" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="133" count="120" type="stmt"/>
            <line num="136" count="120" type="stmt"/>
            <line falsecount="120" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="141" count="120" type="stmt"/>
            <line num="142" count="120" type="stmt"/>
            <line num="144" count="120" type="stmt"/>
            <line num="146" count="120" type="stmt"/>
            <line num="147" count="120" type="stmt"/>
            <line complexity="6" visibility="public" signature="getLogSwaprateDerivative(TimeDiscretization,ForwardCurve,double[]) : Map&lt;String, double[]&gt;" num="161" count="120" type="method"/>
            <line num="162" count="120" type="stmt"/>
            <line num="163" count="120" type="stmt"/>
            <line num="166" count="120" type="stmt"/>
            <line num="167" count="120" type="stmt"/>
            <line num="170" count="120" type="stmt"/>
            <line num="171" count="120" type="stmt"/>
            <line num="174" count="120" type="stmt"/>
            <line num="175" count="120" type="stmt"/>
            <line falsecount="120" truecount="1860" num="175" type="cond"/>
            <line num="176" count="1860" type="stmt"/>
            <line num="177" count="1860" type="stmt"/>
            <line num="178" count="1860" type="stmt"/>
            <line num="182" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="182" type="cond"/>
            <line num="183" count="600" type="stmt"/>
            <line num="184" count="600" type="stmt"/>
            <line num="186" count="600" type="stmt"/>
            <line num="187" count="600" type="stmt"/>
            <line num="191" count="120" type="stmt"/>
            <line num="192" count="120" type="stmt"/>
            <line num="193" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="193" type="cond"/>
            <line num="194" count="600" type="stmt"/>
            <line num="195" count="600" type="stmt"/>
            <line num="196" count="600" type="stmt"/>
            <line num="201" count="120" type="stmt"/>
            <line num="203" count="120" type="stmt"/>
            <line num="205" count="120" type="stmt"/>
            <line num="206" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="206" type="cond"/>
            <line num="207" count="600" type="stmt"/>
            <line falsecount="120" truecount="480" num="207" type="cond"/>
            <line num="208" count="480" type="stmt"/>
            <line num="211" count="600" type="stmt"/>
            <line num="215" count="120" type="stmt"/>
            <line num="216" count="120" type="stmt"/>
            <line num="217" count="120" type="stmt"/>
            <line num="218" count="120" type="stmt"/>
            <line num="220" count="120" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionWithComponents.java" name="SwaptionWithComponents.java">
            <metrics coveredelements="28" coveredconditionals="4" complexity="4" loc="99" coveredmethods="2" methods="2" elements="28" classes="1" ncloc="54" statements="22" conditionals="4" coveredstatements="22"/>
            <class name="SwaptionWithComponents">
               <metrics coveredelements="28" coveredconditionals="4" complexity="4" coveredmethods="2" methods="2" elements="28" statements="22" conditionals="4" coveredstatements="22"/>
            </class>
            <line complexity="3" visibility="public" signature="SwaptionWithComponents(double,double[],double[],double[])" num="37" count="60" type="method"/>
            <line num="42" count="60" type="stmt"/>
            <line num="52" count="60" type="stmt"/>
            <line num="54" count="60" type="stmt"/>
            <line num="56" count="60" type="stmt"/>
            <line num="57" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="57" type="cond"/>
            <line num="58" count="300" type="stmt"/>
            <line num="59" count="300" type="stmt"/>
            <line num="62" count="300" type="stmt"/>
            <line num="64" count="60" type="stmt"/>
            <line num="65" count="60" type="stmt"/>
            <line num="67" count="60" type="stmt"/>
            <line num="68" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="68" type="cond"/>
            <line num="69" count="300" type="stmt"/>
            <line num="70" count="300" type="stmt"/>
            <line num="71" count="300" type="stmt"/>
            <line num="74" count="300" type="stmt"/>
            <line num="76" count="60" type="stmt"/>
            <line num="77" count="60" type="stmt"/>
            <line num="79" count="60" type="stmt"/>
            <line num="80" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="93" count="60" type="method"/>
            <line num="95" count="60" type="stmt"/>
            <line num="97" count="60" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/TermStructureMonteCarloProduct.java" name="TermStructureMonteCarloProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="57" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TermStructureMonteCarloProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.products.indices">
         <metrics coveredelements="123" complexity="160" loc="1872" methods="106" classes="23" statements="382" coveredconditionals="17" coveredmethods="20" elements="576" ncloc="1025" files="22" conditionals="88" coveredstatements="86"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/AbstractIndex.java" name="AbstractIndex.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="4" loc="68" coveredmethods="3" methods="4" elements="9" classes="1" ncloc="24" statements="5" conditionals="0" coveredstatements="4"/>
            <class name="AbstractIndex">
               <metrics coveredelements="7" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractIndex(String,String)" num="35" count="4187" type="method"/>
            <line num="36" count="4187" type="stmt"/>
            <line num="37" count="4187" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractIndex(String)" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractIndex()" num="53" count="2358" type="method"/>
            <line num="54" count="2358" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="65" count="76738" type="method"/>
            <line num="66" count="76739" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/AccruedInterest.java" name="AccruedInterest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="96" coveredmethods="0" methods="4" elements="22" classes="1" ncloc="48" statements="16" conditionals="2" coveredstatements="0"/>
            <class name="AccruedInterest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="22" statements="16" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AccruedInterest(String,String,LocalDate,LocalDate,LocalDate,AbstractIndex,Double,DayCountConvention,boolean)" num="61" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getModelDate(double) : LocalDate" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/AnalyticModelForwardCurveIndex.java" name="AnalyticModelForwardCurveIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="85" coveredmethods="0" methods="5" elements="26" classes="1" ncloc="46" statements="17" conditionals="4" coveredstatements="0"/>
            <class name="AnalyticModelForwardCurveIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="26" statements="17" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AnalyticModelForwardCurveIndex(String,String,double,double)" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="46" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStartOffset() : double" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/AnalyticModelIndex.java" name="AnalyticModelIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="83" coveredmethods="0" methods="5" elements="25" classes="1" ncloc="44" statements="16" conditionals="4" coveredstatements="0"/>
            <class name="AnalyticModelIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="25" statements="16" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AnalyticModelIndex(String,String,double)" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="44" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStartOffset() : double" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/CappedFlooredIndex.java" name="CappedFlooredIndex.java">
            <metrics coveredelements="14" coveredconditionals="2" complexity="13" loc="84" coveredmethods="2" methods="4" elements="45" classes="1" ncloc="54" statements="23" conditionals="18" coveredstatements="10"/>
            <class name="CappedFlooredIndex">
               <metrics coveredelements="14" coveredconditionals="2" complexity="13" coveredmethods="2" methods="4" elements="45" statements="23" conditionals="18" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="CappedFlooredIndex(AbstractIndex,AbstractIndex,AbstractIndex)" num="36" count="20" type="method"/>
            <line num="37" count="20" type="stmt"/>
            <line num="38" count="20" type="stmt"/>
            <line num="39" count="20" type="stmt"/>
            <line num="40" count="20" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="43" count="400" type="method"/>
            <line num="45" count="400" type="stmt"/>
            <line num="47" count="400" type="stmt"/>
            <line falsecount="0" truecount="400" num="47" type="cond"/>
            <line num="48" count="400" type="stmt"/>
            <line num="50" count="400" type="stmt"/>
            <line falsecount="0" truecount="400" num="50" type="cond"/>
            <line num="51" count="400" type="stmt"/>
            <line num="54" count="400" type="stmt"/>
            <line complexity="8" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/ConstantMaturitySwaprate.java" name="ConstantMaturitySwaprate.java">
            <metrics coveredelements="32" coveredconditionals="5" complexity="12" loc="145" coveredmethods="4" methods="9" elements="48" classes="1" ncloc="70" statements="33" conditionals="6" coveredstatements="23"/>
            <class name="ConstantMaturitySwaprate">
               <metrics coveredelements="32" coveredconditionals="5" complexity="12" coveredmethods="4" methods="9" elements="48" statements="33" conditionals="6" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="public" signature="ConstantMaturitySwaprate(String,String,double,double[])" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ConstantMaturitySwaprate(double,double[])" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ConstantMaturitySwaprate(double[])" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="ConstantMaturitySwaprate(String,String,double,double,double)" num="72" count="26" type="method"/>
            <line num="73" count="26" type="stmt"/>
            <line num="74" count="26" type="stmt"/>
            <line num="76" count="26" type="stmt"/>
            <line num="77" count="26" type="stmt"/>
            <line falsecount="26" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="26" type="stmt"/>
            <line num="81" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="ConstantMaturitySwaprate(double,double,double)" num="92" count="26" type="method"/>
            <line num="93" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="ConstantMaturitySwaprate(double,double)" num="102" count="26" type="method"/>
            <line num="103" count="26" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="106" count="640" type="method"/>
            <line num="110" count="640" type="stmt"/>
            <line num="111" count="640" type="stmt"/>
            <line num="112" count="640" type="stmt"/>
            <line falsecount="640" truecount="11519" num="112" type="cond"/>
            <line num="113" count="11520" type="stmt"/>
            <line num="114" count="11520" type="stmt"/>
            <line num="118" count="640" type="stmt"/>
            <line num="119" count="640" type="stmt"/>
            <line num="120" count="640" type="stmt"/>
            <line falsecount="640" truecount="10880" num="120" type="cond"/>
            <line num="121" count="10880" type="stmt"/>
            <line num="122" count="10880" type="stmt"/>
            <line num="123" count="10880" type="stmt"/>
            <line num="125" count="640" type="stmt"/>
            <line num="126" count="640" type="stmt"/>
            <line num="128" count="640" type="stmt"/>
            <line num="130" count="640" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/DateIndex.java" name="DateIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="90" coveredmethods="0" methods="4" elements="27" classes="2" ncloc="51" statements="23" conditionals="0" coveredstatements="0"/>
            <class name="DateIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="4" elements="27" statements="23" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="DateIndex.DateIndexType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DateIndex(String,String,DateIndexType)" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DateIndex(String,DateIndexType)" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/FixedCoupon.java" name="FixedCoupon.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="5" loc="60" coveredmethods="2" methods="5" elements="11" classes="1" ncloc="29" statements="6" conditionals="0" coveredstatements="3"/>
            <class name="FixedCoupon">
               <metrics coveredelements="5" coveredconditionals="0" complexity="5" coveredmethods="2" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="FixedCoupon(double)" num="31" count="2250" type="method"/>
            <line num="32" count="2250" type="stmt"/>
            <line num="33" count="2250" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="36" count="12369" type="method"/>
            <line num="38" count="12370" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCoupon() : RandomVariable" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/ForwardCurveIndex.java" name="ForwardCurveIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="53" coveredmethods="0" methods="4" elements="9" classes="1" ncloc="26" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="ForwardCurveIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardCurveIndex(ForwardCurve)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/LIBORIndex.java" name="LIBORIndex.java">
            <metrics coveredelements="47" coveredconditionals="9" complexity="19" loc="164" coveredmethods="5" methods="9" elements="63" classes="1" ncloc="95" statements="42" conditionals="12" coveredstatements="33"/>
            <class name="LIBORIndex">
               <metrics coveredelements="47" coveredconditionals="9" complexity="19" coveredmethods="5" methods="9" elements="63" statements="42" conditionals="12" coveredstatements="33"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORIndex(String,String,String,BusinessdayCalendar,DateRollConvention)" num="41" count="228" type="method"/>
            <line num="43" count="228" type="stmt"/>
            <line num="44" count="228" type="stmt"/>
            <line num="45" count="228" type="stmt"/>
            <line num="46" count="228" type="stmt"/>
            <line num="47" count="228" type="stmt"/>
            <line num="48" count="228" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORIndex(String,double,double)" num="58" count="1575" type="method"/>
            <line num="59" count="1575" type="stmt"/>
            <line num="60" count="1575" type="stmt"/>
            <line num="61" count="1575" type="stmt"/>
            <line num="62" count="1575" type="stmt"/>
            <line num="63" count="1575" type="stmt"/>
            <line num="64" count="1575" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORIndex(double,double)" num="73" count="1449" type="method"/>
            <line num="74" count="1449" type="stmt"/>
            <line complexity="10" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="77" count="20369" type="method"/>
            <line num="81" count="20369" type="stmt"/>
            <line falsecount="2430" truecount="17940" num="81" type="cond"/>
            <line num="83" count="17940" type="stmt"/>
            <line falsecount="17940" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="89" count="20368" type="stmt"/>
            <line falsecount="20370" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="96" count="20370" type="stmt"/>
            <line num="101" count="20367" type="stmt"/>
            <line num="103" count="20369" type="stmt"/>
            <line falsecount="20306" truecount="60" num="103" type="cond"/>
            <line num="105" count="60" type="stmt"/>
            <line num="106" count="60" type="stmt"/>
            <line falsecount="60" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="60" type="stmt"/>
            <line num="110" count="60" type="stmt"/>
            <line num="111" count="60" type="stmt"/>
            <line num="112" count="60" type="stmt"/>
            <line num="115" count="20369" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStartOffset() : double" num="123" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getPeriodLength(LIBORModelMonteCarloSimulationModel,double) : double" num="127" count="20368" type="method"/>
            <line num="128" count="20370" type="stmt"/>
            <line falsecount="15810" truecount="4560" num="128" type="cond"/>
            <line num="129" count="4560" type="stmt"/>
            <line num="130" count="4560" type="stmt"/>
            <line num="131" count="4559" type="stmt"/>
            <line num="132" count="4557" type="stmt"/>
            <line num="134" count="4558" type="stmt"/>
            <line num="137" count="15810" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodLength() : double" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/LaggedIndex.java" name="LaggedIndex.java">
            <metrics coveredelements="10" coveredconditionals="1" complexity="5" loc="75" coveredmethods="2" methods="4" elements="22" classes="1" ncloc="46" statements="16" conditionals="2" coveredstatements="7"/>
            <class name="LaggedIndex">
               <metrics coveredelements="10" coveredconditionals="1" complexity="5" coveredmethods="2" methods="4" elements="22" statements="16" conditionals="2" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="LaggedIndex(AbstractProductComponent,String,BusinessdayCalendar)" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LaggedIndex(AbstractProductComponent,double)" num="49" count="4" type="method"/>
            <line num="50" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line num="52" count="4" type="stmt"/>
            <line num="53" count="4" type="stmt"/>
            <line num="54" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="62" count="140" type="method"/>
            <line num="64" count="140" type="stmt"/>
            <line falsecount="139" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="140" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/LinearCombinationIndex.java" name="LinearCombinationIndex.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="10" loc="108" coveredmethods="2" methods="8" elements="30" classes="1" ncloc="56" statements="18" conditionals="4" coveredstatements="6"/>
            <class name="LinearCombinationIndex">
               <metrics coveredelements="8" coveredconditionals="0" complexity="10" coveredmethods="2" methods="8" elements="30" statements="18" conditionals="4" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="LinearCombinationIndex(double,AbstractProductComponent,double,AbstractProductComponent)" num="38" count="84" type="method"/>
            <line num="39" count="84" type="stmt"/>
            <line num="40" count="84" type="stmt"/>
            <line num="41" count="84" type="stmt"/>
            <line num="42" count="84" type="stmt"/>
            <line num="43" count="84" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="46" count="160" type="method"/>
            <line num="48" count="160" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex1() : AbstractProductComponent" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex2() : AbstractProductComponent" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getScaling1() : double" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getScaling2() : double" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/MaxIndex.java" name="MaxIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="71" coveredmethods="0" methods="4" elements="27" classes="1" ncloc="46" statements="17" conditionals="6" coveredstatements="0"/>
            <class name="MaxIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="27" statements="17" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="MaxIndex(AbstractProductComponent)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/MinIndex.java" name="MinIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="71" coveredmethods="0" methods="4" elements="27" classes="1" ncloc="46" statements="17" conditionals="6" coveredstatements="0"/>
            <class name="MinIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="27" statements="17" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="MinIndex(AbstractProductComponent)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/NumerairePerformanceIndex.java" name="NumerairePerformanceIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="106" coveredmethods="0" methods="4" elements="34" classes="1" ncloc="65" statements="28" conditionals="2" coveredstatements="0"/>
            <class name="NumerairePerformanceIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="4" elements="34" statements="28" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NumerairePerformanceIndex(String,String,String,BusinessdayCalendar,DateRollConvention,DayCountConvention)" num="44" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="54" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/NumerairePerformanceOnScheduleIndex.java" name="NumerairePerformanceOnScheduleIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="105" coveredmethods="0" methods="5" elements="37" classes="1" ncloc="61" statements="28" conditionals="4" coveredstatements="0"/>
            <class name="NumerairePerformanceOnScheduleIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="5" elements="37" statements="28" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NumerairePerformanceOnScheduleIndex(String,String,Schedule)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="46" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getPeriod(LocalDateTime) : Period" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/PerformanceIndex.java" name="PerformanceIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="76" coveredmethods="0" methods="5" elements="22" classes="1" ncloc="39" statements="13" conditionals="4" coveredstatements="0"/>
            <class name="PerformanceIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="22" statements="13" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PerformanceIndex(AbstractProductComponent,AbstractProductComponent)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeratorIndex() : AbstractProductComponent" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDenominatorIndex() : AbstractProductComponent" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/PowIndex.java" name="PowIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="54" coveredmethods="0" methods="4" elements="10" classes="1" ncloc="28" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="PowIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PowIndex(AbstractProductComponent,double)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/ProductIndex.java" name="ProductIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="58" coveredmethods="0" methods="3" elements="18" classes="1" ncloc="33" statements="11" conditionals="4" coveredstatements="0"/>
            <class name="ProductIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="18" statements="11" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ProductIndex(AbstractIndex,AbstractIndex)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/TimeDiscreteEndOfMonthIndex.java" name="TimeDiscreteEndOfMonthIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="71" coveredmethods="0" methods="4" elements="15" classes="1" ncloc="34" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="TimeDiscreteEndOfMonthIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="15" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TimeDiscreteEndOfMonthIndex(String,AbstractIndex,int)" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="42" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/TriggerIndex.java" name="TriggerIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="81" coveredmethods="0" methods="4" elements="33" classes="1" ncloc="53" statements="21" conditionals="8" coveredstatements="0"/>
            <class name="TriggerIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="4" elements="33" statements="21" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TriggerIndex(AbstractProductComponent,AbstractProductComponent,AbstractProductComponent)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/UnsupportedIndex.java" name="UnsupportedIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="68" coveredmethods="0" methods="4" elements="16" classes="1" ncloc="31" statements="10" conditionals="2" coveredstatements="0"/>
            <class name="UnsupportedIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="16" statements="10" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="UnsupportedIndex(String,Exception)" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnsupportedIndex(Exception)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,LIBORModelMonteCarloSimulationModel) : RandomVariable" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling.descriptor">
         <metrics coveredelements="171" complexity="96" loc="1151" methods="94" classes="16" statements="179" coveredconditionals="2" coveredmethods="57" elements="277" ncloc="570" files="13" conditionals="4" coveredstatements="112"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/AnalyticModelDescriptor.java" name="AnalyticModelDescriptor.java">
            <metrics coveredelements="17" coveredconditionals="2" complexity="9" loc="88" coveredmethods="4" methods="7" elements="32" classes="1" ncloc="54" statements="21" conditionals="4" coveredstatements="11"/>
            <class name="AnalyticModelDescriptor">
               <metrics coveredelements="17" coveredconditionals="2" complexity="9" coveredmethods="4" methods="7" elements="32" statements="21" conditionals="4" coveredstatements="11"/>
            </class>
            <line complexity="3" visibility="public" signature="AnalyticModelDescriptor(LocalDate,Collection&lt;Curve&gt;,Collection&lt;VolatilitySurface&gt;)" num="30" count="4" type="method"/>
            <line num="31" count="4" type="stmt"/>
            <line num="32" count="4" type="stmt"/>
            <line num="34" count="4" type="stmt"/>
            <line num="35" count="4" type="stmt"/>
            <line num="37" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="37" type="cond"/>
            <line num="38" count="4" type="stmt"/>
            <line num="39" count="8" type="stmt"/>
            <line num="42" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelDescriptor(LocalDate,Map&lt;String, Curve&gt;,Map&lt;String, VolatilitySurface&gt;)" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="77" count="4" type="method"/>
            <line num="78" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurvesMap() : Map&lt;String, Curve&gt;" num="81" count="4" type="method"/>
            <line num="82" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilitySurfaceMap() : Map&lt;String, VolatilitySurface&gt;" num="85" count="4" type="method"/>
            <line num="86" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/AssetModelDescriptor.java" name="AssetModelDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="14" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AssetModelDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/BlackScholesModelDescriptor.java" name="BlackScholesModelDescriptor.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="8" loc="84" coveredmethods="6" methods="8" elements="21" classes="1" ncloc="43" statements="13" conditionals="0" coveredstatements="11"/>
            <class name="BlackScholesModelDescriptor">
               <metrics coveredelements="17" coveredconditionals="0" complexity="8" coveredmethods="6" methods="8" elements="21" statements="13" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesModelDescriptor(LocalDate,Double,DiscountCurve,DiscountCurve,Double)" num="29" count="4" type="method"/>
            <line num="32" count="4" type="stmt"/>
            <line num="33" count="4" type="stmt"/>
            <line num="34" count="4" type="stmt"/>
            <line num="35" count="4" type="stmt"/>
            <line num="36" count="4" type="stmt"/>
            <line num="37" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="53" count="10" type="method"/>
            <line num="54" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : Double" num="60" count="12" type="method"/>
            <line num="61" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="67" count="12" type="method"/>
            <line num="68" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="74" count="10" type="method"/>
            <line num="75" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : Double" num="81" count="14" type="method"/>
            <line num="82" count="14" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/HestonModelDescriptor.java" name="HestonModelDescriptor.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="12" loc="121" coveredmethods="10" methods="12" elements="33" classes="1" ncloc="63" statements="21" conditionals="0" coveredstatements="19"/>
            <class name="HestonModelDescriptor">
               <metrics coveredelements="29" coveredconditionals="0" complexity="12" coveredmethods="10" methods="12" elements="33" statements="21" conditionals="0" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="HestonModelDescriptor(LocalDate,Double,DiscountCurve,DiscountCurve,Double,Double,Double,Double,Double)" num="34" count="126" type="method"/>
            <line num="37" count="126" type="stmt"/>
            <line num="38" count="126" type="stmt"/>
            <line num="39" count="127" type="stmt"/>
            <line num="40" count="127" type="stmt"/>
            <line num="41" count="127" type="stmt"/>
            <line num="42" count="127" type="stmt"/>
            <line num="43" count="127" type="stmt"/>
            <line num="44" count="127" type="stmt"/>
            <line num="45" count="127" type="stmt"/>
            <line num="46" count="127" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="62" count="130" type="method"/>
            <line num="63" count="130" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : Double" num="69" count="247" type="method"/>
            <line num="70" count="248" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="76" count="248" type="method"/>
            <line num="77" count="248" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="83" count="248" type="method"/>
            <line num="84" count="249" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : Double" num="90" count="128" type="method"/>
            <line num="91" count="129" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTheta() : Double" num="97" count="129" type="method"/>
            <line num="98" count="129" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKappa() : Double" num="104" count="130" type="method"/>
            <line num="105" count="129" type="stmt"/>
            <line complexity="1" visibility="public" signature="getXi() : Double" num="111" count="129" type="method"/>
            <line num="112" count="129" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRho() : Double" num="118" count="129" type="method"/>
            <line num="119" count="130" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/InterestRateModelDescriptor.java" name="InterestRateModelDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="14" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InterestRateModelDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/InterestRateSwapLegProductDescriptor.java" name="InterestRateSwapLegProductDescriptor.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="10" loc="142" coveredmethods="7" methods="10" elements="36" classes="1" ncloc="60" statements="26" conditionals="0" coveredstatements="17"/>
            <class name="InterestRateSwapLegProductDescriptor">
               <metrics coveredelements="24" coveredconditionals="0" complexity="10" coveredmethods="7" methods="10" elements="36" statements="26" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="InterestRateSwapLegProductDescriptor(String,String,ScheduleDescriptor,double,double,boolean)" num="38" count="4" type="method"/>
            <line num="39" count="4" type="stmt"/>
            <line num="40" count="4" type="stmt"/>
            <line num="41" count="4" type="stmt"/>
            <line num="43" count="4" type="stmt"/>
            <line num="44" count="4" type="stmt"/>
            <line num="45" count="4" type="stmt"/>
            <line num="46" count="4" type="stmt"/>
            <line num="47" count="4" type="stmt"/>
            <line num="48" count="4" type="stmt"/>
            <line num="49" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="InterestRateSwapLegProductDescriptor(String,String,ScheduleDescriptor,double[],double[],boolean)" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="83" count="8" type="method"/>
            <line num="84" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="92" count="4" type="method"/>
            <line num="93" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLegScheduleDescriptor() : ScheduleDescriptor" num="101" count="12" type="method"/>
            <line num="102" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotionals() : double[]" num="110" count="8" type="method"/>
            <line num="111" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSpreads() : double[]" num="119" count="8" type="method"/>
            <line num="120" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNotionalExchanged() : boolean" num="128" count="8" type="method"/>
            <line num="129" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="137" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/InterestRateSwapProductDescriptor.java" name="InterestRateSwapProductDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="61" coveredmethods="0" methods="5" elements="12" classes="1" ncloc="27" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="InterestRateSwapProductDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="InterestRateSwapProductDescriptor(InterestRateProductDescriptor,InterestRateProductDescriptor)" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLegReceiver() : InterestRateProductDescriptor" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLegPayer() : InterestRateProductDescriptor" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/InterestRateSwaptionProductDescriptor.java" name="InterestRateSwaptionProductDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="74" coveredmethods="0" methods="6" elements="15" classes="1" ncloc="33" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="InterestRateSwaptionProductDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="InterestRateSwaptionProductDescriptor(InterestRateSwapProductDescriptor,LocalDate,double)" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlyingSwap() : InterestRateSwapProductDescriptor" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExcerciseDate() : LocalDate" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrikeRate() : double" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/MertonModelDescriptor.java" name="MertonModelDescriptor.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="11" loc="108" coveredmethods="9" methods="11" elements="30" classes="1" ncloc="58" statements="19" conditionals="0" coveredstatements="17"/>
            <class name="MertonModelDescriptor">
               <metrics coveredelements="26" coveredconditionals="0" complexity="11" coveredmethods="9" methods="11" elements="30" statements="19" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="MertonModelDescriptor(LocalDate,Double,DiscountCurve,DiscountCurve,Double,Double,Double,Double)" num="28" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="55" count="4" type="method"/>
            <line num="56" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : Double" num="62" count="4" type="method"/>
            <line num="63" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="69" count="4" type="method"/>
            <line num="70" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="76" count="4" type="method"/>
            <line num="77" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : Double" num="83" count="4" type="method"/>
            <line num="84" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpIntensity() : Double" num="90" count="4" type="method"/>
            <line num="91" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpSizeMean() : Double" num="97" count="4" type="method"/>
            <line num="98" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpSizeStdDev() : Double" num="104" count="4" type="method"/>
            <line num="105" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/ScheduleDescriptor.java" name="ScheduleDescriptor.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="13" loc="224" coveredmethods="5" methods="13" elements="41" classes="4" ncloc="107" statements="28" conditionals="0" coveredstatements="8"/>
            <class name="ScheduleDescriptor">
               <metrics coveredelements="7" coveredconditionals="0" complexity="7" coveredmethods="3" methods="7" elements="17" statements="10" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="ScheduleDescriptor.InternalScheduleDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ScheduleDescriptor.ScheduleDescriptorFromPeriods">
               <metrics coveredelements="6" coveredconditionals="0" complexity="4" coveredmethods="2" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="ScheduleDescriptor.ScheduleDescriptorFromGenerator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="14" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ScheduleDescriptor(List&lt;Period&gt;,DayCountConvention)" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ScheduleDescriptor(Schedule)" num="47" count="4" type="method"/>
            <line num="48" count="4" type="stmt"/>
            <line num="49" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="ScheduleDescriptor(LocalDate,LocalDate,Frequency,DaycountConvention,ShortPeriodConvention,DateRollConvention,BusinessdayCalendar,int,int,boolean)" num="66" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ScheduleDescriptor(LocalDate,LocalDate,Frequency,DaycountConvention,ShortPeriodConvention,DateRollConvention,AbstractBusinessdayCalendar,int,int)" num="88" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule(LocalDate) : Schedule" num="102" count="12" type="method"/>
            <line num="103" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPeriods() : int" num="111" count="8" type="method"/>
            <line num="113" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriods() : List&lt;Period&gt;" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="ScheduleDescriptorFromPeriods(List&lt;Period&gt;,DayCountConvention)" num="156" count="4" type="method"/>
            <line num="158" count="4" type="stmt"/>
            <line num="159" count="4" type="stmt"/>
            <line num="160" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule(LocalDate) : Schedule" num="163" count="20" type="method"/>
            <line num="165" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriods() : List&lt;Period&gt;" num="168" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountConvention() : DayCountConvention" num="172" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="ScheduleDescriptorFromGenerator(LocalDate,LocalDate,Frequency,DaycountConvention,ShortPeriodConvention,DateRollConvention,BusinessdayCalendar,int,int,boolean)" num="198" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule(LocalDate) : Schedule" num="216" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/SingleAssetDigitalOptionProductDescriptor.java" name="SingleAssetDigitalOptionProductDescriptor.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="6" loc="51" coveredmethods="4" methods="6" elements="15" classes="1" ncloc="32" statements="9" conditionals="0" coveredstatements="7"/>
            <class name="SingleAssetDigitalOptionProductDescriptor">
               <metrics coveredelements="11" coveredconditionals="0" complexity="6" coveredmethods="4" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="SingleAssetDigitalOptionProductDescriptor(String,LocalDate,double)" num="22" count="4" type="method"/>
            <line num="23" count="4" type="stmt"/>
            <line num="24" count="4" type="stmt"/>
            <line num="25" count="4" type="stmt"/>
            <line num="26" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : LocalDate" num="39" count="10" type="method"/>
            <line num="40" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrike() : double" num="43" count="10" type="method"/>
            <line num="44" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNameOfUnderlying() : String" num="47" count="4" type="method"/>
            <line num="48" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/SingleAssetEuropeanOptionProductDescriptor.java" name="SingleAssetEuropeanOptionProductDescriptor.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="6" loc="64" coveredmethods="4" methods="6" elements="15" classes="1" ncloc="32" statements="9" conditionals="0" coveredstatements="7"/>
            <class name="SingleAssetEuropeanOptionProductDescriptor">
               <metrics coveredelements="11" coveredconditionals="0" complexity="6" coveredmethods="4" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="SingleAssetEuropeanOptionProductDescriptor(String,LocalDate,double)" num="27" count="8" type="method"/>
            <line num="28" count="8" type="stmt"/>
            <line num="29" count="8" type="stmt"/>
            <line num="30" count="8" type="stmt"/>
            <line num="31" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlyingName() : String" num="47" count="16" type="method"/>
            <line num="48" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : LocalDate" num="54" count="20" type="method"/>
            <line num="55" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrike() : Double" num="61" count="20" type="method"/>
            <line num="62" count="20" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/VarianceGammaModelDescriptor.java" name="VarianceGammaModelDescriptor.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="10" loc="106" coveredmethods="8" methods="10" elements="27" classes="1" ncloc="53" statements="17" conditionals="0" coveredstatements="15"/>
            <class name="VarianceGammaModelDescriptor">
               <metrics coveredelements="23" coveredconditionals="0" complexity="10" coveredmethods="8" methods="10" elements="27" statements="17" conditionals="0" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="VarianceGammaModelDescriptor(LocalDate,Double,DiscountCurve,DiscountCurve,double,double,double)" num="34" count="134" type="method"/>
            <line num="37" count="134" type="stmt"/>
            <line num="38" count="134" type="stmt"/>
            <line num="39" count="133" type="stmt"/>
            <line num="40" count="134" type="stmt"/>
            <line num="41" count="134" type="stmt"/>
            <line num="42" count="134" type="stmt"/>
            <line num="43" count="134" type="stmt"/>
            <line num="44" count="134" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="60" count="133" type="method"/>
            <line num="61" count="135" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : Double" num="67" count="261" type="method"/>
            <line num="68" count="262" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="74" count="262" type="method"/>
            <line num="75" count="263" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="81" count="263" type="method"/>
            <line num="82" count="264" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSigma() : double" num="88" count="133" type="method"/>
            <line num="89" count="133" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTheta() : double" num="95" count="133" type="method"/>
            <line num="96" count="134" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNu() : double" num="102" count="133" type="method"/>
            <line num="103" count="134" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.assetderivativevaluation">
         <metrics coveredelements="118" complexity="130" loc="1177" methods="100" classes="6" statements="200" coveredconditionals="2" coveredmethods="44" elements="356" ncloc="663" files="6" conditionals="56" coveredstatements="72"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/AssetModelMonteCarloSimulationModel.java" name="AssetModelMonteCarloSimulationModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="90" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AssetModelMonteCarloSimulationModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloAssetModel.java" name="MonteCarloAssetModel.java">
            <metrics coveredelements="52" coveredconditionals="2" complexity="25" loc="192" coveredmethods="17" methods="21" elements="64" classes="1" ncloc="119" statements="39" conditionals="4" coveredstatements="33"/>
            <class name="MonteCarloAssetModel">
               <metrics coveredelements="52" coveredconditionals="2" complexity="25" coveredmethods="17" methods="21" elements="64" statements="39" conditionals="4" coveredstatements="33"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloAssetModel(MonteCarloProcess)" num="41" count="36" type="method"/>
            <line num="42" count="36" type="stmt"/>
            <line num="44" count="36" type="stmt"/>
            <line num="45" count="36" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloAssetModel(ProcessModel,MonteCarloProcess)" num="54" count="787" type="method"/>
            <line num="57" count="787" type="stmt"/>
            <line num="59" count="787" type="stmt"/>
            <line num="60" count="787" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloAssetModel(ProcessModel,IndependentIncrements)" num="63" count="8" type="method"/>
            <line num="64" count="8" type="stmt"/>
            <line num="66" count="8" type="stmt"/>
            <line num="67" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(double,int) : RandomVariable" num="70" count="10447" type="method"/>
            <line num="72" count="10447" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(int,int) : RandomVariable" num="75" count="12449" type="method"/>
            <line num="77" count="12449" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(int) : RandomVariable" num="80" count="2006" type="method"/>
            <line num="82" count="2006" type="stmt"/>
            <line num="85" count="2006" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="88" count="10400" type="method"/>
            <line num="92" count="10400" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="95" count="8785" type="method"/>
            <line num="97" count="8785" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfAssets() : int" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AssetModelMonteCarloSimulationModel" num="105" count="674" type="method"/>
            <line num="107" count="674" type="stmt"/>
            <line num="109" count="674" type="stmt"/>
            <line num="110" count="674" type="stmt"/>
            <line num="111" count="674" type="stmt"/>
            <line num="112" count="674" type="stmt"/>
            <line num="113" count="674" type="stmt"/>
            <line falsecount="0" truecount="674" num="113" type="cond"/>
            <line num="114" count="674" type="stmt"/>
            <line num="116" count="674" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="123" count="674" type="stmt"/>
            <line falsecount="674" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="674" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : AssetModelMonteCarloSimulationModel" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="145" count="11" type="method"/>
            <line num="147" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="150" count="2113" type="method"/>
            <line num="152" count="2113" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="155" count="19234" type="method"/>
            <line num="157" count="19234" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="160" count="1160" type="method"/>
            <line num="162" count="1160" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="165" count="8785" type="method"/>
            <line num="167" count="8785" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : ProcessModel" num="175" count="178" type="method"/>
            <line num="176" count="178" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcess() : MonteCarloProcess" num="184" count="8" type="method"/>
            <line num="185" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="188" count="6" type="method"/>
            <line num="190" count="6" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloBlackScholesModel.java" name="MonteCarloBlackScholesModel.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="24" loc="243" coveredmethods="13" methods="20" elements="66" classes="1" ncloc="128" statements="38" conditionals="8" coveredstatements="16"/>
            <class name="MonteCarloBlackScholesModel">
               <metrics coveredelements="29" coveredconditionals="0" complexity="24" coveredmethods="13" methods="20" elements="66" statements="38" conditionals="8" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloBlackScholesModel(double,double,double,BrownianMotion)" num="64" count="2" type="method"/>
            <line num="69" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloBlackScholesModel(TimeDiscretization,int,double,double,double)" num="85" count="2" type="method"/>
            <line num="91" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="MonteCarloBlackScholesModel(BlackScholesModel,MonteCarloProcess)" num="103" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(double,int) : RandomVariable" num="112" count="7" type="method"/>
            <line num="114" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(int,int) : RandomVariable" num="117" count="107" type="method"/>
            <line num="119" count="107" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(int) : RandomVariable" num="122" count="101" type="method"/>
            <line num="124" count="101" type="stmt"/>
            <line num="126" count="101" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="129" count="7" type="method"/>
            <line num="131" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="134" count="5" type="method"/>
            <line num="136" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfAssets() : int" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AssetModelMonteCarloSimulationModel" num="144" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : AssetModelMonteCarloSimulationModel" num="180" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="187" count="1000001" type="method"/>
            <line num="189" count="1000001" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="197" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="202" count="201" type="method"/>
            <line num="204" count="201" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="207" count="13" type="method"/>
            <line num="209" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="216" count="203" type="method"/>
            <line num="218" count="203" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="221" count="5" type="method"/>
            <line num="223" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : BlackScholesModel" num="231" count="815866" type="method"/>
            <line num="232" count="815866" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcess() : MonteCarloProcess" num="240" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloMertonModel.java" name="MonteCarloMertonModel.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="24" loc="188" coveredmethods="7" methods="16" elements="64" classes="1" ncloc="108" statements="32" conditionals="16" coveredstatements="12"/>
            <class name="MonteCarloMertonModel">
               <metrics coveredelements="19" coveredconditionals="0" complexity="24" coveredmethods="7" methods="16" elements="64" statements="32" conditionals="16" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloMertonModel(TimeDiscretization,int,int,double,double,double,double,double,double)" num="68" count="3" type="method"/>
            <line num="79" count="3" type="stmt"/>
            <line num="81" count="3" type="stmt"/>
            <line num="82" count="3" type="stmt"/>
            <line num="85" count="3" type="stmt"/>
            <line num="88" count="3" type="stmt"/>
            <line num="91" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(double,int) : RandomVariable" num="99" count="50" type="method"/>
            <line num="101" count="50" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(int,int) : RandomVariable" num="104" count="50" type="method"/>
            <line num="106" count="50" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(int) : RandomVariable" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="116" count="90" type="method"/>
            <line num="118" count="90" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="121" count="80" type="method"/>
            <line num="123" count="80" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfAssets() : int" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AssetModelMonteCarloSimulationModel" num="134" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : AssetModelMonteCarloSimulationModel" num="152" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="164" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="169" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="174" count="130" type="method"/>
            <line num="176" count="130" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="184" count="80" type="method"/>
            <line num="186" count="80" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloMultiAssetBlackScholesModel.java" name="MonteCarloMultiAssetBlackScholesModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="34" loc="311" coveredmethods="0" methods="27" elements="102" classes="1" ncloc="190" statements="61" conditionals="14" coveredstatements="0"/>
            <class name="MonteCarloMultiAssetBlackScholesModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="34" coveredmethods="0" methods="27" elements="102" statements="61" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="MonteCarloMultiAssetBlackScholesModel(BrownianMotion,double[],double,double[],double[][])" num="79" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloMultiAssetBlackScholesModel(TimeDiscretization,int,double[],double,double[],double[][])" num="131" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="147" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="152" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAssetValue(double,int) : RandomVariable" num="167" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(int,int) : RandomVariable" num="176" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="186" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(int) : RandomVariable" num="193" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="200" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="205" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="210" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfAssets() : int" num="215" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="220" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="234" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilities() : double[]" num="243" count="0" type="method"/>
            <line num="244" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="251" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : MonteCarloMultiAssetBlackScholesModel" num="256" count="0" type="method"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="264" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="267" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="270" type="cond"/>
            <line num="271" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="273" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : AssetModelMonteCarloSimulationModel" num="280" count="0" type="method"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="287" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="292" count="0" type="method"/>
            <line num="294" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="297" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="302" count="0" type="method"/>
            <line num="304" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="307" count="0" type="method"/>
            <line num="309" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloVarianceGammaModel.java" name="MonteCarloVarianceGammaModel.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="23" loc="153" coveredmethods="7" methods="16" elements="60" classes="1" ncloc="103" statements="30" conditionals="14" coveredstatements="11"/>
            <class name="MonteCarloVarianceGammaModel">
               <metrics coveredelements="18" coveredconditionals="0" complexity="23" coveredmethods="7" methods="16" elements="60" statements="30" conditionals="14" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloVarianceGammaModel(TimeDiscretization,int,int,double,double,double,double,double)" num="42" count="3" type="method"/>
            <line num="51" count="3" type="stmt"/>
            <line num="53" count="3" type="stmt"/>
            <line num="54" count="3" type="stmt"/>
            <line num="57" count="3" type="stmt"/>
            <line num="60" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(double,int) : RandomVariable" num="69" count="37" type="method"/>
            <line num="71" count="37" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(int,int) : RandomVariable" num="74" count="37" type="method"/>
            <line num="76" count="37" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(int) : RandomVariable" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="86" count="64" type="method"/>
            <line num="88" count="64" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="91" count="54" type="method"/>
            <line num="93" count="54" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfAssets() : int" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AssetModelMonteCarloSimulationModel" num="101" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : AssetModelMonteCarloSimulationModel" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="139" count="91" type="method"/>
            <line num="141" count="91" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="149" count="54" type="method"/>
            <line num="151" count="54" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.volatilities">
         <metrics coveredelements="409" complexity="246" loc="2398" methods="132" classes="16" statements="581" coveredconditionals="66" coveredmethods="67" elements="891" ncloc="1280" files="13" conditionals="178" coveredstatements="276"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/AbstractVolatilitySurface.java" name="AbstractVolatilitySurface.java">
            <metrics coveredelements="56" coveredconditionals="13" complexity="24" loc="158" coveredmethods="9" methods="12" elements="72" classes="1" ncloc="101" statements="44" conditionals="16" coveredstatements="34"/>
            <class name="AbstractVolatilitySurface">
               <metrics coveredelements="56" coveredconditionals="13" complexity="24" coveredmethods="9" methods="12" elements="72" statements="44" conditionals="16" coveredstatements="34"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractVolatilitySurface(String,LocalDate,ForwardCurve,DiscountCurve,QuotingConvention,DayCountConvention)" num="33" count="6464514" type="method"/>
            <line num="35" count="6464175" type="stmt"/>
            <line num="36" count="6464606" type="stmt"/>
            <line num="37" count="6464711" type="stmt"/>
            <line num="38" count="6464720" type="stmt"/>
            <line num="39" count="6464749" type="stmt"/>
            <line num="40" count="6464715" type="stmt"/>
            <line num="41" count="6464777" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractVolatilitySurface(String,LocalDate)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="50" count="12927726" type="method"/>
            <line num="52" count="12928448" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="55" count="12921606" type="method"/>
            <line num="57" count="12922517" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuotingConvention() : QuotingConvention" num="70" count="202562663" type="method"/>
            <line num="72" count="202604503" type="stmt"/>
            <line complexity="13" visibility="public" signature="convertFromTo(AnalyticModel,double,double,double,QuotingConvention,QuotingConvention) : double" num="86" count="99848754" type="method"/>
            <line num="88" count="99863767" type="stmt"/>
            <line falsecount="1916258" truecount="97953106" num="88" type="cond"/>
            <line num="89" count="97957574" type="stmt"/>
            <line num="92" count="1916286" type="stmt"/>
            <line falsecount="1916244" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="1916313" type="stmt"/>
            <line falsecount="1916250" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="1916285" type="stmt"/>
            <line num="100" count="1916310" type="stmt"/>
            <line num="102" count="1916186" type="stmt"/>
            <line num="104" count="1916276" type="stmt"/>
            <line num="105" count="1916339" type="stmt"/>
            <line falsecount="1916293" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="1916327" type="stmt"/>
            <line num="114" count="1916222" type="stmt"/>
            <line num="116" count="1916278" type="stmt"/>
            <line falsecount="1277746" truecount="638603" num="116" type="cond"/>
            <line num="117" count="638599" type="stmt"/>
            <line num="119" count="1277761" type="stmt"/>
            <line falsecount="1277474" truecount="288" num="119" type="cond"/>
            <line num="120" count="288" type="stmt"/>
            <line num="122" count="1277471" type="stmt"/>
            <line falsecount="1277183" truecount="288" num="122" type="cond"/>
            <line num="123" count="288" type="stmt"/>
            <line num="125" count="1277184" type="stmt"/>
            <line falsecount="638592" truecount="638604" num="125" type="cond"/>
            <line num="126" count="638604" type="stmt"/>
            <line num="129" count="638597" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertFromTo(double,double,double,QuotingConvention,QuotingConvention) : double" num="143" count="864" type="method"/>
            <line num="144" count="864" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurve() : ForwardCurve" num="147" count="190428680" type="method"/>
            <line num="148" count="190515419" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="151" count="3837391" type="method"/>
            <line num="152" count="3837561" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountConvention() : DayCountConvention" num="155" count="1916336" type="method"/>
            <line num="156" count="1916335" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/AbstractVolatilitySurfaceParametric.java" name="AbstractVolatilitySurfaceParametric.java">
            <metrics coveredelements="27" coveredconditionals="5" complexity="10" loc="111" coveredmethods="4" methods="5" elements="37" classes="1" ncloc="60" statements="22" conditionals="10" coveredstatements="18"/>
            <class name="AbstractVolatilitySurfaceParametric">
               <metrics coveredelements="27" coveredconditionals="5" complexity="10" coveredmethods="4" methods="5" elements="37" statements="22" conditionals="10" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractVolatilitySurfaceParametric(String,LocalDate,ForwardCurve,DiscountCurve,QuotingConvention,DayCountConvention)" num="42" count="5450" type="method"/>
            <line num="43" count="5446" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractVolatilitySurfaceParametric(String,LocalDate)" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneCalibrated(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,Map&lt;String,Object&gt;) : AbstractVolatilitySurfaceParametric" num="60" count="4" type="method"/>
            <line num="61" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneCalibrated(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,Map&lt;String,Object&gt;,ParameterTransformation) : AbstractVolatilitySurfaceParametric" num="64" count="4" type="method"/>
            <line num="65" count="4" type="stmt"/>
            <line complexity="6" visibility="public" signature="getCloneCalibrated(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,Map&lt;String,Object&gt;,ParameterTransformation,OptimizerFactory) : AbstractVolatilitySurfaceParametric" num="81" count="4" type="method"/>
            <line num="82" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="82" type="cond"/>
            <line num="83" count="4" type="stmt"/>
            <line num="85" count="4" type="stmt"/>
            <line num="86" count="4" type="stmt"/>
            <line num="87" count="4" type="stmt"/>
            <line num="90" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="90" type="cond"/>
            <line num="91" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="91" type="cond"/>
            <line num="92" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="92" type="cond"/>
            <line num="94" count="4" type="stmt"/>
            <line num="95" count="4" type="stmt"/>
            <line num="97" count="4" type="stmt"/>
            <line num="98" count="4" type="stmt"/>
            <line num="99" count="4" type="stmt"/>
            <line num="102" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="109" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/CapletVolatilities.java" name="CapletVolatilities.java">
            <metrics coveredelements="48" coveredconditionals="13" complexity="24" loc="202" coveredmethods="3" methods="7" elements="88" classes="1" ncloc="125" statements="59" conditionals="22" coveredstatements="32"/>
            <class name="CapletVolatilities">
               <metrics coveredelements="48" coveredconditionals="13" complexity="24" coveredmethods="3" methods="7" elements="88" statements="59" conditionals="22" coveredstatements="32"/>
            </class>
            <line complexity="4" visibility="public" signature="CapletVolatilities(String,LocalDate,ForwardCurve,double[],double[],double[],QuotingConvention,DiscountCurve)" num="59" count="6459164" type="method"/>
            <line num="65" count="6458974" type="stmt"/>
            <line num="67" count="6459265" type="stmt"/>
            <line falsecount="6459279" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="6459321" type="stmt"/>
            <line falsecount="6458564" truecount="6459217" num="71" type="cond"/>
            <line num="72" count="6459218" type="stmt"/>
            <line num="73" count="6459242" type="stmt"/>
            <line num="74" count="6459178" type="stmt"/>
            <line num="75" count="6459176" type="stmt"/>
            <line complexity="1" visibility="private" signature="CapletVolatilities(String,LocalDate)" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="add(double,double,double) : void" num="94" count="6459168" type="method"/>
            <line num="95" count="6459196" type="stmt"/>
            <line num="96" count="6459102" type="stmt"/>
            <line num="97" count="6459110" type="stmt"/>
            <line falsecount="0" truecount="6459108" num="97" type="cond"/>
            <line num="98" count="6459162" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="6458837" type="stmt"/>
            <line num="106" count="6459068" type="stmt"/>
            <line num="107" count="6458441" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,VolatilitySurface.QuotingConvention) : double" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(AnalyticModel,double,double,VolatilitySurface.QuotingConvention) : double" num="116" count="102995410" type="method"/>
            <line num="118" count="102996831" type="stmt"/>
            <line falsecount="96542810" truecount="6459024" num="118" type="cond"/>
            <line num="119" count="6459091" type="stmt"/>
            <line num="122" count="96546021" type="stmt"/>
            <line num="123" count="96546943" type="stmt"/>
            <line falsecount="90506676" truecount="6042626" num="123" type="cond"/>
            <line num="124" count="6042662" type="stmt"/>
            <line num="127" count="90507812" type="stmt"/>
            <line num="128" count="90507475" type="stmt"/>
            <line falsecount="84050875" truecount="6459485" num="128" type="cond"/>
            <line num="129" count="6459477" type="stmt"/>
            <line num="131" count="90506931" type="stmt"/>
            <line num="134" count="90507695" type="stmt"/>
            <line num="135" count="90508051" type="stmt"/>
            <line falsecount="0" truecount="90510481" num="135" type="cond"/>
            <line num="136" count="90511296" type="stmt"/>
            <line num="138" count="90511317" type="stmt"/>
            <line falsecount="6459457" truecount="84052723" num="138" type="cond"/>
            <line num="139" count="84053607" type="stmt"/>
            <line num="142" count="90511286" type="stmt"/>
            <line num="146" count="90512583" type="stmt"/>
            <line num="148" count="90495409" type="stmt"/>
            <line num="151" count="96542941" type="stmt"/>
            <line complexity="8" visibility="public" signature="fromFile(File) : AbstractVolatilitySurface" num="154" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="197" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/CapletVolatilitiesParametric.java" name="CapletVolatilitiesParametric.java">
            <metrics coveredelements="52" coveredconditionals="4" complexity="11" loc="200" coveredmethods="8" methods="9" elements="54" classes="1" ncloc="92" statements="41" conditionals="4" coveredstatements="40"/>
            <class name="CapletVolatilitiesParametric">
               <metrics coveredelements="52" coveredconditionals="4" complexity="11" coveredmethods="8" methods="9" elements="54" statements="41" conditionals="4" coveredstatements="40"/>
            </class>
            <line complexity="1" visibility="public" signature="CapletVolatilitiesParametric(String,LocalDate,ForwardCurve,DiscountCurve,double,double,double,double,double,QuotingConvention)" num="49" count="5274" type="method"/>
            <line num="55" count="5270" type="stmt"/>
            <line num="56" count="5271" type="stmt"/>
            <line num="57" count="5276" type="stmt"/>
            <line num="58" count="5275" type="stmt"/>
            <line num="59" count="5274" type="stmt"/>
            <line num="60" count="5270" type="stmt"/>
            <line complexity="1" visibility="public" signature="CapletVolatilitiesParametric(String,LocalDate,ForwardCurve,DiscountCurve,double,double,double,double,double)" num="76" count="172" type="method"/>
            <line num="80" count="172" type="stmt"/>
            <line num="81" count="172" type="stmt"/>
            <line num="82" count="172" type="stmt"/>
            <line num="83" count="172" type="stmt"/>
            <line num="84" count="172" type="stmt"/>
            <line num="85" count="172" type="stmt"/>
            <line complexity="1" visibility="public" signature="CapletVolatilitiesParametric(String,LocalDate,double,double,double,double,double)" num="99" count="12" type="method"/>
            <line num="101" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="CapletVolatilitiesParametric(String,LocalDate,double,double,double,double)" num="114" count="12" type="method"/>
            <line num="115" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,QuotingConvention) : double" num="121" count="8006" type="method"/>
            <line num="123" count="8006" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(AnalyticModel,double,double,QuotingConvention) : double" num="129" count="2179732" type="method"/>
            <line num="131" count="2179752" type="stmt"/>
            <line falsecount="2041781" truecount="137970" num="131" type="cond"/>
            <line num="132" count="137980" type="stmt"/>
            <line num="135" count="2041785" type="stmt"/>
            <line num="141" count="2041797" type="stmt"/>
            <line num="142" count="2041798" type="stmt"/>
            <line falsecount="8588" truecount="2033208" num="142" type="cond"/>
            <line num="143" count="2033212" type="stmt"/>
            <line num="144" count="2033204" type="stmt"/>
            <line num="146" count="2033195" type="stmt"/>
            <line num="147" count="2033201" type="stmt"/>
            <line num="149" count="2033203" type="stmt"/>
            <line num="150" count="2033186" type="stmt"/>
            <line num="151" count="2033202" type="stmt"/>
            <line num="152" count="2033212" type="stmt"/>
            <line num="153" count="2033190" type="stmt"/>
            <line num="159" count="2033199" type="stmt"/>
            <line num="172" count="8588" type="stmt"/>
            <line num="175" count="2041793" type="stmt"/>
            <line num="176" count="2041800" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="179" count="5298" type="method"/>
            <line num="181" count="5299" type="stmt"/>
            <line num="182" count="5299" type="stmt"/>
            <line num="183" count="5300" type="stmt"/>
            <line num="184" count="5298" type="stmt"/>
            <line num="185" count="5295" type="stmt"/>
            <line num="187" count="5297" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : AbstractVolatilitySurfaceParametric" num="195" count="5264" type="method"/>
            <line num="197" count="5270" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/CapletVolatilitiesParametricDisplacedFourParameterAnalytic.java" name="CapletVolatilitiesParametricDisplacedFourParameterAnalytic.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="175" coveredmethods="0" methods="6" elements="72" classes="1" ncloc="105" statements="52" conditionals="14" coveredstatements="0"/>
            <class name="CapletVolatilitiesParametricDisplacedFourParameterAnalytic">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="6" elements="72" statements="52" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CapletVolatilitiesParametricDisplacedFourParameterAnalytic(String,LocalDate,ForwardCurve,DiscountCurve,double,boolean,double,double,double,double,double)" num="53" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,QuotingConvention) : double" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(AnalyticModel,double,double,QuotingConvention) : double" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : double[]" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="160" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneForParameter(double[]) : AbstractVolatilitySurfaceParametric" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/CapletVolatilitiesParametricFourParameterPicewiseConstant.java" name="CapletVolatilitiesParametricFourParameterPicewiseConstant.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="110" coveredmethods="0" methods="6" elements="39" classes="1" ncloc="55" statements="27" conditionals="6" coveredstatements="0"/>
            <class name="CapletVolatilitiesParametricFourParameterPicewiseConstant">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="6" elements="39" statements="27" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CapletVolatilitiesParametricFourParameterPicewiseConstant(String,LocalDate,double,double,double,double,TimeDiscretization)" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,QuotingConvention) : double" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(AnalyticModel,double,double,QuotingConvention) : double" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : AbstractVolatilitySurfaceParametric" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/OptionData.java" name="OptionData.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="8" loc="61" coveredmethods="3" methods="8" elements="22" classes="1" ncloc="43" statements="14" conditionals="0" coveredstatements="9"/>
            <class name="OptionData">
               <metrics coveredelements="12" coveredconditionals="0" complexity="8" coveredmethods="3" methods="8" elements="22" statements="14" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="OptionData(String,LocalDate,double,double,double,QuotingConvention)" num="22" count="40" type="method"/>
            <line num="23" count="40" type="stmt"/>
            <line num="24" count="40" type="stmt"/>
            <line num="25" count="40" type="stmt"/>
            <line num="26" count="40" type="stmt"/>
            <line num="27" count="40" type="stmt"/>
            <line num="28" count="40" type="stmt"/>
            <line num="29" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlying() : String" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrike() : double" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : double" num="48" count="80" type="method"/>
            <line num="49" count="80" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConvention() : QuotingConvention" num="52" count="6" type="method"/>
            <line num="53" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/OptionSmileData.java" name="OptionSmileData.java">
            <metrics coveredelements="25" coveredconditionals="3" complexity="10" loc="70" coveredmethods="7" methods="8" elements="29" classes="1" ncloc="50" statements="17" conditionals="4" coveredstatements="15"/>
            <class name="OptionSmileData">
               <metrics coveredelements="25" coveredconditionals="3" complexity="10" coveredmethods="7" methods="8" elements="29" statements="17" conditionals="4" coveredstatements="15"/>
            </class>
            <line complexity="3" visibility="public" signature="OptionSmileData(String,LocalDate,double[],double,double[],QuotingConvention)" num="24" count="4" type="method"/>
            <line num="25" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="25" type="cond"/>
            <line num="26" count="0" type="stmt"/>
            <line num="28" count="4" type="stmt"/>
            <line num="29" count="4" type="stmt"/>
            <line num="30" count="4" type="stmt"/>
            <line falsecount="4" truecount="40" num="30" type="cond"/>
            <line num="31" count="40" type="stmt"/>
            <line num="33" count="4" type="stmt"/>
            <line num="34" count="4" type="stmt"/>
            <line num="35" count="4" type="stmt"/>
            <line num="36" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlying() : String" num="40" count="6" type="method"/>
            <line num="41" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="44" count="6" type="method"/>
            <line num="45" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrikes() : double[]" num="48" count="508" type="method"/>
            <line num="49" count="509" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="52" count="4" type="method"/>
            <line num="53" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSmile() : HashMap&lt;Double, OptionData&gt;" num="56" count="46" type="method"/>
            <line num="57" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOption(double) : OptionData" num="60" count="40" type="method"/>
            <line num="61" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/OptionSurfaceData.java" name="OptionSurfaceData.java">
            <metrics coveredelements="39" coveredconditionals="5" complexity="26" loc="193" coveredmethods="7" methods="13" elements="98" classes="1" ncloc="121" statements="65" conditionals="20" coveredstatements="27"/>
            <class name="OptionSurfaceData">
               <metrics coveredelements="39" coveredconditionals="5" complexity="26" coveredmethods="7" methods="13" elements="98" statements="65" conditionals="20" coveredstatements="27"/>
            </class>
            <line complexity="5" visibility="public" signature="OptionSurfaceData(String,LocalDate,double[],double[],double[][],QuotingConvention,DiscountCurve,DiscountCurve)" num="45" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="OptionSurfaceData(OptionSmileData[],DiscountCurve,DiscountCurve)" num="83" count="2" type="method"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="94" type="cond"/>
            <line num="95" count="4" type="stmt"/>
            <line num="96" count="4" type="stmt"/>
            <line num="98" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="102" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="106" count="4" type="stmt"/>
            <line num="107" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="4" type="stmt"/>
            <line num="113" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="123" count="5020" type="method"/>
            <line num="124" count="5020" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEquityForwardCurve() : DiscountCurve" num="127" count="5020" type="method"/>
            <line num="128" count="5020" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuotingConvention() : QuotingConvention" num="140" count="246" type="method"/>
            <line num="141" count="248" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSurface() : HashMap&lt;Double, OptionSmileData&gt;" num="144" count="8" type="method"/>
            <line num="145" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturities() : double[]" num="148" count="499" type="method"/>
            <line num="149" count="503" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double) : double" num="152" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,QuotingConvention) : double" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(AnalyticModel,double,double,QuotingConvention) : double" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSmile(double) : OptionSmileData" num="190" count="498" type="method"/>
            <line num="191" count="498" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/SwaptionATMMarketDataFromArray.java" name="SwaptionATMMarketDataFromArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="116" coveredmethods="0" methods="9" elements="56" classes="1" ncloc="79" statements="39" conditionals="8" coveredstatements="0"/>
            <class name="SwaptionATMMarketDataFromArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="9" elements="56" statements="39" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionATMMarketDataFromArray(double[],double[],double,double[][])" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionATMMarketDataFromArray(ForwardCurve,DiscountCurve,double[],double[],double,double[][])" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionATMMarketDataFromArray(ForwardCurve,DiscountCurve,TimeDiscretization,TimeDiscretization,double,double[][])" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptionMaturities() : TimeDiscretization" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTenor() : TimeDiscretization" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapPeriodLength() : double" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double,double) : double" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getVolatility(double,double) : double" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getVolatility(double,double,double,double) : double" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/SwaptionDataLattice.java" name="SwaptionDataLattice.java">
            <metrics coveredelements="150" coveredconditionals="23" complexity="98" loc="883" coveredmethods="26" methods="49" elements="324" classes="3" ncloc="425" statements="201" conditionals="74" coveredstatements="101"/>
            <class name="SwaptionDataLattice">
               <metrics coveredelements="135" coveredconditionals="20" complexity="84" coveredmethods="23" methods="44" elements="284" statements="180" conditionals="60" coveredstatements="92"/>
            </class>
            <class name="SwaptionDataLattice.QuotingConvention">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SwaptionDataLattice.DataKey">
               <metrics coveredelements="15" coveredconditionals="3" complexity="14" coveredmethods="3" methods="5" elements="40" statements="21" conditionals="14" coveredstatements="9"/>
            </class>
            <line complexity="2" visibility="public" signature="SwaptionDataLattice(LocalDate,QuotingConvention,String,String,SchedulePrototype,SchedulePrototype,double[],double[],double[],double[])" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="SwaptionDataLattice(LocalDate,QuotingConvention,String,String,SchedulePrototype,SchedulePrototype,int[],int[],int[],double[])" num="113" count="12" type="method"/>
            <line num="116" count="12" type="stmt"/>
            <line num="118" count="12" type="stmt"/>
            <line falsecount="12" truecount="1344" num="118" type="cond"/>
            <line num="119" count="1344" type="stmt"/>
            <line complexity="2" visibility="public" signature="SwaptionDataLattice(LocalDate,QuotingConvention,String,String,SchedulePrototype,SchedulePrototype,String[],int[],double[])" num="136" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="SwaptionDataLattice(LocalDate,QuotingConvention,double,String,String,SchedulePrototype,SchedulePrototype,int[],int[],int[],double[])" num="161" count="14" type="method"/>
            <line num="163" count="14" type="stmt"/>
            <line num="165" count="14" type="stmt"/>
            <line falsecount="14" truecount="350" num="165" type="cond"/>
            <line num="166" count="350" type="stmt"/>
            <line complexity="2" visibility="public" signature="SwaptionDataLattice(LocalDate,QuotingConvention,double,String,String,SchedulePrototype,SchedulePrototype,double[],double[],double[],double[])" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="SwaptionDataLattice(LocalDate,QuotingConvention,double,String,String,SchedulePrototype,SchedulePrototype,String[],int[],double[])" num="208" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="SwaptionDataLattice(LocalDate,QuotingConvention,double,String,String,SchedulePrototype,SchedulePrototype)" num="228" count="32" type="method"/>
            <line num="230" count="32" type="stmt"/>
            <line num="231" count="32" type="stmt"/>
            <line num="232" count="32" type="stmt"/>
            <line num="233" count="32" type="stmt"/>
            <line num="234" count="32" type="stmt"/>
            <line num="235" count="32" type="stmt"/>
            <line num="236" count="32" type="stmt"/>
            <line num="237" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertLattice(QuotingConvention,AnalyticModel) : SwaptionDataLattice" num="249" count="14" type="method"/>
            <line num="250" count="14" type="stmt"/>
            <line complexity="4" visibility="public" signature="convertLattice(QuotingConvention,double,AnalyticModel) : SwaptionDataLattice" num="263" count="13" type="method"/>
            <line num="265" count="14" type="stmt"/>
            <line falsecount="14" truecount="0" num="265" type="cond"/>
            <line num="266" count="0" type="stmt"/>
            <line num="270" count="14" type="stmt"/>
            <line falsecount="14" truecount="0" num="270" type="cond"/>
            <line num="272" count="14" type="stmt"/>
            <line num="273" count="14" type="stmt"/>
            <line num="274" count="14" type="stmt"/>
            <line num="275" count="14" type="stmt"/>
            <line num="277" count="14" type="stmt"/>
            <line num="278" count="350" type="stmt"/>
            <line num="279" count="349" type="stmt"/>
            <line num="280" count="350" type="stmt"/>
            <line num="281" count="349" type="stmt"/>
            <line num="284" count="14" type="stmt"/>
            <line complexity="3" visibility="public" signature="append(SwaptionDataLattice,AnalyticModel) : SwaptionDataLattice" num="302" count="6" type="method"/>
            <line num="304" count="6" type="stmt"/>
            <line num="306" count="6" type="stmt"/>
            <line num="308" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="308" type="cond"/>
            <line num="309" count="6" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="315" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="getGridNodesPerMoneyness() : Map&lt;Integer, int[][]&gt;" num="327" count="1209" type="method"/>
            <line num="330" count="1209" type="stmt"/>
            <line falsecount="43" truecount="1166" num="330" type="cond"/>
            <line num="331" count="1166" type="stmt"/>
            <line num="335" count="43" type="stmt"/>
            <line num="337" count="43" type="stmt"/>
            <line num="338" count="4060" type="stmt"/>
            <line falsecount="3897" truecount="163" num="338" type="cond"/>
            <line num="339" count="163" type="stmt"/>
            <line num="340" count="163" type="stmt"/>
            <line num="341" count="163" type="stmt"/>
            <line num="343" count="4060" type="stmt"/>
            <line num="344" count="4060" type="stmt"/>
            <line num="347" count="43" type="stmt"/>
            <line num="348" count="43" type="stmt"/>
            <line num="349" count="163" type="stmt"/>
            <line num="351" count="163" type="stmt"/>
            <line num="352" count="163" type="stmt"/>
            <line num="354" count="163" type="stmt"/>
            <line num="356" count="43" type="stmt"/>
            <line num="357" count="43" type="stmt"/>
            <line complexity="3" visibility="public" signature="getMoneynessPerGridNode() : Map&lt;Pair&lt;Integer, Integer&gt;, int[]&gt;" num="367" count="0" type="method"/>
            <line num="370" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="370" type="cond"/>
            <line num="371" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="379" type="cond"/>
            <line num="380" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMoneyness() : int[]" num="400" count="32" type="method"/>
            <line num="401" count="32" type="stmt"/>
            <line complexity="3" visibility="public" signature="getMoneynessAsOffsets() : double[]" num="410" count="0" type="method"/>
            <line num="411" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="412" type="cond"/>
            <line num="413" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="414" count="0" type="method"/>
            <line num="416" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="419" type="cond"/>
            <line num="420" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="421" count="0" type="method"/>
            <line num="423" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="428" count="0" type="method"/>
            <line num="430" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturities() : int[]" num="442" count="16" type="method"/>
            <line num="443" count="16" type="stmt"/>
            <line num="445" count="16" type="stmt"/>
            <line num="446" count="52" type="stmt"/>
            <line num="448" count="16" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMaturities(int) : int[]" num="457" count="165" type="method"/>
            <line num="458" count="165" type="stmt"/>
            <line num="459" count="165" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMaturities(double) : double[]" num="472" count="0" type="method"/>
            <line num="473" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="476" type="cond"/>
            <line num="477" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTenors() : int[]" num="487" count="10" type="method"/>
            <line num="488" count="10" type="stmt"/>
            <line num="490" count="10" type="stmt"/>
            <line num="491" count="62" type="stmt"/>
            <line num="493" count="10" type="stmt"/>
            <line complexity="3" visibility="public" signature="getTenors(int,int) : int[]" num="503" count="930" type="method"/>
            <line num="505" count="930" type="stmt"/>
            <line num="506" count="930" type="stmt"/>
            <line num="507" count="930" type="stmt"/>
            <line num="508" count="4650" type="stmt"/>
            <line falsecount="15" truecount="4635" num="508" type="cond"/>
            <line num="509" count="4635" type="stmt"/>
            <line num="512" count="930" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTenors(double,double) : double[]" num="526" count="0" type="method"/>
            <line num="527" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line num="529" count="0" type="stmt"/>
            <line num="531" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="531" type="cond"/>
            <line num="532" count="0" type="stmt"/>
            <line num="534" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="convertMoneyness(double) : int" num="544" count="0" type="method"/>
            <line num="545" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="545" type="cond"/>
            <line num="546" count="0" type="stmt"/>
            <line num="547" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="547" type="cond"/>
            <line num="548" count="0" type="stmt"/>
            <line num="550" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="convertMaturity(int) : double" num="560" count="0" type="method"/>
            <line num="561" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="convertTenor(int,int) : double" num="572" count="0" type="method"/>
            <line num="573" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsEntryFor(int,int,int) : boolean" num="585" count="11012" type="method"/>
            <line num="586" count="11012" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double) : double" num="598" count="0" type="method"/>
            <line num="599" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int,int,int) : double" num="611" count="8186" type="method"/>
            <line num="612" count="8186" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(String,int) : double" num="623" count="0" type="method"/>
            <line num="624" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getValue(DataKey) : double" num="633" count="8536" type="method"/>
            <line num="634" count="8536" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double,QuotingConvention,double,AnalyticModel) : double" num="650" count="0" type="method"/>
            <line num="651" count="0" type="stmt"/>
            <line num="652" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int,int,int,QuotingConvention,double,AnalyticModel) : double" num="668" count="349" type="method"/>
            <line num="669" count="350" type="stmt"/>
            <line num="670" count="350" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(String,int,QuotingConvention,double,AnalyticModel) : double" num="685" count="0" type="method"/>
            <line num="686" count="0" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line complexity="17" visibility="private" signature="convertToConvention(double,DataKey,QuotingConvention,double,QuotingConvention,double,AnalyticModel) : double" num="704" count="349" type="method"/>
            <line num="707" count="350" type="stmt"/>
            <line falsecount="350" truecount="0" num="707" type="cond"/>
            <line num="708" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="708" type="cond"/>
            <line num="709" count="0" type="stmt"/>
            <line num="711" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="711" type="cond"/>
            <line num="712" count="0" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line num="720" count="350" type="stmt"/>
            <line num="721" count="350" type="stmt"/>
            <line num="723" count="350" type="stmt"/>
            <line num="724" count="350" type="stmt"/>
            <line num="725" count="350" type="stmt"/>
            <line num="726" count="350" type="stmt"/>
            <line falsecount="350" truecount="0" num="726" type="cond"/>
            <line num="727" count="350" type="stmt"/>
            <line num="729" count="350" type="stmt"/>
            <line falsecount="350" truecount="0" num="729" type="cond"/>
            <line num="730" count="0" type="stmt"/>
            <line num="732" count="350" type="stmt"/>
            <line falsecount="350" truecount="0" num="732" type="cond"/>
            <line num="733" count="0" type="stmt"/>
            <line num="735" count="350" type="stmt"/>
            <line falsecount="350" truecount="0" num="735" type="cond"/>
            <line num="736" count="0" type="stmt"/>
            <line num="738" count="350" type="stmt"/>
            <line falsecount="350" truecount="0" num="738" type="cond"/>
            <line num="739" count="0" type="stmt"/>
            <line num="741" count="350" type="stmt"/>
            <line falsecount="0" truecount="350" num="741" type="cond"/>
            <line num="742" count="350" type="stmt"/>
            <line num="744" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="744" type="cond"/>
            <line num="745" count="0" type="stmt"/>
            <line num="748" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="756" count="0" type="method"/>
            <line num="757" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="763" count="712" type="method"/>
            <line num="764" count="712" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuotingConvention() : QuotingConvention" num="770" count="15" type="method"/>
            <line num="771" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDisplacement() : double" num="777" count="0" type="method"/>
            <line num="778" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="784" count="773" type="method"/>
            <line num="785" count="773" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="791" count="26" type="method"/>
            <line num="792" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatMetaSchedule() : SchedulePrototype" num="798" count="667" type="method"/>
            <line num="799" count="667" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixMetaSchedule() : SchedulePrototype" num="805" count="665" type="method"/>
            <line num="806" count="666" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="809" count="0" type="method"/>
            <line num="811" count="0" type="stmt"/>
            <line num="812" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line num="816" count="0" type="stmt"/>
            <line num="817" count="0" type="stmt"/>
            <line num="819" count="0" type="stmt"/>
            <line num="821" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="DataKey(int,int,int)" num="840" count="21242" type="method"/>
            <line num="841" count="21242" type="stmt"/>
            <line num="842" count="21242" type="stmt"/>
            <line num="843" count="21242" type="stmt"/>
            <line num="844" count="21242" type="stmt"/>
            <line complexity="1" visibility="package" signature="DataKey(double,double,double)" num="847" count="0" type="method"/>
            <line num="848" count="0" type="stmt"/>
            <line num="849" count="0" type="stmt"/>
            <line num="850" count="0" type="stmt"/>
            <line num="851" count="0" type="stmt"/>
            <line complexity="5" visibility="package" signature="DataKey(String,int)" num="854" count="0" type="method"/>
            <line num="855" count="0" type="stmt"/>
            <line num="856" count="0" type="stmt"/>
            <line num="857" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="857" type="cond"/>
            <line falsecount="0" truecount="0" num="857" type="cond"/>
            <line num="858" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="858" type="cond"/>
            <line falsecount="0" truecount="0" num="858" type="cond"/>
            <line num="859" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="equals(Object) : boolean" num="862" count="19509" type="method"/>
            <line num="864" count="19509" type="stmt"/>
            <line falsecount="19509" truecount="0" num="864" type="cond"/>
            <line num="865" count="0" type="stmt"/>
            <line num="868" count="19509" type="stmt"/>
            <line falsecount="19509" truecount="0" num="868" type="cond"/>
            <line num="869" count="0" type="stmt"/>
            <line num="872" count="19509" type="stmt"/>
            <line falsecount="19509" truecount="0" num="872" type="cond"/>
            <line num="873" count="0" type="stmt"/>
            <line num="875" count="19509" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="878" count="24755" type="method"/>
            <line num="880" count="24755" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/SwaptionMarketData.java" name="SwaptionMarketData.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="43" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SwaptionMarketData">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/VolatilitySurface.java" name="VolatilitySurface.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="76" coveredmethods="0" methods="0" elements="0" classes="2" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VolatilitySurface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VolatilitySurface.QuotingConvention">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.montecarlo.assetderivativevaluation.products">
         <metrics coveredelements="408" complexity="175" loc="3315" methods="87" classes="32" statements="869" coveredconditionals="37" coveredmethods="41" elements="1090" ncloc="1653" files="26" conditionals="134" coveredstatements="330"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/AbstractAssetMonteCarloProduct.java" name="AbstractAssetMonteCarloProduct.java">
            <metrics coveredelements="6" coveredconditionals="1" complexity="3" loc="44" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="24" statements="4" conditionals="2" coveredstatements="3"/>
            <class name="AbstractAssetMonteCarloProduct">
               <metrics coveredelements="6" coveredconditionals="1" complexity="3" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractAssetMonteCarloProduct()" num="25" count="2583" type="method"/>
            <line num="26" count="2583" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,MonteCarloSimulationModel) : RandomVariable" num="32" count="4704" type="method"/>
            <line num="35" count="4704" type="stmt"/>
            <line falsecount="0" truecount="4704" num="35" type="cond"/>
            <line num="36" count="4704" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/AsianOption.java" name="AsianOption.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="3" loc="101" coveredmethods="3" methods="3" elements="22" classes="1" ncloc="38" statements="19" conditionals="0" coveredstatements="19"/>
            <class name="AsianOption">
               <metrics coveredelements="22" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="22" statements="19" conditionals="0" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="AsianOption(double,double,TimeDiscretization,Integer)" num="46" count="24" type="method"/>
            <line num="47" count="24" type="stmt"/>
            <line num="48" count="24" type="stmt"/>
            <line num="49" count="24" type="stmt"/>
            <line num="50" count="24" type="stmt"/>
            <line num="51" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="AsianOption(double,double,TimeDiscretization)" num="62" count="24" type="method"/>
            <line num="63" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="76" count="29" type="method"/>
            <line num="79" count="29" type="stmt"/>
            <line num="80" count="29" type="stmt"/>
            <line num="81" count="3277" type="stmt"/>
            <line num="82" count="3277" type="stmt"/>
            <line num="84" count="29" type="stmt"/>
            <line num="87" count="29" type="stmt"/>
            <line num="90" count="29" type="stmt"/>
            <line num="91" count="29" type="stmt"/>
            <line num="92" count="29" type="stmt"/>
            <line num="95" count="29" type="stmt"/>
            <line num="96" count="29" type="stmt"/>
            <line num="97" count="29" type="stmt"/>
            <line num="99" count="29" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/AssetMonteCarloProduct.java" name="AssetMonteCarloProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="22" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AssetMonteCarloProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/BasketOption.java" name="BasketOption.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="86" coveredmethods="0" methods="2" elements="21" classes="1" ncloc="33" statements="17" conditionals="2" coveredstatements="0"/>
            <class name="BasketOption">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="21" statements="17" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BasketOption(double,double,double[])" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="60" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/BermudanDigitalOption.java" name="BermudanDigitalOption.java">
            <metrics coveredelements="48" coveredconditionals="4" complexity="10" loc="211" coveredmethods="4" methods="4" elements="63" classes="2" ncloc="95" statements="51" conditionals="8" coveredstatements="40"/>
            <class name="BermudanDigitalOption">
               <metrics coveredelements="48" coveredconditionals="4" complexity="10" coveredmethods="4" methods="4" elements="63" statements="51" conditionals="8" coveredstatements="40"/>
            </class>
            <class name="BermudanDigitalOption.ExerciseMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BermudanDigitalOption(double[],double[],double[],ExerciseMethod,Map&lt;String, Object&gt;)" num="71" count="3" type="method"/>
            <line num="77" count="3" type="stmt"/>
            <line num="78" count="3" type="stmt"/>
            <line num="79" count="3" type="stmt"/>
            <line num="80" count="3" type="stmt"/>
            <line num="81" count="3" type="stmt"/>
            <line num="82" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="96" count="5" type="method"/>
            <line num="98" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="98" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="109" count="5" type="stmt"/>
            <line complexity="4" visibility="private" signature="getValues(double,AssetModelMonteCarloSimulationModel,double) : RandomVariable" num="113" count="5" type="method"/>
            <line num="121" count="5" type="stmt"/>
            <line num="123" count="5" type="stmt"/>
            <line num="125" count="5" type="stmt"/>
            <line num="127" count="5" type="stmt"/>
            <line falsecount="5" truecount="20" num="127" type="cond"/>
            <line num="129" count="20" type="stmt"/>
            <line num="130" count="20" type="stmt"/>
            <line num="131" count="20" type="stmt"/>
            <line num="134" count="20" type="stmt"/>
            <line num="135" count="20" type="stmt"/>
            <line num="136" count="20" type="stmt"/>
            <line num="139" count="20" type="stmt"/>
            <line num="142" count="20" type="stmt"/>
            <line num="144" count="20" type="stmt"/>
            <line num="145" count="20" type="stmt"/>
            <line num="148" count="20" type="stmt"/>
            <line num="149" count="20" type="stmt"/>
            <line num="151" count="20" type="stmt"/>
            <line num="153" count="20" type="stmt"/>
            <line num="154" count="20" type="stmt"/>
            <line num="155" count="20" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="175" count="20" type="stmt"/>
            <line num="176" count="20" type="stmt"/>
            <line num="190" count="5" type="stmt"/>
            <line num="191" count="5" type="stmt"/>
            <line num="192" count="5" type="stmt"/>
            <line num="194" count="5" type="stmt"/>
            <line complexity="2" visibility="private" signature="getRegressionBasisFunctions(RandomVariable) : RandomVariable[]" num="198" count="20" type="method"/>
            <line num="199" count="20" type="stmt"/>
            <line num="202" count="20" type="stmt"/>
            <line num="203" count="20" type="stmt"/>
            <line num="204" count="20" type="stmt"/>
            <line num="205" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="209" count="20" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/BermudanOption.java" name="BermudanOption.java">
            <metrics coveredelements="76" coveredconditionals="11" complexity="19" loc="251" coveredmethods="7" methods="10" elements="97" classes="2" ncloc="137" statements="73" conditionals="14" coveredstatements="58"/>
            <class name="BermudanOption">
               <metrics coveredelements="76" coveredconditionals="11" complexity="19" coveredmethods="7" methods="10" elements="97" statements="73" conditionals="14" coveredstatements="58"/>
            </class>
            <class name="BermudanOption.ExerciseMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BermudanOption(double[],double[],double[],ExerciseMethod)" num="71" count="28" type="method"/>
            <line num="76" count="28" type="stmt"/>
            <line num="77" count="28" type="stmt"/>
            <line num="78" count="28" type="stmt"/>
            <line num="79" count="28" type="stmt"/>
            <line num="80" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="BermudanOption(double[],double[],double[])" num="95" count="20" type="method"/>
            <line num="99" count="20" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="113" count="30" type="method"/>
            <line num="115" count="30" type="stmt"/>
            <line falsecount="26" truecount="4" num="115" type="cond"/>
            <line num="117" count="4" type="stmt"/>
            <line num="118" count="4" type="stmt"/>
            <line falsecount="4" truecount="526" num="118" type="cond"/>
            <line num="119" count="526" type="stmt"/>
            <line num="120" count="526" type="stmt"/>
            <line num="121" count="526" type="stmt"/>
            <line num="123" count="4" type="stmt"/>
            <line num="126" count="26" type="stmt"/>
            <line complexity="6" visibility="private" signature="getValues(double,AssetModelMonteCarloSimulationModel,double) : RandomVariable" num="130" count="556" type="method"/>
            <line num="138" count="556" type="stmt"/>
            <line num="140" count="556" type="stmt"/>
            <line num="142" count="556" type="stmt"/>
            <line falsecount="556" truecount="2426" num="142" type="cond"/>
            <line num="144" count="2426" type="stmt"/>
            <line num="145" count="2426" type="stmt"/>
            <line num="146" count="2426" type="stmt"/>
            <line num="149" count="2426" type="stmt"/>
            <line num="150" count="2426" type="stmt"/>
            <line num="151" count="2426" type="stmt"/>
            <line num="154" count="2426" type="stmt"/>
            <line num="157" count="2426" type="stmt"/>
            <line num="158" count="2426" type="stmt"/>
            <line falsecount="2426" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="2426" type="stmt"/>
            <line num="163" count="2426" type="stmt"/>
            <line num="165" count="2426" type="stmt"/>
            <line num="166" count="2426" type="stmt"/>
            <line num="169" count="2426" type="stmt"/>
            <line num="170" count="836" type="stmt"/>
            <line num="172" count="836" type="stmt"/>
            <line num="174" count="836" type="stmt"/>
            <line num="175" count="836" type="stmt"/>
            <line num="176" count="836" type="stmt"/>
            <line num="177" count="1590" type="stmt"/>
            <line num="178" count="1590" type="stmt"/>
            <line num="180" count="1590" type="stmt"/>
            <line num="183" count="1590" type="stmt"/>
            <line falsecount="1060" truecount="530" num="183" type="cond"/>
            <line num="184" count="530" type="stmt"/>
            <line num="187" count="1590" type="stmt"/>
            <line num="188" count="1590" type="stmt"/>
            <line num="189" count="1590" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="195" count="2426" type="stmt"/>
            <line num="196" count="2426" type="stmt"/>
            <line num="198" count="556" type="stmt"/>
            <line num="201" count="556" type="stmt"/>
            <line num="202" count="556" type="stmt"/>
            <line num="203" count="556" type="stmt"/>
            <line num="205" count="556" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLastValuationExerciseTime() : RandomVariable" num="208" count="2" type="method"/>
            <line num="209" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExerciseDates() : double[]" num="212" count="1" type="method"/>
            <line num="213" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotionals() : double[]" num="216" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrikes() : double[]" num="220" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getRegressionBasisFunctions(RandomVariable) : ArrayList&lt;RandomVariable&gt;" num="224" count="2426" type="method"/>
            <line num="225" count="2426" type="stmt"/>
            <line num="226" count="2426" type="stmt"/>
            <line num="229" count="2426" type="stmt"/>
            <line falsecount="2426" truecount="12130" num="229" type="cond"/>
            <line num="230" count="12130" type="stmt"/>
            <line num="233" count="2426" type="stmt"/>
            <line complexity="2" visibility="private" signature="getRegressionBasisFunctionsBinning(RandomVariable) : ArrayList&lt;RandomVariable&gt;" num="236" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="243" type="cond"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/BlackScholesDeltaHedgedPortfolio.java" name="BlackScholesDeltaHedgedPortfolio.java">
            <metrics coveredelements="29" coveredconditionals="2" complexity="3" loc="117" coveredmethods="2" methods="2" elements="29" classes="1" ncloc="53" statements="25" conditionals="2" coveredstatements="25"/>
            <class name="BlackScholesDeltaHedgedPortfolio">
               <metrics coveredelements="29" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="29" statements="25" conditionals="2" coveredstatements="25"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesDeltaHedgedPortfolio(double,double,double,double)" num="41" count="1" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="49" count="1" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="74" type="cond"/>
            <line num="76" count="100" type="stmt"/>
            <line num="77" count="100" type="stmt"/>
            <line num="80" count="100" type="stmt"/>
            <line num="92" count="100" type="stmt"/>
            <line num="93" count="100" type="stmt"/>
            <line num="96" count="100" type="stmt"/>
            <line num="97" count="100" type="stmt"/>
            <line num="100" count="100" type="stmt"/>
            <line num="101" count="100" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/BlackScholesHedgedPortfolio.java" name="BlackScholesHedgedPortfolio.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="286" coveredmethods="0" methods="3" elements="90" classes="2" ncloc="162" statements="73" conditionals="14" coveredstatements="0"/>
            <class name="BlackScholesHedgedPortfolio">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="3" elements="90" statements="73" conditionals="14" coveredstatements="0"/>
            </class>
            <class name="BlackScholesHedgedPortfolio.HedgeStrategy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesHedgedPortfolio(double,double,double,double,double,double,HedgeStrategy)" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlackScholesHedgedPortfolio(double,double,double,double)" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="13" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="91" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="168" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="228" type="cond"/>
            <line num="229" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="260" type="cond"/>
            <line num="262" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="266" type="cond"/>
            <line num="267" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/DeltaHedgedPortfolioWithAAD.java" name="DeltaHedgedPortfolioWithAAD.java">
            <metrics coveredelements="69" coveredconditionals="11" complexity="14" loc="203" coveredmethods="5" methods="7" elements="82" classes="1" ncloc="103" statements="61" conditionals="14" coveredstatements="53"/>
            <class name="DeltaHedgedPortfolioWithAAD">
               <metrics coveredelements="69" coveredconditionals="11" complexity="14" coveredmethods="5" methods="7" elements="82" statements="61" conditionals="14" coveredstatements="53"/>
            </class>
            <line complexity="1" visibility="public" signature="DeltaHedgedPortfolioWithAAD(AssetMonteCarloProduct,int)" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DeltaHedgedPortfolioWithAAD(AssetMonteCarloProduct)" num="66" count="2" type="method"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="71" count="2" type="method"/>
            <line num="75" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="85" type="cond"/>
            <line num="86" count="1" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line falsecount="2" truecount="200" num="109" type="cond"/>
            <line num="111" count="200" type="stmt"/>
            <line num="112" count="200" type="stmt"/>
            <line num="115" count="200" type="stmt"/>
            <line num="116" count="200" type="stmt"/>
            <line falsecount="200" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="120" count="200" type="stmt"/>
            <line num="122" count="200" type="stmt"/>
            <line num="123" count="200" type="stmt"/>
            <line falsecount="100" truecount="100" num="123" type="cond"/>
            <line num="124" count="100" type="stmt"/>
            <line num="128" count="200" type="stmt"/>
            <line num="131" count="200" type="stmt"/>
            <line num="133" count="200" type="stmt"/>
            <line num="140" count="200" type="stmt"/>
            <line num="141" count="200" type="stmt"/>
            <line num="144" count="200" type="stmt"/>
            <line num="145" count="200" type="stmt"/>
            <line num="148" count="200" type="stmt"/>
            <line num="149" count="200" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="158" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line num="163" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLastOperationTimingValuation() : double" num="166" count="2" type="method"/>
            <line num="167" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLastOperationTimingDerivative() : double" num="170" count="2" type="method"/>
            <line num="171" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="getRegressionBasisFunctions(RandomVariable,RandomVariable) : ArrayList&lt;RandomVariable&gt;" num="174" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getRegressionBasisFunctionsBinning(RandomVariable,RandomVariable) : ArrayList&lt;RandomVariable&gt;" num="185" count="200" type="method"/>
            <line num="186" count="200" type="stmt"/>
            <line num="188" count="200" type="stmt"/>
            <line falsecount="198" truecount="2" num="188" type="cond"/>
            <line num="189" count="2" type="stmt"/>
            <line num="192" count="198" type="stmt"/>
            <line num="193" count="198" type="stmt"/>
            <line num="194" count="198" type="stmt"/>
            <line falsecount="198" truecount="3960" num="194" type="cond"/>
            <line num="195" count="3960" type="stmt"/>
            <line num="196" count="3960" type="stmt"/>
            <line num="197" count="3960" type="stmt"/>
            <line num="201" count="200" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/DigitalOption.java" name="DigitalOption.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="4" loc="101" coveredmethods="4" methods="4" elements="24" classes="1" ncloc="40" statements="20" conditionals="0" coveredstatements="20"/>
            <class name="DigitalOption">
               <metrics coveredelements="24" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="24" statements="20" conditionals="0" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="DigitalOption(double,double,int)" num="44" count="4" type="method"/>
            <line num="45" count="4" type="stmt"/>
            <line num="46" count="4" type="stmt"/>
            <line num="47" count="4" type="stmt"/>
            <line num="48" count="4" type="stmt"/>
            <line num="49" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="DigitalOption(double,double)" num="57" count="4" type="method"/>
            <line num="58" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="DigitalOption(String,double,double)" num="61" count="4" type="method"/>
            <line num="62" count="4" type="stmt"/>
            <line num="63" count="4" type="stmt"/>
            <line num="64" count="4" type="stmt"/>
            <line num="65" count="4" type="stmt"/>
            <line num="66" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="79" count="22" type="method"/>
            <line num="84" count="22" type="stmt"/>
            <line num="87" count="22" type="stmt"/>
            <line num="90" count="22" type="stmt"/>
            <line num="91" count="22" type="stmt"/>
            <line num="92" count="22" type="stmt"/>
            <line num="95" count="22" type="stmt"/>
            <line num="96" count="22" type="stmt"/>
            <line num="97" count="22" type="stmt"/>
            <line num="99" count="22" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/DigitalOptionDeltaLikelihood.java" name="DigitalOptionDeltaLikelihood.java">
            <metrics coveredelements="25" coveredconditionals="2" complexity="6" loc="93" coveredmethods="2" methods="2" elements="32" classes="1" ncloc="46" statements="24" conditionals="6" coveredstatements="21"/>
            <class name="DigitalOptionDeltaLikelihood">
               <metrics coveredelements="25" coveredconditionals="2" complexity="6" coveredmethods="2" methods="2" elements="32" statements="24" conditionals="6" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="public" signature="DigitalOptionDeltaLikelihood(double,double)" num="35" count="2" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="51" count="2" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="58" type="cond"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOption.java" name="EuropeanOption.java">
            <metrics coveredelements="32" coveredconditionals="0" complexity="7" loc="129" coveredmethods="6" methods="6" elements="33" classes="1" ncloc="58" statements="27" conditionals="0" coveredstatements="26"/>
            <class name="EuropeanOption">
               <metrics coveredelements="32" coveredconditionals="0" complexity="7" coveredmethods="6" methods="6" elements="33" statements="27" conditionals="0" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOption(String,double,double)" num="46" count="8" type="method"/>
            <line num="47" count="8" type="stmt"/>
            <line num="48" count="8" type="stmt"/>
            <line num="49" count="8" type="stmt"/>
            <line num="50" count="8" type="stmt"/>
            <line num="51" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="EuropeanOption(double,double,int)" num="60" count="2362" type="method"/>
            <line num="61" count="2362" type="stmt"/>
            <line num="62" count="2362" type="stmt"/>
            <line num="63" count="2362" type="stmt"/>
            <line num="64" count="2362" type="stmt"/>
            <line num="65" count="2362" type="stmt"/>
            <line complexity="1" visibility="public" signature="EuropeanOption(double,double)" num="73" count="2362" type="method"/>
            <line num="74" count="2362" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="87" count="4563" type="method"/>
            <line num="92" count="4563" type="stmt"/>
            <line num="95" count="4563" type="stmt"/>
            <line num="98" count="4563" type="stmt"/>
            <line num="99" count="4563" type="stmt"/>
            <line num="100" count="4563" type="stmt"/>
            <line num="103" count="4563" type="stmt"/>
            <line num="104" count="4563" type="stmt"/>
            <line num="105" count="4563" type="stmt"/>
            <line num="107" count="4563" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValues(double,Model) : Map&lt;String, Object&gt;" num="110" count="8" type="method"/>
            <line num="112" count="8" type="stmt"/>
            <line num="114" count="8" type="stmt"/>
            <line num="115" count="8" type="stmt"/>
            <line num="116" count="8" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="124" count="3" type="method"/>
            <line num="126" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionDeltaLikelihood.java" name="EuropeanOptionDeltaLikelihood.java">
            <metrics coveredelements="30" coveredconditionals="1" complexity="4" loc="110" coveredmethods="2" methods="2" elements="34" classes="1" ncloc="52" statements="30" conditionals="2" coveredstatements="27"/>
            <class name="EuropeanOptionDeltaLikelihood">
               <metrics coveredelements="30" coveredconditionals="1" complexity="4" coveredmethods="2" methods="2" elements="34" statements="30" conditionals="2" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionDeltaLikelihood(double,double)" num="35" count="72" type="method"/>
            <line num="36" count="72" type="stmt"/>
            <line num="37" count="72" type="stmt"/>
            <line num="38" count="72" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="51" count="72" type="method"/>
            <line num="54" count="72" type="stmt"/>
            <line num="55" count="72" type="stmt"/>
            <line num="56" count="72" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="63" count="72" type="stmt"/>
            <line num="64" count="72" type="stmt"/>
            <line num="66" count="72" type="stmt"/>
            <line num="67" count="72" type="stmt"/>
            <line num="68" count="72" type="stmt"/>
            <line num="73" count="72" type="stmt"/>
            <line num="74" count="72" type="stmt"/>
            <line falsecount="0" truecount="72" num="74" type="cond"/>
            <line num="78" count="72" type="stmt"/>
            <line num="80" count="72" type="stmt"/>
            <line num="81" count="72" type="stmt"/>
            <line num="83" count="72" type="stmt"/>
            <line num="84" count="72" type="stmt"/>
            <line num="86" count="72" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="72" type="stmt"/>
            <line num="99" count="72" type="stmt"/>
            <line num="100" count="72" type="stmt"/>
            <line num="101" count="72" type="stmt"/>
            <line num="104" count="72" type="stmt"/>
            <line num="105" count="72" type="stmt"/>
            <line num="106" count="72" type="stmt"/>
            <line num="108" count="72" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionDeltaPathwise.java" name="EuropeanOptionDeltaPathwise.java">
            <metrics coveredelements="18" coveredconditionals="1" complexity="5" loc="82" coveredmethods="2" methods="2" elements="20" classes="1" ncloc="36" statements="16" conditionals="2" coveredstatements="15"/>
            <class name="EuropeanOptionDeltaPathwise">
               <metrics coveredelements="18" coveredconditionals="1" complexity="5" coveredmethods="2" methods="2" elements="20" statements="16" conditionals="2" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionDeltaPathwise(double,double)" num="39" count="72" type="method"/>
            <line num="40" count="72" type="stmt"/>
            <line num="41" count="72" type="stmt"/>
            <line num="42" count="72" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="55" count="72" type="method"/>
            <line num="57" count="72" type="stmt"/>
            <line falsecount="72" truecount="0" num="57" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="63" count="72" type="stmt"/>
            <line num="64" count="72" type="stmt"/>
            <line num="67" count="72" type="stmt"/>
            <line num="68" count="72" type="stmt"/>
            <line num="71" count="72" type="stmt"/>
            <line num="72" count="72" type="stmt"/>
            <line num="73" count="72" type="stmt"/>
            <line num="76" count="72" type="stmt"/>
            <line num="77" count="72" type="stmt"/>
            <line num="78" count="72" type="stmt"/>
            <line num="80" count="72" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionDeltaPathwiseForGeometricModel.java" name="EuropeanOptionDeltaPathwiseForGeometricModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="88" coveredmethods="0" methods="2" elements="20" classes="1" ncloc="33" statements="16" conditionals="2" coveredstatements="0"/>
            <class name="EuropeanOptionDeltaPathwiseForGeometricModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="20" statements="16" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionDeltaPathwiseForGeometricModel(double,double)" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionGammaLikelihood.java" name="EuropeanOptionGammaLikelihood.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="121" coveredmethods="0" methods="3" elements="49" classes="1" ncloc="70" statements="40" conditionals="6" coveredstatements="0"/>
            <class name="EuropeanOptionGammaLikelihood">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="49" statements="40" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionGammaLikelihood(double,double)" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(AssetModelMonteCarloSimulationModel) : double" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariableAccumulator" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionGammaPathwise.java" name="EuropeanOptionGammaPathwise.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="95" coveredmethods="0" methods="3" elements="28" classes="1" ncloc="46" statements="23" conditionals="2" coveredstatements="0"/>
            <class name="EuropeanOptionGammaPathwise">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="28" statements="23" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionGammaPathwise(double,double)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(AssetModelMonteCarloSimulationModel) : double" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariableAccumulator" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionRhoLikelihood.java" name="EuropeanOptionRhoLikelihood.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="117" coveredmethods="0" methods="3" elements="45" classes="1" ncloc="65" statements="36" conditionals="6" coveredstatements="0"/>
            <class name="EuropeanOptionRhoLikelihood">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="45" statements="36" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionRhoLikelihood(double,double)" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(AssetModelMonteCarloSimulationModel) : double" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariableAccumulator" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionRhoPathwise.java" name="EuropeanOptionRhoPathwise.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="91" coveredmethods="0" methods="3" elements="29" classes="1" ncloc="47" statements="22" conditionals="4" coveredstatements="0"/>
            <class name="EuropeanOptionRhoPathwise">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="29" statements="22" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionRhoPathwise(double,double)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(AssetModelMonteCarloSimulationModel) : double" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariableAccumulator" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionThetaPathwise.java" name="EuropeanOptionThetaPathwise.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="93" coveredmethods="0" methods="3" elements="32" classes="1" ncloc="49" statements="25" conditionals="4" coveredstatements="0"/>
            <class name="EuropeanOptionThetaPathwise">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="32" statements="25" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionThetaPathwise(double,double)" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(AssetModelMonteCarloSimulationModel) : double" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionVegaLikelihood.java" name="EuropeanOptionVegaLikelihood.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="117" coveredmethods="0" methods="3" elements="45" classes="1" ncloc="65" statements="36" conditionals="6" coveredstatements="0"/>
            <class name="EuropeanOptionVegaLikelihood">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="45" statements="36" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionVegaLikelihood(double,double)" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(AssetModelMonteCarloSimulationModel) : double" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariableAccumulator" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionVegaPathwise.java" name="EuropeanOptionVegaPathwise.java">
            <metrics coveredelements="29" coveredconditionals="4" complexity="6" loc="96" coveredmethods="2" methods="3" elements="32" classes="1" ncloc="49" statements="25" conditionals="4" coveredstatements="23"/>
            <class name="EuropeanOptionVegaPathwise">
               <metrics coveredelements="29" coveredconditionals="4" complexity="6" coveredmethods="2" methods="3" elements="32" statements="25" conditionals="4" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionVegaPathwise(double,double)" num="34" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(AssetModelMonteCarloSimulationModel) : double" num="47" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000000" num="70" type="cond"/>
            <line num="72" count="1000000" type="stmt"/>
            <line falsecount="592067" truecount="407933" num="72" type="cond"/>
            <line num="75" count="407933" type="stmt"/>
            <line num="76" count="407933" type="stmt"/>
            <line num="77" count="407933" type="stmt"/>
            <line num="78" count="407933" type="stmt"/>
            <line num="80" count="407933" type="stmt"/>
            <line num="81" count="407933" type="stmt"/>
            <line num="83" count="407933" type="stmt"/>
            <line num="85" count="407933" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionWithBoundary.java" name="EuropeanOptionWithBoundary.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="264" coveredmethods="0" methods="8" elements="127" classes="3" ncloc="153" statements="95" conditionals="24" coveredstatements="0"/>
            <class name="EuropeanOptionWithBoundary">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="4" elements="96" statements="74" conditionals="18" coveredstatements="0"/>
            </class>
            <class name="EuropeanOptionWithBoundary.BoundaryAdjustmentType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="EuropeanOptionWithBoundary.ConstantBarrier">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="31" statements="21" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionWithBoundary(double,double)" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="getBoundaryAdjustment(double,double,AssetModelMonteCarloSimulationModel,RandomVariable) : RandomVariable" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getRegressionBasisFunctions(double,AssetModelMonteCarloSimulationModel,RandomVariable) : RandomVariable[]" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ConstantBarrier(AssetModelMonteCarloSimulationModel)" num="212" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getBarrierDirection(int,RandomVariable[]) : RandomVariableFromDoubleArray[]" num="217" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getBarrierLevel(int,RandomVariable[]) : RandomVariableFromDoubleArray" num="229" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="231" type="cond"/>
            <line num="232" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="240" type="cond"/>
            <line num="241" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isUpperBarrier() : boolean" num="258" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/FiniteDifferenceDeltaHedgedPortfolio.java" name="FiniteDifferenceDeltaHedgedPortfolio.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="134" coveredmethods="0" methods="2" elements="50" classes="1" ncloc="70" statements="42" conditionals="6" coveredstatements="0"/>
            <class name="FiniteDifferenceDeltaHedgedPortfolio">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="2" elements="50" statements="42" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FiniteDifferenceDeltaHedgedPortfolio(AbstractAssetMonteCarloProduct,AssetModelMonteCarloSimulationModel)" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="48" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/FiniteDifferenceHedgedPortfolio.java" name="FiniteDifferenceHedgedPortfolio.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="95" coveredmethods="0" methods="2" elements="14" classes="2" ncloc="37" statements="12" conditionals="0" coveredstatements="0"/>
            <class name="FiniteDifferenceHedgedPortfolio">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="14" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="FiniteDifferenceHedgedPortfolio.HedgeStrategy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FiniteDifferenceHedgedPortfolio(AbstractAssetMonteCarloProduct,AssetModelMonteCarloSimulationModel,ArrayList&lt;AbstractAssetMonteCarloProduct&gt;,HedgeStrategy)" num="58" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="71" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/LocalRiskMinimizingHedgePortfolio.java" name="LocalRiskMinimizingHedgePortfolio.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="168" coveredmethods="0" methods="3" elements="64" classes="1" ncloc="85" statements="57" conditionals="4" coveredstatements="0"/>
            <class name="LocalRiskMinimizingHedgePortfolio">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="64" statements="57" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LocalRiskMinimizingHedgePortfolio(AbstractAssetMonteCarloProduct,AssetModelMonteCarloSimulationModel,TimeDiscretization,int)" num="49" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="60" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getBasisFunctions(RandomVariable) : RandomVariable[]" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.fouriermethod.calibration.models">
         <metrics coveredelements="105" complexity="67" loc="502" methods="29" classes="4" statements="124" coveredconditionals="25" coveredmethods="16" elements="227" ncloc="286" files="4" conditionals="74" coveredstatements="64"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/models/CalibratableHestonModel.java" name="CalibratableHestonModel.java">
            <metrics coveredelements="61" coveredconditionals="16" complexity="27" loc="168" coveredmethods="8" methods="10" elements="91" classes="1" ncloc="105" statements="49" conditionals="32" coveredstatements="37"/>
            <class name="CalibratableHestonModel">
               <metrics coveredelements="61" coveredconditionals="16" complexity="27" coveredmethods="8" methods="10" elements="91" statements="49" conditionals="32" coveredstatements="37"/>
            </class>
            <line complexity="1" visibility="public" signature="CalibratableHestonModel(HestonModelDescriptor)" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratableHestonModel(HestonModelDescriptor,ScalarParameterInformation,ScalarParameterInformation,ScalarParameterInformation,ScalarParameterInformation,ScalarParameterInformation,boolean)" num="74" count="122" type="method"/>
            <line num="77" count="123" type="stmt"/>
            <line num="78" count="122" type="stmt"/>
            <line num="79" count="123" type="stmt"/>
            <line num="80" count="122" type="stmt"/>
            <line num="81" count="123" type="stmt"/>
            <line num="82" count="123" type="stmt"/>
            <line num="83" count="123" type="stmt"/>
            <line num="84" count="123" type="stmt"/>
            <line num="85" count="123" type="stmt"/>
            <line complexity="8" visibility="public" signature="getCloneForModifiedParameters(double[]) : CalibratableHestonModel" num="88" count="122" type="method"/>
            <line num="92" count="121" type="stmt"/>
            <line falsecount="0" truecount="122" num="92" type="cond"/>
            <line num="93" count="122" type="stmt"/>
            <line falsecount="0" truecount="122" num="93" type="cond"/>
            <line num="94" count="122" type="stmt"/>
            <line falsecount="0" truecount="122" num="94" type="cond"/>
            <line num="95" count="122" type="stmt"/>
            <line falsecount="0" truecount="122" num="95" type="cond"/>
            <line num="96" count="122" type="stmt"/>
            <line falsecount="0" truecount="122" num="96" type="cond"/>
            <line num="98" count="122" type="stmt"/>
            <line falsecount="122" truecount="0" num="98" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="122" type="stmt"/>
            <line num="107" count="122" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelDescriptor() : ModelDescriptor" num="110" count="1" type="method"/>
            <line num="112" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCharacteristicFunctionModel() : HestonModel" num="115" count="119" type="method"/>
            <line num="117" count="119" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterUpperBounds() : double[]" num="122" count="1" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterLowerBounds() : double[]" num="127" count="1" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="6" visibility="private" signature="extractUpperBounds() : double[]" num="132" count="121" type="method"/>
            <line num="133" count="121" type="stmt"/>
            <line num="134" count="123" type="stmt"/>
            <line num="135" count="123" type="stmt"/>
            <line falsecount="123" truecount="0" num="135" type="cond"/>
            <line num="136" count="123" type="stmt"/>
            <line falsecount="123" truecount="0" num="136" type="cond"/>
            <line num="137" count="123" type="stmt"/>
            <line falsecount="123" truecount="0" num="137" type="cond"/>
            <line num="138" count="123" type="stmt"/>
            <line falsecount="123" truecount="0" num="138" type="cond"/>
            <line num="139" count="123" type="stmt"/>
            <line falsecount="123" truecount="0" num="139" type="cond"/>
            <line num="141" count="123" type="stmt"/>
            <line complexity="6" visibility="private" signature="extractLowerBounds() : double[]" num="144" count="121" type="method"/>
            <line num="145" count="121" type="stmt"/>
            <line num="146" count="123" type="stmt"/>
            <line num="147" count="123" type="stmt"/>
            <line falsecount="122" truecount="0" num="147" type="cond"/>
            <line num="148" count="122" type="stmt"/>
            <line falsecount="123" truecount="0" num="148" type="cond"/>
            <line num="149" count="123" type="stmt"/>
            <line falsecount="123" truecount="0" num="149" type="cond"/>
            <line num="150" count="123" type="stmt"/>
            <line falsecount="123" truecount="0" num="150" type="cond"/>
            <line num="151" count="123" type="stmt"/>
            <line falsecount="123" truecount="0" num="151" type="cond"/>
            <line num="153" count="123" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/models/CalibratableMertonModel.java" name="CalibratableMertonModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="22" loc="152" coveredmethods="0" methods="10" elements="75" classes="1" ncloc="94" statements="41" conditionals="24" coveredstatements="0"/>
            <class name="CalibratableMertonModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="22" coveredmethods="0" methods="10" elements="75" statements="41" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CalibratableMertonModel(MertonModelDescriptor)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratableMertonModel(MertonModelDescriptor,ScalarParameterInformation,ScalarParameterInformation,ScalarParameterInformation,ScalarParameterInformation)" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneForModifiedParameters(double[]) : CalibratableProcess" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelDescriptor() : ModelDescriptor" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCharacteristicFunctionModel() : MertonModel" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterLowerBounds() : double[]" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterUpperBounds() : double[]" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="extractUpperBounds() : double[]" num="118" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="extractLowerBounds() : double[]" num="129" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/models/CalibratableProcess.java" name="CalibratableProcess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="59" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CalibratableProcess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/models/CalibratableVarianceGammaModel.java" name="CalibratableVarianceGammaModel.java">
            <metrics coveredelements="44" coveredconditionals="9" complexity="18" loc="123" coveredmethods="8" methods="9" elements="61" classes="1" ncloc="77" statements="34" conditionals="18" coveredstatements="27"/>
            <class name="CalibratableVarianceGammaModel">
               <metrics coveredelements="44" coveredconditionals="9" complexity="18" coveredmethods="8" methods="9" elements="61" statements="34" conditionals="18" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="CalibratableVarianceGammaModel(VarianceGammaModelDescriptor)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratableVarianceGammaModel(VarianceGammaModelDescriptor,ScalarParameterInformation,ScalarParameterInformation,ScalarParameterInformation)" num="58" count="131" type="method"/>
            <line num="60" count="132" type="stmt"/>
            <line num="61" count="132" type="stmt"/>
            <line num="62" count="132" type="stmt"/>
            <line num="63" count="132" type="stmt"/>
            <line num="64" count="132" type="stmt"/>
            <line num="65" count="132" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCloneForModifiedParameters(double[]) : CalibratableProcess" num="68" count="131" type="method"/>
            <line num="72" count="131" type="stmt"/>
            <line falsecount="0" truecount="131" num="72" type="cond"/>
            <line num="73" count="130" type="stmt"/>
            <line falsecount="0" truecount="131" num="73" type="cond"/>
            <line num="74" count="129" type="stmt"/>
            <line falsecount="0" truecount="131" num="74" type="cond"/>
            <line num="76" count="131" type="stmt"/>
            <line num="80" count="130" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelDescriptor() : ModelDescriptor" num="83" count="1" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCharacteristicFunctionModel() : CharacteristicFunctionModel" num="88" count="128" type="method"/>
            <line num="90" count="128" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterLowerBounds() : double[]" num="94" count="1" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterUpperBounds() : double[]" num="99" count="1" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line complexity="4" visibility="private" signature="extractUpperBounds() : double[]" num="104" count="130" type="method"/>
            <line num="105" count="130" type="stmt"/>
            <line num="106" count="132" type="stmt"/>
            <line num="107" count="131" type="stmt"/>
            <line falsecount="131" truecount="0" num="107" type="cond"/>
            <line num="108" count="132" type="stmt"/>
            <line falsecount="132" truecount="0" num="108" type="cond"/>
            <line num="109" count="132" type="stmt"/>
            <line falsecount="132" truecount="0" num="109" type="cond"/>
            <line num="111" count="132" type="stmt"/>
            <line complexity="4" visibility="private" signature="extractLowerBounds() : double[]" num="114" count="130" type="method"/>
            <line num="115" count="130" type="stmt"/>
            <line num="116" count="132" type="stmt"/>
            <line num="117" count="132" type="stmt"/>
            <line falsecount="132" truecount="0" num="117" type="cond"/>
            <line num="118" count="131" type="stmt"/>
            <line falsecount="132" truecount="0" num="118" type="cond"/>
            <line num="119" count="132" type="stmt"/>
            <line falsecount="132" truecount="0" num="119" type="cond"/>
            <line num="121" count="132" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo">
         <metrics coveredelements="1581" complexity="1100" loc="7362" methods="472" classes="25" statements="2137" coveredconditionals="454" coveredmethods="208" elements="3691" ncloc="4750" files="25" conditionals="1082" coveredstatements="919"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/AbstractMonteCarloProduct.java" name="AbstractMonteCarloProduct.java">
            <metrics coveredelements="36" coveredconditionals="3" complexity="18" loc="167" coveredmethods="9" methods="13" elements="57" classes="1" ncloc="107" statements="38" conditionals="6" coveredstatements="24"/>
            <class name="AbstractMonteCarloProduct">
               <metrics coveredelements="36" coveredconditionals="3" complexity="18" coveredmethods="9" methods="13" elements="57" statements="38" conditionals="6" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractMonteCarloProduct(String)" num="25" count="305522" type="method"/>
            <line num="26" count="305521" type="stmt"/>
            <line num="27" count="305524" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractMonteCarloProduct()" num="30" count="2593" type="method"/>
            <line num="31" count="2593" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,Model) : Object" num="37" count="4" type="method"/>
            <line num="39" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="39" type="cond"/>
            <line num="40" count="4" type="stmt"/>
            <line num="41" count="4" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValues(double,Model) : Map&lt;String, Object&gt;" num="56" count="6" type="method"/>
            <line num="58" count="6" type="stmt"/>
            <line num="59" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="59" type="cond"/>
            <line num="60" count="6" type="stmt"/>
            <line num="61" count="6" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(MonteCarloSimulationModel) : double" num="81" count="18866" type="method"/>
            <line num="83" count="18866" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValues(double,MonteCarloSimulationModel) : Map&lt;String, Object&gt;" num="86" count="658" type="method"/>
            <line num="89" count="658" type="stmt"/>
            <line num="91" count="658" type="stmt"/>
            <line falsecount="658" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="96" count="658" type="stmt"/>
            <line num="97" count="658" type="stmt"/>
            <line num="99" count="658" type="stmt"/>
            <line num="100" count="658" type="stmt"/>
            <line num="101" count="658" type="stmt"/>
            <line num="103" count="658" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValuesForModifiedData(double,MonteCarloSimulationModel,Map&lt;String,Object&gt;) : Map&lt;String, Object&gt;" num="109" count="648" type="method"/>
            <line num="112" count="648" type="stmt"/>
            <line num="114" count="648" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValuesForModifiedData(double,MonteCarloSimulationModel,String,Object) : Map&lt;String, Object&gt;" num="120" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues(MonteCarloSimulationModel) : Map&lt;String, Object&gt;" num="131" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValuesForModifiedData(MonteCarloSimulationModel,Map&lt;String,Object&gt;) : Map&lt;String, Object&gt;" num="140" count="648" type="method"/>
            <line num="143" count="648" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValuesForModifiedData(MonteCarloSimulationModel,String,Object) : Map&lt;String, Object&gt;" num="149" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="163" count="3" type="method"/>
            <line num="165" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/AbstractRandomVariableFactory.java" name="AbstractRandomVariableFactory.java">
            <metrics coveredelements="20" coveredconditionals="6" complexity="6" loc="52" coveredmethods="3" methods="3" elements="20" classes="1" ncloc="33" statements="11" conditionals="6" coveredstatements="11"/>
            <class name="AbstractRandomVariableFactory">
               <metrics coveredelements="20" coveredconditionals="6" complexity="6" coveredmethods="3" methods="3" elements="20" statements="11" conditionals="6" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="createRandomVariable(double) : RandomVariable" num="21" count="1" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="createRandomVariableArray(double[]) : RandomVariable[]" num="32" count="58" type="method"/>
            <line num="34" count="58" type="stmt"/>
            <line num="35" count="58" type="stmt"/>
            <line falsecount="58" truecount="464" num="35" type="cond"/>
            <line num="36" count="464" type="stmt"/>
            <line num="38" count="58" type="stmt"/>
            <line complexity="3" visibility="public" signature="createRandomVariableMatrix(double[][]) : RandomVariable[][]" num="41" count="209" type="method"/>
            <line num="43" count="209" type="stmt"/>
            <line num="44" count="209" type="stmt"/>
            <line falsecount="209" truecount="9680" num="44" type="cond"/>
            <line num="45" count="9680" type="stmt"/>
            <line num="46" count="9680" type="stmt"/>
            <line falsecount="9680" truecount="475200" num="46" type="cond"/>
            <line num="47" count="475200" type="stmt"/>
            <line num="50" count="209" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/BrownianBridge.java" name="BrownianBridge.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="226" coveredmethods="0" methods="14" elements="65" classes="1" ncloc="107" statements="41" conditionals="10" coveredstatements="0"/>
            <class name="BrownianBridge">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="14" elements="65" statements="41" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BrownianBridge(TimeDiscretization,int,int,RandomVariable[],RandomVariable[])" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BrownianBridge(TimeDiscretization,int,int,RandomVariable,RandomVariable)" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getBrownianIncrement(int,int) : RandomVariable" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="doGenerateBrownianMotion() : void" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="166" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="171" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : BrownianMotion" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : BrownianMotion" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIncrement(int) : RandomVariable[]" num="192" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="212" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="221" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/BrownianMotion.java" name="BrownianMotion.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="113" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="21" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="BrownianMotion">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getBrownianIncrement(double,int) : RandomVariable" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/BrownianMotionFromMersenneRandomNumbers.java" name="BrownianMotionFromMersenneRandomNumbers.java">
            <metrics coveredelements="61" coveredconditionals="15" complexity="30" loc="254" coveredmethods="10" methods="16" elements="100" classes="1" ncloc="143" statements="58" conditionals="26" coveredstatements="36"/>
            <class name="BrownianMotionFromMersenneRandomNumbers">
               <metrics coveredelements="61" coveredconditionals="15" complexity="30" coveredmethods="10" methods="16" elements="100" statements="58" conditionals="26" coveredstatements="36"/>
            </class>
            <line complexity="1" visibility="public" signature="BrownianMotionFromMersenneRandomNumbers(TimeDiscretization,int,int,int,RandomVariableFactory)" num="67" count="726" type="method"/>
            <line num="73" count="726" type="stmt"/>
            <line num="74" count="726" type="stmt"/>
            <line num="75" count="726" type="stmt"/>
            <line num="76" count="726" type="stmt"/>
            <line num="77" count="726" type="stmt"/>
            <line num="79" count="726" type="stmt"/>
            <line num="81" count="726" type="stmt"/>
            <line complexity="1" visibility="public" signature="BrownianMotionFromMersenneRandomNumbers(TimeDiscretization,int,int,int)" num="92" count="176" type="method"/>
            <line num="97" count="176" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : BrownianMotion" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : BrownianMotion" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="111" count="945393" type="method"/>
            <line num="113" count="945398" type="stmt"/>
            <line complexity="2" visibility="public" signature="getBrownianIncrement(int,int) : RandomVariable" num="116" count="1116272" type="method"/>
            <line num="120" count="1116275" type="stmt"/>
            <line num="121" count="1116303" type="stmt"/>
            <line falsecount="1115630" truecount="673" num="121" type="cond"/>
            <line num="122" count="673" type="stmt"/>
            <line num="129" count="1116303" type="stmt"/>
            <line complexity="8" visibility="private" signature="doGenerateBrownianMotion() : void" num="135" count="673" type="method"/>
            <line num="136" count="673" type="stmt"/>
            <line falsecount="673" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="141" count="673" type="stmt"/>
            <line num="144" count="673" type="stmt"/>
            <line num="147" count="673" type="stmt"/>
            <line num="148" count="673" type="stmt"/>
            <line falsecount="673" truecount="94773" num="148" type="cond"/>
            <line num="149" count="94773" type="stmt"/>
            <line num="159" count="673" type="stmt"/>
            <line falsecount="673" truecount="1012845400" num="159" type="cond"/>
            <line num="160" count="1012845400" type="stmt"/>
            <line falsecount="1012845400" truecount="870994704" num="160" type="cond"/>
            <line num="161" count="870994704" type="stmt"/>
            <line num="163" count="870994704" type="stmt"/>
            <line falsecount="870994704" truecount="2147483647" num="163" type="cond"/>
            <line num="164" count="2147483647" type="stmt"/>
            <line num="165" count="2147483647" type="stmt"/>
            <line num="171" count="673" type="stmt"/>
            <line num="174" count="673" type="stmt"/>
            <line falsecount="673" truecount="94773" num="174" type="cond"/>
            <line num="175" count="94773" type="stmt"/>
            <line num="176" count="94773" type="stmt"/>
            <line falsecount="94773" truecount="183073" num="176" type="cond"/>
            <line num="177" count="183073" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="183" count="7741" type="method"/>
            <line num="185" count="7742" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="188" count="3073604" type="method"/>
            <line num="190" count="3073616" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="193" count="1007279" type="method"/>
            <line num="195" count="1007279" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="198" count="7061" type="method"/>
            <line num="200" count="7062" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSeed() : int" num="206" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="210" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(Object) : boolean" num="217" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="228" type="cond"/>
            <line num="229" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="231" type="cond"/>
            <line num="232" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="240" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="249" count="8" type="method"/>
            <line num="250" count="8" type="stmt"/>
            <line num="252" count="8" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/BrownianMotionFromRandomNumberGenerator.java" name="BrownianMotionFromRandomNumberGenerator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="29" loc="253" coveredmethods="0" methods="15" elements="102" classes="1" ncloc="147" statements="61" conditionals="26" coveredstatements="0"/>
            <class name="BrownianMotionFromRandomNumberGenerator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="29" coveredmethods="0" methods="15" elements="102" statements="61" conditionals="26" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BrownianMotionFromRandomNumberGenerator(TimeDiscretization,int,int,RandomNumberGenerator,RandomVariableFactory)" num="69" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BrownianMotionFromRandomNumberGenerator(TimeDiscretization,int,int,RandomNumberGenerator)" num="99" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : BrownianMotion" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : BrownianMotion" num="112" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getBrownianIncrement(int,int) : RandomVariable" num="118" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="8" visibility="private" signature="doGenerateBrownianMotion() : void" num="137" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="182" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="197" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="202" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(Object) : boolean" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="225" type="cond"/>
            <line num="226" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="228" type="cond"/>
            <line num="229" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="234" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="239" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="248" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/BrownianMotionLazyInit.java" name="BrownianMotionLazyInit.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="77" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="21" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="BrownianMotionLazyInit">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="BrownianMotionLazyInit(TimeDiscretization,int,int,int,RandomVariableFactory)" num="53" count="415" type="method"/>
            <line num="59" count="415" type="stmt"/>
            <line complexity="1" visibility="public" signature="BrownianMotionLazyInit(TimeDiscretization,int,int,int)" num="70" count="415" type="method"/>
            <line num="75" count="415" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/BrownianMotionView.java" name="BrownianMotionView.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="9" loc="87" coveredmethods="7" methods="9" elements="20" classes="1" ncloc="44" statements="11" conditionals="0" coveredstatements="9"/>
            <class name="BrownianMotionView">
               <metrics coveredelements="16" coveredconditionals="0" complexity="9" coveredmethods="7" methods="9" elements="20" statements="11" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="BrownianMotionView(BrownianMotion,Integer[])" num="42" count="34" type="method"/>
            <line num="43" count="34" type="stmt"/>
            <line num="44" count="34" type="stmt"/>
            <line num="45" count="34" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBrownianIncrement(int,int) : RandomVariable" num="48" count="104221" type="method"/>
            <line num="50" count="104219" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="53" count="773" type="method"/>
            <line num="55" count="773" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="58" count="181485" type="method"/>
            <line num="60" count="181485" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="63" count="762" type="method"/>
            <line num="65" count="762" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="68" count="1130" type="method"/>
            <line num="70" count="1130" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : BrownianMotion" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : BrownianMotion" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="83" count="104222" type="method"/>
            <line num="85" count="104221" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/BrownianMotionWithControlVariate.java" name="BrownianMotionWithControlVariate.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="99" coveredmethods="0" methods="9" elements="34" classes="1" ncloc="57" statements="21" conditionals="4" coveredstatements="0"/>
            <class name="BrownianMotionWithControlVariate">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="9" elements="34" statements="21" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BrownianMotionWithControlVariate(BrownianMotion)" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getBrownianIncrement(int,int) : RandomVariable" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : BrownianMotion" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : BrownianMotion" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/CorrelatedBrownianMotion.java" name="CorrelatedBrownianMotion.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="123" coveredmethods="0" methods="9" elements="29" classes="1" ncloc="52" statements="16" conditionals="4" coveredstatements="0"/>
            <class name="CorrelatedBrownianMotion">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="9" elements="29" statements="16" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CorrelatedBrownianMotion(BrownianMotion,double[][])" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getBrownianIncrement(int,int) : RandomVariable" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : BrownianMotion" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : BrownianMotion" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/GammaProcess.java" name="GammaProcess.java">
            <metrics coveredelements="48" coveredconditionals="15" complexity="28" loc="254" coveredmethods="3" methods="14" elements="98" classes="1" ncloc="144" statements="58" conditionals="26" coveredstatements="30"/>
            <class name="GammaProcess">
               <metrics coveredelements="48" coveredconditionals="15" complexity="28" coveredmethods="3" methods="14" elements="98" statements="58" conditionals="26" coveredstatements="30"/>
            </class>
            <line complexity="1" visibility="public" signature="GammaProcess(TimeDiscretization,int,int,int,double,double)" num="70" count="8" type="method"/>
            <line num="77" count="8" type="stmt"/>
            <line num="78" count="8" type="stmt"/>
            <line num="79" count="8" type="stmt"/>
            <line num="80" count="8" type="stmt"/>
            <line num="81" count="8" type="stmt"/>
            <line num="82" count="8" type="stmt"/>
            <line num="83" count="8" type="stmt"/>
            <line num="85" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="GammaProcess(TimeDiscretization,int,int,int,double)" num="97" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : IndependentIncrements" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : IndependentIncrements" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="117" count="1202" type="method"/>
            <line num="120" count="1202" type="stmt"/>
            <line num="121" count="1202" type="stmt"/>
            <line falsecount="1194" truecount="8" num="121" type="cond"/>
            <line num="122" count="8" type="stmt"/>
            <line num="130" count="1202" type="stmt"/>
            <line complexity="8" visibility="private" signature="doGenerateGammaIncrements() : void" num="136" count="8" type="method"/>
            <line num="137" count="8" type="stmt"/>
            <line falsecount="8" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="142" count="8" type="stmt"/>
            <line num="145" count="8" type="stmt"/>
            <line num="148" count="8" type="stmt"/>
            <line num="149" count="8" type="stmt"/>
            <line falsecount="8" truecount="800" num="149" type="cond"/>
            <line num="150" count="800" type="stmt"/>
            <line num="151" count="800" type="stmt"/>
            <line num="161" count="8" type="stmt"/>
            <line falsecount="8" truecount="260000" num="161" type="cond"/>
            <line num="162" count="260000" type="stmt"/>
            <line falsecount="260000" truecount="26000000" num="162" type="cond"/>
            <line num="163" count="26000000" type="stmt"/>
            <line num="165" count="26000000" type="stmt"/>
            <line falsecount="26000000" truecount="26000000" num="165" type="cond"/>
            <line num="166" count="26000000" type="stmt"/>
            <line num="167" count="26000000" type="stmt"/>
            <line num="173" count="8" type="stmt"/>
            <line num="176" count="8" type="stmt"/>
            <line falsecount="8" truecount="800" num="176" type="cond"/>
            <line num="177" count="800" type="stmt"/>
            <line num="178" count="800" type="stmt"/>
            <line falsecount="800" truecount="800" num="178" type="cond"/>
            <line num="179" count="800" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="200" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSeed() : int" num="208" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="212" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(Object) : boolean" num="222" count="0" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="224" type="cond"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="245" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/IndependentIncrements.java" name="IndependentIncrements.java">
            <metrics coveredelements="7" coveredconditionals="2" complexity="2" loc="112" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="20" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="IndependentIncrements">
               <metrics coveredelements="7" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="7" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="2" visibility="package" signature="getIncrement(int) : RandomVariable[]" num="36" count="746801" type="method"/>
            <line num="38" count="746802" type="stmt"/>
            <line num="39" count="746801" type="stmt"/>
            <line falsecount="746810" truecount="1051619" num="39" type="cond"/>
            <line num="40" count="1051615" type="stmt"/>
            <line num="42" count="746810" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/IndependentIncrementsFromICDF.java" name="IndependentIncrementsFromICDF.java">
            <metrics coveredelements="57" coveredconditionals="17" complexity="30" loc="295" coveredmethods="7" methods="15" elements="101" classes="1" ncloc="148" statements="58" conditionals="28" coveredstatements="33"/>
            <class name="IndependentIncrementsFromICDF">
               <metrics coveredelements="57" coveredconditionals="17" complexity="30" coveredmethods="7" methods="15" elements="101" statements="58" conditionals="28" coveredstatements="33"/>
            </class>
            <line complexity="1" visibility="public" signature="IndependentIncrementsFromICDF(TimeDiscretization,int,int,int,IntFunction&lt;IntFunction&lt;DoubleUnaryOperator&gt;&gt;,RandomVariableFactory)" num="92" count="5" type="method"/>
            <line num="99" count="5" type="stmt"/>
            <line num="100" count="5" type="stmt"/>
            <line num="101" count="5" type="stmt"/>
            <line num="102" count="5" type="stmt"/>
            <line num="103" count="5" type="stmt"/>
            <line num="105" count="5" type="stmt"/>
            <line num="106" count="5" type="stmt"/>
            <line num="108" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="IndependentIncrementsFromICDF(TimeDiscretization,int,int,int,IntFunction&lt;IntFunction&lt;DoubleUnaryOperator&gt;&gt;)" num="135" count="5" type="method"/>
            <line num="141" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : IndependentIncrements" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : IndependentIncrements" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="154" count="2000" type="method"/>
            <line num="158" count="2000" type="stmt"/>
            <line num="159" count="2000" type="stmt"/>
            <line falsecount="1995" truecount="5" num="159" type="cond"/>
            <line num="160" count="5" type="stmt"/>
            <line num="167" count="2000" type="stmt"/>
            <line complexity="9" visibility="private" signature="doGenerateIncrements() : void" num="173" count="5" type="method"/>
            <line num="174" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="179" count="5" type="stmt"/>
            <line num="182" count="5" type="stmt"/>
            <line num="185" count="5" type="stmt"/>
            <line num="186" count="5" type="stmt"/>
            <line falsecount="5" truecount="500" num="186" type="cond"/>
            <line num="187" count="500" type="stmt"/>
            <line falsecount="500" truecount="1500" num="187" type="cond"/>
            <line num="188" count="1500" type="stmt"/>
            <line num="199" count="5" type="stmt"/>
            <line falsecount="5" truecount="2300000" num="199" type="cond"/>
            <line num="200" count="2300000" type="stmt"/>
            <line falsecount="2300000" truecount="230000000" num="200" type="cond"/>
            <line num="202" count="230000000" type="stmt"/>
            <line falsecount="230000000" truecount="690000000" num="202" type="cond"/>
            <line num="203" count="690000000" type="stmt"/>
            <line num="204" count="690000000" type="stmt"/>
            <line num="210" count="5" type="stmt"/>
            <line num="213" count="5" type="stmt"/>
            <line falsecount="5" truecount="500" num="213" type="cond"/>
            <line num="214" count="500" type="stmt"/>
            <line num="215" count="500" type="stmt"/>
            <line falsecount="500" truecount="1500" num="215" type="cond"/>
            <line num="216" count="1500" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="222" count="5" type="method"/>
            <line num="224" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="227" count="2505" type="method"/>
            <line num="229" count="2505" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="232" count="5" type="method"/>
            <line num="234" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="237" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSeed() : int" num="245" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="249" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(Object) : boolean" num="258" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="263" type="cond"/>
            <line num="264" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="272" type="cond"/>
            <line num="273" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="281" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="290" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/JumpProcessIncrements.java" name="JumpProcessIncrements.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="22" loc="219" coveredmethods="0" methods="13" elements="72" classes="1" ncloc="115" statements="41" conditionals="18" coveredstatements="0"/>
            <class name="JumpProcessIncrements">
               <metrics coveredelements="0" coveredconditionals="0" complexity="22" coveredmethods="0" methods="13" elements="72" statements="41" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="JumpProcessIncrements(TimeDiscretization,double[],int,int,RandomVariableFactory)" num="66" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="JumpProcessIncrements(TimeDiscretization,double[],int,int)" num="91" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : JumpProcessIncrements" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : JumpProcessIncrements" num="104" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="110" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="doGenerateIncrements() : void" num="129" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSeed() : int" num="203" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="207" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="214" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/MertonJumpProcess.java" name="MertonJumpProcess.java">
            <metrics coveredelements="50" coveredconditionals="7" complexity="21" loc="168" coveredmethods="12" methods="17" elements="62" classes="1" ncloc="117" statements="37" conditionals="8" coveredstatements="31"/>
            <class name="MertonJumpProcess">
               <metrics coveredelements="50" coveredconditionals="7" complexity="21" coveredmethods="12" methods="17" elements="62" statements="37" conditionals="8" coveredstatements="31"/>
            </class>
            <line complexity="1" visibility="public" signature="MertonJumpProcess(double,double,double,TimeDiscretization,int,int)" num="38" count="5" type="method"/>
            <line num="41" count="5" type="stmt"/>
            <line num="43" count="5" type="stmt"/>
            <line num="44" count="5" type="stmt"/>
            <line num="45" count="5" type="stmt"/>
            <line num="46" count="5" type="stmt"/>
            <line num="48" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(int) : IntFunction&lt;DoubleUnaryOperator&gt;" num="49" count="1500" type="method"/>
            <line num="51" count="1500" type="stmt"/>
            <line complexity="4" visibility="public" signature="apply(int) : DoubleUnaryOperator" num="52" count="1500" type="method"/>
            <line num="54" count="1500" type="stmt"/>
            <line falsecount="1000" truecount="500" num="54" type="cond"/>
            <line num="56" count="500" type="stmt"/>
            <line num="57" count="500" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="58" count="230000000" type="method"/>
            <line num="60" count="230000000" type="stmt"/>
            <line num="64" count="1000" type="stmt"/>
            <line falsecount="500" truecount="500" num="64" type="cond"/>
            <line num="66" count="500" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="67" count="230000000" type="method"/>
            <line num="69" count="230000000" type="stmt"/>
            <line num="73" count="500" type="stmt"/>
            <line falsecount="0" truecount="500" num="73" type="cond"/>
            <line num="75" count="500" type="stmt"/>
            <line num="76" count="500" type="stmt"/>
            <line num="77" count="500" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="78" count="230000000" type="method"/>
            <line num="80" count="230000000" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="92" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="95" count="1500" type="method"/>
            <line num="97" count="1500" type="stmt"/>
            <line falsecount="1000" truecount="500" num="97" type="cond"/>
            <line num="98" count="500" type="stmt"/>
            <line num="99" count="500" type="stmt"/>
            <line num="100" count="500" type="stmt"/>
            <line num="103" count="1000" type="stmt"/>
            <line num="108" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="111" count="1500" type="method"/>
            <line num="113" count="1500" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="116" count="5" type="method"/>
            <line num="118" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="121" count="2505" type="method"/>
            <line num="123" count="2505" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="126" count="5" type="method"/>
            <line num="128" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="131" count="5" type="method"/>
            <line num="133" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : IndependentIncrements" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : IndependentIncrements" num="141" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpIntensity() : double" num="150" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpSizeMean() : double" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpSizeStDev() : double" num="164" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/MonteCarloProduct.java" name="MonteCarloProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="143" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="25" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MonteCarloProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/MonteCarloSimulationModel.java" name="MonteCarloSimulationModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="104" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="20" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="MonteCarloSimulationModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getReferenceDate() : LocalDateTime" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/RandomVariableFactory.java" name="RandomVariableFactory.java">
            <metrics coveredelements="12" coveredconditionals="5" complexity="5" loc="86" coveredmethods="1" methods="1" elements="18" classes="1" ncloc="26" statements="9" conditionals="8" coveredstatements="6"/>
            <class name="RandomVariableFactory">
               <metrics coveredelements="12" coveredconditionals="5" complexity="5" coveredmethods="1" methods="1" elements="18" statements="9" conditionals="8" coveredstatements="6"/>
            </class>
            <line complexity="5" visibility="package" signature="getRandomVariableOrDefault(RandomVariableFactory,Object,RandomVariable) : RandomVariable" num="27" count="1080" type="method"/>
            <line num="28" count="1080" type="stmt"/>
            <line falsecount="360" truecount="720" num="28" type="cond"/>
            <line num="29" count="720" type="stmt"/>
            <line num="31" count="360" type="stmt"/>
            <line falsecount="360" truecount="0" num="31" type="cond"/>
            <line num="32" count="0" type="stmt"/>
            <line num="34" count="360" type="stmt"/>
            <line falsecount="0" truecount="360" num="34" type="cond"/>
            <line num="35" count="360" type="stmt"/>
            <line falsecount="360" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="360" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/RandomVariableFloatFactory.java" name="RandomVariableFloatFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="32" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="16" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="RandomVariableFloatFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomVariableFloatFactory()" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double) : RandomVariable" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double[]) : RandomVariable" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/RandomVariableFromArrayFactory.java" name="RandomVariableFromArrayFactory.java">
            <metrics coveredelements="18" coveredconditionals="2" complexity="7" loc="67" coveredmethods="6" methods="6" elements="18" classes="1" ncloc="36" statements="10" conditionals="2" coveredstatements="10"/>
            <class name="RandomVariableFromArrayFactory">
               <metrics coveredelements="18" coveredconditionals="2" complexity="7" coveredmethods="6" methods="6" elements="18" statements="10" conditionals="2" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomVariableFromArrayFactory()" num="26" count="11982" type="method"/>
            <line num="27" count="11978" type="stmt"/>
            <line num="28" count="11983" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromArrayFactory(boolean)" num="31" count="98" type="method"/>
            <line num="32" count="98" type="stmt"/>
            <line num="33" count="98" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double) : RandomVariable" num="36" count="63767074" type="method"/>
            <line num="38" count="63767865" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double) : RandomVariable" num="41" count="10255680" type="method"/>
            <line num="43" count="10255696" type="stmt"/>
            <line complexity="2" visibility="public" signature="createRandomVariable(double,double[]) : RandomVariable" num="53" count="187601" type="method"/>
            <line num="55" count="187601" type="stmt"/>
            <line falsecount="17041" truecount="170560" num="55" type="cond"/>
            <line num="56" count="170560" type="stmt"/>
            <line num="58" count="17041" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="62" count="82" type="method"/>
            <line num="64" count="82" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/RandomVariableFromDoubleArray.java" name="RandomVariableFromDoubleArray.java">
            <metrics coveredelements="662" coveredconditionals="228" complexity="307" loc="1501" coveredmethods="55" methods="86" elements="1097" classes="1" ncloc="1178" statements="631" conditionals="380" coveredstatements="379"/>
            <class name="RandomVariableFromDoubleArray">
               <metrics coveredelements="662" coveredconditionals="228" complexity="307" coveredmethods="55" methods="86" elements="1097" statements="631" conditionals="380" coveredstatements="379"/>
            </class>
            <line complexity="3" visibility="public" signature="RandomVariableFromDoubleArray(RandomVariable)" num="60" count="1016" type="method"/>
            <line num="61" count="1016" type="stmt"/>
            <line num="62" count="1016" type="stmt"/>
            <line num="63" count="1016" type="stmt"/>
            <line falsecount="400" truecount="616" num="63" type="cond"/>
            <line num="64" count="1016" type="stmt"/>
            <line falsecount="400" truecount="616" num="64" type="cond"/>
            <line num="65" count="1016" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromDoubleArray(double)" num="73" count="1424865" type="method"/>
            <line num="74" count="1424530" type="stmt"/>
            <line complexity="3" visibility="public" signature="RandomVariableFromDoubleArray(RandomVariable,DoubleUnaryOperator)" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromDoubleArray(double,double,int)" num="99" count="20361732" type="method"/>
            <line num="100" count="20360984" type="stmt"/>
            <line num="101" count="20361413" type="stmt"/>
            <line num="102" count="20361663" type="stmt"/>
            <line num="103" count="20361854" type="stmt"/>
            <line num="104" count="20361851" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromDoubleArray(double,double)" num="113" count="20361893" type="method"/>
            <line num="114" count="20361664" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromDoubleArray(double,int,double)" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromDoubleArray(double,double[],int)" num="145" count="1063004060" type="method"/>
            <line num="146" count="1062757664" type="stmt"/>
            <line num="147" count="1063090974" type="stmt"/>
            <line num="148" count="1063183581" type="stmt"/>
            <line num="149" count="1063216598" type="stmt"/>
            <line num="150" count="1063260804" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromDoubleArray(double,double[])" num="166" count="1063279935" type="method"/>
            <line num="167" count="1062844674" type="stmt"/>
            <line complexity="4" visibility="public" signature="RandomVariableFromDoubleArray(double,IntToDoubleFunction,int,int)" num="178" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(int) : void" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromDoubleArray(double,IntToDoubleFunction,int)" num="202" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(RandomVariable) : boolean" num="206" count="70" type="method"/>
            <line num="208" count="70" type="stmt"/>
            <line falsecount="70" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="70" type="stmt"/>
            <line falsecount="38" truecount="32" num="211" type="cond"/>
            <line num="212" count="32" type="stmt"/>
            <line num="215" count="38" type="stmt"/>
            <line falsecount="38" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="219" count="38" type="stmt"/>
            <line falsecount="38" truecount="60160" num="219" type="cond"/>
            <line num="220" count="60160" type="stmt"/>
            <line falsecount="60160" truecount="0" num="220" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line num="225" count="38" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="228" count="569173054" type="method"/>
            <line num="230" count="569314749" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="233" count="1383499902" type="method"/>
            <line num="235" count="1384300311" type="stmt"/>
            <line complexity="2" visibility="public" signature="get(int) : double" num="238" count="73375128" type="method"/>
            <line num="240" count="2147483647" type="stmt"/>
            <line falsecount="1302429375" truecount="367870271" num="240" type="cond"/>
            <line num="241" count="369472441" type="stmt"/>
            <line num="243" count="2147483647" type="stmt"/>
            <line complexity="2" visibility="public" signature="size() : int" num="247" count="895829725" type="method"/>
            <line num="249" count="896283466" type="stmt"/>
            <line falsecount="888686032" truecount="7111770" num="249" type="cond"/>
            <line num="250" count="7111770" type="stmt"/>
            <line num="252" count="889210189" type="stmt"/>
            <line complexity="4" visibility="public" signature="getMin() : double" num="256" count="3" type="method"/>
            <line num="258" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="258" type="cond"/>
            <line num="259" count="0" type="stmt"/>
            <line num="261" count="3" type="stmt"/>
            <line num="262" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="262" type="cond"/>
            <line num="263" count="3" type="stmt"/>
            <line num="265" count="3" type="stmt"/>
            <line falsecount="3" truecount="30000000" num="265" type="cond"/>
            <line num="266" count="30000000" type="stmt"/>
            <line num="268" count="3" type="stmt"/>
            <line complexity="4" visibility="public" signature="getMax() : double" num="271" count="1876" type="method"/>
            <line num="273" count="1876" type="stmt"/>
            <line falsecount="0" truecount="1876" num="273" type="cond"/>
            <line num="274" count="1876" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="277" type="cond"/>
            <line num="278" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getAverage() : double" num="286" count="8507060" type="method"/>
            <line num="288" count="8507081" type="stmt"/>
            <line falsecount="1422990" truecount="7084087" num="288" type="cond"/>
            <line num="289" count="7084087" type="stmt"/>
            <line num="291" count="1423016" type="stmt"/>
            <line falsecount="1423015" truecount="0" num="291" type="cond"/>
            <line num="292" count="0" type="stmt"/>
            <line num="298" count="1423031" type="stmt"/>
            <line num="299" count="1423034" type="stmt"/>
            <line num="300" count="1423025" type="stmt"/>
            <line falsecount="1422998" truecount="139440611" num="300" type="cond"/>
            <line num="301" count="151095168" type="stmt"/>
            <line num="302" count="148289946" type="stmt"/>
            <line num="303" count="152155696" type="stmt"/>
            <line num="304" count="155285272" type="stmt"/>
            <line num="306" count="1423011" type="stmt"/>
            <line complexity="4" visibility="public" signature="getAverage(RandomVariable) : double" num="309" count="0" type="method"/>
            <line num="311" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="311" type="cond"/>
            <line num="312" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="314" type="cond"/>
            <line num="315" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="323" type="cond"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getVariance() : double" num="332" count="3276" type="method"/>
            <line num="334" count="3276" type="stmt"/>
            <line falsecount="3249" truecount="27" num="334" type="cond"/>
            <line num="335" count="27" type="stmt"/>
            <line num="337" count="3249" type="stmt"/>
            <line falsecount="3249" truecount="0" num="337" type="cond"/>
            <line num="338" count="0" type="stmt"/>
            <line num="341" count="3249" type="stmt"/>
            <line num="346" count="3249" type="stmt"/>
            <line num="347" count="3249" type="stmt"/>
            <line num="348" count="3249" type="stmt"/>
            <line falsecount="3249" truecount="885326293" num="348" type="cond"/>
            <line num="349" count="885326293" type="stmt"/>
            <line num="350" count="885326293" type="stmt"/>
            <line num="351" count="885326293" type="stmt"/>
            <line num="352" count="885326293" type="stmt"/>
            <line num="354" count="3249" type="stmt"/>
            <line complexity="4" visibility="public" signature="getVariance(RandomVariable) : double" num="357" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="359" type="cond"/>
            <line num="360" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="362" type="cond"/>
            <line num="363" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="373" type="cond"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getSampleVariance() : double" num="382" count="0" type="method"/>
            <line num="384" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="384" type="cond"/>
            <line num="385" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="387" type="cond"/>
            <line num="388" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardDeviation() : double" num="394" count="3110" type="method"/>
            <line num="396" count="3110" type="stmt"/>
            <line falsecount="3083" truecount="27" num="396" type="cond"/>
            <line num="397" count="27" type="stmt"/>
            <line num="399" count="3083" type="stmt"/>
            <line falsecount="3083" truecount="0" num="399" type="cond"/>
            <line num="400" count="0" type="stmt"/>
            <line num="403" count="3083" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="406" count="0" type="method"/>
            <line num="408" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="408" type="cond"/>
            <line num="409" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="411" type="cond"/>
            <line num="412" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardError() : double" num="418" count="1014" type="method"/>
            <line num="420" count="1014" type="stmt"/>
            <line falsecount="1010" truecount="4" num="420" type="cond"/>
            <line num="421" count="4" type="stmt"/>
            <line num="423" count="1010" type="stmt"/>
            <line falsecount="1010" truecount="0" num="423" type="cond"/>
            <line num="424" count="0" type="stmt"/>
            <line num="427" count="1010" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardError(RandomVariable) : double" num="433" count="0" type="method"/>
            <line num="435" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="435" type="cond"/>
            <line num="436" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="438" type="cond"/>
            <line num="439" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getQuantile(double) : double" num="445" count="255" type="method"/>
            <line num="447" count="255" type="stmt"/>
            <line falsecount="175" truecount="80" num="447" type="cond"/>
            <line num="448" count="80" type="stmt"/>
            <line num="450" count="175" type="stmt"/>
            <line falsecount="175" truecount="0" num="450" type="cond"/>
            <line num="451" count="0" type="stmt"/>
            <line num="454" count="175" type="stmt"/>
            <line num="455" count="175" type="stmt"/>
            <line num="457" count="175" type="stmt"/>
            <line num="459" count="175" type="stmt"/>
            <line complexity="3" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="462" count="0" type="method"/>
            <line num="464" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="464" type="cond"/>
            <line num="465" count="0" type="stmt"/>
            <line num="467" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="467" type="cond"/>
            <line num="468" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getQuantileExpectation(double,double) : double" num="474" count="0" type="method"/>
            <line num="476" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="476" type="cond"/>
            <line num="477" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="479" type="cond"/>
            <line num="480" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="482" type="cond"/>
            <line num="483" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line num="492" count="0" type="stmt"/>
            <line num="493" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="493" type="cond"/>
            <line num="494" count="0" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line num="498" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getHistogram(double[]) : double[]" num="501" count="60" type="method"/>
            <line num="504" count="60" type="stmt"/>
            <line num="506" count="60" type="stmt"/>
            <line falsecount="60" truecount="0" num="506" type="cond"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="512" type="cond"/>
            <line num="514" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="514" type="cond"/>
            <line num="515" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line num="528" count="60" type="stmt"/>
            <line num="529" count="60" type="stmt"/>
            <line num="531" count="60" type="stmt"/>
            <line num="532" count="60" type="stmt"/>
            <line falsecount="60" truecount="6022" num="532" type="cond"/>
            <line num="534" count="6022" type="stmt"/>
            <line num="535" count="6022" type="stmt"/>
            <line falsecount="6022" truecount="454747938" num="535" type="cond"/>
            <line num="538" count="454747938" type="stmt"/>
            <line num="539" count="454747938" type="stmt"/>
            <line num="541" count="6022" type="stmt"/>
            <line num="543" count="60" type="stmt"/>
            <line num="546" count="60" type="stmt"/>
            <line falsecount="0" truecount="60" num="546" type="cond"/>
            <line num="547" count="60" type="stmt"/>
            <line falsecount="60" truecount="6082" num="547" type="cond"/>
            <line num="548" count="6082" type="stmt"/>
            <line num="553" count="60" type="stmt"/>
            <line complexity="2" visibility="public" signature="getHistogram(int,double) : double[][]" num="556" count="0" type="method"/>
            <line num="558" count="0" type="stmt"/>
            <line num="559" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line num="561" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line num="563" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="563" type="cond"/>
            <line num="564" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line num="566" count="0" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="572" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="577" count="843633709" type="method"/>
            <line num="579" count="1888397385" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="582" count="50884185" type="method"/>
            <line num="584" count="50884188" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRealizationsStream() : DoubleStream" num="587" count="0" type="method"/>
            <line num="589" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="589" type="cond"/>
            <line num="590" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsDouble() : double" num="591" count="0" type="method"/>
            <line num="593" count="0" type="stmt"/>
            <line num="598" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRealizations() : double[]" num="602" count="2556" type="method"/>
            <line num="604" count="2556" type="stmt"/>
            <line falsecount="2556" truecount="0" num="604" type="cond"/>
            <line num="605" count="0" type="stmt"/>
            <line num="606" count="0" type="stmt"/>
            <line num="609" count="2556" type="stmt"/>
            <line complexity="3" visibility="public" signature="doubleValue() : Double" num="613" count="23512741" type="method"/>
            <line num="615" count="23512741" type="stmt"/>
            <line falsecount="0" truecount="23512741" num="615" type="cond"/>
            <line num="616" count="23512739" type="stmt"/>
            <line num="618" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="618" type="cond"/>
            <line num="619" count="0" type="stmt"/>
            <line num="622" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getOperator() : IntToDoubleFunction" num="626" count="0" type="method"/>
            <line num="628" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="628" type="cond"/>
            <line num="629" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="630" count="0" type="method"/>
            <line num="632" count="0" type="stmt"/>
            <line num="637" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="638" count="0" type="method"/>
            <line num="640" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="646" count="1331" type="method"/>
            <line num="648" count="1331" type="stmt"/>
            <line falsecount="99" truecount="1232" num="648" type="cond"/>
            <line num="649" count="1232" type="stmt"/>
            <line num="654" count="99" type="stmt"/>
            <line num="655" count="99" type="stmt"/>
            <line falsecount="99" truecount="4950000" num="655" type="cond"/>
            <line num="656" count="4950000" type="stmt"/>
            <line num="658" count="99" type="stmt"/>
            <line complexity="12" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="662" count="0" type="method"/>
            <line num="664" count="0" type="stmt"/>
            <line num="666" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="666" type="cond"/>
            <line num="667" count="0" type="stmt"/>
            <line num="669" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="669" type="cond"/>
            <line num="671" count="0" type="stmt"/>
            <line num="672" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="672" type="cond"/>
            <line num="673" count="0" type="stmt"/>
            <line num="675" count="0" type="stmt"/>
            <line num="677" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="677" type="cond"/>
            <line num="679" count="0" type="stmt"/>
            <line num="680" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="680" type="cond"/>
            <line num="681" count="0" type="stmt"/>
            <line num="683" count="0" type="stmt"/>
            <line num="685" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="685" type="cond"/>
            <line num="687" count="0" type="stmt"/>
            <line num="688" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="688" type="cond"/>
            <line num="689" count="0" type="stmt"/>
            <line num="691" count="0" type="stmt"/>
            <line num="697" count="0" type="stmt"/>
            <line num="699" count="0" type="stmt"/>
            <line num="700" count="0" type="stmt"/>
            <line num="701" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="702" count="0" type="method"/>
            <line num="704" count="0" type="stmt"/>
            <line num="708" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="711" count="0" type="method"/>
            <line num="713" count="0" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line num="716" count="0" type="stmt"/>
            <line num="718" count="0" type="stmt"/>
            <line num="719" count="0" type="stmt"/>
            <line num="720" count="0" type="stmt"/>
            <line num="721" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="722" count="0" type="method"/>
            <line num="724" count="0" type="stmt"/>
            <line num="728" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,DoubleBinaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="731" count="0" type="method"/>
            <line num="733" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double,double) : double" num="734" count="0" type="method"/>
            <line num="736" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="cap(double) : RandomVariable" num="741" count="49651970" type="method"/>
            <line num="743" count="49665162" type="stmt"/>
            <line falsecount="49647765" truecount="0" num="743" type="cond"/>
            <line num="744" count="0" type="stmt"/>
            <line num="745" count="0" type="stmt"/>
            <line num="748" count="49666405" type="stmt"/>
            <line num="749" count="49647436" type="stmt"/>
            <line falsecount="49641739" truecount="2139433602" num="749" type="cond"/>
            <line num="750" count="2147483647" type="stmt"/>
            <line num="752" count="49649685" type="stmt"/>
            <line complexity="3" visibility="public" signature="floor(double) : RandomVariable" num="756" count="594143" type="method"/>
            <line num="758" count="594142" type="stmt"/>
            <line falsecount="593530" truecount="613" num="758" type="cond"/>
            <line num="759" count="613" type="stmt"/>
            <line num="760" count="613" type="stmt"/>
            <line num="763" count="593529" type="stmt"/>
            <line num="764" count="593529" type="stmt"/>
            <line falsecount="593529" truecount="761873150" num="764" type="cond"/>
            <line num="765" count="762269059" type="stmt"/>
            <line num="767" count="593532" type="stmt"/>
            <line complexity="3" visibility="public" signature="add(double) : RandomVariable" num="771" count="207705529" type="method"/>
            <line num="773" count="207803980" type="stmt"/>
            <line falsecount="207160097" truecount="628252" num="773" type="cond"/>
            <line num="774" count="628252" type="stmt"/>
            <line num="775" count="628252" type="stmt"/>
            <line num="778" count="207185155" type="stmt"/>
            <line num="779" count="207101010" type="stmt"/>
            <line falsecount="207188357" truecount="624052742" num="779" type="cond"/>
            <line num="780" count="845044166" type="stmt"/>
            <line num="782" count="207199797" type="stmt"/>
            <line complexity="3" visibility="public" signature="sub(double) : RandomVariable" num="786" count="28192062" type="method"/>
            <line num="788" count="28192985" type="stmt"/>
            <line falsecount="28176073" truecount="14675" num="788" type="cond"/>
            <line num="789" count="14675" type="stmt"/>
            <line num="790" count="14675" type="stmt"/>
            <line num="793" count="28178802" type="stmt"/>
            <line num="794" count="28174523" type="stmt"/>
            <line falsecount="28161668" truecount="2147483647" num="794" type="cond"/>
            <line num="795" count="2147483647" type="stmt"/>
            <line num="797" count="28163430" type="stmt"/>
            <line complexity="3" visibility="public" signature="bus(double) : RandomVariable" num="801" count="0" type="method"/>
            <line num="802" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="802" type="cond"/>
            <line num="803" count="0" type="stmt"/>
            <line num="804" count="0" type="stmt"/>
            <line num="807" count="0" type="stmt"/>
            <line num="808" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="808" type="cond"/>
            <line num="809" count="0" type="stmt"/>
            <line num="811" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="mult(double) : RandomVariable" num="815" count="287906132" type="method"/>
            <line num="817" count="287942484" type="stmt"/>
            <line falsecount="278974773" truecount="8926514" num="817" type="cond"/>
            <line num="818" count="8926528" type="stmt"/>
            <line num="819" count="8926528" type="stmt"/>
            <line num="822" count="279012550" type="stmt"/>
            <line num="823" count="278945451" type="stmt"/>
            <line falsecount="278986651" truecount="1097311075" num="823" type="cond"/>
            <line num="824" count="2106203107" type="stmt"/>
            <line num="826" count="279005043" type="stmt"/>
            <line complexity="3" visibility="public" signature="div(double) : RandomVariable" num="830" count="10462757" type="method"/>
            <line num="832" count="10463377" type="stmt"/>
            <line falsecount="10456753" truecount="6016" num="832" type="cond"/>
            <line num="833" count="6016" type="stmt"/>
            <line num="834" count="6016" type="stmt"/>
            <line num="837" count="10457384" type="stmt"/>
            <line num="838" count="10456634" type="stmt"/>
            <line falsecount="10455778" truecount="930434452" num="838" type="cond"/>
            <line num="839" count="979777777" type="stmt"/>
            <line num="841" count="10456149" type="stmt"/>
            <line complexity="3" visibility="public" signature="vid(double) : RandomVariable" num="845" count="0" type="method"/>
            <line num="846" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="846" type="cond"/>
            <line num="847" count="0" type="stmt"/>
            <line num="848" count="0" type="stmt"/>
            <line num="851" count="0" type="stmt"/>
            <line num="852" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="852" type="cond"/>
            <line num="853" count="0" type="stmt"/>
            <line num="855" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="pow(double) : RandomVariable" num="859" count="32736" type="method"/>
            <line num="861" count="32736" type="stmt"/>
            <line falsecount="31028" truecount="1708" num="861" type="cond"/>
            <line num="862" count="1708" type="stmt"/>
            <line num="863" count="1708" type="stmt"/>
            <line num="866" count="31028" type="stmt"/>
            <line num="867" count="31028" type="stmt"/>
            <line falsecount="31028" truecount="1019820284" num="867" type="cond"/>
            <line num="868" count="1019820284" type="stmt"/>
            <line num="870" count="31028" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="874" count="308407" type="method"/>
            <line num="876" count="308426" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConditionalExpectation(ConditionalExpectationEstimator) : RandomVariable" num="879" count="2084" type="method"/>
            <line num="882" count="2084" type="stmt"/>
            <line complexity="3" visibility="public" signature="squared() : RandomVariable" num="885" count="7478914" type="method"/>
            <line num="887" count="7478914" type="stmt"/>
            <line falsecount="7160143" truecount="318771" num="887" type="cond"/>
            <line num="888" count="318771" type="stmt"/>
            <line num="889" count="318771" type="stmt"/>
            <line num="892" count="7160143" type="stmt"/>
            <line num="893" count="7160143" type="stmt"/>
            <line falsecount="7160143" truecount="1991009442" num="893" type="cond"/>
            <line num="894" count="1991009442" type="stmt"/>
            <line num="896" count="7160143" type="stmt"/>
            <line complexity="3" visibility="public" signature="sqrt() : RandomVariable" num="900" count="5893" type="method"/>
            <line num="902" count="5893" type="stmt"/>
            <line falsecount="2133" truecount="3760" num="902" type="cond"/>
            <line num="903" count="3760" type="stmt"/>
            <line num="904" count="3760" type="stmt"/>
            <line num="907" count="2133" type="stmt"/>
            <line num="908" count="2133" type="stmt"/>
            <line falsecount="2133" truecount="387795956" num="908" type="cond"/>
            <line num="909" count="387864716" type="stmt"/>
            <line num="911" count="2133" type="stmt"/>
            <line complexity="3" visibility="public" signature="invert() : RandomVariable" num="915" count="58402800" type="method"/>
            <line num="917" count="58402805" type="stmt"/>
            <line falsecount="58097102" truecount="305688" num="917" type="cond"/>
            <line num="918" count="305688" type="stmt"/>
            <line num="919" count="305688" type="stmt"/>
            <line num="922" count="58097121" type="stmt"/>
            <line num="923" count="58096868" type="stmt"/>
            <line falsecount="58097067" truecount="2147483647" num="923" type="cond"/>
            <line num="924" count="2147483647" type="stmt"/>
            <line num="926" count="58097078" type="stmt"/>
            <line complexity="3" visibility="public" signature="abs() : RandomVariable" num="930" count="40072" type="method"/>
            <line num="932" count="40072" type="stmt"/>
            <line falsecount="39796" truecount="276" num="932" type="cond"/>
            <line num="933" count="276" type="stmt"/>
            <line num="934" count="276" type="stmt"/>
            <line num="937" count="39796" type="stmt"/>
            <line num="938" count="39796" type="stmt"/>
            <line falsecount="39796" truecount="2147483647" num="938" type="cond"/>
            <line num="939" count="2147483647" type="stmt"/>
            <line num="941" count="39796" type="stmt"/>
            <line complexity="3" visibility="public" signature="exp() : RandomVariableFromDoubleArray" num="945" count="1251791" type="method"/>
            <line num="947" count="1251842" type="stmt"/>
            <line falsecount="1249312" truecount="2496" num="947" type="cond"/>
            <line num="948" count="2496" type="stmt"/>
            <line num="949" count="2496" type="stmt"/>
            <line num="952" count="1249353" type="stmt"/>
            <line num="953" count="1249298" type="stmt"/>
            <line falsecount="1249325" truecount="613736351" num="953" type="cond"/>
            <line num="954" count="1533689578" type="stmt"/>
            <line num="956" count="1249350" type="stmt"/>
            <line complexity="3" visibility="public" signature="expm1() : RandomVariableFromDoubleArray" num="960" count="0" type="method"/>
            <line num="962" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="962" type="cond"/>
            <line num="963" count="0" type="stmt"/>
            <line num="964" count="0" type="stmt"/>
            <line num="967" count="0" type="stmt"/>
            <line num="968" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="968" type="cond"/>
            <line num="969" count="0" type="stmt"/>
            <line num="971" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="log() : RandomVariableFromDoubleArray" num="975" count="853700" type="method"/>
            <line num="977" count="861198" type="stmt"/>
            <line falsecount="859869" truecount="531" num="977" type="cond"/>
            <line num="978" count="531" type="stmt"/>
            <line num="979" count="531" type="stmt"/>
            <line num="982" count="861347" type="stmt"/>
            <line num="983" count="858299" type="stmt"/>
            <line falsecount="866870" truecount="1919435863" num="983" type="cond"/>
            <line num="984" count="2147483647" type="stmt"/>
            <line num="986" count="866911" type="stmt"/>
            <line complexity="3" visibility="public" signature="sin() : RandomVariable" num="990" count="0" type="method"/>
            <line num="992" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="992" type="cond"/>
            <line num="993" count="0" type="stmt"/>
            <line num="994" count="0" type="stmt"/>
            <line num="997" count="0" type="stmt"/>
            <line num="998" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="998" type="cond"/>
            <line num="999" count="0" type="stmt"/>
            <line num="1001" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="cos() : RandomVariable" num="1005" count="0" type="method"/>
            <line num="1007" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1007" type="cond"/>
            <line num="1008" count="0" type="stmt"/>
            <line num="1009" count="0" type="stmt"/>
            <line num="1012" count="0" type="stmt"/>
            <line num="1013" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1013" type="cond"/>
            <line num="1014" count="0" type="stmt"/>
            <line num="1016" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="add(RandomVariable) : RandomVariable" num="1024" count="143821119" type="method"/>
            <line num="1026" count="143917848" type="stmt"/>
            <line falsecount="143946020" truecount="0" num="1026" type="cond"/>
            <line num="1028" count="0" type="stmt"/>
            <line num="1032" count="143993358" type="stmt"/>
            <line num="1034" count="143967289" type="stmt"/>
            <line falsecount="143871419" truecount="87799" num="1034" type="cond"/>
            <line num="1035" count="87799" type="stmt"/>
            <line num="1036" count="87799" type="stmt"/>
            <line num="1038" count="143912587" type="stmt"/>
            <line falsecount="143880874" truecount="1396" num="1038" type="cond"/>
            <line num="1039" count="1396" type="stmt"/>
            <line num="1040" count="1396" type="stmt"/>
            <line falsecount="1396" truecount="13960000" num="1040" type="cond"/>
            <line num="1041" count="13960000" type="stmt"/>
            <line num="1043" count="1396" type="stmt"/>
            <line num="1045" count="143911140" type="stmt"/>
            <line falsecount="65484646" truecount="78383809" num="1045" type="cond"/>
            <line num="1046" count="78404433" type="stmt"/>
            <line num="1049" count="65485364" type="stmt"/>
            <line num="1050" count="65484122" type="stmt"/>
            <line falsecount="65484388" truecount="2147483647" num="1050" type="cond"/>
            <line num="1051" count="2147483647" type="stmt"/>
            <line num="1053" count="65485137" type="stmt"/>
            <line complexity="8" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="1057" count="8833433" type="method"/>
            <line num="1059" count="8833449" type="stmt"/>
            <line falsecount="8782817" truecount="50646" num="1059" type="cond"/>
            <line num="1061" count="50646" type="stmt"/>
            <line num="1065" count="8782841" type="stmt"/>
            <line num="1067" count="8782821" type="stmt"/>
            <line falsecount="7975591" truecount="807206" num="1067" type="cond"/>
            <line num="1068" count="807214" type="stmt"/>
            <line num="1069" count="807213" type="stmt"/>
            <line num="1071" count="7975621" type="stmt"/>
            <line falsecount="7975432" truecount="158" num="1071" type="cond"/>
            <line num="1072" count="158" type="stmt"/>
            <line num="1073" count="158" type="stmt"/>
            <line falsecount="158" truecount="1600000" num="1073" type="cond"/>
            <line num="1074" count="1600000" type="stmt"/>
            <line num="1076" count="158" type="stmt"/>
            <line num="1078" count="7975430" type="stmt"/>
            <line falsecount="848915" truecount="7126510" num="1078" type="cond"/>
            <line num="1079" count="7126512" type="stmt"/>
            <line num="1082" count="848935" type="stmt"/>
            <line num="1083" count="848858" type="stmt"/>
            <line falsecount="848984" truecount="2147483647" num="1083" type="cond"/>
            <line num="1084" count="2147483647" type="stmt"/>
            <line num="1086" count="848988" type="stmt"/>
            <line complexity="7" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="1090" count="50646" type="method"/>
            <line num="1092" count="50646" type="stmt"/>
            <line falsecount="50646" truecount="0" num="1092" type="cond"/>
            <line num="1094" count="0" type="stmt"/>
            <line num="1098" count="50646" type="stmt"/>
            <line num="1100" count="50646" type="stmt"/>
            <line falsecount="8" truecount="50638" num="1100" type="cond"/>
            <line num="1101" count="50638" type="stmt"/>
            <line num="1102" count="50638" type="stmt"/>
            <line num="1104" count="8" type="stmt"/>
            <line falsecount="8" truecount="0" num="1104" type="cond"/>
            <line num="1105" count="0" type="stmt"/>
            <line num="1106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1106" type="cond"/>
            <line num="1107" count="0" type="stmt"/>
            <line num="1109" count="0" type="stmt"/>
            <line num="1112" count="8" type="stmt"/>
            <line num="1113" count="8" type="stmt"/>
            <line falsecount="8" truecount="940000" num="1113" type="cond"/>
            <line num="1114" count="940000" type="stmt"/>
            <line num="1116" count="8" type="stmt"/>
            <line complexity="8" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="1120" count="237050846" type="method"/>
            <line num="1122" count="237051266" type="stmt"/>
            <line falsecount="237045295" truecount="6002" num="1122" type="cond"/>
            <line num="1124" count="6002" type="stmt"/>
            <line num="1128" count="237045587" type="stmt"/>
            <line num="1130" count="237044703" type="stmt"/>
            <line falsecount="229870014" truecount="7175298" num="1130" type="cond"/>
            <line num="1131" count="7175298" type="stmt"/>
            <line num="1132" count="7175296" type="stmt"/>
            <line num="1134" count="229870237" type="stmt"/>
            <line falsecount="133027399" truecount="96842142" num="1134" type="cond"/>
            <line num="1135" count="96842363" type="stmt"/>
            <line num="1137" count="133027415" type="stmt"/>
            <line falsecount="133022889" truecount="4453" num="1137" type="cond"/>
            <line num="1138" count="4453" type="stmt"/>
            <line num="1139" count="4453" type="stmt"/>
            <line falsecount="4453" truecount="72960055" num="1139" type="cond"/>
            <line num="1140" count="72960055" type="stmt"/>
            <line num="1142" count="4453" type="stmt"/>
            <line num="1145" count="133022963" type="stmt"/>
            <line num="1146" count="133022844" type="stmt"/>
            <line falsecount="133022901" truecount="2147483647" num="1146" type="cond"/>
            <line num="1147" count="401457937" type="stmt"/>
            <line num="1149" count="133022954" type="stmt"/>
            <line complexity="7" visibility="public" signature="div(RandomVariable) : RandomVariable" num="1153" count="9659340" type="method"/>
            <line num="1155" count="9659363" type="stmt"/>
            <line falsecount="9659323" truecount="0" num="1155" type="cond"/>
            <line num="1157" count="0" type="stmt"/>
            <line num="1161" count="9659355" type="stmt"/>
            <line num="1163" count="9659318" type="stmt"/>
            <line falsecount="9078720" truecount="580591" num="1163" type="cond"/>
            <line num="1164" count="580591" type="stmt"/>
            <line num="1165" count="580591" type="stmt"/>
            <line num="1167" count="9078766" type="stmt"/>
            <line falsecount="1982614" truecount="7096107" num="1167" type="cond"/>
            <line num="1168" count="7096107" type="stmt"/>
            <line num="1169" count="7096107" type="stmt"/>
            <line falsecount="7096106" truecount="1792367230" num="1169" type="cond"/>
            <line num="1170" count="1794353252" type="stmt"/>
            <line num="1172" count="7096106" type="stmt"/>
            <line num="1175" count="1982651" type="stmt"/>
            <line num="1176" count="1982581" type="stmt"/>
            <line falsecount="1982617" truecount="2147483647" num="1176" type="cond"/>
            <line num="1177" count="2147483647" type="stmt"/>
            <line num="1179" count="1982663" type="stmt"/>
            <line complexity="7" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="1183" count="0" type="method"/>
            <line num="1185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1185" type="cond"/>
            <line num="1187" count="0" type="stmt"/>
            <line num="1191" count="0" type="stmt"/>
            <line num="1193" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1193" type="cond"/>
            <line num="1194" count="0" type="stmt"/>
            <line num="1195" count="0" type="stmt"/>
            <line num="1197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1197" type="cond"/>
            <line num="1198" count="0" type="stmt"/>
            <line num="1199" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1199" type="cond"/>
            <line num="1200" count="0" type="stmt"/>
            <line num="1202" count="0" type="stmt"/>
            <line num="1205" count="0" type="stmt"/>
            <line num="1206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1206" type="cond"/>
            <line num="1207" count="0" type="stmt"/>
            <line num="1209" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="1213" count="3889" type="method"/>
            <line num="1215" count="3889" type="stmt"/>
            <line falsecount="3889" truecount="0" num="1215" type="cond"/>
            <line num="1217" count="0" type="stmt"/>
            <line num="1221" count="3889" type="stmt"/>
            <line num="1223" count="3889" type="stmt"/>
            <line falsecount="2013" truecount="1876" num="1223" type="cond"/>
            <line num="1224" count="1876" type="stmt"/>
            <line num="1225" count="1876" type="stmt"/>
            <line num="1227" count="2013" type="stmt"/>
            <line falsecount="2013" truecount="0" num="1227" type="cond"/>
            <line num="1228" count="0" type="stmt"/>
            <line num="1229" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1229" type="cond"/>
            <line num="1230" count="0" type="stmt"/>
            <line num="1232" count="0" type="stmt"/>
            <line num="1234" count="2013" type="stmt"/>
            <line num="1235" count="2013" type="stmt"/>
            <line falsecount="2013" truecount="169200015" num="1235" type="cond"/>
            <line num="1236" count="169200015" type="stmt"/>
            <line num="1238" count="2013" type="stmt"/>
            <line complexity="8" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="1242" count="403" type="method"/>
            <line num="1244" count="403" type="stmt"/>
            <line falsecount="403" truecount="0" num="1244" type="cond"/>
            <line num="1246" count="0" type="stmt"/>
            <line num="1250" count="403" type="stmt"/>
            <line num="1252" count="403" type="stmt"/>
            <line falsecount="403" truecount="0" num="1252" type="cond"/>
            <line num="1253" count="0" type="stmt"/>
            <line num="1254" count="0" type="stmt"/>
            <line num="1256" count="403" type="stmt"/>
            <line falsecount="403" truecount="0" num="1256" type="cond"/>
            <line num="1257" count="0" type="stmt"/>
            <line num="1258" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1258" type="cond"/>
            <line num="1259" count="0" type="stmt"/>
            <line num="1261" count="0" type="stmt"/>
            <line num="1263" count="403" type="stmt"/>
            <line falsecount="3" truecount="400" num="1263" type="cond"/>
            <line num="1264" count="400" type="stmt"/>
            <line num="1267" count="3" type="stmt"/>
            <line num="1268" count="3" type="stmt"/>
            <line falsecount="3" truecount="15" num="1268" type="cond"/>
            <line num="1269" count="15" type="stmt"/>
            <line num="1271" count="3" type="stmt"/>
            <line complexity="7" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="1275" count="10822682" type="method"/>
            <line num="1277" count="10822684" type="stmt"/>
            <line falsecount="10822099" truecount="0" num="1277" type="cond"/>
            <line num="1279" count="0" type="stmt"/>
            <line num="1283" count="10822528" type="stmt"/>
            <line num="1285" count="10821925" type="stmt"/>
            <line falsecount="10821809" truecount="0" num="1285" type="cond"/>
            <line num="1286" count="0" type="stmt"/>
            <line num="1288" count="10822307" type="stmt"/>
            <line falsecount="10821787" truecount="0" num="1288" type="cond"/>
            <line num="1289" count="0" type="stmt"/>
            <line num="1290" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1290" type="cond"/>
            <line num="1291" count="0" type="stmt"/>
            <line num="1293" count="0" type="stmt"/>
            <line num="1296" count="10822369" type="stmt"/>
            <line num="1297" count="10821286" type="stmt"/>
            <line falsecount="10820988" truecount="2147483647" num="1297" type="cond"/>
            <line num="1298" count="2147483647" type="stmt"/>
            <line num="1300" count="10821979" type="stmt"/>
            <line complexity="7" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="1304" count="10726571" type="method"/>
            <line num="1306" count="10726774" type="stmt"/>
            <line falsecount="10726240" truecount="0" num="1306" type="cond"/>
            <line num="1308" count="0" type="stmt"/>
            <line num="1312" count="10726911" type="stmt"/>
            <line num="1314" count="10726034" type="stmt"/>
            <line falsecount="10726080" truecount="2" num="1314" type="cond"/>
            <line num="1315" count="2" type="stmt"/>
            <line num="1317" count="10726726" type="stmt"/>
            <line falsecount="10726085" truecount="3" num="1317" type="cond"/>
            <line num="1318" count="3" type="stmt"/>
            <line num="1319" count="3" type="stmt"/>
            <line falsecount="3" truecount="30000" num="1319" type="cond"/>
            <line num="1320" count="30000" type="stmt"/>
            <line num="1322" count="3" type="stmt"/>
            <line num="1325" count="10726783" type="stmt"/>
            <line num="1326" count="10725995" type="stmt"/>
            <line falsecount="10725731" truecount="2147483647" num="1326" type="cond"/>
            <line num="1327" count="2147483647" type="stmt"/>
            <line num="1329" count="10726677" type="stmt"/>
            <line complexity="5" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="1338" count="7126265" type="method"/>
            <line num="1341" count="7126265" type="stmt"/>
            <line num="1342" count="7126265" type="stmt"/>
            <line num="1343" count="7126265" type="stmt"/>
            <line num="1345" count="7126265" type="stmt"/>
            <line falsecount="7116183" truecount="10082" num="1345" type="cond"/>
            <line num="1346" count="10082" type="stmt"/>
            <line falsecount="3200" truecount="6882" num="1346" type="cond"/>
            <line num="1347" count="6882" type="stmt"/>
            <line num="1349" count="3200" type="stmt"/>
            <line num="1353" count="7116183" type="stmt"/>
            <line num="1354" count="7116183" type="stmt"/>
            <line num="1355" count="7116183" type="stmt"/>
            <line falsecount="7116183" truecount="1520838800" num="1355" type="cond"/>
            <line num="1356" count="1520838800" type="stmt"/>
            <line falsecount="998140939" truecount="522697861" num="1356" type="cond"/>
            <line num="1358" count="7116183" type="stmt"/>
            <line complexity="7" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="1362" count="122252364" type="method"/>
            <line num="1364" count="122305438" type="stmt"/>
            <line falsecount="122279784" truecount="248" num="1364" type="cond"/>
            <line num="1366" count="248" type="stmt"/>
            <line num="1370" count="122321849" type="stmt"/>
            <line num="1372" count="122289354" type="stmt"/>
            <line falsecount="121220529" truecount="1069057" num="1372" type="cond"/>
            <line num="1373" count="1069055" type="stmt"/>
            <line num="1375" count="121255807" type="stmt"/>
            <line falsecount="121218653" truecount="904" num="1375" type="cond"/>
            <line num="1376" count="904" type="stmt"/>
            <line num="1377" count="904" type="stmt"/>
            <line falsecount="904" truecount="16600040" num="1377" type="cond"/>
            <line num="1378" count="16600040" type="stmt"/>
            <line num="1380" count="904" type="stmt"/>
            <line num="1383" count="121247490" type="stmt"/>
            <line num="1384" count="121199266" type="stmt"/>
            <line falsecount="121246682" truecount="1530704067" num="1384" type="cond"/>
            <line num="1385" count="429612197" type="stmt"/>
            <line num="1387" count="121279881" type="stmt"/>
            <line complexity="14" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="1391" count="133569939" type="method"/>
            <line num="1393" count="133585799" type="stmt"/>
            <line falsecount="133547931" truecount="508" num="1393" type="cond"/>
            <line num="1395" count="508" type="stmt"/>
            <line num="1399" count="133578620" type="stmt"/>
            <line num="1401" count="133560073" type="stmt"/>
            <line falsecount="133540066" truecount="19266" num="1401" type="cond"/>
            <line num="1402" count="19266" type="stmt"/>
            <line num="1403" count="19266" type="stmt"/>
            <line num="1405" count="133565200" type="stmt"/>
            <line falsecount="133543125" truecount="3706" num="1405" type="cond"/>
            <line num="1406" count="3706" type="stmt"/>
            <line num="1408" count="133565210" type="stmt"/>
            <line falsecount="128708740" truecount="4837379" num="1408" type="cond"/>
            <line num="1409" count="4837390" type="stmt"/>
            <line num="1411" count="128729093" type="stmt"/>
            <line falsecount="62429348" truecount="66282199" num="1411" type="cond"/>
            <line num="1412" count="66283278" type="stmt"/>
            <line num="1414" count="62449320" type="stmt"/>
            <line falsecount="156" truecount="62423180" num="1414" type="cond"/>
            <line num="1415" count="62447030" type="stmt"/>
            <line num="1416" count="62429088" type="stmt"/>
            <line falsecount="62421034" truecount="2147483647" num="1416" type="cond"/>
            <line num="1417" count="132856983" type="stmt"/>
            <line num="1419" count="62446483" type="stmt"/>
            <line num="1422" count="156" type="stmt"/>
            <line complexity="2" visibility="public" signature="addSumProduct(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;) : RandomVariable" num="1426" count="0" type="method"/>
            <line num="1429" count="0" type="stmt"/>
            <line num="1430" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1430" type="cond"/>
            <line num="1431" count="0" type="stmt"/>
            <line num="1433" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="1436" count="1440" type="method"/>
            <line num="1438" count="1439" type="stmt"/>
            <line falsecount="1440" truecount="0" num="1438" type="cond"/>
            <line num="1440" count="0" type="stmt"/>
            <line num="1444" count="1439" type="stmt"/>
            <line num="1446" count="1440" type="stmt"/>
            <line falsecount="1439" truecount="0" num="1446" type="cond"/>
            <line num="1447" count="0" type="stmt"/>
            <line num="1448" count="0" type="stmt"/>
            <line num="1451" count="1439" type="stmt"/>
            <line num="1452" count="1439" type="stmt"/>
            <line falsecount="1440" truecount="42617019" num="1452" type="cond"/>
            <line num="1453" count="43247371" type="stmt"/>
            <line num="1455" count="1440" type="stmt"/>
            <line complexity="7" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="1459" count="1320" type="method"/>
            <line num="1461" count="1320" type="stmt"/>
            <line falsecount="1320" truecount="0" num="1461" type="cond"/>
            <line num="1463" count="0" type="stmt"/>
            <line num="1467" count="1320" type="stmt"/>
            <line num="1469" count="1320" type="stmt"/>
            <line falsecount="1320" truecount="0" num="1469" type="cond"/>
            <line num="1470" count="0" type="stmt"/>
            <line num="1471" count="0" type="stmt"/>
            <line num="1474" count="1320" type="stmt"/>
            <line num="1475" count="1320" type="stmt"/>
            <line falsecount="1320" truecount="42083357" num="1475" type="cond"/>
            <line num="1476" count="42779761" type="stmt"/>
            <line num="1478" count="1320" type="stmt"/>
            <line complexity="5" visibility="public" signature="isNaN() : RandomVariable" num="1482" count="2296" type="method"/>
            <line num="1484" count="2296" type="stmt"/>
            <line falsecount="444" truecount="1852" num="1484" type="cond"/>
            <line num="1485" count="1852" type="stmt"/>
            <line falsecount="1852" truecount="0" num="1485" type="cond"/>
            <line num="1488" count="444" type="stmt"/>
            <line num="1489" count="444" type="stmt"/>
            <line falsecount="444" truecount="9000000" num="1489" type="cond"/>
            <line num="1490" count="9000000" type="stmt"/>
            <line falsecount="9000000" truecount="0" num="1490" type="cond"/>
            <line num="1492" count="444" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="1496" count="84" type="method"/>
            <line num="1498" count="84" type="stmt"/>
            <line falsecount="0" truecount="84" num="1499" type="cond"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/RandomVariableFromFloatArray.java" name="RandomVariableFromFloatArray.java">
            <metrics coveredelements="390" coveredconditionals="126" complexity="300" loc="1456" coveredmethods="40" methods="84" elements="1067" classes="1" ncloc="1129" statements="615" conditionals="368" coveredstatements="224"/>
            <class name="RandomVariableFromFloatArray">
               <metrics coveredelements="390" coveredconditionals="126" complexity="300" coveredmethods="40" methods="84" elements="1067" statements="615" conditionals="368" coveredstatements="224"/>
            </class>
            <line complexity="3" visibility="public" signature="RandomVariableFromFloatArray(RandomVariable)" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromFloatArray(double)" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="RandomVariableFromFloatArray(RandomVariable,DoubleUnaryOperator)" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromFloatArray(double,double,int)" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromFloatArray(double,double)" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromFloatArray(double,float[])" num="124" count="68518" type="method"/>
            <line num="125" count="68518" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromFloatArray(double,int,double)" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromFloatArray(double,float[],int)" num="156" count="85559" type="method"/>
            <line num="157" count="85559" type="stmt"/>
            <line num="158" count="85559" type="stmt"/>
            <line num="159" count="85559" type="stmt"/>
            <line num="160" count="85559" type="stmt"/>
            <line num="161" count="85559" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromFloatArray(double,double[])" num="174" count="17041" type="method"/>
            <line num="175" count="17041" type="stmt"/>
            <line complexity="4" visibility="public" signature="RandomVariableFromFloatArray(double,IntToDoubleFunction,int,int)" num="186" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(int) : void" num="193" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromFloatArray(double,IntToDoubleFunction,int)" num="210" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getFloatArray(double[]) : float[]" num="214" count="17041" type="method"/>
            <line num="215" count="17041" type="stmt"/>
            <line num="216" count="17041" type="stmt"/>
            <line falsecount="17041" truecount="672742225" num="216" type="cond"/>
            <line num="217" count="672742225" type="stmt"/>
            <line num="219" count="17041" type="stmt"/>
            <line complexity="2" visibility="private" signature="getDoubleArray(float[]) : double[]" num="222" count="623" type="method"/>
            <line num="223" count="623" type="stmt"/>
            <line num="224" count="623" type="stmt"/>
            <line falsecount="623" truecount="28460000" num="224" type="cond"/>
            <line num="225" count="28460000" type="stmt"/>
            <line num="227" count="623" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(RandomVariable) : boolean" num="230" count="2" type="method"/>
            <line num="232" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="232" type="cond"/>
            <line num="233" count="0" type="stmt"/>
            <line num="235" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="235" type="cond"/>
            <line num="236" count="0" type="stmt"/>
            <line num="239" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="239" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="243" count="2" type="stmt"/>
            <line falsecount="2" truecount="20000" num="243" type="cond"/>
            <line num="244" count="20000" type="stmt"/>
            <line falsecount="20000" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="249" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="252" count="46522" type="method"/>
            <line num="254" count="46522" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="257" count="100629" type="method"/>
            <line num="259" count="100629" type="stmt"/>
            <line complexity="2" visibility="public" signature="get(int) : double" num="262" count="1094588814" type="method"/>
            <line num="264" count="1094588814" type="stmt"/>
            <line falsecount="1094588814" truecount="0" num="264" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="267" count="1094588814" type="stmt"/>
            <line complexity="2" visibility="public" signature="size() : int" num="271" count="99902" type="method"/>
            <line num="273" count="99902" type="stmt"/>
            <line falsecount="99902" truecount="0" num="273" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="276" count="99902" type="stmt"/>
            <line complexity="4" visibility="public" signature="getMin() : double" num="280" count="1" type="method"/>
            <line num="282" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="282" type="cond"/>
            <line num="283" count="0" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="286" type="cond"/>
            <line num="287" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line falsecount="1" truecount="10000000" num="289" type="cond"/>
            <line num="290" count="10000000" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="getMax() : double" num="295" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="298" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="301" type="cond"/>
            <line num="302" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="304" type="cond"/>
            <line num="305" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getAverage() : double" num="310" count="2981" type="method"/>
            <line num="312" count="2981" type="stmt"/>
            <line falsecount="2981" truecount="0" num="312" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line num="315" count="2981" type="stmt"/>
            <line falsecount="2981" truecount="0" num="315" type="cond"/>
            <line num="316" count="0" type="stmt"/>
            <line num="322" count="2981" type="stmt"/>
            <line num="323" count="2981" type="stmt"/>
            <line num="324" count="2981" type="stmt"/>
            <line falsecount="2981" truecount="670824300" num="324" type="cond"/>
            <line num="325" count="670824300" type="stmt"/>
            <line num="326" count="670824300" type="stmt"/>
            <line num="327" count="670824300" type="stmt"/>
            <line num="328" count="670824300" type="stmt"/>
            <line num="330" count="2981" type="stmt"/>
            <line complexity="4" visibility="public" signature="getAverage(RandomVariable) : double" num="333" count="0" type="method"/>
            <line num="335" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="335" type="cond"/>
            <line num="336" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="338" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="347" type="cond"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getVariance() : double" num="356" count="712" type="method"/>
            <line num="358" count="712" type="stmt"/>
            <line falsecount="712" truecount="0" num="358" type="cond"/>
            <line num="359" count="0" type="stmt"/>
            <line num="361" count="712" type="stmt"/>
            <line falsecount="712" truecount="0" num="361" type="cond"/>
            <line num="362" count="0" type="stmt"/>
            <line num="365" count="712" type="stmt"/>
            <line num="370" count="712" type="stmt"/>
            <line num="371" count="712" type="stmt"/>
            <line num="372" count="712" type="stmt"/>
            <line falsecount="712" truecount="281302180" num="372" type="cond"/>
            <line num="373" count="281302180" type="stmt"/>
            <line num="374" count="281302180" type="stmt"/>
            <line num="375" count="281302180" type="stmt"/>
            <line num="376" count="281302180" type="stmt"/>
            <line num="378" count="712" type="stmt"/>
            <line complexity="4" visibility="public" signature="getVariance(RandomVariable) : double" num="381" count="0" type="method"/>
            <line num="383" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="383" type="cond"/>
            <line num="384" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="386" type="cond"/>
            <line num="387" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="397" type="cond"/>
            <line num="398" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getSampleVariance() : double" num="406" count="0" type="method"/>
            <line num="408" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="408" type="cond"/>
            <line num="409" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="411" type="cond"/>
            <line num="412" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardDeviation() : double" num="418" count="649" type="method"/>
            <line num="420" count="649" type="stmt"/>
            <line falsecount="649" truecount="0" num="420" type="cond"/>
            <line num="421" count="0" type="stmt"/>
            <line num="423" count="649" type="stmt"/>
            <line falsecount="649" truecount="0" num="423" type="cond"/>
            <line num="424" count="0" type="stmt"/>
            <line num="427" count="649" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="430" count="0" type="method"/>
            <line num="432" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="432" type="cond"/>
            <line num="433" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="435" type="cond"/>
            <line num="436" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardError() : double" num="442" count="164" type="method"/>
            <line num="444" count="164" type="stmt"/>
            <line falsecount="164" truecount="0" num="444" type="cond"/>
            <line num="445" count="0" type="stmt"/>
            <line num="447" count="164" type="stmt"/>
            <line falsecount="164" truecount="0" num="447" type="cond"/>
            <line num="448" count="0" type="stmt"/>
            <line num="451" count="164" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardError(RandomVariable) : double" num="457" count="0" type="method"/>
            <line num="459" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="459" type="cond"/>
            <line num="460" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="462" type="cond"/>
            <line num="463" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getQuantile(double) : double" num="469" count="5" type="method"/>
            <line num="471" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="471" type="cond"/>
            <line num="472" count="0" type="stmt"/>
            <line num="474" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="474" type="cond"/>
            <line num="475" count="0" type="stmt"/>
            <line num="478" count="5" type="stmt"/>
            <line num="479" count="5" type="stmt"/>
            <line num="481" count="5" type="stmt"/>
            <line num="483" count="5" type="stmt"/>
            <line complexity="3" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="486" count="0" type="method"/>
            <line num="488" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="488" type="cond"/>
            <line num="489" count="0" type="stmt"/>
            <line num="491" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="491" type="cond"/>
            <line num="492" count="0" type="stmt"/>
            <line num="495" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getQuantileExpectation(double,double) : double" num="498" count="0" type="method"/>
            <line num="500" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="500" type="cond"/>
            <line num="501" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="503" type="cond"/>
            <line num="504" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="506" type="cond"/>
            <line num="507" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="517" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="517" type="cond"/>
            <line num="518" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getHistogram(double[]) : double[]" num="525" count="18" type="method"/>
            <line num="528" count="18" type="stmt"/>
            <line num="530" count="18" type="stmt"/>
            <line falsecount="18" truecount="0" num="530" type="cond"/>
            <line num="535" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="536" type="cond"/>
            <line num="538" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="538" type="cond"/>
            <line num="539" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line num="552" count="18" type="stmt"/>
            <line num="553" count="18" type="stmt"/>
            <line num="555" count="18" type="stmt"/>
            <line num="556" count="18" type="stmt"/>
            <line falsecount="18" truecount="1836" num="556" type="cond"/>
            <line num="558" count="1836" type="stmt"/>
            <line num="559" count="1836" type="stmt"/>
            <line falsecount="1836" truecount="150858568" num="559" type="cond"/>
            <line num="562" count="150858568" type="stmt"/>
            <line num="563" count="150858568" type="stmt"/>
            <line num="565" count="1836" type="stmt"/>
            <line num="567" count="18" type="stmt"/>
            <line num="570" count="18" type="stmt"/>
            <line falsecount="0" truecount="18" num="570" type="cond"/>
            <line num="571" count="18" type="stmt"/>
            <line falsecount="18" truecount="1854" num="571" type="cond"/>
            <line num="572" count="1854" type="stmt"/>
            <line num="577" count="18" type="stmt"/>
            <line complexity="2" visibility="public" signature="getHistogram(int,double) : double[][]" num="580" count="0" type="method"/>
            <line num="582" count="0" type="stmt"/>
            <line num="583" count="0" type="stmt"/>
            <line num="584" count="0" type="stmt"/>
            <line num="585" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line num="587" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="587" type="cond"/>
            <line num="588" count="0" type="stmt"/>
            <line num="589" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line num="592" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line num="596" count="0" type="stmt"/>
            <line num="598" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="601" count="1094831290" type="method"/>
            <line num="603" count="1094831290" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="606" count="1530" type="method"/>
            <line num="608" count="1530" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRealizationsStream() : DoubleStream" num="611" count="0" type="method"/>
            <line num="613" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="613" type="cond"/>
            <line num="614" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsDouble() : double" num="615" count="0" type="method"/>
            <line num="617" count="0" type="stmt"/>
            <line num="621" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRealizations() : double[]" num="625" count="623" type="method"/>
            <line num="627" count="623" type="stmt"/>
            <line falsecount="623" truecount="0" num="627" type="cond"/>
            <line num="628" count="0" type="stmt"/>
            <line num="629" count="0" type="stmt"/>
            <line num="631" count="623" type="stmt"/>
            <line complexity="2" visibility="public" signature="doubleValue() : Double" num="635" count="0" type="method"/>
            <line num="637" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="637" type="cond"/>
            <line num="638" count="0" type="stmt"/>
            <line num="640" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getOperator() : IntToDoubleFunction" num="644" count="0" type="method"/>
            <line num="646" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="646" type="cond"/>
            <line num="647" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="648" count="0" type="method"/>
            <line num="650" count="0" type="stmt"/>
            <line num="654" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="655" count="0" type="method"/>
            <line num="657" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="663" count="0" type="method"/>
            <line num="665" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="665" type="cond"/>
            <line num="666" count="0" type="stmt"/>
            <line num="670" count="0" type="stmt"/>
            <line num="671" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="671" type="cond"/>
            <line num="672" count="0" type="stmt"/>
            <line num="674" count="0" type="stmt"/>
            <line complexity="12" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="678" count="0" type="method"/>
            <line num="681" count="0" type="stmt"/>
            <line num="683" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="683" type="cond"/>
            <line num="684" count="0" type="stmt"/>
            <line num="685" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="685" type="cond"/>
            <line num="687" count="0" type="stmt"/>
            <line num="688" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="688" type="cond"/>
            <line num="689" count="0" type="stmt"/>
            <line num="691" count="0" type="stmt"/>
            <line num="693" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="693" type="cond"/>
            <line num="695" count="0" type="stmt"/>
            <line num="696" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="696" type="cond"/>
            <line num="697" count="0" type="stmt"/>
            <line num="699" count="0" type="stmt"/>
            <line num="701" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="701" type="cond"/>
            <line num="703" count="0" type="stmt"/>
            <line num="704" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="704" type="cond"/>
            <line num="705" count="0" type="stmt"/>
            <line num="707" count="0" type="stmt"/>
            <line num="713" count="0" type="stmt"/>
            <line num="715" count="0" type="stmt"/>
            <line num="716" count="0" type="stmt"/>
            <line num="717" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="718" count="0" type="method"/>
            <line num="720" count="0" type="stmt"/>
            <line num="724" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="727" count="0" type="method"/>
            <line num="729" count="0" type="stmt"/>
            <line num="730" count="0" type="stmt"/>
            <line num="732" count="0" type="stmt"/>
            <line num="734" count="0" type="stmt"/>
            <line num="735" count="0" type="stmt"/>
            <line num="736" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="738" count="0" type="method"/>
            <line num="740" count="0" type="stmt"/>
            <line num="744" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="cap(double) : RandomVariable" num="747" count="0" type="method"/>
            <line num="749" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="749" type="cond"/>
            <line num="750" count="0" type="stmt"/>
            <line num="751" count="0" type="stmt"/>
            <line num="754" count="0" type="stmt"/>
            <line num="755" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="755" type="cond"/>
            <line num="756" count="0" type="stmt"/>
            <line num="758" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="floor(double) : RandomVariable" num="762" count="192" type="method"/>
            <line num="764" count="192" type="stmt"/>
            <line falsecount="192" truecount="0" num="764" type="cond"/>
            <line num="765" count="0" type="stmt"/>
            <line num="766" count="0" type="stmt"/>
            <line num="769" count="192" type="stmt"/>
            <line num="770" count="192" type="stmt"/>
            <line falsecount="192" truecount="10400000" num="770" type="cond"/>
            <line num="771" count="10400000" type="stmt"/>
            <line num="773" count="192" type="stmt"/>
            <line complexity="3" visibility="public" signature="add(double) : RandomVariable" num="777" count="1560" type="method"/>
            <line num="779" count="1560" type="stmt"/>
            <line falsecount="1560" truecount="0" num="779" type="cond"/>
            <line num="780" count="0" type="stmt"/>
            <line num="781" count="0" type="stmt"/>
            <line num="784" count="1560" type="stmt"/>
            <line num="785" count="1560" type="stmt"/>
            <line falsecount="1560" truecount="95380045" num="785" type="cond"/>
            <line num="786" count="95380045" type="stmt"/>
            <line num="788" count="1560" type="stmt"/>
            <line complexity="3" visibility="public" signature="sub(double) : RandomVariable" num="792" count="2153" type="method"/>
            <line num="794" count="2153" type="stmt"/>
            <line falsecount="2153" truecount="0" num="794" type="cond"/>
            <line num="795" count="0" type="stmt"/>
            <line num="796" count="0" type="stmt"/>
            <line num="799" count="2153" type="stmt"/>
            <line num="800" count="2153" type="stmt"/>
            <line falsecount="2153" truecount="126420000" num="800" type="cond"/>
            <line num="801" count="126420000" type="stmt"/>
            <line num="803" count="2153" type="stmt"/>
            <line complexity="3" visibility="public" signature="mult(double) : RandomVariable" num="807" count="2988" type="method"/>
            <line num="809" count="2988" type="stmt"/>
            <line falsecount="2988" truecount="0" num="809" type="cond"/>
            <line num="810" count="0" type="stmt"/>
            <line num="811" count="0" type="stmt"/>
            <line num="814" count="2988" type="stmt"/>
            <line num="815" count="2988" type="stmt"/>
            <line falsecount="2988" truecount="146800080" num="815" type="cond"/>
            <line num="816" count="146800080" type="stmt"/>
            <line num="818" count="2988" type="stmt"/>
            <line complexity="3" visibility="public" signature="div(double) : RandomVariable" num="822" count="168" type="method"/>
            <line num="824" count="168" type="stmt"/>
            <line falsecount="168" truecount="0" num="824" type="cond"/>
            <line num="825" count="0" type="stmt"/>
            <line num="826" count="0" type="stmt"/>
            <line num="829" count="168" type="stmt"/>
            <line num="830" count="168" type="stmt"/>
            <line falsecount="168" truecount="3260025" num="830" type="cond"/>
            <line num="831" count="3260025" type="stmt"/>
            <line num="833" count="168" type="stmt"/>
            <line complexity="3" visibility="public" signature="pow(double) : RandomVariable" num="837" count="970" type="method"/>
            <line num="839" count="970" type="stmt"/>
            <line falsecount="970" truecount="0" num="839" type="cond"/>
            <line num="840" count="0" type="stmt"/>
            <line num="841" count="0" type="stmt"/>
            <line num="844" count="970" type="stmt"/>
            <line num="845" count="970" type="stmt"/>
            <line falsecount="970" truecount="96000060" num="845" type="cond"/>
            <line num="846" count="96000060" type="stmt"/>
            <line num="848" count="970" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="852" count="0" type="method"/>
            <line num="854" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConditionalExpectation(ConditionalExpectationEstimator) : RandomVariable" num="857" count="0" type="method"/>
            <line num="860" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="squared() : RandomVariable" num="863" count="8041" type="method"/>
            <line num="865" count="8041" type="stmt"/>
            <line falsecount="8041" truecount="0" num="865" type="cond"/>
            <line num="866" count="0" type="stmt"/>
            <line num="867" count="0" type="stmt"/>
            <line num="870" count="8041" type="stmt"/>
            <line num="871" count="8041" type="stmt"/>
            <line falsecount="8041" truecount="80720030" num="871" type="cond"/>
            <line num="872" count="80720030" type="stmt"/>
            <line num="874" count="8041" type="stmt"/>
            <line complexity="3" visibility="public" signature="sqrt() : RandomVariable" num="878" count="5" type="method"/>
            <line num="880" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="880" type="cond"/>
            <line num="881" count="0" type="stmt"/>
            <line num="882" count="0" type="stmt"/>
            <line num="885" count="5" type="stmt"/>
            <line num="886" count="5" type="stmt"/>
            <line falsecount="5" truecount="30" num="886" type="cond"/>
            <line num="887" count="30" type="stmt"/>
            <line num="889" count="5" type="stmt"/>
            <line complexity="3" visibility="public" signature="exp() : RandomVariableFromFloatArray" num="893" count="1208" type="method"/>
            <line num="895" count="1208" type="stmt"/>
            <line falsecount="1208" truecount="0" num="895" type="cond"/>
            <line num="896" count="0" type="stmt"/>
            <line num="897" count="0" type="stmt"/>
            <line num="900" count="1208" type="stmt"/>
            <line num="901" count="1208" type="stmt"/>
            <line falsecount="1208" truecount="55520000" num="901" type="cond"/>
            <line num="902" count="55520000" type="stmt"/>
            <line num="904" count="1208" type="stmt"/>
            <line complexity="3" visibility="public" signature="log() : RandomVariableFromFloatArray" num="908" count="774" type="method"/>
            <line num="910" count="774" type="stmt"/>
            <line falsecount="774" truecount="0" num="910" type="cond"/>
            <line num="911" count="0" type="stmt"/>
            <line num="912" count="0" type="stmt"/>
            <line num="915" count="774" type="stmt"/>
            <line num="916" count="774" type="stmt"/>
            <line falsecount="774" truecount="15480000" num="916" type="cond"/>
            <line num="917" count="15480000" type="stmt"/>
            <line num="919" count="774" type="stmt"/>
            <line complexity="3" visibility="public" signature="sin() : RandomVariable" num="923" count="0" type="method"/>
            <line num="925" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="925" type="cond"/>
            <line num="926" count="0" type="stmt"/>
            <line num="927" count="0" type="stmt"/>
            <line num="930" count="0" type="stmt"/>
            <line num="931" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="931" type="cond"/>
            <line num="932" count="0" type="stmt"/>
            <line num="934" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="cos() : RandomVariable" num="938" count="0" type="method"/>
            <line num="940" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="940" type="cond"/>
            <line num="941" count="0" type="stmt"/>
            <line num="942" count="0" type="stmt"/>
            <line num="945" count="0" type="stmt"/>
            <line num="946" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="946" type="cond"/>
            <line num="947" count="0" type="stmt"/>
            <line num="949" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="add(RandomVariable) : RandomVariable" num="957" count="36023" type="method"/>
            <line num="959" count="36023" type="stmt"/>
            <line falsecount="36023" truecount="0" num="959" type="cond"/>
            <line num="961" count="0" type="stmt"/>
            <line num="965" count="36023" type="stmt"/>
            <line num="967" count="36023" type="stmt"/>
            <line falsecount="36023" truecount="0" num="967" type="cond"/>
            <line num="968" count="0" type="stmt"/>
            <line num="969" count="0" type="stmt"/>
            <line num="971" count="36023" type="stmt"/>
            <line falsecount="36023" truecount="0" num="971" type="cond"/>
            <line num="972" count="0" type="stmt"/>
            <line num="973" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="973" type="cond"/>
            <line num="974" count="0" type="stmt"/>
            <line num="976" count="0" type="stmt"/>
            <line num="978" count="36023" type="stmt"/>
            <line num="979" count="36023" type="stmt"/>
            <line falsecount="36023" truecount="920752789" num="979" type="cond"/>
            <line num="980" count="920752789" type="stmt"/>
            <line num="982" count="36023" type="stmt"/>
            <line complexity="7" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="986" count="920" type="method"/>
            <line num="988" count="920" type="stmt"/>
            <line falsecount="920" truecount="0" num="988" type="cond"/>
            <line num="990" count="0" type="stmt"/>
            <line num="994" count="920" type="stmt"/>
            <line num="996" count="920" type="stmt"/>
            <line falsecount="920" truecount="0" num="996" type="cond"/>
            <line num="997" count="0" type="stmt"/>
            <line num="998" count="0" type="stmt"/>
            <line num="1000" count="920" type="stmt"/>
            <line falsecount="920" truecount="0" num="1000" type="cond"/>
            <line num="1001" count="0" type="stmt"/>
            <line num="1002" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1002" type="cond"/>
            <line num="1003" count="0" type="stmt"/>
            <line num="1005" count="0" type="stmt"/>
            <line num="1008" count="920" type="stmt"/>
            <line num="1009" count="920" type="stmt"/>
            <line falsecount="920" truecount="19480060" num="1009" type="cond"/>
            <line num="1010" count="19480060" type="stmt"/>
            <line num="1012" count="920" type="stmt"/>
            <line complexity="7" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="1016" count="0" type="method"/>
            <line num="1018" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1018" type="cond"/>
            <line num="1020" count="0" type="stmt"/>
            <line num="1024" count="0" type="stmt"/>
            <line num="1026" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1026" type="cond"/>
            <line num="1027" count="0" type="stmt"/>
            <line num="1028" count="0" type="stmt"/>
            <line num="1030" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1030" type="cond"/>
            <line num="1031" count="0" type="stmt"/>
            <line num="1032" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1032" type="cond"/>
            <line num="1033" count="0" type="stmt"/>
            <line num="1035" count="0" type="stmt"/>
            <line num="1038" count="0" type="stmt"/>
            <line num="1039" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1039" type="cond"/>
            <line num="1040" count="0" type="stmt"/>
            <line num="1042" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="1046" count="10158" type="method"/>
            <line num="1048" count="10158" type="stmt"/>
            <line falsecount="10158" truecount="0" num="1048" type="cond"/>
            <line num="1050" count="0" type="stmt"/>
            <line num="1054" count="10158" type="stmt"/>
            <line num="1056" count="10158" type="stmt"/>
            <line falsecount="10158" truecount="0" num="1056" type="cond"/>
            <line num="1057" count="0" type="stmt"/>
            <line num="1058" count="0" type="stmt"/>
            <line num="1060" count="10158" type="stmt"/>
            <line falsecount="8318" truecount="1840" num="1060" type="cond"/>
            <line num="1061" count="1840" type="stmt"/>
            <line num="1062" count="8318" type="stmt"/>
            <line falsecount="8318" truecount="0" num="1062" type="cond"/>
            <line num="1063" count="0" type="stmt"/>
            <line num="1064" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1064" type="cond"/>
            <line num="1065" count="0" type="stmt"/>
            <line num="1067" count="0" type="stmt"/>
            <line num="1070" count="8318" type="stmt"/>
            <line num="1071" count="8318" type="stmt"/>
            <line falsecount="8318" truecount="109560040" num="1071" type="cond"/>
            <line num="1072" count="109560040" type="stmt"/>
            <line num="1074" count="8318" type="stmt"/>
            <line complexity="7" visibility="public" signature="div(RandomVariable) : RandomVariable" num="1078" count="2241" type="method"/>
            <line num="1080" count="2241" type="stmt"/>
            <line falsecount="2241" truecount="0" num="1080" type="cond"/>
            <line num="1082" count="0" type="stmt"/>
            <line num="1086" count="2241" type="stmt"/>
            <line num="1088" count="2241" type="stmt"/>
            <line falsecount="2241" truecount="0" num="1088" type="cond"/>
            <line num="1089" count="0" type="stmt"/>
            <line num="1090" count="0" type="stmt"/>
            <line num="1092" count="2241" type="stmt"/>
            <line falsecount="2241" truecount="0" num="1092" type="cond"/>
            <line num="1093" count="0" type="stmt"/>
            <line num="1094" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1094" type="cond"/>
            <line num="1095" count="0" type="stmt"/>
            <line num="1097" count="0" type="stmt"/>
            <line num="1100" count="2241" type="stmt"/>
            <line num="1101" count="2241" type="stmt"/>
            <line falsecount="2241" truecount="112020000" num="1101" type="cond"/>
            <line num="1102" count="112020000" type="stmt"/>
            <line num="1104" count="2241" type="stmt"/>
            <line complexity="7" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="1108" count="0" type="method"/>
            <line num="1110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1110" type="cond"/>
            <line num="1112" count="0" type="stmt"/>
            <line num="1116" count="0" type="stmt"/>
            <line num="1118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1118" type="cond"/>
            <line num="1119" count="0" type="stmt"/>
            <line num="1120" count="0" type="stmt"/>
            <line num="1122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1122" type="cond"/>
            <line num="1123" count="0" type="stmt"/>
            <line num="1124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1124" type="cond"/>
            <line num="1125" count="0" type="stmt"/>
            <line num="1127" count="0" type="stmt"/>
            <line num="1130" count="0" type="stmt"/>
            <line num="1131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1131" type="cond"/>
            <line num="1132" count="0" type="stmt"/>
            <line num="1134" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="1138" count="9" type="method"/>
            <line num="1140" count="9" type="stmt"/>
            <line falsecount="9" truecount="0" num="1140" type="cond"/>
            <line num="1142" count="0" type="stmt"/>
            <line num="1146" count="9" type="stmt"/>
            <line num="1148" count="9" type="stmt"/>
            <line falsecount="9" truecount="0" num="1148" type="cond"/>
            <line num="1149" count="0" type="stmt"/>
            <line num="1150" count="0" type="stmt"/>
            <line num="1152" count="9" type="stmt"/>
            <line falsecount="9" truecount="0" num="1152" type="cond"/>
            <line num="1153" count="0" type="stmt"/>
            <line num="1154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1154" type="cond"/>
            <line num="1155" count="0" type="stmt"/>
            <line num="1157" count="0" type="stmt"/>
            <line num="1159" count="9" type="stmt"/>
            <line num="1160" count="9" type="stmt"/>
            <line falsecount="9" truecount="800005" num="1160" type="cond"/>
            <line num="1161" count="800005" type="stmt"/>
            <line num="1163" count="9" type="stmt"/>
            <line complexity="7" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="1167" count="1" type="method"/>
            <line num="1169" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="1169" type="cond"/>
            <line num="1171" count="0" type="stmt"/>
            <line num="1175" count="1" type="stmt"/>
            <line num="1177" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="1177" type="cond"/>
            <line num="1178" count="0" type="stmt"/>
            <line num="1179" count="0" type="stmt"/>
            <line num="1181" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="1181" type="cond"/>
            <line num="1182" count="0" type="stmt"/>
            <line num="1183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1183" type="cond"/>
            <line num="1184" count="0" type="stmt"/>
            <line num="1186" count="0" type="stmt"/>
            <line num="1188" count="1" type="stmt"/>
            <line num="1189" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="1189" type="cond"/>
            <line num="1190" count="5" type="stmt"/>
            <line num="1192" count="1" type="stmt"/>
            <line complexity="7" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="1196" count="0" type="method"/>
            <line num="1198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1198" type="cond"/>
            <line num="1200" count="0" type="stmt"/>
            <line num="1204" count="0" type="stmt"/>
            <line num="1206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1206" type="cond"/>
            <line num="1207" count="0" type="stmt"/>
            <line num="1208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1208" type="cond"/>
            <line num="1209" count="0" type="stmt"/>
            <line num="1210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1210" type="cond"/>
            <line num="1211" count="0" type="stmt"/>
            <line num="1213" count="0" type="stmt"/>
            <line num="1216" count="0" type="stmt"/>
            <line num="1217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1217" type="cond"/>
            <line num="1218" count="0" type="stmt"/>
            <line num="1220" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="1224" count="0" type="method"/>
            <line num="1226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1226" type="cond"/>
            <line num="1228" count="0" type="stmt"/>
            <line num="1232" count="0" type="stmt"/>
            <line num="1234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1234" type="cond"/>
            <line num="1235" count="0" type="stmt"/>
            <line num="1236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1236" type="cond"/>
            <line num="1237" count="0" type="stmt"/>
            <line num="1238" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1238" type="cond"/>
            <line num="1239" count="0" type="stmt"/>
            <line num="1241" count="0" type="stmt"/>
            <line num="1244" count="0" type="stmt"/>
            <line num="1245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1245" type="cond"/>
            <line num="1246" count="0" type="stmt"/>
            <line num="1248" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="1257" count="1070" type="method"/>
            <line num="1260" count="1070" type="stmt"/>
            <line num="1261" count="1070" type="stmt"/>
            <line num="1262" count="1070" type="stmt"/>
            <line num="1264" count="1070" type="stmt"/>
            <line falsecount="1070" truecount="0" num="1264" type="cond"/>
            <line num="1265" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1265" type="cond"/>
            <line num="1266" count="0" type="stmt"/>
            <line num="1268" count="0" type="stmt"/>
            <line num="1272" count="1070" type="stmt"/>
            <line num="1273" count="1070" type="stmt"/>
            <line num="1274" count="1070" type="stmt"/>
            <line falsecount="1070" truecount="38360000" num="1274" type="cond"/>
            <line num="1275" count="38360000" type="stmt"/>
            <line falsecount="5196388" truecount="33163612" num="1275" type="cond"/>
            <line num="1277" count="1070" type="stmt"/>
            <line complexity="3" visibility="public" signature="invert() : RandomVariable" num="1281" count="0" type="method"/>
            <line num="1283" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1283" type="cond"/>
            <line num="1284" count="0" type="stmt"/>
            <line num="1285" count="0" type="stmt"/>
            <line num="1288" count="0" type="stmt"/>
            <line num="1289" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1289" type="cond"/>
            <line num="1290" count="0" type="stmt"/>
            <line num="1292" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="abs() : RandomVariable" num="1296" count="196" type="method"/>
            <line num="1298" count="196" type="stmt"/>
            <line falsecount="196" truecount="0" num="1298" type="cond"/>
            <line num="1299" count="0" type="stmt"/>
            <line num="1300" count="0" type="stmt"/>
            <line num="1303" count="196" type="stmt"/>
            <line num="1304" count="196" type="stmt"/>
            <line falsecount="196" truecount="19600000" num="1304" type="cond"/>
            <line num="1305" count="19600000" type="stmt"/>
            <line num="1307" count="196" type="stmt"/>
            <line complexity="10" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="1311" count="2762" type="method"/>
            <line num="1313" count="2762" type="stmt"/>
            <line falsecount="2762" truecount="0" num="1313" type="cond"/>
            <line num="1315" count="0" type="stmt"/>
            <line num="1319" count="2762" type="stmt"/>
            <line num="1321" count="2762" type="stmt"/>
            <line falsecount="1385" truecount="1377" num="1321" type="cond"/>
            <line num="1322" count="1377" type="stmt"/>
            <line num="1323" count="1385" type="stmt"/>
            <line falsecount="1385" truecount="0" num="1323" type="cond"/>
            <line num="1324" count="0" type="stmt"/>
            <line num="1325" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1325" type="cond"/>
            <line num="1326" count="0" type="stmt"/>
            <line num="1328" count="0" type="stmt"/>
            <line num="1330" count="1385" type="stmt"/>
            <line falsecount="1385" truecount="0" num="1330" type="cond"/>
            <line num="1331" count="0" type="stmt"/>
            <line num="1332" count="0" type="stmt"/>
            <line num="1333" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1333" type="cond"/>
            <line num="1334" count="0" type="stmt"/>
            <line num="1336" count="0" type="stmt"/>
            <line num="1339" count="1385" type="stmt"/>
            <line num="1340" count="1385" type="stmt"/>
            <line falsecount="1385" truecount="81940020" num="1340" type="cond"/>
            <line num="1341" count="81940020" type="stmt"/>
            <line num="1343" count="1385" type="stmt"/>
            <line complexity="14" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="1347" count="1681" type="method"/>
            <line num="1349" count="1681" type="stmt"/>
            <line falsecount="1681" truecount="0" num="1349" type="cond"/>
            <line num="1351" count="0" type="stmt"/>
            <line num="1355" count="1681" type="stmt"/>
            <line num="1357" count="1681" type="stmt"/>
            <line falsecount="1681" truecount="0" num="1357" type="cond"/>
            <line num="1358" count="0" type="stmt"/>
            <line num="1359" count="0" type="stmt"/>
            <line num="1361" count="1681" type="stmt"/>
            <line falsecount="1681" truecount="0" num="1361" type="cond"/>
            <line num="1362" count="0" type="stmt"/>
            <line num="1364" count="1681" type="stmt"/>
            <line falsecount="1677" truecount="4" num="1364" type="cond"/>
            <line num="1365" count="4" type="stmt"/>
            <line num="1367" count="1677" type="stmt"/>
            <line falsecount="296" truecount="1381" num="1367" type="cond"/>
            <line num="1368" count="1381" type="stmt"/>
            <line num="1370" count="296" type="stmt"/>
            <line falsecount="0" truecount="296" num="1370" type="cond"/>
            <line num="1371" count="296" type="stmt"/>
            <line num="1372" count="296" type="stmt"/>
            <line falsecount="296" truecount="29600000" num="1372" type="cond"/>
            <line num="1373" count="29600000" type="stmt"/>
            <line num="1375" count="296" type="stmt"/>
            <line num="1378" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="addSumProduct(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;) : RandomVariable" num="1382" count="0" type="method"/>
            <line num="1385" count="0" type="stmt"/>
            <line num="1386" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1386" type="cond"/>
            <line num="1387" count="0" type="stmt"/>
            <line num="1389" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="1392" count="0" type="method"/>
            <line num="1394" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1394" type="cond"/>
            <line num="1396" count="0" type="stmt"/>
            <line num="1400" count="0" type="stmt"/>
            <line num="1402" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1402" type="cond"/>
            <line num="1403" count="0" type="stmt"/>
            <line num="1404" count="0" type="stmt"/>
            <line num="1407" count="0" type="stmt"/>
            <line num="1408" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1408" type="cond"/>
            <line num="1409" count="0" type="stmt"/>
            <line num="1411" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="1415" count="0" type="method"/>
            <line num="1417" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1417" type="cond"/>
            <line num="1419" count="0" type="stmt"/>
            <line num="1423" count="0" type="stmt"/>
            <line num="1425" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1425" type="cond"/>
            <line num="1426" count="0" type="stmt"/>
            <line num="1427" count="0" type="stmt"/>
            <line num="1430" count="0" type="stmt"/>
            <line num="1431" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1431" type="cond"/>
            <line num="1432" count="0" type="stmt"/>
            <line num="1434" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="isNaN() : RandomVariable" num="1438" count="0" type="method"/>
            <line num="1440" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1440" type="cond"/>
            <line num="1441" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1441" type="cond"/>
            <line num="1443" count="0" type="stmt"/>
            <line num="1444" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1444" type="cond"/>
            <line num="1445" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1445" type="cond"/>
            <line num="1447" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="1451" count="0" type="method"/>
            <line num="1453" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1454" type="cond"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/RandomVariableLazyEvaluation.java" name="RandomVariableLazyEvaluation.java">
            <metrics coveredelements="152" coveredconditionals="21" complexity="217" loc="1265" coveredmethods="40" methods="124" elements="652" classes="1" ncloc="933" statements="376" conditionals="152" coveredstatements="91"/>
            <class name="RandomVariableLazyEvaluation">
               <metrics coveredelements="152" coveredconditionals="21" complexity="217" coveredmethods="40" methods="124" elements="652" statements="376" conditionals="152" coveredstatements="91"/>
            </class>
            <line complexity="3" visibility="public" signature="RandomVariableLazyEvaluation(RandomVariable)" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line complexity="1" visibility="public" signature="RandomVariableLazyEvaluation(double)" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="RandomVariableLazyEvaluation(RandomVariable,DoubleUnaryOperator)" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line complexity="1" visibility="public" signature="RandomVariableLazyEvaluation(double,double)" num="98" count="6" type="method"/>
            <line num="99" count="6" type="stmt"/>
            <line num="100" count="6" type="stmt"/>
            <line num="101" count="6" type="stmt"/>
            <line num="102" count="6" type="stmt"/>
            <line num="103" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableLazyEvaluation(double,int,double)" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableLazyEvaluation(double,double[])" num="132" count="11" type="method"/>
            <line num="133" count="11" type="stmt"/>
            <line num="134" count="11" type="stmt"/>
            <line num="135" count="11" type="stmt"/>
            <line num="136" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="137" count="3071819" type="method"/>
            <line num="139" count="3156457" type="stmt"/>
            <line num="142" count="11" type="stmt"/>
            <line num="143" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableLazyEvaluation(double,IntToDoubleFunction,int)" num="153" count="11" type="method"/>
            <line num="154" count="11" type="stmt"/>
            <line num="155" count="11" type="stmt"/>
            <line num="156" count="11" type="stmt"/>
            <line num="157" count="11" type="stmt"/>
            <line num="158" count="11" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(RandomVariable) : boolean" num="164" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="177" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="186" count="6" type="method"/>
            <line num="188" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="191" count="1" type="method"/>
            <line num="193" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="get(int) : double" num="197" count="5" type="method"/>
            <line num="199" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="199" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="202" count="5" type="stmt"/>
            <line num="203" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="212" count="87" type="method"/>
            <line num="214" count="87" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMin() : double" num="220" count="1" type="method"/>
            <line num="222" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMax() : double" num="231" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getAverage() : double" num="242" count="7" type="method"/>
            <line num="244" count="7" type="stmt"/>
            <line falsecount="6" truecount="1" num="244" type="cond"/>
            <line num="245" count="1" type="stmt"/>
            <line num="247" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="247" type="cond"/>
            <line num="248" count="0" type="stmt"/>
            <line num="251" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="getAverage(RandomVariable) : double" num="257" count="0" type="method"/>
            <line num="259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="259" type="cond"/>
            <line num="260" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="262" type="cond"/>
            <line num="263" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getVariance() : double" num="272" count="9" type="method"/>
            <line num="274" count="9" type="stmt"/>
            <line falsecount="8" truecount="1" num="274" type="cond"/>
            <line num="275" count="1" type="stmt"/>
            <line num="277" count="8" type="stmt"/>
            <line falsecount="8" truecount="0" num="277" type="cond"/>
            <line num="278" count="0" type="stmt"/>
            <line num="281" count="8" type="stmt"/>
            <line num="282" count="8" type="stmt"/>
            <line num="283" count="8" type="stmt"/>
            <line num="284" count="44" type="stmt"/>
            <line num="285" count="44" type="stmt"/>
            <line num="287" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="getVariance(RandomVariable) : double" num="290" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="295" type="cond"/>
            <line num="296" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="301" type="cond"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getSampleVariance() : double" num="308" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="310" type="cond"/>
            <line num="311" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="313" type="cond"/>
            <line num="314" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardDeviation() : double" num="320" count="1" type="method"/>
            <line num="322" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="322" type="cond"/>
            <line num="323" count="0" type="stmt"/>
            <line num="325" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="325" type="cond"/>
            <line num="326" count="0" type="stmt"/>
            <line num="329" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="335" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="337" type="cond"/>
            <line num="338" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="340" type="cond"/>
            <line num="341" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardError() : double" num="350" count="0" type="method"/>
            <line num="352" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="352" type="cond"/>
            <line num="353" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="355" type="cond"/>
            <line num="356" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardError(RandomVariable) : double" num="365" count="0" type="method"/>
            <line num="367" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="367" type="cond"/>
            <line num="368" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="370" type="cond"/>
            <line num="371" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getQuantile(double) : double" num="380" count="5" type="method"/>
            <line num="382" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="382" type="cond"/>
            <line num="383" count="0" type="stmt"/>
            <line num="385" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="385" type="cond"/>
            <line num="386" count="0" type="stmt"/>
            <line num="389" count="5" type="stmt"/>
            <line num="390" count="5" type="stmt"/>
            <line num="392" count="5" type="stmt"/>
            <line num="394" count="5" type="stmt"/>
            <line complexity="3" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="400" count="0" type="method"/>
            <line num="402" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="402" type="cond"/>
            <line num="403" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="405" type="cond"/>
            <line num="406" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getQuantileExpectation(double,double) : double" num="415" count="0" type="method"/>
            <line num="417" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="417" type="cond"/>
            <line num="418" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="420" type="cond"/>
            <line num="421" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="423" type="cond"/>
            <line num="424" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="434" type="cond"/>
            <line num="435" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getHistogram(double[]) : double[]" num="445" count="0" type="method"/>
            <line num="448" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="450" type="cond"/>
            <line num="455" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="456" type="cond"/>
            <line num="458" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="458" type="cond"/>
            <line num="459" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line num="463" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line num="473" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="476" type="cond"/>
            <line num="478" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="479" type="cond"/>
            <line num="482" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="490" type="cond"/>
            <line num="491" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="491" type="cond"/>
            <line num="492" count="0" type="stmt"/>
            <line num="497" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getHistogram(int,double) : double[][]" num="503" count="0" type="method"/>
            <line num="505" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line num="508" count="0" type="stmt"/>
            <line num="509" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="510" type="cond"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line num="517" count="0" type="stmt"/>
            <line num="518" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line num="521" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="527" count="94" type="method"/>
            <line num="529" count="94" type="stmt"/>
            <line complexity="2" visibility="public" signature="expand(int) : RandomVariable" num="535" count="0" type="method"/>
            <line num="536" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="536" type="cond"/>
            <line num="538" count="0" type="stmt"/>
            <line num="539" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRealizations() : double[]" num="551" count="18" type="method"/>
            <line num="553" count="18" type="stmt"/>
            <line falsecount="18" truecount="0" num="553" type="cond"/>
            <line num="554" count="0" type="stmt"/>
            <line num="555" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="559" count="18" type="stmt"/>
            <line num="561" count="18" type="stmt"/>
            <line complexity="2" visibility="public" signature="doubleValue() : Double" num="565" count="0" type="method"/>
            <line num="567" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="567" type="cond"/>
            <line num="568" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="577" count="0" type="method"/>
            <line num="579" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRandomVariable() : RandomVariableFromDoubleArray" num="582" count="0" type="method"/>
            <line num="583" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="583" type="cond"/>
            <line num="584" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRealizationsStream() : DoubleStream" num="593" count="15" type="method"/>
            <line num="595" count="15" type="stmt"/>
            <line falsecount="15" truecount="0" num="595" type="cond"/>
            <line num="596" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsDouble() : double" num="597" count="0" type="method"/>
            <line num="599" count="0" type="stmt"/>
            <line num="604" count="15" type="stmt"/>
            <line complexity="2" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="608" count="11" type="method"/>
            <line num="610" count="11" type="stmt"/>
            <line falsecount="6" truecount="5" num="610" type="cond"/>
            <line num="611" count="5" type="stmt"/>
            <line num="615" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="616" count="55" type="method"/>
            <line num="618" count="55" type="stmt"/>
            <line num="621" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="cache() : RandomVariable" num="625" count="23" type="method"/>
            <line num="627" count="23" type="stmt"/>
            <line num="629" count="23" type="stmt"/>
            <line falsecount="15" truecount="8" num="629" type="cond"/>
            <line num="630" count="8" type="stmt"/>
            <line num="631" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="632" count="0" type="method"/>
            <line num="634" count="0" type="stmt"/>
            <line num="639" count="23" type="stmt"/>
            <line complexity="7" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="642" count="5" type="method"/>
            <line num="645" count="5" type="stmt"/>
            <line num="647" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="647" type="cond"/>
            <line num="648" count="0" type="stmt"/>
            <line num="650" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="650" type="cond"/>
            <line num="651" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="652" count="0" type="method"/>
            <line num="654" count="0" type="stmt"/>
            <line num="657" count="0" type="stmt"/>
            <line num="659" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="659" type="cond"/>
            <line num="660" count="0" type="stmt"/>
            <line num="661" count="0" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="663" count="0" type="method"/>
            <line num="665" count="0" type="stmt"/>
            <line num="668" count="0" type="stmt"/>
            <line num="671" count="0" type="stmt"/>
            <line num="672" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="673" count="0" type="method"/>
            <line num="675" count="0" type="stmt"/>
            <line num="678" count="0" type="stmt"/>
            <line num="683" count="5" type="stmt"/>
            <line num="684" count="0" type="stmt"/>
            <line num="685" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="686" count="0" type="method"/>
            <line num="688" count="0" type="stmt"/>
            <line num="691" count="0" type="stmt"/>
            <line num="694" count="5" type="stmt"/>
            <line num="695" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="696" count="53" type="method"/>
            <line num="698" count="54" type="stmt"/>
            <line num="701" count="5" type="stmt"/>
            <line complexity="13" visibility="public" signature="apply(DoubleBinaryOperator,DoubleBinaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="707" count="0" type="method"/>
            <line num="709" count="0" type="stmt"/>
            <line num="710" count="0" type="stmt"/>
            <line num="712" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="712" type="cond"/>
            <line num="713" count="0" type="stmt"/>
            <line num="716" count="0" type="stmt"/>
            <line num="718" count="0" type="stmt"/>
            <line num="719" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="719" type="cond"/>
            <line num="720" count="0" type="stmt"/>
            <line num="721" count="0" type="stmt"/>
            <line num="722" count="0" type="stmt"/>
            <line num="723" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="724" count="0" type="method"/>
            <line num="726" count="0" type="stmt"/>
            <line num="731" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="732" count="0" type="method"/>
            <line num="734" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="741" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="741" type="cond"/>
            <line num="742" count="0" type="stmt"/>
            <line num="743" count="0" type="stmt"/>
            <line num="744" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="745" count="0" type="method"/>
            <line num="747" count="0" type="stmt"/>
            <line num="751" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="751" type="cond"/>
            <line num="752" count="0" type="stmt"/>
            <line num="753" count="0" type="stmt"/>
            <line num="754" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="755" count="0" type="method"/>
            <line num="757" count="0" type="stmt"/>
            <line num="761" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="761" type="cond"/>
            <line num="762" count="0" type="stmt"/>
            <line num="763" count="0" type="stmt"/>
            <line num="764" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="765" count="0" type="method"/>
            <line num="767" count="0" type="stmt"/>
            <line num="772" count="0" type="stmt"/>
            <line num="773" count="0" type="stmt"/>
            <line num="774" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="775" count="0" type="method"/>
            <line num="777" count="0" type="stmt"/>
            <line num="782" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="782" type="cond"/>
            <line num="783" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="784" count="0" type="method"/>
            <line num="786" count="0" type="stmt"/>
            <line num="791" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="792" count="0" type="method"/>
            <line num="794" count="0" type="stmt"/>
            <line complexity="14" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="803" count="0" type="method"/>
            <line num="806" count="0" type="stmt"/>
            <line num="807" count="0" type="stmt"/>
            <line num="809" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="809" type="cond"/>
            <line num="810" count="0" type="stmt"/>
            <line num="813" count="0" type="stmt"/>
            <line num="814" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="815" type="cond"/>
            <line num="816" count="0" type="stmt"/>
            <line num="817" count="0" type="stmt"/>
            <line num="818" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="818" type="cond"/>
            <line num="819" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="820" count="0" type="method"/>
            <line num="822" count="0" type="stmt"/>
            <line num="827" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="828" count="0" type="method"/>
            <line num="830" count="0" type="stmt"/>
            <line num="836" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="836" type="cond"/>
            <line num="837" count="0" type="stmt"/>
            <line num="838" count="0" type="stmt"/>
            <line num="839" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="839" type="cond"/>
            <line num="840" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="841" count="0" type="method"/>
            <line num="843" count="0" type="stmt"/>
            <line num="848" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="849" count="0" type="method"/>
            <line num="851" count="0" type="stmt"/>
            <line num="857" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="857" type="cond"/>
            <line num="858" count="0" type="stmt"/>
            <line num="859" count="0" type="stmt"/>
            <line num="860" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="860" type="cond"/>
            <line num="861" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="862" count="0" type="method"/>
            <line num="864" count="0" type="stmt"/>
            <line num="869" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="870" count="0" type="method"/>
            <line num="872" count="0" type="stmt"/>
            <line num="879" count="0" type="stmt"/>
            <line num="880" count="0" type="stmt"/>
            <line num="881" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="881" type="cond"/>
            <line num="882" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="883" count="0" type="method"/>
            <line num="885" count="0" type="stmt"/>
            <line num="890" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="891" count="0" type="method"/>
            <line num="893" count="0" type="stmt"/>
            <line num="900" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="907" count="0" type="method"/>
            <line num="909" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="910" count="0" type="method"/>
            <line num="912" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="920" count="0" type="method"/>
            <line num="922" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="923" count="0" type="method"/>
            <line num="925" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="933" count="2" type="method"/>
            <line num="935" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="936" count="11" type="method"/>
            <line num="938" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="946" count="1" type="method"/>
            <line num="948" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="949" count="1" type="method"/>
            <line num="951" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="959" count="1" type="method"/>
            <line num="961" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="962" count="1" type="method"/>
            <line num="964" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="972" count="2" type="method"/>
            <line num="974" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="975" count="11" type="method"/>
            <line num="977" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="985" count="2" type="method"/>
            <line num="987" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="988" count="12" type="method"/>
            <line num="990" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="998" count="0" type="method"/>
            <line num="1000" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="1006" count="2" type="method"/>
            <line num="1008" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="1009" count="13" type="method"/>
            <line num="1011" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="1019" count="1" type="method"/>
            <line num="1021" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="1027" count="0" type="method"/>
            <line num="1029" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="1035" count="0" type="method"/>
            <line num="1037" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="1043" count="0" type="method"/>
            <line num="1045" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="1051" count="0" type="method"/>
            <line num="1053" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(RandomVariable) : RandomVariable" num="1059" count="1" type="method"/>
            <line num="1061" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1062" count="10" type="method"/>
            <line num="1064" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="1073" count="2" type="method"/>
            <line num="1075" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1076" count="24" type="method"/>
            <line num="1078" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="1083" count="0" type="method"/>
            <line num="1085" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1086" count="0" type="method"/>
            <line num="1088" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="1096" count="0" type="method"/>
            <line num="1098" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1099" count="0" type="method"/>
            <line num="1101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(RandomVariable) : RandomVariable" num="1106" count="0" type="method"/>
            <line num="1108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1109" count="0" type="method"/>
            <line num="1111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="1116" count="0" type="method"/>
            <line num="1118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1119" count="0" type="method"/>
            <line num="1121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="1126" count="1" type="method"/>
            <line num="1128" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="1131" count="1" type="method"/>
            <line num="1133" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="1136" count="0" type="method"/>
            <line num="1138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1139" count="0" type="method"/>
            <line num="1141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="1146" count="0" type="method"/>
            <line num="1148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1149" count="0" type="method"/>
            <line num="1151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="1156" count="0" type="method"/>
            <line num="1158" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double,double,double) : double" num="1159" count="0" type="method"/>
            <line num="1161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1161" type="cond"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="1166" count="0" type="method"/>
            <line num="1168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="1169" count="0" type="method"/>
            <line num="1171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="1179" count="0" type="method"/>
            <line num="1181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="1187" count="0" type="method"/>
            <line num="1189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1190" count="0" type="method"/>
            <line num="1192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="1201" count="0" type="method"/>
            <line num="1203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1204" count="0" type="method"/>
            <line num="1206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1209" count="0" type="method"/>
            <line num="1211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="1219" count="0" type="method"/>
            <line num="1221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1222" count="0" type="method"/>
            <line num="1224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1227" count="0" type="method"/>
            <line num="1229" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="1237" count="0" type="method"/>
            <line num="1239" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1240" count="0" type="method"/>
            <line num="1242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1245" count="0" type="method"/>
            <line num="1247" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="isNaN() : RandomVariable" num="1252" count="0" type="method"/>
            <line num="1254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1254" type="cond"/>
            <line num="1255" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1255" type="cond"/>
            <line num="1258" count="0" type="stmt"/>
            <line num="1259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1259" type="cond"/>
            <line num="1260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1260" type="cond"/>
            <line num="1262" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/RandomVariableLazyEvaluationFactory.java" name="RandomVariableLazyEvaluationFactory.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="31" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="RandomVariableLazyEvaluationFactory">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double) : RandomVariable" num="22" count="1" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double[]) : RandomVariable" num="27" count="11" type="method"/>
            <line num="29" count="11" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/VarianceGammaProcess.java" name="VarianceGammaProcess.java">
            <metrics coveredelements="44" coveredconditionals="7" complexity="18" loc="178" coveredmethods="10" methods="14" elements="54" classes="1" ncloc="98" statements="32" conditionals="8" coveredstatements="27"/>
            <class name="VarianceGammaProcess">
               <metrics coveredelements="44" coveredconditionals="7" complexity="18" coveredmethods="10" methods="14" elements="54" statements="32" conditionals="8" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="VarianceGammaProcess(double,double,double,TimeDiscretization,int,int,int)" num="46" count="6" type="method"/>
            <line num="49" count="6" type="stmt"/>
            <line num="50" count="6" type="stmt"/>
            <line num="51" count="6" type="stmt"/>
            <line num="52" count="6" type="stmt"/>
            <line num="53" count="6" type="stmt"/>
            <line num="54" count="6" type="stmt"/>
            <line num="55" count="6" type="stmt"/>
            <line num="56" count="6" type="stmt"/>
            <line num="58" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="61" count="600" type="method"/>
            <line num="64" count="600" type="stmt"/>
            <line num="65" count="600" type="stmt"/>
            <line falsecount="594" truecount="6" num="65" type="cond"/>
            <line num="66" count="6" type="stmt"/>
            <line num="74" count="600" type="stmt"/>
            <line complexity="4" visibility="private" signature="doGenerateVarianceGammaIncrements() : void" num="80" count="6" type="method"/>
            <line num="81" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="85" count="6" type="stmt"/>
            <line num="88" count="6" type="stmt"/>
            <line num="91" count="6" type="stmt"/>
            <line num="99" count="6" type="stmt"/>
            <line falsecount="6" truecount="600" num="99" type="cond"/>
            <line num="102" count="600" type="stmt"/>
            <line falsecount="600" truecount="600" num="102" type="cond"/>
            <line num="103" count="600" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSigma() : double" num="116" count="99" type="method"/>
            <line num="117" count="99" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNu() : double" num="123" count="99" type="method"/>
            <line num="124" count="99" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTheta() : double" num="130" count="99" type="method"/>
            <line num="131" count="99" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBrownianMotion() : BrownianMotion" num="137" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGammaProcess() : GammaProcess" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="148" count="5" type="method"/>
            <line num="150" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="153" count="1505" type="method"/>
            <line num="155" count="1505" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="158" count="5" type="method"/>
            <line num="160" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="163" count="5" type="method"/>
            <line num="165" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : IndependentIncrements" num="168" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : IndependentIncrements" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.model">
         <metrics coveredelements="0" complexity="4" loc="216" methods="3" classes="2" statements="7" coveredconditionals="0" coveredmethods="0" elements="12" ncloc="39" files="2" conditionals="2" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/model/AbstractProcessModel.java" name="AbstractProcessModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="42" coveredmethods="0" methods="2" elements="10" classes="1" ncloc="18" statements="6" conditionals="2" coveredstatements="0"/>
            <class name="AbstractProcessModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="10" statements="6" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="getInitialValue(MonteCarloProcess) : RandomVariable[]" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="31" type="cond"/>
            <line num="32" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/model/ProcessModel.java" name="ProcessModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="174" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="21" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ProcessModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.functions">
         <metrics coveredelements="648" complexity="263" loc="3641" methods="108" classes="13" statements="730" coveredconditionals="119" coveredmethods="71" elements="1084" ncloc="1675" files="11" conditionals="246" coveredstatements="458"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/functions/AnalyticFormulas.java" name="AnalyticFormulas.java">
            <metrics coveredelements="197" coveredconditionals="33" complexity="108" loc="1540" coveredmethods="26" methods="43" elements="419" classes="1" ncloc="730" statements="282" conditionals="94" coveredstatements="138"/>
            <class name="AnalyticFormulas">
               <metrics coveredelements="197" coveredconditionals="33" complexity="108" coveredmethods="26" methods="43" elements="419" statements="282" conditionals="94" coveredstatements="138"/>
            </class>
            <line complexity="1" visibility="private" signature="AnalyticFormulas()" num="36" count="0" type="method"/>
            <line complexity="7" visibility="public" signature="blackScholesGeneralizedOptionValue(double,double,double,double,double) : double" num="53" count="40010501" type="method"/>
            <line num="60" count="40010429" type="stmt"/>
            <line falsecount="40010933" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="40013353" type="stmt"/>
            <line falsecount="40012118" truecount="0" num="63" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="40013311" type="stmt"/>
            <line falsecount="37167732" truecount="2848444" num="67" type="cond"/>
            <line num="70" count="2848490" type="stmt"/>
            <line num="75" count="37169480" type="stmt"/>
            <line num="76" count="37166444" type="stmt"/>
            <line num="78" count="37168665" type="stmt"/>
            <line num="80" count="37164604" type="stmt"/>
            <line complexity="2" visibility="public" signature="blackScholesGeneralizedOptionValue(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="97" count="1" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackScholesOptionValue(double,double,double,double,double) : double" num="128" count="901" type="method"/>
            <line num="135" count="901" type="stmt"/>
            <line complexity="2" visibility="public" signature="blackScholesOptionValue(double,double,double,double,double,boolean) : double" num="155" count="477" type="method"/>
            <line num="163" count="477" type="stmt"/>
            <line num="164" count="477" type="stmt"/>
            <line falsecount="239" truecount="238" num="164" type="cond"/>
            <line num="165" count="238" type="stmt"/>
            <line num="168" count="239" type="stmt"/>
            <line num="169" count="239" type="stmt"/>
            <line complexity="2" visibility="public" signature="blackScholesATMOptionValue(double,double,double,double) : double" num="182" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="blackScholesOptionDelta(double,double,double,double,double) : double" num="215" count="73" type="method"/>
            <line num="222" count="73" type="stmt"/>
            <line falsecount="73" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="73" type="stmt"/>
            <line falsecount="73" truecount="0" num="225" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="73" type="stmt"/>
            <line falsecount="73" truecount="0" num="229" type="cond"/>
            <line num="232" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="232" type="cond"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="241" count="73" type="stmt"/>
            <line falsecount="73" truecount="0" num="241" type="cond"/>
            <line num="244" count="0" type="stmt"/>
            <line num="249" count="73" type="stmt"/>
            <line num="251" count="73" type="stmt"/>
            <line num="253" count="73" type="stmt"/>
            <line complexity="2" visibility="public" signature="blackScholesOptionDelta(RandomVariable,RandomVariable,RandomVariable,double,double) : RandomVariable" num="271" count="100" type="method"/>
            <line num="278" count="100" type="stmt"/>
            <line falsecount="100" truecount="0" num="278" type="cond"/>
            <line num="279" count="0" type="stmt"/>
            <line num="284" count="100" type="stmt"/>
            <line num="286" count="100" type="stmt"/>
            <line num="288" count="100" type="stmt"/>
            <line complexity="2" visibility="public" signature="blackScholesOptionDelta(RandomVariable,RandomVariable,RandomVariable,double,RandomVariable) : RandomVariable" num="306" count="0" type="method"/>
            <line num="313" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="313" type="cond"/>
            <line num="314" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesOptionGamma(double,double,double,double,double) : double" num="337" count="0" type="method"/>
            <line num="344" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="344" type="cond"/>
            <line num="347" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesOptionGamma(RandomVariable,RandomVariable,RandomVariable,double,double) : RandomVariable" num="370" count="0" type="method"/>
            <line num="377" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="377" type="cond"/>
            <line num="380" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesOptionVega(double,double,double,double,double) : double" num="407" count="74" type="method"/>
            <line num="414" count="74" type="stmt"/>
            <line falsecount="74" truecount="0" num="414" type="cond"/>
            <line num="417" count="0" type="stmt"/>
            <line num="422" count="74" type="stmt"/>
            <line num="424" count="74" type="stmt"/>
            <line num="426" count="74" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesOptionTheta(double,double,double,double,double) : double" num="440" count="0" type="method"/>
            <line num="447" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="447" type="cond"/>
            <line num="450" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line num="458" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesOptionRho(double,double,double,double,double) : double" num="474" count="1" type="method"/>
            <line num="481" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="481" type="cond"/>
            <line num="484" count="0" type="stmt"/>
            <line num="489" count="1" type="stmt"/>
            <line num="491" count="1" type="stmt"/>
            <line num="493" count="1" type="stmt"/>
            <line complexity="6" visibility="public" signature="blackScholesOptionImpliedVolatility(double,double,double,double,double) : double" num="509" count="11290" type="method"/>
            <line num="518" count="11290" type="stmt"/>
            <line num="519" count="11290" type="stmt"/>
            <line num="521" count="11290" type="stmt"/>
            <line falsecount="11287" truecount="3" num="521" type="cond"/>
            <line num="524" count="3" type="stmt"/>
            <line num="529" count="11287" type="stmt"/>
            <line num="530" count="11286" type="stmt"/>
            <line num="532" count="11286" type="stmt"/>
            <line num="533" count="11286" type="stmt"/>
            <line num="536" count="11286" type="stmt"/>
            <line falsecount="8977" truecount="2309" num="536" type="cond"/>
            <line num="537" count="2309" type="stmt"/>
            <line num="541" count="8977" type="stmt"/>
            <line num="542" count="8976" type="stmt"/>
            <line falsecount="8977" truecount="2444709" num="542" type="cond"/>
            <line num="543" count="2445245" type="stmt"/>
            <line num="546" count="2442955" type="stmt"/>
            <line num="547" count="2443496" type="stmt"/>
            <line num="548" count="2442981" type="stmt"/>
            <line num="549" count="2444476" type="stmt"/>
            <line num="551" count="2444643" type="stmt"/>
            <line num="553" count="2444931" type="stmt"/>
            <line num="556" count="8976" type="stmt"/>
            <line complexity="2" visibility="public" signature="blackScholesDigitalOptionValue(double,double,double,double,double) : double" num="570" count="428" type="method"/>
            <line num="577" count="428" type="stmt"/>
            <line falsecount="428" truecount="0" num="577" type="cond"/>
            <line num="580" count="0" type="stmt"/>
            <line num="585" count="428" type="stmt"/>
            <line num="586" count="428" type="stmt"/>
            <line num="588" count="428" type="stmt"/>
            <line num="590" count="428" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesDigitalOptionDelta(double,double,double,double,double) : double" num="604" count="4" type="method"/>
            <line num="611" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="611" type="cond"/>
            <line num="614" count="0" type="stmt"/>
            <line num="619" count="4" type="stmt"/>
            <line num="620" count="4" type="stmt"/>
            <line num="622" count="4" type="stmt"/>
            <line num="624" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesDigitalOptionVega(double,double,double,double,double) : double" num="638" count="1" type="method"/>
            <line num="645" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="645" type="cond"/>
            <line num="648" count="0" type="stmt"/>
            <line num="653" count="1" type="stmt"/>
            <line num="654" count="1" type="stmt"/>
            <line num="656" count="1" type="stmt"/>
            <line num="658" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesDigitalOptionRho(double,double,double,double,double) : double" num="672" count="1" type="method"/>
            <line num="679" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="679" type="cond"/>
            <line num="682" count="0" type="stmt"/>
            <line num="684" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="684" type="cond"/>
            <line num="685" count="0" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line num="692" count="1" type="stmt"/>
            <line num="694" count="1" type="stmt"/>
            <line num="697" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackModelCapletValue(double,double,double,double,double,double) : double" num="712" count="196" type="method"/>
            <line num="721" count="196" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackModelDgitialCapletValue(double,double,double,double,double,double) : double" num="735" count="424" type="method"/>
            <line num="744" count="424" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackModelSwaptionValue(double,double,double,double,double) : double" num="757" count="1564" type="method"/>
            <line num="765" count="1564" type="stmt"/>
            <line complexity="1" visibility="public" signature="margrabeExchangeOptionValue(double,double,double,double,double,double) : double" num="783" count="0" type="method"/>
            <line num="791" count="0" type="stmt"/>
            <line num="792" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierOptionValue(double,double,double,double,double) : double" num="818" count="75680871" type="method"/>
            <line num="825" count="75682281" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierOptionValue(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="846" count="616" type="method"/>
            <line num="853" count="616" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierOptionImpliedVolatility(double,double,double,double,double) : double" num="874" count="952251" type="method"/>
            <line num="881" count="952256" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierOptionDelta(double,double,double,double,double) : double" num="902" count="18054" type="method"/>
            <line num="909" count="18054" type="stmt"/>
            <line complexity="1" visibility="public" signature="huntKennedyCMSOptionValue(double,double,double,double,double,double,double) : double" num="929" count="1" type="method"/>
            <line num="938" count="1" type="stmt"/>
            <line num="939" count="1" type="stmt"/>
            <line num="940" count="1" type="stmt"/>
            <line num="942" count="1" type="stmt"/>
            <line num="943" count="1" type="stmt"/>
            <line num="945" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="huntKennedyCMSFloorValue(double,double,double,double,double,double,double) : double" num="961" count="0" type="method"/>
            <line num="970" count="0" type="stmt"/>
            <line num="973" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="huntKennedyCMSAdjustedRate(double,double,double,double,double,double) : double" num="988" count="1" type="method"/>
            <line num="996" count="1" type="stmt"/>
            <line num="997" count="1" type="stmt"/>
            <line num="998" count="1" type="stmt"/>
            <line num="1000" count="1" type="stmt"/>
            <line num="1001" count="1" type="stmt"/>
            <line num="1003" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sabrHaganLognormalBlackVolatilityApproximation(double,double,double,double,double,double,double) : double" num="1019" count="0" type="method"/>
            <line num="1021" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="sabrHaganLognormalBlackVolatilityApproximation(double,double,double,double,double,double,double,double) : double" num="1038" count="0" type="method"/>
            <line num="1041" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1041" type="cond"/>
            <line num="1042" count="0" type="stmt"/>
            <line num="1045" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1045" type="cond"/>
            <line num="1046" count="0" type="stmt"/>
            <line num="1049" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1049" type="cond"/>
            <line num="1050" count="0" type="stmt"/>
            <line num="1053" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1053" type="cond"/>
            <line num="1054" count="0" type="stmt"/>
            <line num="1058" count="0" type="stmt"/>
            <line num="1059" count="0" type="stmt"/>
            <line num="1061" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1061" type="cond"/>
            <line num="1066" count="0" type="stmt"/>
            <line num="1068" count="0" type="stmt"/>
            <line num="1071" count="0" type="stmt"/>
            <line num="1077" count="0" type="stmt"/>
            <line num="1079" count="0" type="stmt"/>
            <line num="1081" count="0" type="stmt"/>
            <line num="1083" count="0" type="stmt"/>
            <line num="1087" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1087" type="cond"/>
            <line num="1089" count="0" type="stmt"/>
            <line num="1094" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="sabrBerestyckiNormalVolatilityApproximation(double,double,double,double,double,double,double,double) : double" num="1113" count="12798303" type="method"/>
            <line num="1116" count="12796254" type="stmt"/>
            <line num="1117" count="12796637" type="stmt"/>
            <line num="1119" count="12801084" type="stmt"/>
            <line num="1121" count="12801156" type="stmt"/>
            <line num="1122" count="12802325" type="stmt"/>
            <line falsecount="0" truecount="12800170" num="1122" type="cond"/>
            <line num="1123" count="12797241" type="stmt"/>
            <line num="1125" count="0" type="stmt"/>
            <line num="1128" count="12792840" type="stmt"/>
            <line num="1130" count="12799627" type="stmt"/>
            <line num="1131" count="12796915" type="stmt"/>
            <line falsecount="12720895" truecount="74017" num="1131" type="cond"/>
            <line num="1133" count="74016" type="stmt"/>
            <line num="1135" count="12726709" type="stmt"/>
            <line falsecount="12660987" truecount="67607" num="1135" type="cond"/>
            <line num="1137" count="67607" type="stmt"/>
            <line falsecount="0" truecount="67607" num="1137" type="cond"/>
            <line num="1138" count="67607" type="stmt"/>
            <line num="1140" count="0" type="stmt"/>
            <line num="1144" count="12660801" type="stmt"/>
            <line num="1146" count="12804708" type="stmt"/>
            <line num="1148" count="12811332" type="stmt"/>
            <line complexity="2" visibility="public" signature="sabrNormalVolatilityApproximation(double,double,double,double,double,double,double,double) : double" num="1165" count="0" type="method"/>
            <line num="1168" count="0" type="stmt"/>
            <line num="1169" count="0" type="stmt"/>
            <line num="1171" count="0" type="stmt"/>
            <line num="1173" count="0" type="stmt"/>
            <line num="1174" count="0" type="stmt"/>
            <line num="1176" count="0" type="stmt"/>
            <line num="1177" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1177" type="cond"/>
            <line num="1179" count="0" type="stmt"/>
            <line num="1182" count="0" type="stmt"/>
            <line num="1183" count="0" type="stmt"/>
            <line num="1186" count="0" type="stmt"/>
            <line num="1188" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="sabrAlphaApproximation(double,double,double,double,double,double,double) : double" num="1204" count="0" type="method"/>
            <line num="1207" count="0" type="stmt"/>
            <line num="1210" count="0" type="stmt"/>
            <line num="1212" count="0" type="stmt"/>
            <line num="1213" count="0" type="stmt"/>
            <line num="1214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1214" type="cond"/>
            <line num="1215" count="0" type="stmt"/>
            <line num="1217" count="0" type="stmt"/>
            <line num="1218" count="0" type="stmt"/>
            <line num="1220" count="0" type="stmt"/>
            <line num="1221" count="0" type="stmt"/>
            <line num="1223" count="0" type="stmt"/>
            <line num="1224" count="0" type="stmt"/>
            <line num="1226" count="0" type="stmt"/>
            <line num="1228" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sabrNormalVolatilitySkewApproximation(double,double,double,double,double,double,double) : double" num="1245" count="3" type="method"/>
            <line num="1247" count="3" type="stmt"/>
            <line num="1250" count="3" type="stmt"/>
            <line num="1252" count="3" type="stmt"/>
            <line num="1253" count="3" type="stmt"/>
            <line num="1255" count="3" type="stmt"/>
            <line num="1268" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="sabrNormalVolatilityCurvatureApproximation(double,double,double,double,double,double,double) : double" num="1285" count="3" type="method"/>
            <line num="1287" count="3" type="stmt"/>
            <line num="1290" count="3" type="stmt"/>
            <line num="1308" count="3" type="stmt"/>
            <line num="1309" count="3" type="stmt"/>
            <line num="1310" count="3" type="stmt"/>
            <line num="1311" count="3" type="stmt"/>
            <line num="1313" count="3" type="stmt"/>
            <line num="1314" count="3" type="stmt"/>
            <line num="1315" count="3" type="stmt"/>
            <line num="1317" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="volatilityConversionLognormalATMtoNormalATM(double,double,double,double) : double" num="1330" count="0" type="method"/>
            <line num="1331" count="0" type="stmt"/>
            <line num="1332" count="0" type="stmt"/>
            <line num="1333" count="0" type="stmt"/>
            <line num="1335" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="price(java.util.Date,java.util.Date,double,double,double,int) : double" num="1350" count="0" type="method"/>
            <line num="1358" count="0" type="stmt"/>
            <line num="1360" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1360" type="cond"/>
            <line num="1361" count="0" type="stmt"/>
            <line num="1364" count="0" type="stmt"/>
            <line num="1365" count="0" type="stmt"/>
            <line num="1366" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1366" type="cond"/>
            <line num="1367" count="0" type="stmt"/>
            <line num="1370" count="0" type="stmt"/>
            <line num="1371" count="0" type="stmt"/>
            <line num="1374" count="0" type="stmt"/>
            <line num="1375" count="0" type="stmt"/>
            <line num="1378" count="0" type="stmt"/>
            <line num="1379" count="0" type="stmt"/>
            <line num="1380" count="0" type="stmt"/>
            <line num="1382" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="price(double,double,double,double,int) : double" num="1398" count="0" type="method"/>
            <line num="1405" count="0" type="stmt"/>
            <line num="1407" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1407" type="cond"/>
            <line num="1408" count="0" type="stmt"/>
            <line num="1411" count="0" type="stmt"/>
            <line num="1412" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1412" type="cond"/>
            <line num="1413" count="0" type="stmt"/>
            <line num="1416" count="0" type="stmt"/>
            <line num="1417" count="0" type="stmt"/>
            <line num="1421" count="0" type="stmt"/>
            <line num="1422" count="0" type="stmt"/>
            <line num="1423" count="0" type="stmt"/>
            <line num="1425" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="bachelierGeneralizedOptionVega(double,double,double,double,double) : double" num="1442" count="0" type="method"/>
            <line num="1449" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1449" type="cond"/>
            <line num="1450" count="0" type="stmt"/>
            <line num="1452" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1452" type="cond"/>
            <line num="1454" count="0" type="stmt"/>
            <line num="1459" count="0" type="stmt"/>
            <line num="1461" count="0" type="stmt"/>
            <line num="1463" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesGeneralizedOptionVega(double,double,double,double,double) : double" num="1481" count="0" type="method"/>
            <line num="1488" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1488" type="cond"/>
            <line num="1491" count="0" type="stmt"/>
            <line num="1496" count="0" type="stmt"/>
            <line num="1498" count="0" type="stmt"/>
            <line num="1500" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="constantElasticityOfVarianceOptionValue(double,double,double,double,double,double,boolean) : double" num="1520" count="636" type="method"/>
            <line num="1528" count="636" type="stmt"/>
            <line num="1529" count="636" type="stmt"/>
            <line num="1530" count="636" type="stmt"/>
            <line num="1531" count="636" type="stmt"/>
            <line num="1532" count="636" type="stmt"/>
            <line num="1533" count="636" type="stmt"/>
            <line num="1534" count="636" type="stmt"/>
            <line falsecount="318" truecount="318" num="1534" type="cond"/>
            <line num="1535" count="318" type="stmt"/>
            <line num="1537" count="318" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/functions/BachelierModel.java" name="BachelierModel.java">
            <metrics coveredelements="111" coveredconditionals="19" complexity="38" loc="777" coveredmethods="21" methods="22" elements="128" classes="1" ncloc="283" statements="78" conditionals="28" coveredstatements="71"/>
            <class name="BachelierModel">
               <metrics coveredelements="111" coveredconditionals="19" complexity="38" coveredmethods="21" methods="22" elements="128" statements="78" conditionals="28" coveredstatements="71"/>
            </class>
            <line complexity="1" visibility="private" signature="BachelierModel()" num="44" count="0" type="method"/>
            <line complexity="3" visibility="public" signature="bachelierOptionValue(double,double,double,double,double) : double" num="67" count="166562252" type="method"/>
            <line num="74" count="166592199" type="stmt"/>
            <line falsecount="166574699" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="166594326" type="stmt"/>
            <line falsecount="138934624" truecount="27670381" num="77" type="cond"/>
            <line num="78" count="27670866" type="stmt"/>
            <line num="83" count="138970721" type="stmt"/>
            <line num="85" count="138992248" type="stmt"/>
            <line num="88" count="138984929" type="stmt"/>
            <line complexity="2" visibility="public" signature="bachelierOptionValue(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="110" count="634" type="method"/>
            <line num="117" count="634" type="stmt"/>
            <line falsecount="634" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="122" count="634" type="stmt"/>
            <line num="123" count="634" type="stmt"/>
            <line num="125" count="634" type="stmt"/>
            <line num="128" count="634" type="stmt"/>
            <line complexity="4" visibility="public" signature="bachelierOptionImpliedVolatility(double,double,double,double,double) : double" num="150" count="952798" type="method"/>
            <line num="159" count="952800" type="stmt"/>
            <line num="160" count="952798" type="stmt"/>
            <line num="163" count="952800" type="stmt"/>
            <line num="164" count="952800" type="stmt"/>
            <line num="167" count="952802" type="stmt"/>
            <line num="168" count="952791" type="stmt"/>
            <line falsecount="952797" truecount="91002423" num="168" type="cond"/>
            <line num="169" count="91073979" type="stmt"/>
            <line num="171" count="91013928" type="stmt"/>
            <line num="173" count="91023086" type="stmt"/>
            <line num="175" count="91076056" type="stmt"/>
            <line num="178" count="952807" type="stmt"/>
            <line complexity="3" visibility="public" signature="bachelierOptionDelta(double,double,double,double,double) : double" num="199" count="18180" type="method"/>
            <line num="206" count="18180" type="stmt"/>
            <line falsecount="18180" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="18180" type="stmt"/>
            <line falsecount="17454" truecount="726" num="209" type="cond"/>
            <line num="210" count="726" type="stmt"/>
            <line num="215" count="17454" type="stmt"/>
            <line num="217" count="17454" type="stmt"/>
            <line num="219" count="17454" type="stmt"/>
            <line complexity="2" visibility="public" signature="bachelierOptionDelta(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="241" count="18" type="method"/>
            <line num="248" count="18" type="stmt"/>
            <line falsecount="18" truecount="0" num="248" type="cond"/>
            <line num="249" count="0" type="stmt"/>
            <line num="253" count="18" type="stmt"/>
            <line num="254" count="18" type="stmt"/>
            <line num="256" count="18" type="stmt"/>
            <line num="258" count="18" type="stmt"/>
            <line complexity="3" visibility="public" signature="bachelierOptionVega(double,double,double,double,double) : double" num="280" count="126" type="method"/>
            <line num="287" count="126" type="stmt"/>
            <line falsecount="126" truecount="0" num="287" type="cond"/>
            <line num="288" count="0" type="stmt"/>
            <line num="290" count="126" type="stmt"/>
            <line falsecount="126" truecount="0" num="290" type="cond"/>
            <line num="292" count="0" type="stmt"/>
            <line num="297" count="126" type="stmt"/>
            <line num="299" count="126" type="stmt"/>
            <line num="301" count="126" type="stmt"/>
            <line complexity="2" visibility="public" signature="bachelierOptionVega(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="323" count="18" type="method"/>
            <line num="330" count="18" type="stmt"/>
            <line falsecount="18" truecount="0" num="330" type="cond"/>
            <line num="331" count="0" type="stmt"/>
            <line num="335" count="18" type="stmt"/>
            <line num="336" count="18" type="stmt"/>
            <line num="338" count="18" type="stmt"/>
            <line num="340" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierHomogeneousOptionValue(double,double,double,double,double) : double" num="363" count="1050" type="method"/>
            <line num="370" count="1050" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierHomogeneousOptionValue(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="392" count="18" type="method"/>
            <line num="399" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierHomogeneousOptionImpliedVolatility(double,double,double,double,double) : double" num="421" count="550" type="method"/>
            <line num="428" count="550" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierHomogeneousOptionDelta(double,double,double,double,double) : double" num="451" count="126" type="method"/>
            <line num="458" count="126" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierHomogeneousOptionDelta(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="481" count="18" type="method"/>
            <line num="488" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierHomogeneousOptionVega(double,double,double,double,double) : double" num="510" count="126" type="method"/>
            <line num="517" count="126" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierHomogeneousOptionVega(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="539" count="18" type="method"/>
            <line num="546" count="18" type="stmt"/>
            <line complexity="2" visibility="public" signature="bachelierInhomogeneousOptionValue(double,double,double,double,double) : double" num="567" count="402" type="method"/>
            <line num="574" count="402" type="stmt"/>
            <line falsecount="25" truecount="377" num="574" type="cond"/>
            <line num="575" count="402" type="stmt"/>
            <line num="577" count="402" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierInhomogeneousOptionValue(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="598" count="9" type="method"/>
            <line num="606" count="9" type="stmt"/>
            <line num="608" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="bachelierInhomogeneousOptionImpliedVolatility(double,double,double,double,double) : double" num="630" count="275" type="method"/>
            <line num="637" count="275" type="stmt"/>
            <line num="639" count="275" type="stmt"/>
            <line falsecount="25" truecount="250" num="639" type="cond"/>
            <line num="640" count="275" type="stmt"/>
            <line num="642" count="275" type="stmt"/>
            <line complexity="2" visibility="public" signature="bachelierInhomogeneousOptionDelta(double,double,double,double,double) : double" num="663" count="36" type="method"/>
            <line num="670" count="36" type="stmt"/>
            <line falsecount="0" truecount="36" num="670" type="cond"/>
            <line num="671" count="36" type="stmt"/>
            <line num="673" count="36" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierInhomogeneousOptionDelta(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="699" count="9" type="method"/>
            <line num="707" count="9" type="stmt"/>
            <line num="709" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="bachelierInhomogeneousOptionVega(double,double,double,double,double) : double" num="730" count="36" type="method"/>
            <line num="737" count="36" type="stmt"/>
            <line falsecount="0" truecount="36" num="737" type="cond"/>
            <line num="738" count="36" type="stmt"/>
            <line num="740" count="36" type="stmt"/>
            <line num="742" count="36" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierInhomogeneousOptionVega(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="763" count="9" type="method"/>
            <line num="771" count="9" type="stmt"/>
            <line num="773" count="9" type="stmt"/>
            <line num="775" count="9" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/functions/BarrierOptions.java" name="BarrierOptions.java">
            <metrics coveredelements="97" coveredconditionals="26" complexity="23" loc="237" coveredmethods="1" methods="2" elements="102" classes="2" ncloc="146" statements="74" conditionals="26" coveredstatements="70"/>
            <class name="BarrierOptions">
               <metrics coveredelements="97" coveredconditionals="26" complexity="23" coveredmethods="1" methods="2" elements="102" statements="74" conditionals="26" coveredstatements="70"/>
            </class>
            <class name="BarrierOptions.BarrierType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="BarrierOptions()" num="27" count="0" type="method"/>
            <line complexity="22" visibility="public" signature="blackScholesBarrierOptionValue(double,double,double,double,double,double,boolean,double,double,BarrierType) : double" num="45" count="36" type="method"/>
            <line num="56" count="36" type="stmt"/>
            <line falsecount="18" truecount="18" num="56" type="cond"/>
            <line num="57" count="36" type="stmt"/>
            <line num="59" count="36" type="stmt"/>
            <line num="60" count="6" type="stmt"/>
            <line num="61" count="6" type="stmt"/>
            <line num="62" count="6" type="stmt"/>
            <line num="63" count="12" type="stmt"/>
            <line num="64" count="12" type="stmt"/>
            <line num="65" count="12" type="stmt"/>
            <line num="66" count="6" type="stmt"/>
            <line num="67" count="6" type="stmt"/>
            <line num="68" count="6" type="stmt"/>
            <line num="69" count="12" type="stmt"/>
            <line num="70" count="12" type="stmt"/>
            <line num="71" count="12" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="76" count="36" type="stmt"/>
            <line num="77" count="36" type="stmt"/>
            <line num="78" count="36" type="stmt"/>
            <line num="79" count="36" type="stmt"/>
            <line num="80" count="36" type="stmt"/>
            <line num="82" count="36" type="stmt"/>
            <line num="84" count="36" type="stmt"/>
            <line num="86" count="36" type="stmt"/>
            <line num="89" count="36" type="stmt"/>
            <line num="91" count="36" type="stmt"/>
            <line num="93" count="36" type="stmt"/>
            <line num="97" count="36" type="stmt"/>
            <line num="101" count="36" type="stmt"/>
            <line num="107" count="36" type="stmt"/>
            <line num="113" count="36" type="stmt"/>
            <line num="117" count="36" type="stmt"/>
            <line num="122" count="36" type="stmt"/>
            <line num="124" count="36" type="stmt"/>
            <line num="132" count="12" type="stmt"/>
            <line num="133" count="12" type="stmt"/>
            <line falsecount="6" truecount="6" num="133" type="cond"/>
            <line num="136" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="136" type="cond"/>
            <line num="138" count="4" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line num="146" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="146" type="cond"/>
            <line num="148" count="4" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="154" count="12" type="stmt"/>
            <line num="155" count="6" type="stmt"/>
            <line num="156" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="156" type="cond"/>
            <line num="159" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="159" type="cond"/>
            <line num="161" count="1" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line num="169" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="169" type="cond"/>
            <line num="171" count="1" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line num="177" count="6" type="stmt"/>
            <line num="185" count="12" type="stmt"/>
            <line num="186" count="12" type="stmt"/>
            <line falsecount="6" truecount="6" num="186" type="cond"/>
            <line num="189" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="189" type="cond"/>
            <line num="191" count="4" type="stmt"/>
            <line num="194" count="2" type="stmt"/>
            <line num="199" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="199" type="cond"/>
            <line num="201" count="4" type="stmt"/>
            <line num="204" count="2" type="stmt"/>
            <line num="207" count="12" type="stmt"/>
            <line num="208" count="6" type="stmt"/>
            <line num="209" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="209" type="cond"/>
            <line num="212" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="212" type="cond"/>
            <line num="214" count="1" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line num="222" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="222" type="cond"/>
            <line num="224" count="1" type="stmt"/>
            <line num="227" count="2" type="stmt"/>
            <line num="230" count="6" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="235" count="36" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/functions/DoubleTernaryOperator.java" name="DoubleTernaryOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="26" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DoubleTernaryOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/functions/GammaDistribution.java" name="GammaDistribution.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="2" loc="31" coveredmethods="2" methods="2" elements="5" classes="1" ncloc="11" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="GammaDistribution">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="GammaDistribution(double,double)" num="17" count="800" type="method"/>
            <line num="18" count="800" type="stmt"/>
            <line num="19" count="800" type="stmt"/>
            <line complexity="1" visibility="public" signature="inverseCumulativeDistribution(double) : double" num="28" count="26000000" type="method"/>
            <line num="29" count="26000000" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/functions/JarqueBeraTest.java" name="JarqueBeraTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="2" loc="49" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="14" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="JarqueBeraTest">
               <metrics coveredelements="8" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="JarqueBeraTest()" num="28" count="9" type="method"/>
            <line complexity="1" visibility="public" signature="test(RandomVariable) : double" num="38" count="1921" type="method"/>
            <line num="39" count="1921" type="stmt"/>
            <line num="40" count="1921" type="stmt"/>
            <line num="42" count="1921" type="stmt"/>
            <line num="43" count="1921" type="stmt"/>
            <line num="45" count="1921" type="stmt"/>
            <line num="47" count="1921" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/functions/LinearAlgebra.java" name="LinearAlgebra.java">
            <metrics coveredelements="85" coveredconditionals="22" complexity="60" loc="565" coveredmethods="11" methods="21" elements="231" classes="2" ncloc="256" statements="140" conditionals="70" coveredstatements="52"/>
            <class name="LinearAlgebra">
               <metrics coveredelements="80" coveredconditionals="22" complexity="58" coveredmethods="9" methods="19" elements="226" statements="137" conditionals="70" coveredstatements="49"/>
            </class>
            <class name="LinearAlgebra.EigenValueIndex">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="6" visibility="package" signature="&lt;clinit&gt;, line 36()" num="36" count="78" type="method"/>
            <line num="38" count="78" type="stmt"/>
            <line num="43" count="78" type="stmt"/>
            <line falsecount="78" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="59" count="78" type="stmt"/>
            <line falsecount="0" truecount="78" num="59" type="cond"/>
            <line num="60" count="78" type="stmt"/>
            <line num="62" count="78" type="stmt"/>
            <line complexity="4" visibility="public" signature="solveLinearEquationTikonov(double[][],double[],double) : double[]" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="12" visibility="public" signature="solveLinearEquationTikonov(double[][],double[],double,double,double) : double[]" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="solveLinearEquation(double[][],double[]) : double[]" num="198" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="solveLinearEquationSVD(double[][],double[]) : double[]" num="240" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="invert(double[][]) : double[][]" num="267" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="solveLinearEquationSymmetric(double[][],double[]) : double[]" num="293" count="6659689" type="method"/>
            <line num="294" count="6659940" type="stmt"/>
            <line falsecount="0" truecount="6660059" num="294" type="cond"/>
            <line num="295" count="6660149" type="stmt"/>
            <line num="296" count="6659099" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="solveLinearEquationLeastSquare(double[][],double[]) : double[]" num="321" count="0" type="method"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="solveLinearEquationLeastSquare(double[][],double[][]) : double[][]" num="339" count="2" type="method"/>
            <line num="341" count="2" type="stmt"/>
            <line num="342" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorMatrix(double[][],int) : double[][]" num="353" count="6074" type="method"/>
            <line num="354" count="6074" type="stmt"/>
            <line complexity="1" visibility="public" signature="factorReduction(double[][],int) : double[][]" num="364" count="3037" type="method"/>
            <line num="365" count="3038" type="stmt"/>
            <line complexity="7" visibility="private" signature="getFactorMatrixUsingCommonsMath(double[][],int) : double[][]" num="376" count="6075" type="method"/>
            <line num="381" count="6078" type="stmt"/>
            <line num="382" count="6075" type="stmt"/>
            <line num="384" count="6078" type="stmt"/>
            <line falsecount="6076" truecount="0" num="384" type="cond"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="390" count="6073" type="stmt"/>
            <line num="391" count="6079" type="stmt"/>
            <line num="392" count="6078" type="stmt"/>
            <line complexity="1" visibility="package" signature="EigenValueIndex(int,double)" num="399" count="239409" type="method"/>
            <line num="400" count="239446" type="stmt"/>
            <line num="400" count="239493" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(EigenValueIndex) : int" num="403" count="232523" type="method"/>
            <line num="404" count="232542" type="stmt"/>
            <line num="406" count="6077" type="stmt"/>
            <line num="407" count="6077" type="stmt"/>
            <line falsecount="6079" truecount="239277" num="407" type="cond"/>
            <line num="408" count="239446" type="stmt"/>
            <line num="410" count="6078" type="stmt"/>
            <line num="413" count="6067" type="stmt"/>
            <line num="414" count="6076" type="stmt"/>
            <line falsecount="6077" truecount="32414" num="414" type="cond"/>
            <line num="415" count="32416" type="stmt"/>
            <line num="416" count="32410" type="stmt"/>
            <line num="417" count="32421" type="stmt"/>
            <line falsecount="20461" truecount="11962" num="417" type="cond"/>
            <line num="418" count="32419" type="stmt"/>
            <line num="419" count="32425" type="stmt"/>
            <line falsecount="32414" truecount="1289007" num="419" type="cond"/>
            <line num="420" count="1289591" type="stmt"/>
            <line num="422" count="32420" type="stmt"/>
            <line num="423" count="32426" type="stmt"/>
            <line falsecount="32408" truecount="1287628" num="423" type="cond"/>
            <line num="424" count="1287971" type="stmt"/>
            <line num="428" count="6077" type="stmt"/>
            <line complexity="6" visibility="public" signature="factorReductionUsingCommonsMath(double[][],int) : double[][]" num="438" count="3036" type="method"/>
            <line num="441" count="3037" type="stmt"/>
            <line num="444" count="3037" type="stmt"/>
            <line falsecount="3038" truecount="118952" num="444" type="cond"/>
            <line num="445" count="119042" type="stmt"/>
            <line num="446" count="119090" type="stmt"/>
            <line falsecount="119077" truecount="640690" num="446" type="cond"/>
            <line num="447" count="641579" type="stmt"/>
            <line num="449" count="119077" type="stmt"/>
            <line falsecount="0" truecount="119112" num="449" type="cond"/>
            <line num="450" count="119143" type="stmt"/>
            <line falsecount="118949" truecount="640669" num="450" type="cond"/>
            <line num="451" count="641368" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="456" type="cond"/>
            <line num="457" count="0" type="stmt"/>
            <line num="463" count="3036" type="stmt"/>
            <line num="465" count="3040" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp(double[][]) : double[][]" num="477" count="0" type="method"/>
            <line num="478" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp(RealMatrix) : RealMatrix" num="490" count="0" type="method"/>
            <line num="491" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="transpose(double[][]) : double[][]" num="500" count="0" type="method"/>
            <line num="503" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="510" type="cond"/>
            <line num="511" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="511" type="cond"/>
            <line num="512" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="pseudoInverse(double[][]) : double[][]" num="524" count="1" type="method"/>
            <line num="525" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="525" type="cond"/>
            <line num="527" count="1" type="stmt"/>
            <line num="528" count="1" type="stmt"/>
            <line num="530" count="1" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="diag(double[]) : double[][]" num="543" count="0" type="method"/>
            <line num="546" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="548" type="cond"/>
            <line num="549" count="0" type="stmt"/>
            <line num="552" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="multMatrices(double[][],double[][]) : double[][]" num="562" count="1" type="method"/>
            <line num="563" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/functions/NonCentralChiSquaredDistribution.java" name="NonCentralChiSquaredDistribution.java">
            <metrics coveredelements="49" coveredconditionals="8" complexity="10" loc="138" coveredmethods="2" methods="4" elements="59" classes="1" ncloc="69" statements="43" conditionals="12" coveredstatements="39"/>
            <class name="NonCentralChiSquaredDistribution">
               <metrics coveredelements="49" coveredconditionals="8" complexity="10" coveredmethods="2" methods="4" elements="59" statements="43" conditionals="12" coveredstatements="39"/>
            </class>
            <line complexity="2" visibility="public" signature="NonCentralChiSquaredDistribution(double,double)" num="40" count="1272" type="method"/>
            <line num="41" count="1272" type="stmt"/>
            <line num="42" count="1272" type="stmt"/>
            <line num="44" count="1272" type="stmt"/>
            <line num="45" count="1272" type="stmt"/>
            <line num="46" count="1272" type="stmt"/>
            <line num="47" count="1272" type="stmt"/>
            <line num="49" count="1272" type="stmt"/>
            <line falsecount="1272" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="1272" type="stmt"/>
            <line complexity="6" visibility="public" signature="cumulativeDistribution(double) : double" num="62" count="1272" type="method"/>
            <line num="63" count="1272" type="stmt"/>
            <line falsecount="1272" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="1272" type="stmt"/>
            <line num="68" count="1272" type="stmt"/>
            <line num="70" count="1272" type="stmt"/>
            <line num="72" count="1272" type="stmt"/>
            <line num="73" count="1272" type="stmt"/>
            <line num="78" count="1272" type="stmt"/>
            <line num="79" count="1272" type="stmt"/>
            <line num="80" count="1272" type="stmt"/>
            <line num="81" count="1272" type="stmt"/>
            <line falsecount="0" truecount="297104" num="81" type="cond"/>
            <line num="83" count="297104" type="stmt"/>
            <line num="84" count="297104" type="stmt"/>
            <line num="87" count="297104" type="stmt"/>
            <line num="89" count="297104" type="stmt"/>
            <line num="90" count="297104" type="stmt"/>
            <line num="92" count="297104" type="stmt"/>
            <line falsecount="295832" truecount="1272" num="92" type="cond"/>
            <line num="93" count="1272" type="stmt"/>
            <line num="95" count="295832" type="stmt"/>
            <line num="98" count="1272" type="stmt"/>
            <line num="99" count="1272" type="stmt"/>
            <line num="100" count="1272" type="stmt"/>
            <line num="106" count="1272" type="stmt"/>
            <line falsecount="0" truecount="190164" num="106" type="cond"/>
            <line num="107" count="190164" type="stmt"/>
            <line num="108" count="190164" type="stmt"/>
            <line num="111" count="190164" type="stmt"/>
            <line num="113" count="190164" type="stmt"/>
            <line num="114" count="190164" type="stmt"/>
            <line num="116" count="190164" type="stmt"/>
            <line falsecount="188892" truecount="1272" num="116" type="cond"/>
            <line num="117" count="1272" type="stmt"/>
            <line num="119" count="188892" type="stmt"/>
            <line num="122" count="1272" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDegreesOfFreedom() : double" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNonCentrality() : double" num="135" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/functions/NormalDistribution.java" name="NormalDistribution.java">
            <metrics coveredelements="82" coveredconditionals="9" complexity="10" loc="163" coveredmethods="4" methods="5" elements="85" classes="1" ncloc="98" statements="70" conditionals="10" coveredstatements="69"/>
            <class name="NormalDistribution">
               <metrics coveredelements="82" coveredconditionals="9" complexity="10" coveredmethods="4" methods="5" elements="85" statements="70" conditionals="10" coveredstatements="69"/>
            </class>
            <line complexity="1" visibility="private" signature="NormalDistribution()" num="17" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="density(double) : double" num="26" count="138970027" type="method"/>
            <line num="27" count="139107597" type="stmt"/>
            <line complexity="1" visibility="public" signature="cumulativeDistribution(double) : double" num="37" count="223029649" type="method"/>
            <line num="38" count="223112126" type="stmt"/>
            <line complexity="1" visibility="public" signature="inverseCumulativeDistribution(double) : double" num="47" count="2147483647" type="method"/>
            <line num="48" count="2147483647" type="stmt"/>
            <line complexity="6" visibility="public" signature="inverseCumulativeNormalDistributionWichura(double) : double" num="67" count="2147483647" type="method"/>
            <line num="68" count="2147483647" type="stmt"/>
            <line num="69" count="2147483647" type="stmt"/>
            <line num="70" count="2147483647" type="stmt"/>
            <line num="73" count="2147483647" type="stmt"/>
            <line num="74" count="2147483647" type="stmt"/>
            <line num="75" count="2147483647" type="stmt"/>
            <line num="76" count="2147483647" type="stmt"/>
            <line num="77" count="2147483647" type="stmt"/>
            <line num="78" count="2147483647" type="stmt"/>
            <line num="79" count="2147483647" type="stmt"/>
            <line num="80" count="2147483647" type="stmt"/>
            <line num="81" count="2147483647" type="stmt"/>
            <line num="82" count="2147483647" type="stmt"/>
            <line num="83" count="2147483647" type="stmt"/>
            <line num="84" count="2147483647" type="stmt"/>
            <line num="85" count="2147483647" type="stmt"/>
            <line num="86" count="2147483647" type="stmt"/>
            <line num="87" count="2147483647" type="stmt"/>
            <line num="91" count="2147483647" type="stmt"/>
            <line num="92" count="2147483647" type="stmt"/>
            <line num="93" count="2147483647" type="stmt"/>
            <line num="94" count="2147483647" type="stmt"/>
            <line num="95" count="2147483647" type="stmt"/>
            <line num="96" count="2147483647" type="stmt"/>
            <line num="97" count="2147483647" type="stmt"/>
            <line num="98" count="2147483647" type="stmt"/>
            <line num="99" count="2147483647" type="stmt"/>
            <line num="100" count="2147483647" type="stmt"/>
            <line num="101" count="2147483647" type="stmt"/>
            <line num="102" count="2147483647" type="stmt"/>
            <line num="103" count="2147483647" type="stmt"/>
            <line num="104" count="2147483647" type="stmt"/>
            <line num="105" count="2147483647" type="stmt"/>
            <line num="109" count="2147483647" type="stmt"/>
            <line num="110" count="2147483647" type="stmt"/>
            <line num="111" count="2147483647" type="stmt"/>
            <line num="112" count="2147483647" type="stmt"/>
            <line num="113" count="2147483647" type="stmt"/>
            <line num="114" count="2147483647" type="stmt"/>
            <line num="115" count="2147483647" type="stmt"/>
            <line num="116" count="2147483647" type="stmt"/>
            <line num="117" count="2147483647" type="stmt"/>
            <line num="118" count="2147483647" type="stmt"/>
            <line num="119" count="2147483647" type="stmt"/>
            <line num="120" count="2147483647" type="stmt"/>
            <line num="121" count="2147483647" type="stmt"/>
            <line num="122" count="2147483647" type="stmt"/>
            <line num="123" count="2147483647" type="stmt"/>
            <line num="126" count="2147483647" type="stmt"/>
            <line num="127" count="2147483647" type="stmt"/>
            <line num="129" count="2147483647" type="stmt"/>
            <line falsecount="1202667918" truecount="2147483647" num="129" type="cond"/>
            <line num="130" count="2147483647" type="stmt"/>
            <line num="131" count="2147483647" type="stmt"/>
            <line num="135" count="1202667918" type="stmt"/>
            <line falsecount="601506088" truecount="601161830" num="135" type="cond"/>
            <line num="136" count="601161830" type="stmt"/>
            <line num="138" count="601506088" type="stmt"/>
            <line num="141" count="1202667918" type="stmt"/>
            <line falsecount="1202667918" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="1202667918" type="stmt"/>
            <line num="145" count="1202667918" type="stmt"/>
            <line falsecount="697" truecount="1202667221" num="145" type="cond"/>
            <line num="146" count="1202667221" type="stmt"/>
            <line num="147" count="1202667221" type="stmt"/>
            <line num="151" count="697" type="stmt"/>
            <line num="152" count="697" type="stmt"/>
            <line num="156" count="1202667918" type="stmt"/>
            <line falsecount="601506088" truecount="601161830" num="156" type="cond"/>
            <line num="157" count="601161830" type="stmt"/>
            <line num="160" count="1202667918" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/functions/PoissonDistribution.java" name="PoissonDistribution.java">
            <metrics coveredelements="14" coveredconditionals="2" complexity="3" loc="38" coveredmethods="2" methods="2" elements="14" classes="1" ncloc="19" statements="10" conditionals="2" coveredstatements="10"/>
            <class name="PoissonDistribution">
               <metrics coveredelements="14" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="14" statements="10" conditionals="2" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="PoissonDistribution(double)" num="16" count="500" type="method"/>
            <line num="17" count="500" type="stmt"/>
            <line num="18" count="500" type="stmt"/>
            <line complexity="2" visibility="public" signature="inverseCumulativeDistribution(double) : double" num="27" count="230000000" type="method"/>
            <line num="28" count="230000000" type="stmt"/>
            <line num="29" count="230000000" type="stmt"/>
            <line num="30" count="230000000" type="stmt"/>
            <line num="31" count="230000000" type="stmt"/>
            <line falsecount="230000000" truecount="1759826" num="31" type="cond"/>
            <line num="32" count="1759826" type="stmt"/>
            <line num="33" count="1759826" type="stmt"/>
            <line num="34" count="1759826" type="stmt"/>
            <line num="36" count="230000000" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/functions/SABRModel.java" name="SABRModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="77" coveredmethods="0" methods="5" elements="33" classes="1" ncloc="44" statements="24" conditionals="4" coveredstatements="0"/>
            <class name="SABRModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="33" statements="24" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="SABRModel()" num="22" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="sabrCalibrateParameterForImpliedNormalVols(double,double,double[],double[]) : double[]" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sabrCalibrateParameterForImpliedNormalVols(double,double,double[],double[],double[],double[]) : double[]" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sabrCalibrateParameterForImpliedNormalVols(double,double,double[],double[],double[],double[],double[],double[]) : double[]" num="46" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setValues(double[],double[]) : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.templatemethoddesign">
         <metrics coveredelements="0" complexity="41" loc="419" methods="18" classes="2" statements="101" coveredconditionals="0" coveredmethods="0" elements="153" ncloc="205" files="1" conditionals="34" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/templatemethoddesign/LogNormalProcess.java" name="LogNormalProcess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="41" loc="419" coveredmethods="0" methods="18" elements="153" classes="2" ncloc="205" statements="101" conditionals="34" coveredstatements="0"/>
            <class name="LogNormalProcess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="41" coveredmethods="0" methods="18" elements="153" statements="101" conditionals="34" coveredstatements="0"/>
            </class>
            <class name="LogNormalProcess.Scheme">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LogNormalProcess(int,BrownianMotion)" num="41" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LogNormalProcess(TimeDiscretization,int,int)" num="59" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LogNormalProcess(TimeDiscretization,int,int,int,int)" num="86" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDrift(int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getProcessValue(int) : RandomVariable[]" num="153" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getProcessValue(int,int) : RandomVariable" num="174" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="197" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="12" visibility="private" signature="doPrecalculateProcess() : void" num="213" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="230" type="cond"/>
            <line num="233" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="240" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="262" type="cond"/>
            <line num="263" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="287" type="cond"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="302" type="cond"/>
            <line num="303" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="309" type="cond"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="336" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="343" count="0" type="method"/>
            <line num="344" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="350" count="0" type="method"/>
            <line num="351" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="357" count="0" type="method"/>
            <line num="358" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="367" count="0" type="method"/>
            <line num="368" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="377" count="0" type="method"/>
            <line num="378" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBrownianMotion() : BrownianMotion" num="384" count="0" type="method"/>
            <line num="385" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getScheme() : Scheme" num="391" count="0" type="method"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="3" visibility="protected" signature="setBrownianMotion(BrownianMotion) : void" num="401" count="0" type="method"/>
            <line num="402" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="402" type="cond"/>
            <line num="403" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setScheme(Scheme) : void" num="412" count="0" type="method"/>
            <line num="413" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="413" type="cond"/>
            <line num="414" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.volatility.caplet.smile">
         <metrics coveredelements="0" complexity="7" loc="66" methods="2" classes="2" statements="16" coveredconditionals="0" coveredmethods="0" elements="28" ncloc="40" files="2" conditionals="10" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatility/caplet/smile/LinearSmileInterpolater.java" name="LinearSmileInterpolater.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="56" coveredmethods="0" methods="2" elements="28" classes="1" ncloc="36" statements="16" conditionals="10" coveredstatements="0"/>
            <class name="LinearSmileInterpolater">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="2" elements="28" statements="16" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LinearSmileInterpolater(double[][],double[])" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="calculateInterpolatedExtrapolatedSmileVolatility(double,int) : double" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="27" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="32" type="cond"/>
            <line num="34" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatility/caplet/smile/SmileInterpolationExtrapolationMethod.java" name="SmileInterpolationExtrapolationMethod.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="10" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SmileInterpolationExtrapolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.montecarlo.process.component.factordrift">
         <metrics coveredelements="0" complexity="0" loc="42" methods="0" classes="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="8" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/process/component/factordrift/FactorDrift.java" name="FactorDrift.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="42" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FactorDrift">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.marketdata2.model.volatilities">
         <metrics coveredelements="0" complexity="24" loc="234" methods="12" classes="3" statements="44" coveredconditionals="0" coveredmethods="0" elements="72" ncloc="116" files="2" conditionals="16" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/volatilities/AbstractVolatilitySurface.java" name="AbstractVolatilitySurface.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="24" loc="158" coveredmethods="0" methods="12" elements="72" classes="1" ncloc="101" statements="44" conditionals="16" coveredstatements="0"/>
            <class name="AbstractVolatilitySurface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="12" elements="72" statements="44" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractVolatilitySurface(String,LocalDate,ForwardCurve,DiscountCurve,QuotingConvention,DayCountConvention)" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractVolatilitySurface(String,LocalDate)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuotingConvention() : QuotingConvention" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="13" visibility="public" signature="convertFromTo(AnalyticModel,double,double,double,QuotingConvention,QuotingConvention) : double" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertFromTo(double,double,double,QuotingConvention,QuotingConvention) : double" num="143" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurve() : ForwardCurve" num="147" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="151" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountConvention() : DayCountConvention" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/volatilities/VolatilitySurface.java" name="VolatilitySurface.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="76" coveredmethods="0" methods="0" elements="0" classes="2" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VolatilitySurface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VolatilitySurface.QuotingConvention">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.models.covariance">
         <metrics coveredelements="1106" complexity="654" loc="6735" methods="306" classes="42" statements="1773" coveredconditionals="212" coveredmethods="139" elements="2701" ncloc="3775" files="41" conditionals="622" coveredstatements="755"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/AbstractLIBORCovarianceModel.java" name="AbstractLIBORCovarianceModel.java">
            <metrics coveredelements="39" coveredconditionals="7" complexity="12" loc="131" coveredmethods="8" methods="8" elements="41" classes="1" ncloc="70" statements="25" conditionals="8" coveredstatements="24"/>
            <class name="AbstractLIBORCovarianceModel">
               <metrics coveredelements="39" coveredconditionals="7" complexity="12" coveredmethods="8" methods="8" elements="41" statements="25" conditionals="8" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractLIBORCovarianceModel(TimeDiscretization,TimeDiscretization,int)" num="37" count="11057" type="method"/>
            <line num="38" count="11056" type="stmt"/>
            <line num="39" count="11060" type="stmt"/>
            <line num="40" count="11065" type="stmt"/>
            <line num="41" count="11066" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(double,double,RandomVariable[]) : RandomVariable[]" num="44" count="120166799" type="method"/>
            <line num="46" count="120269990" type="stmt"/>
            <line num="47" count="120235688" type="stmt"/>
            <line falsecount="117754658" truecount="2526009" num="47" type="cond"/>
            <line num="48" count="2526048" type="stmt"/>
            <line num="50" count="120278396" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(double,int,RandomVariable[]) : RandomVariable[]" num="56" count="120247708" type="method"/>
            <line num="58" count="120263627" type="stmt"/>
            <line num="59" count="120276497" type="stmt"/>
            <line falsecount="117712254" truecount="2587569" num="59" type="cond"/>
            <line num="60" count="2587442" type="stmt"/>
            <line num="62" count="120304734" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCovariance(double,int,int,RandomVariable[]) : RandomVariable" num="80" count="1082453" type="method"/>
            <line num="82" count="1082454" type="stmt"/>
            <line num="83" count="1082456" type="stmt"/>
            <line falsecount="1082455" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="1082459" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCovariance(int,int,int,RandomVariable[]) : RandomVariable" num="93" count="658311" type="method"/>
            <line num="96" count="658312" type="stmt"/>
            <line num="97" count="658317" type="stmt"/>
            <line num="100" count="658317" type="stmt"/>
            <line num="103" count="658308" type="stmt"/>
            <line falsecount="658296" truecount="3291192" num="103" type="cond"/>
            <line num="104" count="3291259" type="stmt"/>
            <line num="107" count="658300" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="111" count="135187" type="method"/>
            <line num="113" count="135217" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="116" count="20919" type="method"/>
            <line num="118" count="20933" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="121" count="3958944" type="method"/>
            <line num="123" count="3959029" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/AbstractLIBORCovarianceModelParametric.java" name="AbstractLIBORCovarianceModelParametric.java">
            <metrics coveredelements="169" coveredconditionals="40" complexity="51" loc="480" coveredmethods="11" methods="14" elements="230" classes="2" ncloc="292" statements="156" conditionals="60" coveredstatements="118"/>
            <class name="AbstractLIBORCovarianceModelParametric">
               <metrics coveredelements="160" coveredconditionals="38" complexity="46" coveredmethods="8" methods="11" elements="219" statements="152" conditionals="56" coveredstatements="114"/>
            </class>
            <class name="AbstractLIBORCovarianceModelParametric.FutureTaskWithPriority">
               <metrics coveredelements="9" coveredconditionals="2" complexity="5" coveredmethods="3" methods="3" elements="11" statements="4" conditionals="4" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractLIBORCovarianceModelParametric(TimeDiscretization,TimeDiscretization,int)" num="78" count="11067" type="method"/>
            <line num="79" count="11059" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : RandomVariable[]" num="89" count="4" type="method"/>
            <line num="90" count="4" type="stmt"/>
            <line num="91" count="4" type="stmt"/>
            <line num="92" count="4" type="stmt"/>
            <line falsecount="4" truecount="28" num="92" type="cond"/>
            <line num="93" count="28" type="stmt"/>
            <line num="95" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractLIBORCovarianceModelParametric" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneCalibrated(LIBORMarketModel,CalibrationProduct[]) : AbstractLIBORCovarianceModelParametric" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getCloneCalibrated(LIBORMarketModel,CalibrationProduct[],Map&lt;String,Object&gt;) : AbstractLIBORCovarianceModelParametric" num="155" count="24" type="method"/>
            <line num="158" count="24" type="stmt"/>
            <line falsecount="20" truecount="4" num="158" type="cond"/>
            <line num="159" count="4" type="stmt"/>
            <line num="162" count="24" type="stmt"/>
            <line num="163" count="24" type="stmt"/>
            <line num="164" count="24" type="stmt"/>
            <line num="165" count="24" type="stmt"/>
            <line num="166" count="24" type="stmt"/>
            <line num="168" count="24" type="stmt"/>
            <line num="169" count="24" type="stmt"/>
            <line num="170" count="24" type="stmt"/>
            <line num="171" count="24" type="stmt"/>
            <line num="172" count="24" type="stmt"/>
            <line num="173" count="24" type="stmt"/>
            <line num="174" count="24" type="stmt"/>
            <line num="175" count="24" type="stmt"/>
            <line falsecount="12" truecount="12" num="175" type="cond"/>
            <line num="177" count="24" type="stmt"/>
            <line num="178" count="24" type="stmt"/>
            <line num="180" count="24" type="stmt"/>
            <line complexity="5" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="182" count="1786" type="method"/>
            <line num="185" count="1786" type="stmt"/>
            <line num="189" count="1786" type="stmt"/>
            <line num="190" count="1786" type="stmt"/>
            <line num="191" count="1786" type="stmt"/>
            <line num="193" count="1786" type="stmt"/>
            <line num="194" count="1786" type="stmt"/>
            <line falsecount="1786" truecount="275044" num="194" type="cond"/>
            <line num="195" count="275044" type="stmt"/>
            <line num="196" count="275044" type="stmt"/>
            <line complexity="2" visibility="public" signature="call() : RandomVariable" num="197" count="275032" type="method"/>
            <line num="199" count="275034" type="stmt"/>
            <line num="200" count="275034" type="stmt"/>
            <line num="203" count="17860" type="stmt"/>
            <line num="207" count="275044" type="stmt"/>
            <line falsecount="0" truecount="275044" num="207" type="cond"/>
            <line num="208" count="275044" type="stmt"/>
            <line num="209" count="275044" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="217" count="1786" type="stmt"/>
            <line falsecount="1786" truecount="275044" num="217" type="cond"/>
            <line num="218" count="275044" type="stmt"/>
            <line num="219" count="275044" type="stmt"/>
            <line num="220" count="275044" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="235" count="24" type="stmt"/>
            <line num="236" count="24" type="stmt"/>
            <line num="242" count="24" type="stmt"/>
            <line num="243" count="24" type="stmt"/>
            <line falsecount="20" truecount="4" num="243" type="cond"/>
            <line num="244" count="4" type="stmt"/>
            <line num="245" count="4" type="stmt"/>
            <line num="246" count="4" type="stmt"/>
            <line num="247" count="4" type="stmt"/>
            <line num="248" count="4" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="254" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="254" type="cond"/>
            <line num="255" count="4" type="stmt"/>
            <line num="260" count="4" type="stmt"/>
            <line num="261" count="4" type="stmt"/>
            <line num="262" count="4" type="stmt"/>
            <line num="265" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="265" type="cond"/>
            <line num="266" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="275" count="20" type="stmt"/>
            <line falsecount="0" truecount="20" num="275" type="cond"/>
            <line num="276" count="20" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="314" count="4" type="stmt"/>
            <line complexity="1" visibility="package" signature="FutureTaskWithPriority(Callable&lt;T&gt;,int)" num="319" count="462494" type="method"/>
            <line num="320" count="462484" type="stmt"/>
            <line num="321" count="462492" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPriority() : int" num="323" count="5460256" type="method"/>
            <line num="324" count="5460256" type="stmt"/>
            <line complexity="3" visibility="public" signature="compareTo(FutureTaskWithPriority&lt;T&gt;) : int" num="326" count="1365064" type="method"/>
            <line num="328" count="1365064" type="stmt"/>
            <line falsecount="1365064" truecount="0" num="328" type="cond"/>
            <line falsecount="0" truecount="1365064" num="328" type="cond"/>
            <line complexity="15" visibility="public" signature="getCloneCalibratedLegazy(LIBORMarketModel,CalibrationProduct[],Map&lt;String,Object&gt;) : AbstractLIBORCovarianceModelParametric" num="333" count="20" type="method"/>
            <line num="335" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="335" type="cond"/>
            <line num="336" count="0" type="stmt"/>
            <line num="338" count="20" type="stmt"/>
            <line num="339" count="20" type="stmt"/>
            <line num="340" count="20" type="stmt"/>
            <line num="341" count="20" type="stmt"/>
            <line num="342" count="20" type="stmt"/>
            <line num="343" count="20" type="stmt"/>
            <line num="345" count="20" type="stmt"/>
            <line num="346" count="20" type="stmt"/>
            <line num="347" count="20" type="stmt"/>
            <line num="348" count="20" type="stmt"/>
            <line num="349" count="20" type="stmt"/>
            <line num="350" count="20" type="stmt"/>
            <line num="351" count="20" type="stmt"/>
            <line num="352" count="20" type="stmt"/>
            <line falsecount="12" truecount="8" num="352" type="cond"/>
            <line num="353" count="20" type="stmt"/>
            <line num="361" count="20" type="stmt"/>
            <line num="362" count="20" type="stmt"/>
            <line num="364" count="20" type="stmt"/>
            <line falsecount="12" truecount="8" num="364" type="cond"/>
            <line num="365" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="365" type="cond"/>
            <line num="366" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="366" type="cond"/>
            <line num="367" count="20" type="stmt"/>
            <line falsecount="6" truecount="14" num="367" type="cond"/>
            <line num="368" count="20" type="stmt"/>
            <line falsecount="12" truecount="8" num="368" type="cond"/>
            <line num="369" count="20" type="stmt"/>
            <line falsecount="12" truecount="8" num="369" type="cond"/>
            <line num="371" count="20" type="stmt"/>
            <line num="372" count="20" type="stmt"/>
            <line num="374" count="20" type="stmt"/>
            <line complexity="6" visibility="public" signature="setValues(double[],double[]) : void" num="376" count="4214" type="method"/>
            <line num="379" count="4216" type="stmt"/>
            <line num="383" count="4216" type="stmt"/>
            <line num="384" count="4207" type="stmt"/>
            <line num="385" count="4206" type="stmt"/>
            <line num="387" count="4202" type="stmt"/>
            <line num="388" count="4197" type="stmt"/>
            <line falsecount="4216" truecount="462478" num="388" type="cond"/>
            <line num="389" count="462478" type="stmt"/>
            <line num="392" count="462475" type="stmt"/>
            <line complexity="2" visibility="public" signature="call() : RandomVariable" num="394" count="462443" type="method"/>
            <line num="396" count="462451" type="stmt"/>
            <line num="397" count="462449" type="stmt"/>
            <line num="400" count="27861" type="stmt"/>
            <line num="406" count="462480" type="stmt"/>
            <line falsecount="0" truecount="462484" num="406" type="cond"/>
            <line num="407" count="462471" type="stmt"/>
            <line num="408" count="462500" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line num="415" count="4216" type="stmt"/>
            <line falsecount="4216" truecount="462430" num="415" type="cond"/>
            <line num="416" count="462444" type="stmt"/>
            <line num="417" count="462443" type="stmt"/>
            <line num="418" count="462419" type="stmt"/>
            <line falsecount="28324" truecount="434114" num="418" type="cond"/>
            <line num="421" count="0" type="stmt"/>
            <line num="427" count="20" type="stmt"/>
            <line num="428" count="20" type="stmt"/>
            <line num="429" count="20" type="stmt"/>
            <line num="432" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="432" type="cond"/>
            <line num="433" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="439" type="cond"/>
            <line num="440" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="447" type="cond"/>
            <line num="448" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="455" count="20" type="stmt"/>
            <line num="456" count="20" type="stmt"/>
            <line num="458" count="20" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line num="468" count="20" type="stmt"/>
            <line falsecount="0" truecount="20" num="468" type="cond"/>
            <line num="469" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="475" count="0" type="method"/>
            <line num="477" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/AbstractShortRateVolatilityModel.java" name="AbstractShortRateVolatilityModel.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="2" loc="44" coveredmethods="2" methods="2" elements="5" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="AbstractShortRateVolatilityModel">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractShortRateVolatilityModel(TimeDiscretization)" num="30" count="60" type="method"/>
            <line num="31" count="60" type="stmt"/>
            <line num="32" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="40" count="17467045" type="method"/>
            <line num="42" count="17486081" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/AbstractShortRateVolatilityModelParametric.java" name="AbstractShortRateVolatilityModelParametric.java">
            <metrics coveredelements="84" coveredconditionals="18" complexity="27" loc="419" coveredmethods="6" methods="7" elements="123" classes="1" ncloc="166" statements="82" conditionals="34" coveredstatements="60"/>
            <class name="AbstractShortRateVolatilityModelParametric">
               <metrics coveredelements="84" coveredconditionals="18" complexity="27" coveredmethods="6" methods="7" elements="123" statements="82" conditionals="34" coveredstatements="60"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractShortRateVolatilityModelParametric(TimeDiscretization)" num="67" count="60" type="method"/>
            <line num="68" count="60" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameterAsDouble() : double[]" num="85" count="4" type="method"/>
            <line num="87" count="4" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
            <line num="89" count="4" type="stmt"/>
            <line falsecount="4" truecount="32" num="89" type="cond"/>
            <line num="90" count="32" type="stmt"/>
            <line num="92" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneCalibrated(ShortRateModel,CalibrationProduct[],Map&lt;String,Object&gt;) : AbstractShortRateVolatilityModelParametric" num="136" count="2" type="method"/>
            <line num="139" count="2" type="stmt"/>
            <line complexity="14" visibility="public" signature="getCloneCalibratedLegazy(ShortRateModel,CalibrationProduct[],Map&lt;String,Object&gt;) : AbstractShortRateVolatilityModelParametric" num="279" count="2" type="method"/>
            <line num="281" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="281" type="cond"/>
            <line num="282" count="0" type="stmt"/>
            <line num="284" count="2" type="stmt"/>
            <line num="285" count="2" type="stmt"/>
            <line num="286" count="2" type="stmt"/>
            <line num="287" count="2" type="stmt"/>
            <line num="288" count="2" type="stmt"/>
            <line num="289" count="2" type="stmt"/>
            <line num="291" count="2" type="stmt"/>
            <line num="292" count="2" type="stmt"/>
            <line num="293" count="2" type="stmt"/>
            <line num="294" count="2" type="stmt"/>
            <line num="295" count="2" type="stmt"/>
            <line num="296" count="2" type="stmt"/>
            <line num="297" count="2" type="stmt"/>
            <line num="298" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="298" type="cond"/>
            <line num="299" count="2" type="stmt"/>
            <line num="307" count="2" type="stmt"/>
            <line num="308" count="2" type="stmt"/>
            <line num="310" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="310" type="cond"/>
            <line num="311" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="311" type="cond"/>
            <line num="312" count="2" type="stmt"/>
            <line num="313" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="313" type="cond"/>
            <line num="314" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="314" type="cond"/>
            <line num="315" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="315" type="cond"/>
            <line num="316" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="316" type="cond"/>
            <line num="318" count="2" type="stmt"/>
            <line num="322" count="2" type="stmt"/>
            <line complexity="6" visibility="public" signature="setValues(double[],double[]) : void" num="324" count="56" type="method"/>
            <line num="327" count="56" type="stmt"/>
            <line num="331" count="56" type="stmt"/>
            <line num="332" count="56" type="stmt"/>
            <line num="333" count="56" type="stmt"/>
            <line num="335" count="56" type="stmt"/>
            <line num="336" count="56" type="stmt"/>
            <line falsecount="56" truecount="392" num="336" type="cond"/>
            <line num="337" count="392" type="stmt"/>
            <line num="338" count="392" type="stmt"/>
            <line complexity="2" visibility="public" signature="call() : RandomVariable" num="339" count="390" type="method"/>
            <line num="341" count="391" type="stmt"/>
            <line num="342" count="392" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="349" count="391" type="stmt"/>
            <line falsecount="391" truecount="0" num="349" type="cond"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="354" count="392" type="stmt"/>
            <line num="355" count="392" type="stmt"/>
            <line num="356" count="391" type="stmt"/>
            <line num="359" count="55" type="stmt"/>
            <line falsecount="56" truecount="391" num="359" type="cond"/>
            <line num="360" count="392" type="stmt"/>
            <line num="361" count="392" type="stmt"/>
            <line num="362" count="391" type="stmt"/>
            <line falsecount="0" truecount="392" num="362" type="cond"/>
            <line num="365" count="0" type="stmt"/>
            <line num="371" count="2" type="stmt"/>
            <line num="372" count="2" type="stmt"/>
            <line num="373" count="2" type="stmt"/>
            <line num="376" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="376" type="cond"/>
            <line num="377" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="383" type="cond"/>
            <line num="384" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="391" type="cond"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="402" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="402" type="cond"/>
            <line num="403" count="0" type="stmt"/>
            <line num="408" count="2" type="stmt"/>
            <line num="409" count="2" type="stmt"/>
            <line num="411" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="414" count="0" type="method"/>
            <line num="416" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/BlendedLocalVolatilityModel.java" name="BlendedLocalVolatilityModel.java">
            <metrics coveredelements="44" coveredconditionals="8" complexity="28" loc="321" coveredmethods="8" methods="14" elements="107" classes="1" ncloc="134" statements="69" conditionals="24" coveredstatements="28"/>
            <class name="BlendedLocalVolatilityModel">
               <metrics coveredelements="44" coveredconditionals="8" complexity="28" coveredmethods="8" methods="14" elements="107" statements="69" conditionals="24" coveredstatements="28"/>
            </class>
            <line complexity="1" visibility="public" signature="BlendedLocalVolatilityModel(AbstractLIBORCovarianceModelParametric,ForwardCurve,RandomVariable,boolean)" num="79" count="368" type="method"/>
            <line num="80" count="368" type="stmt"/>
            <line num="82" count="368" type="stmt"/>
            <line num="83" count="368" type="stmt"/>
            <line num="84" count="368" type="stmt"/>
            <line num="85" count="368" type="stmt"/>
            <line complexity="2" visibility="public" signature="BlendedLocalVolatilityModel(RandomVariableFactory,AbstractLIBORCovarianceModelParametric,ForwardCurve,double,boolean)" num="108" count="369" type="method"/>
            <line num="109" count="369" type="stmt"/>
            <line num="111" count="370" type="stmt"/>
            <line falsecount="0" truecount="366" num="111" type="cond"/>
            <line num="112" count="368" type="stmt"/>
            <line num="113" count="370" type="stmt"/>
            <line num="114" count="370" type="stmt"/>
            <line num="115" count="367" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlendedLocalVolatilityModel(RandomVariableFactory,AbstractLIBORCovarianceModelParametric,double,boolean)" num="140" count="2" type="method"/>
            <line num="141" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlendedLocalVolatilityModel(AbstractLIBORCovarianceModelParametric,ForwardCurve,double,boolean)" num="163" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlendedLocalVolatilityModel(AbstractLIBORCovarianceModelParametric,double,boolean)" num="188" count="2" type="method"/>
            <line num="189" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="192" count="367" type="method"/>
            <line num="194" count="367" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBaseCovarianceModel() : AbstractLIBORCovarianceModelParametric" num="207" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getParameter() : RandomVariable[]" num="211" count="6" type="method"/>
            <line num="213" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="213" type="cond"/>
            <line num="214" count="6" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameterAsDouble() : double[]" num="230" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractLIBORCovarianceModelParametric" num="240" count="365" type="method"/>
            <line num="242" count="365" type="stmt"/>
            <line falsecount="368" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="246" count="368" type="stmt"/>
            <line falsecount="0" truecount="367" num="246" type="cond"/>
            <line num="247" count="368" type="stmt"/>
            <line num="248" count="368" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="259" count="0" type="method"/>
            <line num="261" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="264" count="572892" type="method"/>
            <line num="266" count="573424" type="stmt"/>
            <line num="268" count="573888" type="stmt"/>
            <line num="269" count="573876" type="stmt"/>
            <line falsecount="573759" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="275" count="573739" type="stmt"/>
            <line falsecount="0" truecount="573621" num="275" type="cond"/>
            <line num="276" count="573607" type="stmt"/>
            <line num="277" count="574053" type="stmt"/>
            <line falsecount="574065" truecount="2870157" num="277" type="cond"/>
            <line num="278" count="2870144" type="stmt"/>
            <line num="282" count="574063" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariable" num="285" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="290" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="299" type="cond"/>
            <line num="300" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="300" type="cond"/>
            <line num="301" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="311" type="cond"/>
            <line num="312" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/DisplacedLocalVolatilityModel.java" name="DisplacedLocalVolatilityModel.java">
            <metrics coveredelements="41" coveredconditionals="9" complexity="26" loc="230" coveredmethods="7" methods="12" elements="97" classes="1" ncloc="120" statements="61" conditionals="24" coveredstatements="25"/>
            <class name="DisplacedLocalVolatilityModel">
               <metrics coveredelements="41" coveredconditionals="9" complexity="26" coveredmethods="7" methods="12" elements="97" statements="61" conditionals="24" coveredstatements="25"/>
            </class>
            <line complexity="1" visibility="public" signature="DisplacedLocalVolatilityModel(AbstractLIBORCovarianceModelParametric,RandomVariable,boolean)" num="67" count="3102" type="method"/>
            <line num="68" count="3102" type="stmt"/>
            <line num="69" count="3102" type="stmt"/>
            <line num="70" count="3102" type="stmt"/>
            <line num="71" count="3102" type="stmt"/>
            <line complexity="1" visibility="public" signature="DisplacedLocalVolatilityModel(AbstractLIBORCovarianceModelParametric,double,boolean)" num="95" count="6" type="method"/>
            <line num="96" count="6" type="stmt"/>
            <line num="97" count="6" type="stmt"/>
            <line num="98" count="6" type="stmt"/>
            <line num="99" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBaseCovarianceModel() : AbstractLIBORCovarianceModelParametric" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getParameter() : RandomVariable[]" num="121" count="24" type="method"/>
            <line num="123" count="24" type="stmt"/>
            <line falsecount="0" truecount="24" num="123" type="cond"/>
            <line num="124" count="24" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameterAsDouble() : double[]" num="140" count="2" type="method"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line falsecount="2" truecount="96" num="144" type="cond"/>
            <line num="145" count="96" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractLIBORCovarianceModelParametric" num="150" count="3098" type="method"/>
            <line num="152" count="3098" type="stmt"/>
            <line falsecount="3098" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="3098" type="stmt"/>
            <line falsecount="0" truecount="3098" num="156" type="cond"/>
            <line num="157" count="3098" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="169" count="1308" type="method"/>
            <line num="171" count="1308" type="stmt"/>
            <line complexity="4" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="174" count="78736441" type="method"/>
            <line num="176" count="78815002" type="stmt"/>
            <line num="178" count="78824865" type="stmt"/>
            <line falsecount="51200" truecount="78804335" num="178" type="cond"/>
            <line num="179" count="78815855" type="stmt"/>
            <line num="180" count="78819270" type="stmt"/>
            <line falsecount="78828613" truecount="78829786" num="180" type="cond"/>
            <line num="181" count="78835981" type="stmt"/>
            <line num="185" count="78894588" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariable" num="188" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDisplacement() : RandomVariable" num="193" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="197" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="210" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/ExponentialDecayLocalVolatilityModel.java" name="ExponentialDecayLocalVolatilityModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="26" loc="254" coveredmethods="0" methods="13" elements="102" classes="1" ncloc="124" statements="65" conditionals="24" coveredstatements="0"/>
            <class name="ExponentialDecayLocalVolatilityModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="13" elements="102" statements="65" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ExponentialDecayLocalVolatilityModel(RandomVariableFactory,AbstractLIBORCovarianceModelParametric,RandomVariable,boolean)" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="ExponentialDecayLocalVolatilityModel(RandomVariableFactory,AbstractLIBORCovarianceModelParametric,double,boolean)" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ExponentialDecayLocalVolatilityModel(AbstractLIBORCovarianceModelParametric,double,boolean)" num="122" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBaseCovarianceModel() : AbstractLIBORCovarianceModelParametric" num="140" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getParameter() : RandomVariable[]" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameterAsDouble() : double[]" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractLIBORCovarianceModelParametric" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="197" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariable" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDisplacement() : RandomVariable" num="216" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="220" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="229" type="cond"/>
            <line num="230" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="230" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/HullWhiteLocalVolatilityModel.java" name="HullWhiteLocalVolatilityModel.java">
            <metrics coveredelements="15" coveredconditionals="4" complexity="13" loc="121" coveredmethods="2" methods="8" elements="39" classes="1" ncloc="59" statements="23" conditionals="8" coveredstatements="9"/>
            <class name="HullWhiteLocalVolatilityModel">
               <metrics coveredelements="15" coveredconditionals="4" complexity="13" coveredmethods="2" methods="8" elements="39" statements="23" conditionals="8" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="HullWhiteLocalVolatilityModel(AbstractLIBORCovarianceModelParametric,double)" num="53" count="18" type="method"/>
            <line num="54" count="18" type="stmt"/>
            <line num="55" count="18" type="stmt"/>
            <line num="56" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBaseCovarianceModel() : AbstractLIBORCovarianceModelParametric" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterAsDouble() : double[]" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="83" count="31055" type="method"/>
            <line num="85" count="31181" type="stmt"/>
            <line num="87" count="31200" type="stmt"/>
            <line falsecount="6400" truecount="24770" num="87" type="cond"/>
            <line num="88" count="24799" type="stmt"/>
            <line num="89" count="24956" type="stmt"/>
            <line falsecount="24958" truecount="24959" num="89" type="cond"/>
            <line num="90" count="24959" type="stmt"/>
            <line num="94" count="31358" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariable" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCorrelationModel.java" name="LIBORCorrelationModel.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="4" loc="84" coveredmethods="2" methods="4" elements="10" classes="1" ncloc="33" statements="6" conditionals="0" coveredstatements="4"/>
            <class name="LIBORCorrelationModel">
               <metrics coveredelements="6" coveredconditionals="0" complexity="4" coveredmethods="2" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCorrelationModel(TimeDiscretization,TimeDiscretization)" num="34" count="3866" type="method"/>
            <line num="35" count="3865" type="stmt"/>
            <line num="36" count="3872" type="stmt"/>
            <line num="37" count="3867" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterAsDouble() : double[]" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="54" count="8093356" type="method"/>
            <line num="55" count="8113215" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCorrelationModelExponentialDecay.java" name="LIBORCorrelationModelExponentialDecay.java">
            <metrics coveredelements="47" coveredconditionals="11" complexity="18" loc="165" coveredmethods="7" methods="10" elements="75" classes="1" ncloc="98" statements="49" conditionals="16" coveredstatements="29"/>
            <class name="LIBORCorrelationModelExponentialDecay">
               <metrics coveredelements="47" coveredconditionals="11" complexity="18" coveredmethods="7" methods="10" elements="75" statements="49" conditionals="16" coveredstatements="29"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCorrelationModelExponentialDecay(TimeDiscretization,TimeDiscretization,int,double,boolean)" num="50" count="1786" type="method"/>
            <line num="51" count="1778" type="stmt"/>
            <line num="53" count="1781" type="stmt"/>
            <line num="54" count="1781" type="stmt"/>
            <line num="55" count="1783" type="stmt"/>
            <line num="57" count="1785" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORCorrelationModelExponentialDecay(TimeDiscretization,TimeDiscretization,int,double)" num="60" count="419" type="method"/>
            <line num="61" count="419" type="stmt"/>
            <line num="63" count="419" type="stmt"/>
            <line num="64" count="419" type="stmt"/>
            <line num="65" count="419" type="stmt"/>
            <line num="67" count="419" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORCorrelationModelExponentialDecay" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(int,int,int) : double" num="84" count="127377977" type="method"/>
            <line num="86" count="127427772" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelation(int,int,int) : double" num="89" count="424144" type="method"/>
            <line num="91" count="424144" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="94" count="118881266" type="method"/>
            <line num="96" count="118937409" type="stmt"/>
            <line complexity="6" visibility="private" signature="initialize(int,double) : void" num="99" count="2190" type="method"/>
            <line num="105" count="2194" type="stmt"/>
            <line num="107" count="2196" type="stmt"/>
            <line num="108" count="2209" type="stmt"/>
            <line falsecount="2214" truecount="86600" num="108" type="cond"/>
            <line num="109" count="86625" type="stmt"/>
            <line falsecount="86571" truecount="3452490" num="109" type="cond"/>
            <line num="111" count="3456688" type="stmt"/>
            <line num="118" count="2214" type="stmt"/>
            <line num="120" count="2215" type="stmt"/>
            <line falsecount="2216" truecount="86926" num="120" type="cond"/>
            <line num="121" count="86938" type="stmt"/>
            <line falsecount="86976" truecount="1786417" num="121" type="cond"/>
            <line num="122" count="1782440" type="stmt"/>
            <line num="123" count="1786441" type="stmt"/>
            <line falsecount="1788238" truecount="8571487" num="123" type="cond"/>
            <line num="124" count="8643813" type="stmt"/>
            <line num="126" count="1789944" type="stmt"/>
            <line num="127" count="1792638" type="stmt"/>
            <line num="129" count="86934" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : RandomVariable[]" num="133" count="4542" type="method"/>
            <line num="135" count="4542" type="stmt"/>
            <line falsecount="0" truecount="4542" num="135" type="cond"/>
            <line num="136" count="4542" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORCorrelationModel" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCorrelationModelThreeParameterExponentialDecay.java" name="LIBORCorrelationModelThreeParameterExponentialDecay.java">
            <metrics coveredelements="48" coveredconditionals="12" complexity="19" loc="185" coveredmethods="4" methods="9" elements="97" classes="1" ncloc="130" statements="68" conditionals="20" coveredstatements="32"/>
            <class name="LIBORCorrelationModelThreeParameterExponentialDecay">
               <metrics coveredelements="48" coveredconditionals="12" complexity="19" coveredmethods="4" methods="9" elements="97" statements="68" conditionals="20" coveredstatements="32"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCorrelationModelThreeParameterExponentialDecay(TimeDiscretization,TimeDiscretization,int,double,double,double,boolean)" num="42" count="1661" type="method"/>
            <line num="43" count="1660" type="stmt"/>
            <line num="45" count="1660" type="stmt"/>
            <line num="46" count="1661" type="stmt"/>
            <line num="47" count="1660" type="stmt"/>
            <line num="48" count="1661" type="stmt"/>
            <line num="49" count="1660" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : RandomVariable[]" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORCorrelationModelThreeParameterExponentialDecay" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(int,int,int) : double" num="80" count="15771971" type="method"/>
            <line num="82" count="15772446" type="stmt"/>
            <line num="83" count="15779333" type="stmt"/>
            <line falsecount="15778507" truecount="821" num="83" type="cond"/>
            <line num="84" count="818" type="stmt"/>
            <line num="88" count="15779694" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCorrelation(int,int,int) : double" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="101" count="2628069" type="method"/>
            <line num="103" count="2628480" type="stmt"/>
            <line complexity="6" visibility="private" signature="initialize(int,double,double,double) : void" num="106" count="817" type="method"/>
            <line num="111" count="818" type="stmt"/>
            <line num="112" count="820" type="stmt"/>
            <line num="113" count="818" type="stmt"/>
            <line num="115" count="820" type="stmt"/>
            <line num="116" count="824" type="stmt"/>
            <line falsecount="824" truecount="32892" num="116" type="cond"/>
            <line num="117" count="32891" type="stmt"/>
            <line falsecount="32896" truecount="625420" num="117" type="cond"/>
            <line num="119" count="625431" type="stmt"/>
            <line num="120" count="623668" type="stmt"/>
            <line num="121" count="621872" type="stmt"/>
            <line num="122" count="623719" type="stmt"/>
            <line num="123" count="624618" type="stmt"/>
            <line num="125" count="32894" type="stmt"/>
            <line num="131" count="824" type="stmt"/>
            <line num="133" count="824" type="stmt"/>
            <line falsecount="824" truecount="32887" num="133" type="cond"/>
            <line num="134" count="32890" type="stmt"/>
            <line falsecount="32892" truecount="622045" num="134" type="cond"/>
            <line num="135" count="623111" type="stmt"/>
            <line num="136" count="624041" type="stmt"/>
            <line falsecount="620687" truecount="3662101" num="136" type="cond"/>
            <line num="137" count="3682611" type="stmt"/>
            <line num="139" count="620954" type="stmt"/>
            <line num="140" count="622319" type="stmt"/>
            <line num="142" count="32879" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORCorrelationModel" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCovarianceModel.java" name="LIBORCovarianceModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="149" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="20" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="LIBORCovarianceModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCovarianceModelBH.java" name="LIBORCovarianceModelBH.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="116" coveredmethods="0" methods="8" elements="47" classes="1" ncloc="67" statements="33" conditionals="6" coveredstatements="0"/>
            <class name="LIBORCovarianceModelBH">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="8" elements="47" statements="33" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelBH(TimeDiscretization,TimeDiscretization,int,double[])" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelBH(TimeDiscretization,TimeDiscretization,int)" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterAsDouble() : double[]" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariableFromDoubleArray" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCovarianceModelCalibrateable.java" name="LIBORCovarianceModelCalibrateable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="LIBORCovarianceModelCalibrateable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCovarianceModelExponentialForm5Param.java" name="LIBORCovarianceModelExponentialForm5Param.java">
            <metrics coveredelements="45" coveredconditionals="6" complexity="23" loc="152" coveredmethods="9" methods="12" elements="79" classes="1" ncloc="111" statements="51" conditionals="16" coveredstatements="30"/>
            <class name="LIBORCovarianceModelExponentialForm5Param">
               <metrics coveredelements="45" coveredconditionals="6" complexity="23" coveredmethods="9" methods="12" elements="79" statements="51" conditionals="16" coveredstatements="30"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelExponentialForm5Param(TimeDiscretization,TimeDiscretization,int,RandomVariable[])" num="40" count="1079" type="method"/>
            <line num="41" count="1078" type="stmt"/>
            <line num="43" count="1077" type="stmt"/>
            <line num="44" count="1077" type="stmt"/>
            <line num="45" count="1072" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelExponentialForm5Param(TimeDiscretization,TimeDiscretization,int,double[])" num="48" count="10" type="method"/>
            <line num="49" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelExponentialForm5Param(TimeDiscretization,TimeDiscretization,int)" num="52" count="8" type="method"/>
            <line num="53" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="55" count="1059" type="method"/>
            <line num="57" count="1063" type="stmt"/>
            <line num="58" count="1072" type="stmt"/>
            <line num="59" count="1070" type="stmt"/>
            <line num="60" count="1072" type="stmt"/>
            <line num="61" count="1071" type="stmt"/>
            <line complexity="6" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractLIBORCovarianceModelParametric" num="64" count="695" type="method"/>
            <line num="66" count="699" type="stmt"/>
            <line num="68" count="704" type="stmt"/>
            <line num="69" count="704" type="stmt"/>
            <line falsecount="0" truecount="702" num="69" type="cond"/>
            <line num="70" count="703" type="stmt"/>
            <line num="72" count="702" type="stmt"/>
            <line falsecount="0" truecount="703" num="72" type="cond"/>
            <line num="73" count="704" type="stmt"/>
            <line num="76" count="704" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : RandomVariable[]" num="79" count="1087" type="method"/>
            <line num="81" count="1094" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="84" count="335" type="method"/>
            <line num="86" count="335" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameterAsDouble() : double[]" num="89" count="16" type="method"/>
            <line num="91" count="16" type="stmt"/>
            <line num="92" count="16" type="stmt"/>
            <line num="93" count="16" type="stmt"/>
            <line falsecount="16" truecount="80" num="93" type="cond"/>
            <line num="94" count="80" type="stmt"/>
            <line num="96" count="16" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="99" count="1109754" type="method"/>
            <line num="101" count="1110422" type="stmt"/>
            <line num="102" count="1107894" type="stmt"/>
            <line falsecount="1111483" truecount="6080652" num="102" type="cond"/>
            <line num="103" count="6082533" type="stmt"/>
            <line num="104" count="6093006" type="stmt"/>
            <line num="108" count="1111496" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariableFromDoubleArray" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCovarianceModelExponentialForm7Param.java" name="LIBORCovarianceModelExponentialForm7Param.java">
            <metrics coveredelements="40" coveredconditionals="6" complexity="16" loc="107" coveredmethods="5" methods="7" elements="54" classes="1" ncloc="76" statements="39" conditionals="8" coveredstatements="29"/>
            <class name="LIBORCovarianceModelExponentialForm7Param">
               <metrics coveredelements="40" coveredconditionals="6" complexity="16" coveredmethods="5" methods="7" elements="54" statements="39" conditionals="8" coveredstatements="29"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelExponentialForm7Param(TimeDiscretization,TimeDiscretization,int)" num="29" count="843" type="method"/>
            <line num="30" count="843" type="stmt"/>
            <line num="32" count="844" type="stmt"/>
            <line num="33" count="843" type="stmt"/>
            <line num="34" count="843" type="stmt"/>
            <line num="35" count="842" type="stmt"/>
            <line num="36" count="842" type="stmt"/>
            <line num="37" count="843" type="stmt"/>
            <line num="38" count="844" type="stmt"/>
            <line num="40" count="842" type="stmt"/>
            <line num="41" count="841" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="44" count="839" type="method"/>
            <line num="46" count="839" type="stmt"/>
            <line num="47" count="836" type="stmt"/>
            <line num="48" count="835" type="stmt"/>
            <line num="49" count="836" type="stmt"/>
            <line num="50" count="835" type="stmt"/>
            <line complexity="8" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="53" count="840" type="method"/>
            <line num="55" count="840" type="stmt"/>
            <line num="57" count="837" type="stmt"/>
            <line num="58" count="838" type="stmt"/>
            <line falsecount="16" truecount="821" num="58" type="cond"/>
            <line num="59" count="822" type="stmt"/>
            <line num="61" count="839" type="stmt"/>
            <line falsecount="20" truecount="819" num="61" type="cond"/>
            <line num="62" count="818" type="stmt"/>
            <line num="65" count="840" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterAsDouble() : double[]" num="68" count="12" type="method"/>
            <line num="70" count="12" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="73" count="2627979" type="method"/>
            <line num="75" count="2628396" type="stmt"/>
            <line num="76" count="2628021" type="stmt"/>
            <line falsecount="2630080" truecount="15775429" num="76" type="cond"/>
            <line num="77" count="15776075" type="stmt"/>
            <line num="78" count="15771027" type="stmt"/>
            <line num="79" count="15773581" type="stmt"/>
            <line num="82" count="2630093" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariableFromDoubleArray" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCovarianceModelFromVolatilityAndCorrelation.java" name="LIBORCovarianceModelFromVolatilityAndCorrelation.java">
            <metrics coveredelements="62" coveredconditionals="11" complexity="29" loc="209" coveredmethods="7" methods="12" elements="120" classes="1" ncloc="141" statements="78" conditionals="30" coveredstatements="44"/>
            <class name="LIBORCovarianceModelFromVolatilityAndCorrelation">
               <metrics coveredelements="62" coveredconditionals="11" complexity="29" coveredmethods="7" methods="12" elements="120" statements="78" conditionals="30" coveredstatements="44"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelFromVolatilityAndCorrelation(TimeDiscretization,TimeDiscretization,LIBORVolatilityModel,LIBORCorrelationModel)" num="40" count="4912" type="method"/>
            <line num="41" count="4912" type="stmt"/>
            <line num="43" count="4912" type="stmt"/>
            <line num="44" count="4912" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="47" count="117731508" type="method"/>
            <line num="49" count="117839148" type="stmt"/>
            <line num="51" count="117768561" type="stmt"/>
            <line num="52" count="117779209" type="stmt"/>
            <line falsecount="117836224" truecount="121287314" num="52" type="cond"/>
            <line num="53" count="121316340" type="stmt"/>
            <line num="56" count="117879390" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariable" num="59" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCovariance(int,int,int,RandomVariable[]) : RandomVariable" num="82" count="424144" type="method"/>
            <line num="85" count="424144" type="stmt"/>
            <line num="86" count="424144" type="stmt"/>
            <line num="88" count="424144" type="stmt"/>
            <line num="90" count="424144" type="stmt"/>
            <line num="92" count="424144" type="stmt"/>
            <line complexity="5" visibility="public" signature="getParameter() : RandomVariable[]" num="95" count="60" type="method"/>
            <line num="97" count="60" type="stmt"/>
            <line num="98" count="60" type="stmt"/>
            <line num="100" count="60" type="stmt"/>
            <line num="101" count="60" type="stmt"/>
            <line falsecount="0" truecount="60" num="101" type="cond"/>
            <line num="102" count="60" type="stmt"/>
            <line falsecount="60" truecount="0" num="102" type="cond"/>
            <line num="104" count="60" type="stmt"/>
            <line num="106" count="60" type="stmt"/>
            <line num="107" count="60" type="stmt"/>
            <line falsecount="0" truecount="60" num="107" type="cond"/>
            <line num="108" count="60" type="stmt"/>
            <line num="109" count="60" type="stmt"/>
            <line num="111" count="60" type="stmt"/>
            <line falsecount="60" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="119" count="1384" type="method"/>
            <line num="121" count="1384" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameterAsDouble() : double[]" num="124" count="22" type="method"/>
            <line num="126" count="22" type="stmt"/>
            <line num="127" count="22" type="stmt"/>
            <line num="128" count="22" type="stmt"/>
            <line falsecount="22" truecount="1056" num="128" type="cond"/>
            <line num="129" count="1056" type="stmt"/>
            <line num="131" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractLIBORCovarianceModelParametric" num="142" count="4482" type="method"/>
            <line num="144" count="4482" type="stmt"/>
            <line num="145" count="4482" type="stmt"/>
            <line num="147" count="4482" type="stmt"/>
            <line num="148" count="4482" type="stmt"/>
            <line num="150" count="4482" type="stmt"/>
            <line num="151" count="4482" type="stmt"/>
            <line falsecount="0" truecount="4482" num="151" type="cond"/>
            <line num="152" count="4482" type="stmt"/>
            <line num="153" count="4482" type="stmt"/>
            <line num="154" count="4482" type="stmt"/>
            <line num="155" count="4482" type="stmt"/>
            <line falsecount="0" truecount="4482" num="155" type="cond"/>
            <line num="156" count="4482" type="stmt"/>
            <line num="160" count="4482" type="stmt"/>
            <line falsecount="4482" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="168" count="4482" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilityModel() : LIBORVolatilityModel" num="171" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationModel() : LIBORCorrelationModel" num="175" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="179" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCovarianceModelStochasticHestonVolatility.java" name="LIBORCovarianceModelStochasticHestonVolatility.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="41" loc="316" coveredmethods="0" methods="22" elements="164" classes="1" ncloc="212" statements="108" conditionals="34" coveredstatements="0"/>
            <class name="LIBORCovarianceModelStochasticHestonVolatility">
               <metrics coveredelements="0" coveredconditionals="0" complexity="41" coveredmethods="0" methods="22" elements="164" statements="108" conditionals="34" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelStochasticHestonVolatility(AbstractLIBORCovarianceModelParametric,BrownianMotion,RandomVariable,RandomVariable,RandomVariable,boolean)" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelStochasticHestonVolatility(AbstractLIBORCovarianceModelParametric,BrownianMotion,double,double,double,boolean)" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getParameter() : RandomVariable[]" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="setParameter(RandomVariable[]) : void" num="122" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractLIBORCovarianceModelParametric" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameterAsDouble() : double[]" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="172" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="184" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="189" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="199" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="209" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="214" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="219" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="224" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : ProcessModel" num="229" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="248" type="cond"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="250" type="cond"/>
            <line num="251" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariable" num="258" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="263" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="274" type="cond"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="281" type="cond"/>
            <line num="282" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="290" type="cond"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="299" type="cond"/>
            <line num="300" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="304" type="cond"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="306" type="cond"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCovarianceModelStochasticVolatility.java" name="LIBORCovarianceModelStochasticVolatility.java">
            <metrics coveredelements="84" coveredconditionals="11" complexity="39" loc="306" coveredmethods="15" methods="22" elements="149" classes="1" ncloc="200" statements="97" conditionals="30" coveredstatements="58"/>
            <class name="LIBORCovarianceModelStochasticVolatility">
               <metrics coveredelements="84" coveredconditionals="11" complexity="39" coveredmethods="15" methods="22" elements="149" statements="97" conditionals="30" coveredstatements="58"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelStochasticVolatility(AbstractLIBORCovarianceModelParametric,BrownianMotion,RandomVariable,RandomVariable,boolean)" num="72" count="366" type="method"/>
            <line num="73" count="364" type="stmt"/>
            <line num="75" count="366" type="stmt"/>
            <line num="76" count="367" type="stmt"/>
            <line num="77" count="368" type="stmt"/>
            <line num="78" count="368" type="stmt"/>
            <line num="80" count="368" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelStochasticVolatility(AbstractLIBORCovarianceModelParametric,BrownianMotion,double,double,boolean)" num="92" count="2" type="method"/>
            <line num="93" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="getParameter() : RandomVariable[]" num="103" count="6" type="method"/>
            <line num="105" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="109" count="6" type="stmt"/>
            <line num="110" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="115" count="6" type="stmt"/>
            <line num="116" count="6" type="stmt"/>
            <line num="117" count="6" type="stmt"/>
            <line num="118" count="6" type="stmt"/>
            <line num="120" count="6" type="stmt"/>
            <line complexity="4" visibility="private" signature="setParameter(RandomVariable[]) : void" num="124" count="364" type="method"/>
            <line num="125" count="366" type="stmt"/>
            <line falsecount="367" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="368" type="stmt"/>
            <line falsecount="368" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="134" count="368" type="stmt"/>
            <line num="135" count="368" type="stmt"/>
            <line num="137" count="364" type="stmt"/>
            <line num="139" count="368" type="stmt"/>
            <line num="140" count="368" type="stmt"/>
            <line num="142" count="368" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="145" count="367" type="method"/>
            <line num="147" count="367" type="stmt"/>
            <line num="148" count="367" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractLIBORCovarianceModelParametric" num="151" count="367" type="method"/>
            <line num="153" count="367" type="stmt"/>
            <line num="154" count="365" type="stmt"/>
            <line num="155" count="368" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="158" count="368" type="method"/>
            <line num="160" count="367" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameterAsDouble() : double[]" num="163" count="4" type="method"/>
            <line num="165" count="4" type="stmt"/>
            <line num="166" count="4" type="stmt"/>
            <line num="167" count="4" type="stmt"/>
            <line falsecount="4" truecount="28" num="167" type="cond"/>
            <line num="168" count="28" type="stmt"/>
            <line num="170" count="4" type="stmt"/>
            <line complexity="5" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="173" count="567879" type="method"/>
            <line num="176" count="570558" type="stmt"/>
            <line num="177" count="574070" type="stmt"/>
            <line falsecount="573702" truecount="368" num="177" type="cond"/>
            <line num="178" count="368" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="195" count="736" type="method"/>
            <line num="197" count="736" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="200" count="368" type="method"/>
            <line num="202" count="368" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="205" count="14718" type="method"/>
            <line num="207" count="14717" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="210" count="14718" type="method"/>
            <line num="212" count="14718" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="214" count="15088" type="method"/>
            <line num="216" count="15088" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="219" count="14718" type="method"/>
            <line num="221" count="14718" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="224" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : ProcessModel" num="229" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line num="234" count="368" type="stmt"/>
            <line num="238" count="574055" type="stmt"/>
            <line num="239" count="574042" type="stmt"/>
            <line num="240" count="574015" type="stmt"/>
            <line num="245" count="573928" type="stmt"/>
            <line num="247" count="573910" type="stmt"/>
            <line falsecount="0" truecount="573864" num="247" type="cond"/>
            <line num="248" count="573854" type="stmt"/>
            <line num="249" count="574052" type="stmt"/>
            <line falsecount="574073" truecount="2870272" num="249" type="cond"/>
            <line num="250" count="2870294" type="stmt"/>
            <line num="254" count="574070" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariable" num="257" count="0" type="method"/>
            <line num="259" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="262" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="272" type="cond"/>
            <line num="273" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="273" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="279" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="287" type="cond"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="289" type="cond"/>
            <line num="290" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="294" type="cond"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="296" type="cond"/>
            <line num="297" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORVolatilityModel.java" name="LIBORVolatilityModel.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="5" loc="96" coveredmethods="3" methods="5" elements="11" classes="1" ncloc="34" statements="6" conditionals="0" coveredstatements="5"/>
            <class name="LIBORVolatilityModel">
               <metrics coveredelements="8" coveredconditionals="0" complexity="5" coveredmethods="3" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="private" signature="LIBORVolatilityModel()" num="34" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModel(TimeDiscretization,TimeDiscretization)" num="42" count="10351" type="method"/>
            <line num="43" count="10352" type="stmt"/>
            <line num="44" count="10352" type="stmt"/>
            <line num="45" count="10359" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterAsDouble() : double[]" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="66" count="131115238" type="method"/>
            <line num="67" count="131128284" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="73" count="131075060" type="method"/>
            <line num="74" count="131154222" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORVolatilityModelFourParameterExponentialForm.java" name="LIBORVolatilityModelFourParameterExponentialForm.java">
            <metrics coveredelements="40" coveredconditionals="6" complexity="19" loc="263" coveredmethods="5" methods="9" elements="97" classes="1" ncloc="145" statements="68" conditionals="20" coveredstatements="29"/>
            <class name="LIBORVolatilityModelFourParameterExponentialForm">
               <metrics coveredelements="40" coveredconditionals="6" complexity="19" coveredmethods="5" methods="9" elements="97" statements="68" conditionals="20" coveredstatements="29"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFourParameterExponentialForm(RandomVariableFactory,TimeDiscretization,TimeDiscretization,RandomVariable,RandomVariable,RandomVariable,RandomVariable,boolean)" num="72" count="1772" type="method"/>
            <line num="73" count="1771" type="stmt"/>
            <line num="74" count="1771" type="stmt"/>
            <line num="75" count="1770" type="stmt"/>
            <line num="76" count="1773" type="stmt"/>
            <line num="77" count="1776" type="stmt"/>
            <line num="78" count="1777" type="stmt"/>
            <line num="79" count="1776" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFourParameterExponentialForm(TimeDiscretization,TimeDiscretization,RandomVariable,RandomVariable,RandomVariable,RandomVariable,boolean)" num="93" count="1777" type="method"/>
            <line num="94" count="1776" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFourParameterExponentialForm(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double,double,double,double,boolean)" num="109" count="109" type="method"/>
            <line num="110" count="109" type="stmt"/>
            <line num="111" count="109" type="stmt"/>
            <line num="112" count="109" type="stmt"/>
            <line num="113" count="109" type="stmt"/>
            <line num="114" count="109" type="stmt"/>
            <line num="115" count="109" type="stmt"/>
            <line num="116" count="109" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFourParameterExponentialForm(TimeDiscretization,TimeDiscretization,double,double,double,double,boolean)" num="130" count="108" type="method"/>
            <line num="131" count="108" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : RandomVariable[]" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORVolatilityModelFourParameterExponentialForm" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getVolatility(int,int) : RandomVariable" num="167" count="6637179" type="method"/>
            <line num="170" count="6640247" type="stmt"/>
            <line num="171" count="6649060" type="stmt"/>
            <line falsecount="6647753" truecount="804" num="171" type="cond"/>
            <line num="172" count="804" type="stmt"/>
            <line num="175" count="6650221" type="stmt"/>
            <line falsecount="5723610" truecount="932680" num="175" type="cond"/>
            <line num="176" count="932719" type="stmt"/>
            <line num="177" count="932745" type="stmt"/>
            <line num="178" count="932685" type="stmt"/>
            <line num="180" count="932715" type="stmt"/>
            <line num="181" count="932735" type="stmt"/>
            <line falsecount="622825" truecount="309938" num="181" type="cond"/>
            <line num="183" count="309935" type="stmt"/>
            <line num="187" count="622827" type="stmt"/>
            <line num="190" count="932481" type="stmt"/>
            <line num="193" count="6652813" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="197" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORVolatilityModel" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="229" type="cond"/>
            <line num="230" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORVolatilityModelFourParameterExponentialFormIntegrated.java" name="LIBORVolatilityModelFourParameterExponentialFormIntegrated.java">
            <metrics coveredelements="60" coveredconditionals="5" complexity="25" loc="333" coveredmethods="4" methods="10" elements="157" classes="1" ncloc="194" statements="117" conditionals="30" coveredstatements="51"/>
            <class name="LIBORVolatilityModelFourParameterExponentialFormIntegrated">
               <metrics coveredelements="60" coveredconditionals="5" complexity="25" coveredmethods="4" methods="10" elements="157" statements="117" conditionals="30" coveredstatements="51"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFourParameterExponentialFormIntegrated(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double,double,double,double,boolean)" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFourParameterExponentialFormIntegrated(TimeDiscretization,TimeDiscretization,RandomVariable,RandomVariable,RandomVariable,RandomVariable,boolean)" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFourParameterExponentialFormIntegrated(TimeDiscretization,TimeDiscretization,double,double,double,double,boolean)" num="121" count="2002" type="method"/>
            <line num="122" count="2002" type="stmt"/>
            <line num="123" count="2002" type="stmt"/>
            <line num="124" count="2002" type="stmt"/>
            <line num="125" count="2002" type="stmt"/>
            <line num="126" count="2002" type="stmt"/>
            <line num="127" count="2002" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : RandomVariable[]" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORVolatilityModelFourParameterExponentialFormIntegrated" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getVolatility(int,int) : RandomVariable" num="163" count="46133" type="method"/>
            <line num="166" count="46176" type="stmt"/>
            <line num="167" count="46205" type="stmt"/>
            <line num="168" count="46224" type="stmt"/>
            <line num="170" count="46219" type="stmt"/>
            <line falsecount="46200" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="174" count="46210" type="stmt"/>
            <line num="176" count="46235" type="stmt"/>
            <line complexity="2" visibility="private" signature="getIntegratedVariance(double) : RandomVariable" num="179" count="92409" type="method"/>
            <line num="181" count="92416" type="stmt"/>
            <line falsecount="91211" truecount="1202" num="181" type="cond"/>
            <line num="182" count="1202" type="stmt"/>
            <line num="194" count="91221" type="stmt"/>
            <line num="195" count="91243" type="stmt"/>
            <line num="196" count="91247" type="stmt"/>
            <line num="197" count="91258" type="stmt"/>
            <line num="198" count="91257" type="stmt"/>
            <line num="199" count="91265" type="stmt"/>
            <line num="201" count="91259" type="stmt"/>
            <line num="202" count="91264" type="stmt"/>
            <line num="204" count="91255" type="stmt"/>
            <line num="205" count="91258" type="stmt"/>
            <line num="207" count="91263" type="stmt"/>
            <line num="208" count="91268" type="stmt"/>
            <line num="209" count="91265" type="stmt"/>
            <line num="217" count="91261" type="stmt"/>
            <line num="218" count="91256" type="stmt"/>
            <line num="220" count="91271" type="stmt"/>
            <line num="221" count="91265" type="stmt"/>
            <line num="222" count="91273" type="stmt"/>
            <line num="224" count="91269" type="stmt"/>
            <line num="225" count="91259" type="stmt"/>
            <line num="226" count="91270" type="stmt"/>
            <line num="228" count="91266" type="stmt"/>
            <line num="229" count="91264" type="stmt"/>
            <line num="230" count="91262" type="stmt"/>
            <line num="231" count="91261" type="stmt"/>
            <line num="232" count="91265" type="stmt"/>
            <line num="243" count="91267" type="stmt"/>
            <line num="244" count="91264" type="stmt"/>
            <line num="245" count="91269" type="stmt"/>
            <line num="246" count="91266" type="stmt"/>
            <line num="247" count="91269" type="stmt"/>
            <line num="248" count="91262" type="stmt"/>
            <line num="250" count="91269" type="stmt"/>
            <line complexity="2" visibility="private" signature="polynom(RandomVariable,double[]) : RandomVariable" num="253" count="456195" type="method"/>
            <line num="254" count="456225" type="stmt"/>
            <line num="256" count="456151" type="stmt"/>
            <line falsecount="456181" truecount="1367332" num="256" type="cond"/>
            <line num="257" count="1367881" type="stmt"/>
            <line num="259" count="456239" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="262" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORVolatilityModel" num="275" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="286" type="cond"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="293" type="cond"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="300" type="cond"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="302" type="cond"/>
            <line num="303" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="307" type="cond"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="309" type="cond"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="314" type="cond"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="316" type="cond"/>
            <line num="317" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="321" type="cond"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="323" type="cond"/>
            <line num="324" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORVolatilityModelFromGivenMatrix.java" name="LIBORVolatilityModelFromGivenMatrix.java">
            <metrics coveredelements="35" coveredconditionals="7" complexity="22" loc="226" coveredmethods="7" methods="11" elements="82" classes="1" ncloc="126" statements="49" conditionals="22" coveredstatements="21"/>
            <class name="LIBORVolatilityModelFromGivenMatrix">
               <metrics coveredelements="35" coveredconditionals="7" complexity="22" coveredmethods="7" methods="11" elements="82" statements="49" conditionals="22" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFromGivenMatrix(RandomVariableFactory,TimeDiscretization,TimeDiscretization,RandomVariable[][],boolean)" num="47" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFromGivenMatrix(TimeDiscretization,TimeDiscretization,RandomVariable[][],boolean)" num="69" count="100" type="method"/>
            <line num="74" count="100" type="stmt"/>
            <line num="76" count="100" type="stmt"/>
            <line num="77" count="100" type="stmt"/>
            <line num="78" count="100" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFromGivenMatrix(TimeDiscretization,TimeDiscretization,RandomVariable[][])" num="89" count="100" type="method"/>
            <line num="93" count="100" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFromGivenMatrix(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double[][],boolean)" num="106" count="209" type="method"/>
            <line num="112" count="209" type="stmt"/>
            <line num="114" count="209" type="stmt"/>
            <line num="115" count="209" type="stmt"/>
            <line num="116" count="209" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFromGivenMatrix(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double[][])" num="129" count="209" type="method"/>
            <line num="134" count="209" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFromGivenMatrix(TimeDiscretization,TimeDiscretization,double[][])" num="145" count="208" type="method"/>
            <line num="149" count="208" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility(int,int) : RandomVariable" num="153" count="3732120" type="method"/>
            <line num="155" count="3735583" type="stmt"/>
            <line complexity="5" visibility="public" signature="getParameter() : RandomVariable[]" num="158" count="10" type="method"/>
            <line num="160" count="10" type="stmt"/>
            <line num="161" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="161" type="cond"/>
            <line num="162" count="10" type="stmt"/>
            <line num="163" count="10" type="stmt"/>
            <line falsecount="10" truecount="40" num="163" type="cond"/>
            <line num="164" count="40" type="stmt"/>
            <line falsecount="40" truecount="160" num="164" type="cond"/>
            <line num="165" count="160" type="stmt"/>
            <line falsecount="100" truecount="60" num="165" type="cond"/>
            <line num="166" count="60" type="stmt"/>
            <line num="170" count="10" type="stmt"/>
            <line num="174" count="10" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORVolatilityModelFromGivenMatrix" num="177" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="184" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="193" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORVolatilityModel" num="198" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORVolatilityModelMaturityDependentFourParameterExponentialForm.java" name="LIBORVolatilityModelMaturityDependentFourParameterExponentialForm.java">
            <metrics coveredelements="22" coveredconditionals="1" complexity="24" loc="268" coveredmethods="3" methods="18" elements="111" classes="1" ncloc="195" statements="81" conditionals="12" coveredstatements="18"/>
            <class name="LIBORVolatilityModelMaturityDependentFourParameterExponentialForm">
               <metrics coveredelements="22" coveredconditionals="1" complexity="24" coveredmethods="3" methods="18" elements="111" statements="81" conditionals="12" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelMaturityDependentFourParameterExponentialForm(TimeDiscretization,TimeDiscretization,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[])" num="33" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelMaturityDependentFourParameterExponentialForm(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double[],double[],double[],double[])" num="57" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelMaturityDependentFourParameterExponentialForm(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double,double,double,double)" num="79" count="1667" type="method"/>
            <line num="84" count="1666" type="stmt"/>
            <line num="85" count="1667" type="stmt"/>
            <line num="86" count="1667" type="stmt"/>
            <line num="86" count="1667" type="stmt"/>
            <line num="87" count="1665" type="stmt"/>
            <line num="87" count="1665" type="stmt"/>
            <line num="88" count="1666" type="stmt"/>
            <line num="88" count="1668" type="stmt"/>
            <line num="89" count="1666" type="stmt"/>
            <line num="89" count="1666" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelMaturityDependentFourParameterExponentialForm(TimeDiscretization,TimeDiscretization,double,double,double,double)" num="100" count="1666" type="method"/>
            <line num="102" count="1667" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelMaturityDependentFourParameterExponentialForm(TimeDiscretization,TimeDiscretization,double[],double[],double[],double[])" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : RandomVariable[]" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORVolatilityModelMaturityDependentFourParameterExponentialForm" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getVolatility(int,int) : RandomVariable" num="154" count="15774004" type="method"/>
            <line num="157" count="15775123" type="stmt"/>
            <line num="158" count="15775331" type="stmt"/>
            <line num="159" count="15774136" type="stmt"/>
            <line num="161" count="15775721" type="stmt"/>
            <line num="162" count="15775581" type="stmt"/>
            <line falsecount="15774984" truecount="0" num="162" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="168" count="15775125" type="stmt"/>
            <line num="171" count="15772454" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="174" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORVolatilityModel" num="186" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="198" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="210" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="225" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="235" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="243" type="cond"/>
            <line num="244" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="245" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="253" type="cond"/>
            <line num="254" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="255" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORVolatilityModelPiecewiseConstant.java" name="LIBORVolatilityModelPiecewiseConstant.java">
            <metrics coveredelements="93" coveredconditionals="26" complexity="41" loc="294" coveredmethods="8" methods="14" elements="182" classes="1" ncloc="219" statements="114" conditionals="54" coveredstatements="59"/>
            <class name="LIBORVolatilityModelPiecewiseConstant">
               <metrics coveredelements="93" coveredconditionals="26" complexity="41" coveredmethods="8" methods="14" elements="182" statements="114" conditionals="54" coveredstatements="59"/>
            </class>
            <line complexity="7" visibility="public" signature="LIBORVolatilityModelPiecewiseConstant(TimeDiscretization,TimeDiscretization,TimeDiscretization,TimeDiscretization,RandomVariable[],boolean)" num="36" count="4486" type="method"/>
            <line num="37" count="4486" type="stmt"/>
            <line num="39" count="4486" type="stmt"/>
            <line num="44" count="4486" type="stmt"/>
            <line num="45" count="4486" type="stmt"/>
            <line num="46" count="4486" type="stmt"/>
            <line falsecount="4486" truecount="35888" num="46" type="cond"/>
            <line num="47" count="35888" type="stmt"/>
            <line num="48" count="35888" type="stmt"/>
            <line falsecount="35888" truecount="287104" num="48" type="cond"/>
            <line num="49" count="287104" type="stmt"/>
            <line falsecount="215328" truecount="71776" num="49" type="cond"/>
            <line num="50" count="71776" type="stmt"/>
            <line num="53" count="215328" type="stmt"/>
            <line num="55" count="35888" type="stmt"/>
            <line num="58" count="4486" type="stmt"/>
            <line falsecount="4482" truecount="4" num="58" type="cond"/>
            <line num="59" count="4" type="stmt"/>
            <line num="60" count="4" type="stmt"/>
            <line num="62" count="4482" type="stmt"/>
            <line falsecount="0" truecount="4482" num="62" type="cond"/>
            <line num="63" count="4482" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="69" count="4486" type="stmt"/>
            <line falsecount="4486" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="4486" type="stmt"/>
            <line num="73" count="4486" type="stmt"/>
            <line num="74" count="4486" type="stmt"/>
            <line complexity="4" visibility="public" signature="LIBORVolatilityModelPiecewiseConstant(RandomVariableFactory,TimeDiscretization,TimeDiscretization,TimeDiscretization,TimeDiscretization,double[][],boolean)" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="LIBORVolatilityModelPiecewiseConstant(RandomVariableFactory,TimeDiscretization,TimeDiscretization,TimeDiscretization,TimeDiscretization,double[],boolean)" num="113" count="6" type="method"/>
            <line num="114" count="6" type="stmt"/>
            <line num="116" count="6" type="stmt"/>
            <line num="121" count="6" type="stmt"/>
            <line num="122" count="6" type="stmt"/>
            <line num="123" count="6" type="stmt"/>
            <line falsecount="6" truecount="48" num="123" type="cond"/>
            <line num="124" count="48" type="stmt"/>
            <line num="125" count="48" type="stmt"/>
            <line falsecount="48" truecount="384" num="125" type="cond"/>
            <line num="126" count="384" type="stmt"/>
            <line falsecount="288" truecount="96" num="126" type="cond"/>
            <line num="127" count="96" type="stmt"/>
            <line num="130" count="288" type="stmt"/>
            <line num="132" count="48" type="stmt"/>
            <line num="135" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="135" type="cond"/>
            <line num="136" count="6" type="stmt"/>
            <line num="137" count="6" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="149" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="149" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="6" type="stmt"/>
            <line num="153" count="6" type="stmt"/>
            <line num="154" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelPiecewiseConstant(TimeDiscretization,TimeDiscretization,TimeDiscretization,TimeDiscretization,double[],boolean)" num="157" count="6" type="method"/>
            <line num="158" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelPiecewiseConstant(TimeDiscretization,TimeDiscretization,TimeDiscretization,TimeDiscretization,double,boolean)" num="161" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelPiecewiseConstant(TimeDiscretization,TimeDiscretization,TimeDiscretization,TimeDiscretization,double[])" num="165" count="6" type="method"/>
            <line num="166" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelPiecewiseConstant(TimeDiscretization,TimeDiscretization,TimeDiscretization,TimeDiscretization,double)" num="169" count="6" type="method"/>
            <line num="170" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : RandomVariable[]" num="173" count="9014" type="method"/>
            <line num="175" count="9014" type="stmt"/>
            <line falsecount="0" truecount="9014" num="175" type="cond"/>
            <line num="176" count="9014" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORVolatilityModel" num="182" count="4482" type="method"/>
            <line num="184" count="4482" type="stmt"/>
            <line complexity="7" visibility="public" signature="getVolatility(int,int) : RandomVariable" num="194" count="114200047" type="method"/>
            <line num="197" count="114314517" type="stmt"/>
            <line num="198" count="114356762" type="stmt"/>
            <line num="199" count="114359948" type="stmt"/>
            <line num="201" count="114382463" type="stmt"/>
            <line num="202" count="114382037" type="stmt"/>
            <line falsecount="105401757" truecount="8964480" num="202" type="cond"/>
            <line num="204" count="8964480" type="stmt"/>
            <line num="206" count="8964480" type="stmt"/>
            <line falsecount="8964480" truecount="0" num="206" type="cond"/>
            <line num="210" count="105399826" type="stmt"/>
            <line num="211" count="105358442" type="stmt"/>
            <line falsecount="105400378" truecount="0" num="211" type="cond"/>
            <line num="212" count="0" type="stmt"/>
            <line num="214" count="105412113" type="stmt"/>
            <line falsecount="105397716" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="218" count="105424118" type="stmt"/>
            <line num="219" count="105405728" type="stmt"/>
            <line falsecount="105432568" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="105435804" type="stmt"/>
            <line falsecount="105403528" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="226" count="105428124" type="stmt"/>
            <line num="227" count="105300656" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="231" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSimulationTimeDiscretization() : TimeDiscretization" num="247" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeToMaturityDiscretization() : TimeDiscretization" num="254" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORVolatilityModel" num="258" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="266" type="cond"/>
            <line num="267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="267" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="272" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="281" type="cond"/>
            <line num="282" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORVolatilityModelTimeHomogenousPiecewiseConstant.java" name="LIBORVolatilityModelTimeHomogenousPiecewiseConstant.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="174" coveredmethods="0" methods="9" elements="62" classes="1" ncloc="96" statements="37" conditionals="16" coveredstatements="0"/>
            <class name="LIBORVolatilityModelTimeHomogenousPiecewiseConstant">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="9" elements="62" statements="37" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="LIBORVolatilityModelTimeHomogenousPiecewiseConstant(RandomVariableFactory,TimeDiscretization,TimeDiscretization,TimeDiscretization,RandomVariable[])" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelTimeHomogenousPiecewiseConstant(TimeDiscretization,TimeDiscretization,TimeDiscretization,RandomVariable[])" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="LIBORVolatilityModelTimeHomogenousPiecewiseConstant(RandomVariableFactory,TimeDiscretization,TimeDiscretization,TimeDiscretization,double[])" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelTimeHomogenousPiecewiseConstant(TimeDiscretization,TimeDiscretization,TimeDiscretization,double[])" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : RandomVariable[]" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORVolatilityModelTimeHomogenousPiecewiseConstant" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getVolatility(int,int) : RandomVariable" num="129" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORVolatilityModel" num="169" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORVolatilityModelTwoParameterExponentialForm.java" name="LIBORVolatilityModelTwoParameterExponentialForm.java">
            <metrics coveredelements="30" coveredconditionals="6" complexity="13" loc="156" coveredmethods="4" methods="8" elements="49" classes="1" ncloc="91" statements="31" conditionals="10" coveredstatements="20"/>
            <class name="LIBORVolatilityModelTwoParameterExponentialForm">
               <metrics coveredelements="30" coveredconditionals="6" complexity="13" coveredmethods="4" methods="8" elements="49" statements="31" conditionals="10" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelTwoParameterExponentialForm(RandomVariableFactory,TimeDiscretization,TimeDiscretization,RandomVariable,RandomVariable,boolean)" num="46" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelTwoParameterExponentialForm(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double,double,boolean)" num="64" count="1" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelTwoParameterExponentialForm(TimeDiscretization,TimeDiscretization,double,double)" num="76" count="1" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : RandomVariable[]" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORVolatilityModelTwoParameterExponentialForm" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getVolatility(int,int) : RandomVariable" num="110" count="1768" type="method"/>
            <line num="113" count="1770" type="stmt"/>
            <line num="114" count="1770" type="stmt"/>
            <line falsecount="1769" truecount="1" num="114" type="cond"/>
            <line num="115" count="1" type="stmt"/>
            <line num="118" count="1770" type="stmt"/>
            <line falsecount="1320" truecount="450" num="118" type="cond"/>
            <line num="119" count="450" type="stmt"/>
            <line num="120" count="450" type="stmt"/>
            <line num="121" count="450" type="stmt"/>
            <line num="123" count="450" type="stmt"/>
            <line num="124" count="450" type="stmt"/>
            <line falsecount="330" truecount="120" num="124" type="cond"/>
            <line num="126" count="120" type="stmt"/>
            <line num="130" count="330" type="stmt"/>
            <line num="133" count="450" type="stmt"/>
            <line num="136" count="1770" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORVolatilityModel" num="151" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/ShortRateVolatilityModel.java" name="ShortRateVolatilityModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="47" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ShortRateVolatilityModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/ShortRateVolatilityModelAsGiven.java" name="ShortRateVolatilityModelAsGiven.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="4" loc="50" coveredmethods="4" methods="4" elements="11" classes="1" ncloc="28" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="ShortRateVolatilityModelAsGiven">
               <metrics coveredelements="11" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="11" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="ShortRateVolatilityModelAsGiven(TimeDiscretization,double[],double[])" num="29" count="18" type="method"/>
            <line num="30" count="18" type="stmt"/>
            <line num="31" count="18" type="stmt"/>
            <line num="32" count="18" type="stmt"/>
            <line num="33" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="36" count="535958" type="method"/>
            <line num="38" count="536224" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility(int) : RandomVariable" num="41" count="49481" type="method"/>
            <line num="43" count="49550" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMeanReversion(int) : RandomVariable" num="46" count="268765" type="method"/>
            <line num="48" count="268869" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/ShortRateVolatilityModelCalibrateable.java" name="ShortRateVolatilityModelCalibrateable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ShortRateVolatilityModelCalibrateable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/ShortRateVolatilityModelHoLee.java" name="ShortRateVolatilityModelHoLee.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="45" coveredmethods="0" methods="4" elements="9" classes="1" ncloc="26" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="ShortRateVolatilityModelHoLee">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ShortRateVolatilityModelHoLee(double)" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility(int) : RandomVariable" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMeanReversion(int) : RandomVariable" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/ShortRateVolatilityModelParametric.java" name="ShortRateVolatilityModelParametric.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="47" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ShortRateVolatilityModelParametric">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/ShortRateVolatilityModelPiecewiseConstant.java" name="ShortRateVolatilityModelPiecewiseConstant.java">
            <metrics coveredelements="78" coveredconditionals="18" complexity="36" loc="242" coveredmethods="8" methods="12" elements="136" classes="1" ncloc="176" statements="82" conditionals="42" coveredstatements="52"/>
            <class name="ShortRateVolatilityModelPiecewiseConstant">
               <metrics coveredelements="78" coveredconditionals="18" complexity="36" coveredmethods="8" methods="12" elements="136" statements="82" conditionals="42" coveredstatements="52"/>
            </class>
            <line complexity="3" visibility="public" signature="ShortRateVolatilityModelPiecewiseConstant(RandomVariableFactory,TimeDiscretization,TimeDiscretization,RandomVariable[],RandomVariable[],boolean,boolean)" num="35" count="58" type="method"/>
            <line num="36" count="58" type="stmt"/>
            <line num="38" count="58" type="stmt"/>
            <line falsecount="58" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
            <line num="42" count="58" type="stmt"/>
            <line falsecount="58" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="46" count="58" type="stmt"/>
            <line num="47" count="58" type="stmt"/>
            <line num="48" count="58" type="stmt"/>
            <line num="49" count="58" type="stmt"/>
            <line num="50" count="58" type="stmt"/>
            <line num="51" count="58" type="stmt"/>
            <line num="52" count="58" type="stmt"/>
            <line complexity="11" visibility="public" signature="ShortRateVolatilityModelPiecewiseConstant(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double[],double[],boolean,boolean)" num="55" count="2" type="method"/>
            <line num="56" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line falsecount="2" truecount="16" num="65" type="cond"/>
            <line num="66" count="16" type="stmt"/>
            <line falsecount="0" truecount="16" num="66" type="cond"/>
            <line num="67" count="16" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="72" type="cond"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line falsecount="2" truecount="2" num="88" type="cond"/>
            <line num="89" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="95" type="cond"/>
            <line num="96" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ShortRateVolatilityModelPiecewiseConstant(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double[],double[],boolean)" num="114" count="2" type="method"/>
            <line num="115" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ShortRateVolatilityModelPiecewiseConstant(RandomVariableFactory,TimeDiscretization,TimeDiscretization,RandomVariable[],RandomVariable[],boolean)" num="118" count="58" type="method"/>
            <line num="119" count="58" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility(int) : RandomVariable" num="122" count="562685" type="method"/>
            <line num="126" count="562725" type="stmt"/>
            <line num="129" count="562742" type="stmt"/>
            <line num="130" count="562842" type="stmt"/>
            <line complexity="2" visibility="public" signature="getVolatility(double) : RandomVariable" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMeanReversion(int) : RandomVariable" num="145" count="16015787" type="method"/>
            <line num="149" count="16039705" type="stmt"/>
            <line num="151" count="16014219" type="stmt"/>
            <line num="152" count="16138120" type="stmt"/>
            <line complexity="6" visibility="public" signature="getParameter() : RandomVariable[]" num="155" count="4" type="method"/>
            <line num="157" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="157" type="cond"/>
            <line num="158" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="158" type="cond"/>
            <line num="159" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="163" count="4" type="stmt"/>
            <line num="164" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="164" type="cond"/>
            <line num="165" count="4" type="stmt"/>
            <line num="168" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="168" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line num="172" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="175" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractShortRateVolatilityModelParametric" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractShortRateVolatilityModelParametric" num="199" count="58" type="method"/>
            <line num="201" count="58" type="stmt"/>
            <line num="202" count="58" type="stmt"/>
            <line num="204" count="58" type="stmt"/>
            <line falsecount="0" truecount="58" num="204" type="cond"/>
            <line num="205" count="58" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="210" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="223" count="58" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilityTimeDiscretization() : TimeDiscretization" num="238" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/TermStructCovarianceModelFromLIBORCovarianceModel.java" name="TermStructCovarianceModelFromLIBORCovarianceModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="76" coveredmethods="0" methods="3" elements="39" classes="1" ncloc="47" statements="22" conditionals="14" coveredstatements="0"/>
            <class name="TermStructCovarianceModelFromLIBORCovarianceModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="3" elements="39" statements="22" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TermStructCovarianceModelFromLIBORCovarianceModel(AbstractLIBORCovarianceModelParametric)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getFactorLoading(double,double,double,TimeDiscretization,RandomVariable[],TermStructureModel) : RandomVariable[]" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/TermStructCovarianceModelFromLIBORCovarianceModelParametric.java" name="TermStructCovarianceModelFromLIBORCovarianceModelParametric.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="124" coveredmethods="0" methods="7" elements="74" classes="1" ncloc="84" statements="45" conditionals="22" coveredstatements="0"/>
            <class name="TermStructCovarianceModelFromLIBORCovarianceModelParametric">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="7" elements="74" statements="45" conditionals="22" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TermStructCovarianceModelFromLIBORCovarianceModelParametric(TermStructureTenorTimeScalingInterface,AbstractLIBORCovarianceModelParametric)" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getScaledTenorTime(double,double) : double" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="34" type="cond"/>
            <line num="35" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getFactorLoading(double,double,double,TimeDiscretization,RandomVariable[],TermStructureModel) : RandomVariable[]" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : double[]" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedParameters(double[]) : TermStructureCovarianceModelParametric" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : TermStructureCovarianceModelParametric" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/TermStructureCovarianceModelInterface.java" name="TermStructureCovarianceModelInterface.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="16" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TermStructureCovarianceModelInterface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/TermStructureCovarianceModelParametric.java" name="TermStructureCovarianceModelParametric.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="22" loc="213" coveredmethods="0" methods="3" elements="110" classes="1" ncloc="142" statements="77" conditionals="30" coveredstatements="0"/>
            <class name="TermStructureCovarianceModelParametric">
               <metrics coveredelements="0" coveredconditionals="0" complexity="22" coveredmethods="0" methods="3" elements="110" statements="77" conditionals="30" coveredstatements="0"/>
            </class>
            <line complexity="13" visibility="public" signature="getCloneCalibrated(TermStructureModel,CalibrationProduct[],Map&lt;String, Object&gt;) : TermStructureCovarianceModelParametric" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="setValues(double[],double[]) : void" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="call() : Double" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/TermStructureFactorLoadingsModelInterface.java" name="TermStructureFactorLoadingsModelInterface.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="53" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TermStructureFactorLoadingsModelInterface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/TermStructureFactorLoadingsModelParametricInterface.java" name="TermStructureFactorLoadingsModelParametricInterface.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="33" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TermStructureFactorLoadingsModelParametricInterface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/TermStructureTenorTimeScalingInterface.java" name="TermStructureTenorTimeScalingInterface.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="35" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TermStructureTenorTimeScalingInterface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/TermStructureTenorTimeScalingPicewiseConstant.java" name="TermStructureTenorTimeScalingPicewiseConstant.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="73" coveredmethods="0" methods="5" elements="32" classes="1" ncloc="45" statements="19" conditionals="8" coveredstatements="0"/>
            <class name="TermStructureTenorTimeScalingPicewiseConstant">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="32" statements="19" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="TermStructureTenorTimeScalingPicewiseConstant(TimeDiscretization,double[])" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="29" type="cond"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getScaledTenorTime(double,double) : double" num="34" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : TermStructureTenorTimeScalingInterface" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : double[]" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : TermStructureTenorTimeScalingInterface" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
         </file>
      </package>
   </project>
   <testproject name="finmath lib 5.0.2" timestamp="1592578122315">
      <metrics coveredelements="10184" complexity="1581" loc="29348" methods="682" classes="142" statements="10337" packages="44" coveredconditionals="827" coveredmethods="614" elements="12161" ncloc="19073" files="126" conditionals="1142" coveredstatements="8743"/>
      <package name="net.finmath.montecarlo.interestrate">
         <metrics coveredelements="2444" complexity="324" loc="7101" methods="102" classes="16" statements="2756" coveredconditionals="238" coveredmethods="84" elements="3210" ncloc="4572" files="11" conditionals="352" coveredstatements="2122"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/CapValuationTest.java" name="CapValuationTest.java">
            <metrics coveredelements="61" coveredconditionals="2" complexity="4" loc="221" coveredmethods="3" methods="3" elements="61" classes="1" ncloc="122" statements="56" conditionals="2" coveredstatements="56"/>
            <class name="CapValuationTest">
               <metrics coveredelements="61" complexity="4" methods="3" testruns="2" statements="56" coveredconditionals="2" coveredmethods="3" elements="61" testfailures="0" testduration="60.129" conditionals="2" coveredstatements="56" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="CapValuationTest()" num="60" count="2" type="method"/>
            <line num="62" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="init(int) : void" num="75" count="2" type="method"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCap() : void" num="164" testsuccess="true" count="2" testduration="27.333" type="method"/>
            <line num="169" count="2" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line num="172" count="2" type="stmt"/>
            <line num="173" count="2" type="stmt"/>
            <line falsecount="2" truecount="156" num="173" type="cond"/>
            <line num="175" count="156" type="stmt"/>
            <line num="176" count="156" type="stmt"/>
            <line num="178" count="156" type="stmt"/>
            <line num="179" count="156" type="stmt"/>
            <line num="180" count="156" type="stmt"/>
            <line num="181" count="156" type="stmt"/>
            <line num="182" count="156" type="stmt"/>
            <line num="185" count="156" type="stmt"/>
            <line num="188" count="156" type="stmt"/>
            <line num="189" count="156" type="stmt"/>
            <line num="192" count="156" type="stmt"/>
            <line num="193" count="156" type="stmt"/>
            <line num="194" count="156" type="stmt"/>
            <line num="195" count="156" type="stmt"/>
            <line num="197" count="156" type="stmt"/>
            <line num="199" count="156" type="stmt"/>
            <line num="202" count="156" type="stmt"/>
            <line num="203" count="156" type="stmt"/>
            <line num="204" count="156" type="stmt"/>
            <line num="207" count="156" type="stmt"/>
            <line num="208" count="156" type="stmt"/>
            <line num="210" count="156" type="stmt"/>
            <line num="213" count="2" type="stmt"/>
            <line num="214" count="2" type="stmt"/>
            <line num="219" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/HullWhiteModelCalibrationTest.java" name="HullWhiteModelCalibrationTest.java">
            <metrics coveredelements="182" coveredconditionals="13" complexity="13" loc="389" coveredmethods="5" methods="5" elements="184" classes="1" ncloc="249" statements="165" conditionals="14" coveredstatements="164"/>
            <class name="HullWhiteModelCalibrationTest">
               <metrics coveredelements="182" complexity="13" methods="5" testruns="2" statements="165" coveredconditionals="13" coveredmethods="5" elements="184" testfailures="0" testduration="14.963" conditionals="14" coveredstatements="164" testpasses="2"/>
            </class>
            <line complexity="2" visibility="private" signature="createCalibrationItem(double,double,double,int,double,double,String,ForwardCurve,DiscountCurve) : CalibrationProduct" num="68" count="14" type="method"/>
            <line num="70" count="14" type="stmt"/>
            <line num="71" count="14" type="stmt"/>
            <line num="72" count="14" type="stmt"/>
            <line num="74" count="14" type="stmt"/>
            <line falsecount="14" truecount="180" num="74" type="cond"/>
            <line num="75" count="180" type="stmt"/>
            <line num="76" count="180" type="stmt"/>
            <line num="77" count="180" type="stmt"/>
            <line num="79" count="14" type="stmt"/>
            <line num="82" count="14" type="stmt"/>
            <line num="85" count="14" type="stmt"/>
            <line num="86" count="14" type="stmt"/>
            <line num="93" count="14" type="stmt"/>
            <line num="95" count="14" type="stmt"/>
            <line complexity="6" visibility="public" signature="testATMSwaptionCalibration() : void" num="107" testsuccess="true" count="2" testduration="8.613" type="method"/>
            <line num="110" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line num="156" count="2" type="stmt"/>
            <line falsecount="2" truecount="14" num="156" type="cond"/>
            <line num="158" count="14" type="stmt"/>
            <line num="159" count="14" type="stmt"/>
            <line num="160" count="14" type="stmt"/>
            <line num="161" count="14" type="stmt"/>
            <line num="164" count="14" type="stmt"/>
            <line num="165" count="14" type="stmt"/>
            <line num="167" count="14" type="stmt"/>
            <line falsecount="14" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="171" count="14" type="stmt"/>
            <line num="173" count="14" type="stmt"/>
            <line num="174" count="14" type="stmt"/>
            <line num="176" count="14" type="stmt"/>
            <line num="178" count="14" type="stmt"/>
            <line num="180" count="14" type="stmt"/>
            <line num="181" count="14" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="187" count="2" type="stmt"/>
            <line num="188" count="2" type="stmt"/>
            <line num="190" count="2" type="stmt"/>
            <line num="192" count="2" type="stmt"/>
            <line num="194" count="2" type="stmt"/>
            <line num="196" count="2" type="stmt"/>
            <line num="199" count="2" type="stmt"/>
            <line num="200" count="2" type="stmt"/>
            <line num="201" count="2" type="stmt"/>
            <line num="202" count="2" type="stmt"/>
            <line num="204" count="2" type="stmt"/>
            <line num="205" count="2" type="stmt"/>
            <line num="206" count="2" type="stmt"/>
            <line falsecount="2" truecount="14" num="206" type="cond"/>
            <line num="207" count="14" type="stmt"/>
            <line num="211" count="2" type="stmt"/>
            <line num="212" count="2" type="stmt"/>
            <line num="214" count="2" type="stmt"/>
            <line num="215" count="2" type="stmt"/>
            <line num="216" count="2" type="stmt"/>
            <line num="217" count="16" type="stmt"/>
            <line num="220" count="2" type="stmt"/>
            <line num="221" count="2" type="stmt"/>
            <line num="223" count="2" type="stmt"/>
            <line num="224" count="2" type="stmt"/>
            <line num="225" count="2" type="stmt"/>
            <line num="226" count="2" type="stmt"/>
            <line falsecount="2" truecount="14" num="226" type="cond"/>
            <line num="227" count="14" type="stmt"/>
            <line num="228" count="14" type="stmt"/>
            <line num="229" count="14" type="stmt"/>
            <line num="230" count="14" type="stmt"/>
            <line num="231" count="14" type="stmt"/>
            <line num="232" count="14" type="stmt"/>
            <line num="233" count="14" type="stmt"/>
            <line num="234" count="14" type="stmt"/>
            <line num="240" count="2" type="stmt"/>
            <line num="241" count="2" type="stmt"/>
            <line num="243" count="2" type="stmt"/>
            <line num="244" count="2" type="stmt"/>
            <line num="245" count="2" type="stmt"/>
            <line num="246" count="2" type="stmt"/>
            <line num="248" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCalibratedCurve() : AnalyticModel" num="251" count="2" type="method"/>
            <line num="252" count="2" type="stmt"/>
            <line num="253" count="2" type="stmt"/>
            <line num="254" count="2" type="stmt"/>
            <line num="255" count="2" type="stmt"/>
            <line num="256" count="2" type="stmt"/>
            <line num="257" count="2" type="stmt"/>
            <line num="259" count="2" type="stmt"/>
            <line num="261" count="2" type="stmt"/>
            <line num="262" count="2" type="stmt"/>
            <line num="263" count="2" type="stmt"/>
            <line num="264" count="2" type="stmt"/>
            <line num="265" count="2" type="stmt"/>
            <line num="266" count="2" type="stmt"/>
            <line num="267" count="2" type="stmt"/>
            <line num="268" count="2" type="stmt"/>
            <line num="269" count="2" type="stmt"/>
            <line num="271" count="2" type="stmt"/>
            <line complexity="3" visibility="private" signature="getCalibratedCurve(AnalyticModel,Map&lt;String, Object&gt;) : AnalyticModel" num="274" count="2" type="method"/>
            <line num="276" count="2" type="stmt"/>
            <line num="277" count="2" type="stmt"/>
            <line num="278" count="2" type="stmt"/>
            <line num="279" count="2" type="stmt"/>
            <line num="280" count="2" type="stmt"/>
            <line num="281" count="2" type="stmt"/>
            <line num="282" count="2" type="stmt"/>
            <line num="283" count="2" type="stmt"/>
            <line num="284" count="2" type="stmt"/>
            <line num="286" count="2" type="stmt"/>
            <line num="287" count="2" type="stmt"/>
            <line num="288" count="2" type="stmt"/>
            <line num="290" count="2" type="stmt"/>
            <line num="291" count="2" type="stmt"/>
            <line num="293" count="2" type="stmt"/>
            <line num="294" count="2" type="stmt"/>
            <line num="296" count="2" type="stmt"/>
            <line num="306" count="2" type="stmt"/>
            <line num="309" count="2" type="stmt"/>
            <line num="310" count="2" type="stmt"/>
            <line num="311" count="2" type="stmt"/>
            <line num="312" count="2" type="stmt"/>
            <line num="313" count="2" type="stmt"/>
            <line num="314" count="2" type="stmt"/>
            <line num="315" count="2" type="stmt"/>
            <line num="316" count="2" type="stmt"/>
            <line falsecount="2" truecount="42" num="316" type="cond"/>
            <line num="318" count="42" type="stmt"/>
            <line num="319" count="42" type="stmt"/>
            <line num="321" count="42" type="stmt"/>
            <line num="322" count="42" type="stmt"/>
            <line num="323" count="42" type="stmt"/>
            <line num="324" count="42" type="stmt"/>
            <line num="327" count="2" type="stmt"/>
            <line num="330" count="2" type="stmt"/>
            <line num="344" count="2" type="stmt"/>
            <line num="349" count="2" type="stmt"/>
            <line num="350" count="2" type="stmt"/>
            <line num="355" count="2" type="stmt"/>
            <line num="356" count="2" type="stmt"/>
            <line num="357" count="2" type="stmt"/>
            <line num="359" count="2" type="stmt"/>
            <line num="362" count="2" type="stmt"/>
            <line num="365" count="2" type="stmt"/>
            <line num="367" count="2" type="stmt"/>
            <line num="368" count="2" type="stmt"/>
            <line num="369" count="42" type="stmt"/>
            <line num="370" count="42" type="stmt"/>
            <line num="371" count="42" type="stmt"/>
            <line num="372" count="42" type="stmt"/>
            <line num="374" count="2" type="stmt"/>
            <line num="376" count="2" type="stmt"/>
            <line num="378" count="2" type="stmt"/>
            <line num="379" count="2" type="stmt"/>
            <line falsecount="2" truecount="44" num="379" type="cond"/>
            <line num="380" count="44" type="stmt"/>
            <line num="381" count="44" type="stmt"/>
            <line num="383" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(ForwardCurve,DiscountCurve,double[]) : double" num="386" count="14" type="method"/>
            <line num="387" count="14" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/HullWhiteModelTest.java" name="HullWhiteModelTest.java">
            <metrics coveredelements="414" coveredconditionals="36" complexity="39" loc="956" coveredmethods="13" methods="14" elements="444" classes="1" ncloc="579" statements="380" conditionals="50" coveredstatements="365"/>
            <class name="HullWhiteModelTest">
               <metrics coveredelements="414" complexity="39" methods="14" testruns="18" statements="380" coveredconditionals="36" coveredmethods="13" elements="444" testfailures="0" testduration="280.0859999999999" conditionals="50" coveredstatements="365" testpasses="18"/>
            </class>
            <line complexity="1" visibility="public" signature="HullWhiteModelTest()" num="109" count="18" type="method"/>
            <line num="110" count="18" type="stmt"/>
            <line num="111" count="18" type="stmt"/>
            <line num="112" count="18" type="stmt"/>
            <line num="113" count="18" type="stmt"/>
            <line complexity="4" visibility="public" signature="initModels() : void" num="116" count="18" type="method"/>
            <line num="120" count="18" type="stmt"/>
            <line num="121" count="18" type="stmt"/>
            <line num="122" count="18" type="stmt"/>
            <line num="125" count="18" type="stmt"/>
            <line num="136" count="18" type="stmt"/>
            <line num="139" count="18" type="stmt"/>
            <line num="151" count="18" type="stmt"/>
            <line num="153" count="18" type="stmt"/>
            <line num="158" count="18" type="stmt"/>
            <line num="159" count="18" type="stmt"/>
            <line num="161" count="18" type="stmt"/>
            <line num="170" count="18" type="stmt"/>
            <line num="175" count="18" type="stmt"/>
            <line num="176" count="18" type="stmt"/>
            <line num="179" count="18" type="stmt"/>
            <line num="182" count="18" type="stmt"/>
            <line num="184" count="18" type="stmt"/>
            <line num="186" count="18" type="stmt"/>
            <line num="196" count="18" type="stmt"/>
            <line num="197" count="18" type="stmt"/>
            <line falsecount="18" truecount="720" num="197" type="cond"/>
            <line num="198" count="720" type="stmt"/>
            <line falsecount="720" truecount="28800" num="198" type="cond"/>
            <line num="200" count="28800" type="stmt"/>
            <line num="201" count="28800" type="stmt"/>
            <line num="202" count="28800" type="stmt"/>
            <line num="203" count="28800" type="stmt"/>
            <line num="205" count="28800" type="stmt"/>
            <line num="206" count="28800" type="stmt"/>
            <line num="207" count="28800" type="stmt"/>
            <line num="209" count="28800" type="stmt"/>
            <line num="211" count="28800" type="stmt"/>
            <line num="212" count="28800" type="stmt"/>
            <line falsecount="14040" truecount="14760" num="212" type="cond"/>
            <line num="213" count="14760" type="stmt"/>
            <line num="216" count="14040" type="stmt"/>
            <line num="224" count="28800" type="stmt"/>
            <line num="227" count="18" type="stmt"/>
            <line num="232" count="18" type="stmt"/>
            <line num="239" count="18" type="stmt"/>
            <line num="244" count="18" type="stmt"/>
            <line num="247" count="18" type="stmt"/>
            <line num="250" count="18" type="stmt"/>
            <line num="253" count="18" type="stmt"/>
            <line num="256" count="18" type="stmt"/>
            <line num="261" count="18" type="stmt"/>
            <line num="264" count="18" type="stmt"/>
            <line num="266" count="18" type="stmt"/>
            <line num="268" count="18" type="stmt"/>
            <line complexity="3" visibility="public" signature="testBond() : void" num="272" testsuccess="true" count="2" testduration="8.64" type="method"/>
            <line num="278" count="2" type="stmt"/>
            <line num="279" count="2" type="stmt"/>
            <line num="281" count="2" type="stmt"/>
            <line num="283" count="2" type="stmt"/>
            <line num="284" count="2" type="stmt"/>
            <line falsecount="2" truecount="82" num="284" type="cond"/>
            <line num="285" count="82" type="stmt"/>
            <line num="286" count="82" type="stmt"/>
            <line num="289" count="82" type="stmt"/>
            <line num="292" count="82" type="stmt"/>
            <line num="293" count="82" type="stmt"/>
            <line num="296" count="82" type="stmt"/>
            <line num="297" count="82" type="stmt"/>
            <line num="300" count="82" type="stmt"/>
            <line num="301" count="82" type="stmt"/>
            <line falsecount="82" truecount="0" num="301" type="cond"/>
            <line num="302" count="0" type="stmt"/>
            <line num="304" count="82" type="stmt"/>
            <line num="305" count="82" type="stmt"/>
            <line num="308" count="82" type="stmt"/>
            <line num="309" count="82" type="stmt"/>
            <line num="312" count="82" type="stmt"/>
            <line num="313" count="82" type="stmt"/>
            <line num="315" count="82" type="stmt"/>
            <line num="317" count="82" type="stmt"/>
            <line num="320" count="2" type="stmt"/>
            <line num="322" count="2" type="stmt"/>
            <line num="323" count="2" type="stmt"/>
            <line num="325" count="2" type="stmt"/>
            <line num="329" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSwap() : void" num="332" testsuccess="true" count="2" testduration="50.998" type="method"/>
            <line num="338" count="2" type="stmt"/>
            <line num="339" count="2" type="stmt"/>
            <line num="341" count="2" type="stmt"/>
            <line num="348" count="2" type="stmt"/>
            <line num="358" count="2" type="stmt"/>
            <line num="368" count="2" type="stmt"/>
            <line num="369" count="2" type="stmt"/>
            <line num="370" count="2" type="stmt"/>
            <line falsecount="2" truecount="228" num="370" type="cond"/>
            <line num="372" count="228" type="stmt"/>
            <line num="373" count="228" type="stmt"/>
            <line num="375" count="228" type="stmt"/>
            <line num="376" count="228" type="stmt"/>
            <line num="378" count="228" type="stmt"/>
            <line num="380" count="228" type="stmt"/>
            <line num="383" count="228" type="stmt"/>
            <line num="386" count="228" type="stmt"/>
            <line num="389" count="228" type="stmt"/>
            <line num="390" count="228" type="stmt"/>
            <line num="393" count="228" type="stmt"/>
            <line num="395" count="228" type="stmt"/>
            <line num="398" count="228" type="stmt"/>
            <line num="399" count="228" type="stmt"/>
            <line num="402" count="228" type="stmt"/>
            <line num="403" count="228" type="stmt"/>
            <line num="406" count="228" type="stmt"/>
            <line num="407" count="228" type="stmt"/>
            <line num="409" count="228" type="stmt"/>
            <line num="411" count="228" type="stmt"/>
            <line num="414" count="2" type="stmt"/>
            <line num="416" count="2" type="stmt"/>
            <line num="417" count="2" type="stmt"/>
            <line num="418" count="2" type="stmt"/>
            <line num="424" count="2" type="stmt"/>
            <line complexity="8" visibility="public" signature="testCaplet() : void" num="427" testsuccess="true" count="2" testduration="7.518" type="method"/>
            <line num="432" count="2" type="stmt"/>
            <line num="433" count="2" type="stmt"/>
            <line num="435" count="2" type="stmt"/>
            <line num="437" count="2" type="stmt"/>
            <line num="438" count="2" type="stmt"/>
            <line falsecount="2" truecount="60" num="438" type="cond"/>
            <line num="440" count="60" type="stmt"/>
            <line num="441" count="60" type="stmt"/>
            <line num="443" count="60" type="stmt"/>
            <line num="444" count="60" type="stmt"/>
            <line num="445" count="60" type="stmt"/>
            <line num="446" count="60" type="stmt"/>
            <line num="448" count="60" type="stmt"/>
            <line num="449" count="60" type="stmt"/>
            <line falsecount="0" truecount="60" num="449" type="cond"/>
            <line num="450" count="60" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="451" type="cond"/>
            <line num="452" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="457" count="60" type="stmt"/>
            <line num="458" count="60" type="stmt"/>
            <line num="460" count="60" type="stmt"/>
            <line num="463" count="60" type="stmt"/>
            <line num="466" count="60" type="stmt"/>
            <line num="467" count="60" type="stmt"/>
            <line num="468" count="60" type="stmt"/>
            <line num="471" count="60" type="stmt"/>
            <line num="472" count="60" type="stmt"/>
            <line num="473" count="60" type="stmt"/>
            <line num="476" count="60" type="stmt"/>
            <line num="477" count="60" type="stmt"/>
            <line falsecount="0" truecount="60" num="477" type="cond"/>
            <line num="478" count="60" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="480" type="cond"/>
            <line num="481" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="483" type="cond"/>
            <line num="484" count="0" type="stmt"/>
            <line num="487" count="60" type="stmt"/>
            <line num="488" count="60" type="stmt"/>
            <line num="490" count="60" type="stmt"/>
            <line num="492" count="60" type="stmt"/>
            <line num="493" count="60" type="stmt"/>
            <line num="494" count="60" type="stmt"/>
            <line num="497" count="60" type="stmt"/>
            <line num="498" count="60" type="stmt"/>
            <line num="501" count="60" type="stmt"/>
            <line num="502" count="60" type="stmt"/>
            <line num="504" count="60" type="stmt"/>
            <line num="506" count="60" type="stmt"/>
            <line num="507" count="60" type="stmt"/>
            <line falsecount="0" truecount="60" num="507" type="cond"/>
            <line num="508" count="60" type="stmt"/>
            <line num="512" count="2" type="stmt"/>
            <line num="514" count="2" type="stmt"/>
            <line num="515" count="2" type="stmt"/>
            <line num="516" count="2" type="stmt"/>
            <line num="521" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwaption() : void" num="524" testsuccess="true" count="2" testduration="9.785" type="method"/>
            <line num="529" count="2" type="stmt"/>
            <line num="530" count="2" type="stmt"/>
            <line num="532" count="2" type="stmt"/>
            <line num="534" count="2" type="stmt"/>
            <line num="535" count="2" type="stmt"/>
            <line falsecount="2" truecount="60" num="535" type="cond"/>
            <line num="537" count="60" type="stmt"/>
            <line num="538" count="60" type="stmt"/>
            <line num="540" count="60" type="stmt"/>
            <line num="544" count="60" type="stmt"/>
            <line num="545" count="60" type="stmt"/>
            <line num="546" count="60" type="stmt"/>
            <line num="547" count="60" type="stmt"/>
            <line num="548" count="60" type="stmt"/>
            <line num="550" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="550" type="cond"/>
            <line num="551" count="300" type="stmt"/>
            <line num="552" count="300" type="stmt"/>
            <line num="553" count="300" type="stmt"/>
            <line num="555" count="60" type="stmt"/>
            <line num="558" count="60" type="stmt"/>
            <line num="559" count="60" type="stmt"/>
            <line num="562" count="60" type="stmt"/>
            <line num="563" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="563" type="cond"/>
            <line num="564" count="300" type="stmt"/>
            <line num="568" count="60" type="stmt"/>
            <line num="571" count="60" type="stmt"/>
            <line num="572" count="60" type="stmt"/>
            <line num="575" count="60" type="stmt"/>
            <line num="576" count="60" type="stmt"/>
            <line num="579" count="60" type="stmt"/>
            <line num="580" count="60" type="stmt"/>
            <line num="581" count="60" type="stmt"/>
            <line num="582" count="60" type="stmt"/>
            <line num="585" count="60" type="stmt"/>
            <line num="586" count="60" type="stmt"/>
            <line num="588" count="60" type="stmt"/>
            <line num="590" count="60" type="stmt"/>
            <line num="593" count="2" type="stmt"/>
            <line num="595" count="2" type="stmt"/>
            <line num="596" count="2" type="stmt"/>
            <line num="597" count="2" type="stmt"/>
            <line num="602" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="testBermudanSwaption() : void" num="605" testsuccess="true" count="2" testduration="24.431" type="method"/>
            <line num="610" count="2" type="stmt"/>
            <line num="611" count="2" type="stmt"/>
            <line num="613" count="2" type="stmt"/>
            <line num="615" count="2" type="stmt"/>
            <line num="616" count="2" type="stmt"/>
            <line falsecount="2" truecount="60" num="616" type="cond"/>
            <line num="618" count="60" type="stmt"/>
            <line num="619" count="60" type="stmt"/>
            <line num="621" count="60" type="stmt"/>
            <line num="625" count="60" type="stmt"/>
            <line num="626" count="60" type="stmt"/>
            <line num="627" count="60" type="stmt"/>
            <line num="628" count="60" type="stmt"/>
            <line num="629" count="60" type="stmt"/>
            <line num="631" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="631" type="cond"/>
            <line num="632" count="300" type="stmt"/>
            <line num="633" count="300" type="stmt"/>
            <line num="634" count="300" type="stmt"/>
            <line num="636" count="60" type="stmt"/>
            <line num="639" count="60" type="stmt"/>
            <line num="640" count="60" type="stmt"/>
            <line num="643" count="60" type="stmt"/>
            <line num="644" count="60" type="stmt"/>
            <line num="646" count="60" type="stmt"/>
            <line num="647" count="60" type="stmt"/>
            <line num="649" count="60" type="stmt"/>
            <line num="650" count="60" type="stmt"/>
            <line num="652" count="60" type="stmt"/>
            <line num="653" count="60" type="stmt"/>
            <line num="656" count="60" type="stmt"/>
            <line num="659" count="60" type="stmt"/>
            <line num="660" count="60" type="stmt"/>
            <line num="663" count="60" type="stmt"/>
            <line num="664" count="60" type="stmt"/>
            <line num="667" count="60" type="stmt"/>
            <line num="668" count="60" type="stmt"/>
            <line num="669" count="60" type="stmt"/>
            <line num="670" count="60" type="stmt"/>
            <line num="673" count="60" type="stmt"/>
            <line num="674" count="60" type="stmt"/>
            <line num="676" count="60" type="stmt"/>
            <line num="678" count="60" type="stmt"/>
            <line num="681" count="2" type="stmt"/>
            <line num="683" count="2" type="stmt"/>
            <line num="684" count="2" type="stmt"/>
            <line num="685" count="2" type="stmt"/>
            <line num="690" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="testCapletSmile() : void" num="693" testsuccess="true" count="2" testduration="7.192" type="method"/>
            <line num="695" count="2" type="stmt"/>
            <line num="700" count="2" type="stmt"/>
            <line num="701" count="2" type="stmt"/>
            <line num="703" count="2" type="stmt"/>
            <line num="705" count="2" type="stmt"/>
            <line num="706" count="2" type="stmt"/>
            <line num="707" count="2" type="stmt"/>
            <line num="708" count="2" type="stmt"/>
            <line falsecount="2" truecount="16" num="708" type="cond"/>
            <line num="710" count="16" type="stmt"/>
            <line num="712" count="16" type="stmt"/>
            <line num="713" count="16" type="stmt"/>
            <line num="714" count="16" type="stmt"/>
            <line num="716" count="16" type="stmt"/>
            <line num="717" count="16" type="stmt"/>
            <line falsecount="0" truecount="16" num="717" type="cond"/>
            <line num="718" count="16" type="stmt"/>
            <line num="719" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="719" type="cond"/>
            <line num="720" count="0" type="stmt"/>
            <line num="722" count="0" type="stmt"/>
            <line num="725" count="16" type="stmt"/>
            <line num="726" count="16" type="stmt"/>
            <line num="729" count="16" type="stmt"/>
            <line num="732" count="16" type="stmt"/>
            <line num="733" count="16" type="stmt"/>
            <line num="734" count="16" type="stmt"/>
            <line num="737" count="16" type="stmt"/>
            <line num="738" count="16" type="stmt"/>
            <line num="739" count="16" type="stmt"/>
            <line num="742" count="16" type="stmt"/>
            <line num="743" count="16" type="stmt"/>
            <line num="744" count="16" type="stmt"/>
            <line num="746" count="16" type="stmt"/>
            <line num="747" count="16" type="stmt"/>
            <line num="748" count="16" type="stmt"/>
            <line num="749" count="16" type="stmt"/>
            <line num="752" count="16" type="stmt"/>
            <line num="753" count="16" type="stmt"/>
            <line num="756" count="16" type="stmt"/>
            <line num="757" count="16" type="stmt"/>
            <line num="759" count="16" type="stmt"/>
            <line num="761" count="16" type="stmt"/>
            <line num="764" count="2" type="stmt"/>
            <line num="766" count="2" type="stmt"/>
            <line num="767" count="2" type="stmt"/>
            <line num="768" count="2" type="stmt"/>
            <line num="773" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="testZeroCMSSwap() : void" num="777" testsuccess="true" count="2" testduration="24.696" type="method"/>
            <line num="783" count="2" type="stmt"/>
            <line num="784" count="2" type="stmt"/>
            <line num="786" count="2" type="stmt"/>
            <line num="788" count="2" type="stmt"/>
            <line num="789" count="2" type="stmt"/>
            <line falsecount="2" truecount="20" num="789" type="cond"/>
            <line num="791" count="20" type="stmt"/>
            <line num="793" count="20" type="stmt"/>
            <line num="796" count="20" type="stmt"/>
            <line num="797" count="20" type="stmt"/>
            <line num="798" count="20" type="stmt"/>
            <line num="799" count="20" type="stmt"/>
            <line num="800" count="20" type="stmt"/>
            <line num="802" count="20" type="stmt"/>
            <line falsecount="20" truecount="200" num="802" type="cond"/>
            <line num="803" count="200" type="stmt"/>
            <line num="804" count="200" type="stmt"/>
            <line num="805" count="200" type="stmt"/>
            <line num="807" count="20" type="stmt"/>
            <line num="809" count="20" type="stmt"/>
            <line num="812" count="20" type="stmt"/>
            <line num="815" count="20" type="stmt"/>
            <line num="816" count="20" type="stmt"/>
            <line falsecount="20" truecount="200" num="816" type="cond"/>
            <line num="817" count="200" type="stmt"/>
            <line num="821" count="20" type="stmt"/>
            <line num="822" count="20" type="stmt"/>
            <line num="823" count="20" type="stmt"/>
            <line num="826" count="20" type="stmt"/>
            <line num="827" count="20" type="stmt"/>
            <line num="829" count="20" type="stmt"/>
            <line num="830" count="20" type="stmt"/>
            <line num="833" count="20" type="stmt"/>
            <line num="834" count="20" type="stmt"/>
            <line num="836" count="20" type="stmt"/>
            <line num="838" count="20" type="stmt"/>
            <line num="841" count="2" type="stmt"/>
            <line num="843" count="2" type="stmt"/>
            <line num="844" count="2" type="stmt"/>
            <line num="845" count="2" type="stmt"/>
            <line num="850" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLIBORInArrearsFloatLeg() : void" num="853" testsuccess="true" count="2" testduration="0.003" type="method"/>
            <line num="859" count="2" type="stmt"/>
            <line num="860" count="2" type="stmt"/>
            <line num="861" count="2" type="stmt"/>
            <line num="862" count="2" type="stmt"/>
            <line num="863" count="2" type="stmt"/>
            <line num="864" count="2" type="stmt"/>
            <line num="866" count="2" type="stmt"/>
            <line num="871" count="2" type="stmt"/>
            <line num="872" count="2" type="stmt"/>
            <line num="873" count="2" type="stmt"/>
            <line num="874" count="2" type="stmt"/>
            <line num="876" count="2" type="stmt"/>
            <line num="878" count="2" type="stmt"/>
            <line num="879" count="2" type="stmt"/>
            <line num="882" count="2" type="stmt"/>
            <line num="883" count="2" type="stmt"/>
            <line num="885" count="2" type="stmt"/>
            <line num="886" count="2" type="stmt"/>
            <line num="889" count="2" type="stmt"/>
            <line num="890" count="2" type="stmt"/>
            <line num="892" count="2" type="stmt"/>
            <line num="894" count="2" type="stmt"/>
            <line num="899" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPutOnMoneyMarketAccount() : void" num="902" testsuccess="true" count="2" testduration="8.189" type="method"/>
            <line num="908" count="2" type="stmt"/>
            <line num="910" count="2" type="stmt"/>
            <line num="911" count="2" type="stmt"/>
            <line num="914" count="2" type="stmt"/>
            <line num="915" count="2" type="stmt"/>
            <line num="917" count="2" type="stmt"/>
            <line num="918" count="2" type="stmt"/>
            <line num="921" count="2" type="stmt"/>
            <line num="922" count="2" type="stmt"/>
            <line num="924" count="2" type="stmt"/>
            <line num="926" count="2" type="stmt"/>
            <line num="931" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(LIBORModelMonteCarloSimulationModel,Schedule,Schedule,String) : double" num="934" count="0" type="method"/>
            <line num="935" count="0" type="stmt"/>
            <line num="936" count="0" type="stmt"/>
            <line num="937" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(LIBORModelMonteCarloSimulationModel,double[],String) : double" num="940" count="216" type="method"/>
            <line num="941" count="216" type="stmt"/>
            <line num="942" count="216" type="stmt"/>
            <line num="943" count="216" type="stmt"/>
            <line num="944" count="216" type="stmt"/>
            <line complexity="2" visibility="private" signature="getSwapAnnuity(LIBORModelMonteCarloSimulationModel,double[]) : double" num="949" count="196" type="method"/>
            <line num="950" count="196" type="stmt"/>
            <line num="951" count="196" type="stmt"/>
            <line falsecount="196" truecount="0" num="951" type="cond"/>
            <line num="952" count="0" type="stmt"/>
            <line num="954" count="196" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/LIBORMarketModelCalibrationAADTest.java" name="LIBORMarketModelCalibrationAADTest.java">
            <metrics coveredelements="309" coveredconditionals="22" complexity="43" loc="805" coveredmethods="12" methods="14" elements="362" classes="4" ncloc="539" statements="318" conditionals="30" coveredstatements="275"/>
            <class name="LIBORMarketModelCalibrationAADTest">
               <metrics coveredelements="309" complexity="43" methods="14" testruns="4" statements="318" coveredconditionals="22" coveredmethods="12" elements="362" testfailures="0" testduration="2099.1130000000003" conditionals="30" coveredstatements="275" testpasses="4"/>
            </class>
            <class name="LIBORMarketModelCalibrationAADTest.OptimizerDerivativeType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelCalibrationAADTest.OptimizerSolverType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelCalibrationAADTest.OptimizerType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="104" count="4" type="method"/>
            <line num="107" count="4" type="stmt"/>
            <line num="111" count="4" type="stmt"/>
            <line num="112" count="4" type="stmt"/>
            <line num="143" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="LIBORMarketModelCalibrationAADTest(OptimizerSolverType,OptimizerDerivativeType,OptimizerType,ValueUnit)" num="153" count="4" type="method"/>
            <line num="155" count="4" type="stmt"/>
            <line num="157" count="4" type="stmt"/>
            <line num="158" count="4" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line num="163" count="2" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="170" count="4" type="stmt"/>
            <line num="172" count="4" type="stmt"/>
            <line num="173" count="4" type="stmt"/>
            <line num="174" count="4" type="stmt"/>
            <line num="175" count="4" type="stmt"/>
            <line num="176" count="4" type="stmt"/>
            <line num="178" count="4" type="stmt"/>
            <line num="179" count="4" type="stmt"/>
            <line num="181" count="4" type="stmt"/>
            <line num="182" count="4" type="stmt"/>
            <line num="183" count="4" type="stmt"/>
            <line num="187" count="4" type="stmt"/>
            <line complexity="7" visibility="public" signature="testATMSwaptionCalibration() : void" num="198" count="4" type="method"/>
            <line num="201" count="4" type="stmt"/>
            <line num="203" count="4" type="stmt"/>
            <line num="204" count="4" type="stmt"/>
            <line num="205" count="4" type="stmt"/>
            <line num="206" count="4" type="stmt"/>
            <line num="207" count="4" type="stmt"/>
            <line num="208" count="4" type="stmt"/>
            <line num="209" count="4" type="stmt"/>
            <line num="210" count="4" type="stmt"/>
            <line num="211" count="4" type="stmt"/>
            <line num="212" count="4" type="stmt"/>
            <line num="213" count="4" type="stmt"/>
            <line num="214" count="4" type="stmt"/>
            <line num="216" count="4" type="stmt"/>
            <line num="217" count="4" type="stmt"/>
            <line num="218" count="4" type="stmt"/>
            <line num="219" count="4" type="stmt"/>
            <line num="220" count="4" type="stmt"/>
            <line num="221" count="4" type="stmt"/>
            <line num="222" count="4" type="stmt"/>
            <line complexity="6" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="224" count="4" type="method"/>
            <line num="231" count="4" type="stmt"/>
            <line num="232" count="4" type="stmt"/>
            <line num="233" count="4" type="stmt"/>
            <line num="234" count="4" type="stmt"/>
            <line num="235" count="4" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="245" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="259" count="4" type="stmt"/>
            <line num="261" count="4" type="stmt"/>
            <line num="262" count="4" type="stmt"/>
            <line falsecount="4" truecount="192" num="262" type="cond"/>
            <line num="263" count="192" type="stmt"/>
            <line num="266" count="4" type="stmt"/>
            <line num="268" count="4" type="stmt"/>
            <line num="269" count="4" type="stmt"/>
            <line falsecount="4" truecount="616" num="269" type="cond"/>
            <line num="270" count="616" type="stmt"/>
            <line num="274" count="4" type="stmt"/>
            <line num="276" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="276" type="cond"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="279" count="1786" type="method"/>
            <line num="281" count="1786" type="stmt"/>
            <line num="285" count="4" type="stmt"/>
            <line num="290" count="4" type="stmt"/>
            <line num="295" count="4" type="stmt"/>
            <line num="301" count="4" type="stmt"/>
            <line num="304" count="4" type="stmt"/>
            <line num="305" count="4" type="stmt"/>
            <line num="314" count="4" type="stmt"/>
            <line num="319" count="4" type="stmt"/>
            <line num="320" count="4" type="stmt"/>
            <line num="321" count="4" type="stmt"/>
            <line num="323" count="4" type="stmt"/>
            <line num="325" count="4" type="stmt"/>
            <line num="338" count="4" type="stmt"/>
            <line num="351" count="4" type="stmt"/>
            <line num="370" count="4" type="stmt"/>
            <line num="371" count="4" type="stmt"/>
            <line num="372" count="4" type="stmt"/>
            <line num="373" count="4" type="stmt"/>
            <line falsecount="4" truecount="784" num="373" type="cond"/>
            <line num="375" count="784" type="stmt"/>
            <line num="376" count="784" type="stmt"/>
            <line num="377" count="784" type="stmt"/>
            <line num="378" count="784" type="stmt"/>
            <line num="381" count="784" type="stmt"/>
            <line num="382" count="784" type="stmt"/>
            <line num="384" count="784" type="stmt"/>
            <line falsecount="616" truecount="168" num="384" type="cond"/>
            <line num="385" count="168" type="stmt"/>
            <line num="388" count="616" type="stmt"/>
            <line num="390" count="616" type="stmt"/>
            <line num="391" count="616" type="stmt"/>
            <line num="393" count="616" type="stmt"/>
            <line num="395" count="616" type="stmt"/>
            <line num="396" count="616" type="stmt"/>
            <line num="398" count="616" type="stmt"/>
            <line num="405" count="4" type="stmt"/>
            <line num="406" count="4" type="stmt"/>
            <line num="407" count="4" type="stmt"/>
            <line num="408" count="4" type="stmt"/>
            <line num="413" count="4" type="stmt"/>
            <line num="415" count="4" type="stmt"/>
            <line num="418" count="4" type="stmt"/>
            <line num="421" count="4" type="stmt"/>
            <line num="424" count="4" type="stmt"/>
            <line num="426" count="4" type="stmt"/>
            <line num="427" count="4" type="stmt"/>
            <line num="428" count="4" type="stmt"/>
            <line num="429" count="4" type="stmt"/>
            <line num="430" count="4" type="stmt"/>
            <line num="431" count="4" type="stmt"/>
            <line num="435" count="4" type="stmt"/>
            <line num="436" count="4" type="stmt"/>
            <line num="440" count="4" type="stmt"/>
            <line num="441" count="4" type="stmt"/>
            <line num="442" count="4" type="stmt"/>
            <line num="444" count="4" type="stmt"/>
            <line num="445" count="4" type="stmt"/>
            <line num="446" count="4" type="stmt"/>
            <line num="448" count="4" type="stmt"/>
            <line num="453" count="4" type="stmt"/>
            <line num="454" count="4" type="stmt"/>
            <line falsecount="4" truecount="616" num="454" type="cond"/>
            <line num="455" count="616" type="stmt"/>
            <line falsecount="616" truecount="0" num="455" type="cond"/>
            <line num="456" count="616" type="stmt"/>
            <line num="458" count="4" type="stmt"/>
            <line num="467" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="469" type="cond"/>
            <line falsecount="0" truecount="4" num="470" type="cond"/>
            <line num="473" count="4" type="stmt"/>
            <line num="475" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCalibratedCurve() : AnalyticModel" num="478" count="4" type="method"/>
            <line num="479" count="4" type="stmt"/>
            <line num="480" count="4" type="stmt"/>
            <line num="481" count="4" type="stmt"/>
            <line num="482" count="4" type="stmt"/>
            <line num="483" count="4" type="stmt"/>
            <line num="484" count="4" type="stmt"/>
            <line num="486" count="4" type="stmt"/>
            <line num="488" count="4" type="stmt"/>
            <line num="489" count="4" type="stmt"/>
            <line num="490" count="4" type="stmt"/>
            <line num="491" count="4" type="stmt"/>
            <line num="492" count="4" type="stmt"/>
            <line num="493" count="4" type="stmt"/>
            <line num="494" count="4" type="stmt"/>
            <line num="495" count="4" type="stmt"/>
            <line num="496" count="4" type="stmt"/>
            <line num="498" count="4" type="stmt"/>
            <line complexity="2" visibility="private" signature="getCalibratedCurve(AnalyticModel,Map&lt;String, Object&gt;) : AnalyticModel" num="501" count="4" type="method"/>
            <line num="503" count="4" type="stmt"/>
            <line num="504" count="4" type="stmt"/>
            <line num="505" count="4" type="stmt"/>
            <line num="506" count="4" type="stmt"/>
            <line num="507" count="4" type="stmt"/>
            <line num="508" count="4" type="stmt"/>
            <line num="509" count="4" type="stmt"/>
            <line num="510" count="4" type="stmt"/>
            <line num="511" count="4" type="stmt"/>
            <line num="513" count="4" type="stmt"/>
            <line num="514" count="4" type="stmt"/>
            <line num="515" count="4" type="stmt"/>
            <line num="517" count="4" type="stmt"/>
            <line num="518" count="4" type="stmt"/>
            <line num="520" count="4" type="stmt"/>
            <line num="521" count="4" type="stmt"/>
            <line num="523" count="4" type="stmt"/>
            <line num="533" count="4" type="stmt"/>
            <line num="536" count="4" type="stmt"/>
            <line num="537" count="4" type="stmt"/>
            <line num="538" count="4" type="stmt"/>
            <line num="539" count="4" type="stmt"/>
            <line num="540" count="4" type="stmt"/>
            <line num="541" count="4" type="stmt"/>
            <line num="542" count="4" type="stmt"/>
            <line num="543" count="4" type="stmt"/>
            <line falsecount="4" truecount="84" num="543" type="cond"/>
            <line num="545" count="84" type="stmt"/>
            <line num="546" count="84" type="stmt"/>
            <line num="548" count="84" type="stmt"/>
            <line num="549" count="84" type="stmt"/>
            <line num="550" count="84" type="stmt"/>
            <line num="551" count="84" type="stmt"/>
            <line num="554" count="4" type="stmt"/>
            <line num="557" count="4" type="stmt"/>
            <line num="571" count="4" type="stmt"/>
            <line num="576" count="4" type="stmt"/>
            <line num="577" count="4" type="stmt"/>
            <line num="582" count="4" type="stmt"/>
            <line num="583" count="4" type="stmt"/>
            <line num="586" count="4" type="stmt"/>
            <line num="588" count="4" type="stmt"/>
            <line num="590" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(ForwardCurve,DiscountCurve,double[]) : double" num="593" count="616" type="method"/>
            <line num="594" count="616" type="stmt"/>
            <line complexity="6" visibility="private" signature="createATMCalibrationItem(double,double,double,int,double,double,ForwardCurve,DiscountCurve,ValueUnit) : CalibrationProduct" num="597" count="1232" type="method"/>
            <line num="599" count="1232" type="stmt"/>
            <line num="600" count="1232" type="stmt"/>
            <line num="601" count="1232" type="stmt"/>
            <line num="602" count="1232" type="stmt"/>
            <line falsecount="1232" truecount="25520" num="602" type="cond"/>
            <line num="603" count="25520" type="stmt"/>
            <line num="604" count="25520" type="stmt"/>
            <line num="605" count="25520" type="stmt"/>
            <line num="607" count="1232" type="stmt"/>
            <line num="609" count="1232" type="stmt"/>
            <line num="616" count="1232" type="stmt"/>
            <line num="617" count="1232" type="stmt"/>
            <line num="618" count="616" type="stmt"/>
            <line num="619" count="616" type="stmt"/>
            <line num="620" count="616" type="stmt"/>
            <line num="621" count="616" type="stmt"/>
            <line num="625" count="616" type="stmt"/>
            <line num="626" count="616" type="stmt"/>
            <line num="627" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line num="629" count="0" type="stmt"/>
            <line num="630" count="616" type="stmt"/>
            <line num="631" count="616" type="stmt"/>
            <line num="632" count="616" type="stmt"/>
            <line num="633" count="0" type="stmt"/>
            <line num="634" count="0" type="stmt"/>
            <line num="637" count="1232" type="stmt"/>
            <line complexity="6" visibility="private" signature="createCalibrationItem(double,double,double,int,double,double,ForwardCurve,DiscountCurve,ValueUnit) : CalibrationProduct" num="640" count="0" type="method"/>
            <line num="642" count="0" type="stmt"/>
            <line num="643" count="0" type="stmt"/>
            <line num="644" count="0" type="stmt"/>
            <line num="646" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="646" type="cond"/>
            <line num="647" count="0" type="stmt"/>
            <line num="648" count="0" type="stmt"/>
            <line num="649" count="0" type="stmt"/>
            <line num="651" count="0" type="stmt"/>
            <line num="654" count="0" type="stmt"/>
            <line num="657" count="0" type="stmt"/>
            <line num="658" count="0" type="stmt"/>
            <line num="660" count="0" type="stmt"/>
            <line num="667" count="0" type="stmt"/>
            <line num="668" count="0" type="stmt"/>
            <line num="669" count="0" type="stmt"/>
            <line num="670" count="0" type="stmt"/>
            <line num="674" count="0" type="stmt"/>
            <line num="675" count="0" type="stmt"/>
            <line num="676" count="0" type="stmt"/>
            <line num="677" count="0" type="stmt"/>
            <line num="678" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line num="680" count="0" type="stmt"/>
            <line num="681" count="0" type="stmt"/>
            <line num="682" count="0" type="stmt"/>
            <line num="683" count="0" type="stmt"/>
            <line num="686" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="evaluateCalibration(LIBORModel,BrownianMotion,List&lt;String&gt;,List&lt;CalibrationProduct&gt;,List&lt;CalibrationProduct&gt;,double,double,String) : void" num="689" count="4" type="method"/>
            <line num="693" count="4" type="stmt"/>
            <line num="694" count="4" type="stmt"/>
            <line num="695" count="4" type="stmt"/>
            <line num="696" count="4" type="stmt"/>
            <line num="697" count="192" type="stmt"/>
            <line num="700" count="4" type="stmt"/>
            <line num="701" count="4" type="stmt"/>
            <line num="703" count="4" type="stmt"/>
            <line num="704" count="4" type="stmt"/>
            <line num="705" count="4" type="stmt"/>
            <line num="706" count="4" type="stmt"/>
            <line falsecount="4" truecount="616" num="706" type="cond"/>
            <line num="707" count="616" type="stmt"/>
            <line num="708" count="616" type="stmt"/>
            <line num="709" count="616" type="stmt"/>
            <line num="710" count="576" type="stmt"/>
            <line num="711" count="576" type="stmt"/>
            <line num="712" count="576" type="stmt"/>
            <line num="713" count="576" type="stmt"/>
            <line num="714" count="576" type="stmt"/>
            <line num="720" count="4" type="stmt"/>
            <line num="721" count="4" type="stmt"/>
            <line num="722" count="4" type="stmt"/>
            <line num="723" count="4" type="stmt"/>
            <line falsecount="4" truecount="616" num="723" type="cond"/>
            <line num="724" count="616" type="stmt"/>
            <line num="725" count="616" type="stmt"/>
            <line num="726" count="616" type="stmt"/>
            <line num="727" count="576" type="stmt"/>
            <line num="728" count="576" type="stmt"/>
            <line num="729" count="576" type="stmt"/>
            <line num="730" count="576" type="stmt"/>
            <line num="731" count="576" type="stmt"/>
            <line num="738" count="4" type="stmt"/>
            <line num="742" count="4" type="stmt"/>
            <line num="743" count="4" type="stmt"/>
            <line num="745" count="4" type="stmt"/>
            <line num="746" count="4" type="stmt"/>
            <line num="747" count="4" type="stmt"/>
            <line num="748" count="4" type="stmt"/>
            <line num="749" count="4" type="stmt"/>
            <line num="750" count="4" type="stmt"/>
            <line num="751" count="4" type="stmt"/>
            <line num="754" count="4" type="stmt"/>
            <line num="755" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="printConfigurations(ValueUnit,OptimizerType,OptimizerDerivativeType,OptimizerSolverType,int,long,double,int,int,int,int) : void" num="758" count="4" type="method"/>
            <line num="760" count="4" type="stmt"/>
            <line num="761" count="4" type="stmt"/>
            <line num="763" count="4" type="stmt"/>
            <line num="764" count="4" type="stmt"/>
            <line num="765" count="4" type="stmt"/>
            <line num="766" count="4" type="stmt"/>
            <line num="767" count="4" type="stmt"/>
            <line num="768" count="4" type="stmt"/>
            <line num="769" count="4" type="stmt"/>
            <line num="770" count="4" type="stmt"/>
            <line num="771" count="4" type="stmt"/>
            <line num="772" count="4" type="stmt"/>
            <line num="773" count="4" type="stmt"/>
            <line num="774" count="4" type="stmt"/>
            <line num="775" count="4" type="stmt"/>
            <line num="776" count="4" type="stmt"/>
            <line num="777" count="4" type="stmt"/>
            <line num="778" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="createInitialCovarianceModel(RandomVariableFactory,TimeDiscretization,TimeDiscretization,int) : AbstractLIBORCovarianceModelParametric" num="782" count="4" type="method"/>
            <line num="784" count="4" type="stmt"/>
            <line num="785" count="4" type="stmt"/>
            <line num="786" count="4" type="stmt"/>
            <line num="795" count="4" type="stmt"/>
            <line num="798" count="4" type="stmt"/>
            <line num="801" count="4" type="stmt"/>
            <line num="803" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/LIBORMarketModelCalibrationSmileTest.java" name="LIBORMarketModelCalibrationSmileTest.java">
            <metrics coveredelements="109" coveredconditionals="8" complexity="17" loc="476" coveredmethods="3" methods="5" elements="199" classes="1" ncloc="313" statements="182" conditionals="12" coveredstatements="98"/>
            <class name="LIBORMarketModelCalibrationSmileTest">
               <metrics coveredelements="109" complexity="17" methods="5" testruns="2" statements="182" coveredconditionals="8" coveredmethods="3" elements="199" testfailures="0" testduration="3677.587" conditionals="12" coveredstatements="98" testpasses="2"/>
            </class>
            <line complexity="7" visibility="private" signature="createCalibrationItem(double,double,double,int,double,double,String,ForwardCurve,DiscountCurve,String) : CalibrationProduct" num="77" count="38" type="method"/>
            <line num="79" count="38" type="stmt"/>
            <line num="80" count="38" type="stmt"/>
            <line num="81" count="38" type="stmt"/>
            <line num="83" count="38" type="stmt"/>
            <line falsecount="38" truecount="760" num="83" type="cond"/>
            <line num="84" count="760" type="stmt"/>
            <line num="85" count="760" type="stmt"/>
            <line num="86" count="760" type="stmt"/>
            <line num="88" count="38" type="stmt"/>
            <line num="91" count="38" type="stmt"/>
            <line num="94" count="38" type="stmt"/>
            <line num="95" count="38" type="stmt"/>
            <line num="102" count="38" type="stmt"/>
            <line num="103" count="38" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="38" type="stmt"/>
            <line num="106" count="38" type="stmt"/>
            <line num="107" count="38" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="116" count="38" type="stmt"/>
            <line num="117" count="38" type="stmt"/>
            <line num="118" count="38" type="stmt"/>
            <line num="119" count="38" type="stmt"/>
            <line num="120" count="38" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="130" count="38" type="stmt"/>
            <line complexity="5" visibility="public" signature="testSwaptionSmileCalibration() : void" num="133" testsuccess="true" count="2" testduration="1937.286" type="method"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="156" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="190" count="2" type="stmt"/>
            <line num="192" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line num="195" count="2" type="stmt"/>
            <line num="196" count="2" type="stmt"/>
            <line num="198" count="2" type="stmt"/>
            <line falsecount="2" truecount="18" num="198" type="cond"/>
            <line num="199" count="18" type="stmt"/>
            <line num="200" count="18" type="stmt"/>
            <line num="201" count="18" type="stmt"/>
            <line num="203" count="18" type="stmt"/>
            <line num="207" count="2" type="stmt"/>
            <line num="208" count="2" type="stmt"/>
            <line num="210" count="2" type="stmt"/>
            <line falsecount="2" truecount="20" num="210" type="cond"/>
            <line num="212" count="20" type="stmt"/>
            <line num="213" count="20" type="stmt"/>
            <line num="214" count="20" type="stmt"/>
            <line num="216" count="20" type="stmt"/>
            <line num="226" count="2" type="stmt"/>
            <line num="227" count="2" type="stmt"/>
            <line num="232" count="2" type="stmt"/>
            <line num="233" count="2" type="stmt"/>
            <line num="234" count="2" type="stmt"/>
            <line num="239" count="2" type="stmt"/>
            <line num="240" count="2" type="stmt"/>
            <line num="241" count="2" type="stmt"/>
            <line num="244" count="2" type="stmt"/>
            <line num="246" count="2" type="stmt"/>
            <line num="248" count="2" type="stmt"/>
            <line num="251" count="2" type="stmt"/>
            <line num="254" count="2" type="stmt"/>
            <line num="257" count="2" type="stmt"/>
            <line num="260" count="2" type="stmt"/>
            <line num="262" count="2" type="stmt"/>
            <line num="264" count="2" type="stmt"/>
            <line num="271" count="2" type="stmt"/>
            <line num="272" count="2" type="stmt"/>
            <line num="273" count="2" type="stmt"/>
            <line num="274" count="2" type="stmt"/>
            <line num="275" count="2" type="stmt"/>
            <line num="278" count="2" type="stmt"/>
            <line num="280" count="2" type="stmt"/>
            <line num="285" count="2" type="stmt"/>
            <line num="294" count="2" type="stmt"/>
            <line num="299" count="2" type="stmt"/>
            <line num="300" count="2" type="stmt"/>
            <line num="302" count="2" type="stmt"/>
            <line num="303" count="14" type="stmt"/>
            <line num="306" count="2" type="stmt"/>
            <line num="307" count="2" type="stmt"/>
            <line num="310" count="2" type="stmt"/>
            <line num="311" count="2" type="stmt"/>
            <line num="312" count="2" type="stmt"/>
            <line num="313" count="2" type="stmt"/>
            <line falsecount="2" truecount="38" num="313" type="cond"/>
            <line num="314" count="38" type="stmt"/>
            <line num="315" count="38" type="stmt"/>
            <line num="316" count="38" type="stmt"/>
            <line num="317" count="30" type="stmt"/>
            <line num="318" count="30" type="stmt"/>
            <line num="319" count="30" type="stmt"/>
            <line num="320" count="30" type="stmt"/>
            <line num="321" count="30" type="stmt"/>
            <line num="328" count="2" type="stmt"/>
            <line num="330" count="2" type="stmt"/>
            <line num="331" count="2" type="stmt"/>
            <line num="332" count="2" type="stmt"/>
            <line num="333" count="2" type="stmt"/>
            <line num="335" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCalibratedCurve() : AnalyticModel" num="338" count="0" type="method"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getCalibratedCurve(AnalyticModel,Map&lt;String, Object&gt;) : AnalyticModel" num="361" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="403" type="cond"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line num="458" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line num="463" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="466" type="cond"/>
            <line num="467" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(ForwardCurve,DiscountCurve,double[]) : double" num="473" count="38" type="method"/>
            <line num="474" count="38" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/LIBORMarketModelCalibrationTest.java" name="LIBORMarketModelCalibrationTest.java">
            <metrics coveredelements="268" coveredconditionals="21" complexity="32" loc="649" coveredmethods="7" methods="7" elements="294" classes="3" ncloc="458" statements="259" conditionals="28" coveredstatements="240"/>
            <class name="LIBORMarketModelCalibrationTest">
               <metrics coveredelements="268" complexity="32" methods="7" testruns="6" statements="259" coveredconditionals="21" coveredmethods="7" elements="294" testfailures="0" testduration="13508.025" conditionals="28" coveredstatements="240" testpasses="6"/>
            </class>
            <class name="LIBORMarketModelCalibrationTest.LIBORMarketModelType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelCalibrationTest.CalibrationProductType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="98" count="4" type="method"/>
            <line num="100" count="4" type="stmt"/>
            <line num="102" count="4" type="stmt"/>
            <line num="103" count="4" type="stmt"/>
            <line num="104" count="4" type="stmt"/>
            <line num="106" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelCalibrationTest(LIBORMarketModelType,CalibrationProductType)" num="120" count="6" type="method"/>
            <line num="121" count="6" type="stmt"/>
            <line num="122" count="6" type="stmt"/>
            <line num="123" count="6" type="stmt"/>
            <line complexity="17" visibility="public" signature="testATMSwaptionCalibration() : void" num="136" count="6" type="method"/>
            <line num="140" count="6" type="stmt"/>
            <line num="141" count="6" type="stmt"/>
            <line num="143" count="6" type="stmt"/>
            <line num="148" count="6" type="stmt"/>
            <line num="149" count="6" type="stmt"/>
            <line num="150" count="6" type="stmt"/>
            <line num="151" count="6" type="stmt"/>
            <line num="156" count="6" type="stmt"/>
            <line num="158" count="6" type="stmt"/>
            <line num="161" count="6" type="stmt"/>
            <line num="162" count="6" type="stmt"/>
            <line num="164" count="6" type="stmt"/>
            <line num="165" count="6" type="stmt"/>
            <line num="170" count="6" type="stmt"/>
            <line num="175" count="6" type="stmt"/>
            <line num="176" count="6" type="stmt"/>
            <line num="177" count="6" type="stmt"/>
            <line num="178" count="6" type="stmt"/>
            <line num="180" count="6" type="stmt"/>
            <line num="182" count="6" type="stmt"/>
            <line num="197" count="6" type="stmt"/>
            <line num="212" count="6" type="stmt"/>
            <line num="232" count="6" type="stmt"/>
            <line num="233" count="6" type="stmt"/>
            <line num="234" count="6" type="stmt"/>
            <line num="235" count="6" type="stmt"/>
            <line falsecount="6" truecount="1176" num="235" type="cond"/>
            <line num="237" count="1176" type="stmt"/>
            <line num="238" count="1176" type="stmt"/>
            <line num="239" count="1176" type="stmt"/>
            <line num="240" count="1176" type="stmt"/>
            <line num="243" count="1176" type="stmt"/>
            <line num="244" count="1176" type="stmt"/>
            <line num="246" count="1176" type="stmt"/>
            <line falsecount="924" truecount="252" num="246" type="cond"/>
            <line num="247" count="252" type="stmt"/>
            <line num="250" count="924" type="stmt"/>
            <line num="252" count="924" type="stmt"/>
            <line num="253" count="924" type="stmt"/>
            <line num="255" count="924" type="stmt"/>
            <line num="257" count="924" type="stmt"/>
            <line num="259" count="924" type="stmt"/>
            <line num="260" count="924" type="stmt"/>
            <line num="261" count="924" type="stmt"/>
            <line falsecount="308" truecount="616" num="261" type="cond"/>
            <line num="262" count="924" type="stmt"/>
            <line num="269" count="6" type="stmt"/>
            <line num="270" count="6" type="stmt"/>
            <line num="271" count="6" type="stmt"/>
            <line num="272" count="6" type="stmt"/>
            <line num="277" count="6" type="stmt"/>
            <line num="281" count="6" type="stmt"/>
            <line num="282" count="6" type="stmt"/>
            <line num="285" count="6" type="stmt"/>
            <line num="288" count="6" type="stmt"/>
            <line num="290" count="6" type="stmt"/>
            <line num="291" count="6" type="stmt"/>
            <line num="292" count="4" type="stmt"/>
            <line num="293" count="4" type="stmt"/>
            <line num="294" count="4" type="stmt"/>
            <line num="295" count="2" type="stmt"/>
            <line num="296" count="2" type="stmt"/>
            <line num="297" count="2" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="302" count="6" type="stmt"/>
            <line num="305" count="6" type="stmt"/>
            <line num="308" count="6" type="stmt"/>
            <line num="311" count="6" type="stmt"/>
            <line num="312" count="6" type="stmt"/>
            <line num="313" count="6" type="stmt"/>
            <line num="314" count="6" type="stmt"/>
            <line num="315" count="6" type="stmt"/>
            <line num="319" count="6" type="stmt"/>
            <line num="320" count="6" type="stmt"/>
            <line num="321" count="6" type="stmt"/>
            <line num="322" count="6" type="stmt"/>
            <line num="323" count="6" type="stmt"/>
            <line num="324" count="6" type="stmt"/>
            <line num="329" count="6" type="stmt"/>
            <line num="330" count="6" type="stmt"/>
            <line num="331" count="6" type="stmt"/>
            <line num="332" count="6" type="stmt"/>
            <line num="333" count="6" type="stmt"/>
            <line num="334" count="6" type="stmt"/>
            <line num="336" count="6" type="stmt"/>
            <line num="341" count="6" type="stmt"/>
            <line num="342" count="6" type="stmt"/>
            <line falsecount="6" truecount="924" num="342" type="cond"/>
            <line num="343" count="924" type="stmt"/>
            <line num="345" count="6" type="stmt"/>
            <line num="354" count="6" type="stmt"/>
            <line num="356" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="356" type="cond"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="364" count="6" type="stmt"/>
            <line num="365" count="6" type="stmt"/>
            <line num="367" count="6" type="stmt"/>
            <line num="368" count="6" type="stmt"/>
            <line num="369" count="6" type="stmt"/>
            <line num="370" count="6" type="stmt"/>
            <line falsecount="6" truecount="924" num="370" type="cond"/>
            <line num="371" count="924" type="stmt"/>
            <line num="372" count="924" type="stmt"/>
            <line num="373" count="924" type="stmt"/>
            <line num="374" count="924" type="stmt"/>
            <line num="375" count="864" type="stmt"/>
            <line num="376" count="864" type="stmt"/>
            <line num="377" count="864" type="stmt"/>
            <line num="378" count="864" type="stmt"/>
            <line num="379" count="864" type="stmt"/>
            <line num="380" count="864" type="stmt"/>
            <line num="381" count="864" type="stmt"/>
            <line num="383" count="864" type="stmt"/>
            <line falsecount="864" truecount="0" num="383" type="cond"/>
            <line num="384" count="0" type="stmt"/>
            <line num="399" count="6" type="stmt"/>
            <line num="400" count="6" type="stmt"/>
            <line num="401" count="6" type="stmt"/>
            <line num="402" count="6" type="stmt"/>
            <line num="403" count="6" type="stmt"/>
            <line num="404" count="6" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="409" count="6" type="stmt"/>
            <line num="410" count="6" type="stmt"/>
            <line num="411" count="6" type="stmt"/>
            <line num="412" count="6" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="420" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="420" type="cond"/>
            <line num="421" count="6" type="stmt"/>
            <line num="423" count="6" type="stmt"/>
            <line num="424" count="6" type="stmt"/>
            <line falsecount="6" truecount="924" num="424" type="cond"/>
            <line num="425" count="924" type="stmt"/>
            <line num="426" count="924" type="stmt"/>
            <line num="427" count="924" type="stmt"/>
            <line num="428" count="864" type="stmt"/>
            <line num="429" count="864" type="stmt"/>
            <line num="430" count="864" type="stmt"/>
            <line num="431" count="864" type="stmt"/>
            <line falsecount="864" truecount="0" num="431" type="cond"/>
            <line num="432" count="0" type="stmt"/>
            <line num="441" count="6" type="stmt"/>
            <line num="442" count="6" type="stmt"/>
            <line num="444" count="6" type="stmt"/>
            <line num="445" count="6" type="stmt"/>
            <line num="446" count="6" type="stmt"/>
            <line num="447" count="6" type="stmt"/>
            <line num="449" count="6" type="stmt"/>
            <line complexity="7" visibility="private" signature="createCalibrationItem(double,double,double,int,double,double,String,ForwardCurve,DiscountCurve,CalibrationProductType) : CalibrationProduct" num="452" count="2772" type="method"/>
            <line num="454" count="2772" type="stmt"/>
            <line num="455" count="2772" type="stmt"/>
            <line num="456" count="2772" type="stmt"/>
            <line num="458" count="2772" type="stmt"/>
            <line falsecount="2772" truecount="57420" num="458" type="cond"/>
            <line num="459" count="57420" type="stmt"/>
            <line num="460" count="57420" type="stmt"/>
            <line num="461" count="57420" type="stmt"/>
            <line num="463" count="2772" type="stmt"/>
            <line num="466" count="2772" type="stmt"/>
            <line num="469" count="2772" type="stmt"/>
            <line num="470" count="2772" type="stmt"/>
            <line num="477" count="2772" type="stmt"/>
            <line num="478" count="2772" type="stmt"/>
            <line num="479" count="1848" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="1848" type="stmt"/>
            <line num="482" count="1848" type="stmt"/>
            <line num="483" count="924" type="stmt"/>
            <line num="484" count="924" type="stmt"/>
            <line num="485" count="924" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line num="491" count="2772" type="stmt"/>
            <line num="492" count="2772" type="stmt"/>
            <line num="493" count="1848" type="stmt"/>
            <line num="494" count="1848" type="stmt"/>
            <line num="495" count="1848" type="stmt"/>
            <line num="496" count="924" type="stmt"/>
            <line num="497" count="924" type="stmt"/>
            <line num="501" count="924" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="506" count="2772" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCalibratedCurve() : AnalyticModel" num="509" count="6" type="method"/>
            <line num="510" count="6" type="stmt"/>
            <line num="511" count="6" type="stmt"/>
            <line num="512" count="6" type="stmt"/>
            <line num="513" count="6" type="stmt"/>
            <line num="514" count="6" type="stmt"/>
            <line num="515" count="6" type="stmt"/>
            <line num="517" count="6" type="stmt"/>
            <line num="519" count="6" type="stmt"/>
            <line num="520" count="6" type="stmt"/>
            <line num="521" count="6" type="stmt"/>
            <line num="522" count="6" type="stmt"/>
            <line num="523" count="6" type="stmt"/>
            <line num="524" count="6" type="stmt"/>
            <line num="525" count="6" type="stmt"/>
            <line num="526" count="6" type="stmt"/>
            <line num="527" count="6" type="stmt"/>
            <line num="529" count="6" type="stmt"/>
            <line complexity="4" visibility="private" signature="getCalibratedCurve(AnalyticModel,Map&lt;String, Object&gt;) : AnalyticModel" num="532" count="6" type="method"/>
            <line num="534" count="6" type="stmt"/>
            <line num="535" count="6" type="stmt"/>
            <line num="536" count="6" type="stmt"/>
            <line num="537" count="6" type="stmt"/>
            <line num="538" count="6" type="stmt"/>
            <line num="539" count="6" type="stmt"/>
            <line num="540" count="6" type="stmt"/>
            <line num="541" count="6" type="stmt"/>
            <line num="542" count="6" type="stmt"/>
            <line num="544" count="6" type="stmt"/>
            <line num="545" count="6" type="stmt"/>
            <line num="546" count="6" type="stmt"/>
            <line num="548" count="6" type="stmt"/>
            <line num="549" count="6" type="stmt"/>
            <line num="551" count="6" type="stmt"/>
            <line num="552" count="6" type="stmt"/>
            <line num="554" count="6" type="stmt"/>
            <line num="564" count="6" type="stmt"/>
            <line num="567" count="6" type="stmt"/>
            <line num="568" count="6" type="stmt"/>
            <line num="569" count="6" type="stmt"/>
            <line num="570" count="6" type="stmt"/>
            <line num="571" count="6" type="stmt"/>
            <line num="572" count="6" type="stmt"/>
            <line num="573" count="6" type="stmt"/>
            <line num="574" count="6" type="stmt"/>
            <line falsecount="6" truecount="126" num="574" type="cond"/>
            <line num="576" count="126" type="stmt"/>
            <line num="577" count="126" type="stmt"/>
            <line num="579" count="126" type="stmt"/>
            <line num="580" count="126" type="stmt"/>
            <line num="581" count="126" type="stmt"/>
            <line num="582" count="126" type="stmt"/>
            <line num="585" count="6" type="stmt"/>
            <line num="588" count="6" type="stmt"/>
            <line num="602" count="6" type="stmt"/>
            <line num="607" count="6" type="stmt"/>
            <line num="608" count="6" type="stmt"/>
            <line num="613" count="6" type="stmt"/>
            <line num="614" count="6" type="stmt"/>
            <line num="615" count="6" type="stmt"/>
            <line num="617" count="6" type="stmt"/>
            <line num="620" count="6" type="stmt"/>
            <line num="623" count="6" type="stmt"/>
            <line num="625" count="6" type="stmt"/>
            <line num="626" count="6" type="stmt"/>
            <line num="627" count="126" type="stmt"/>
            <line num="628" count="126" type="stmt"/>
            <line num="629" count="126" type="stmt"/>
            <line num="630" count="126" type="stmt"/>
            <line num="632" count="6" type="stmt"/>
            <line num="634" count="6" type="stmt"/>
            <line num="636" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="636" type="cond"/>
            <line num="637" count="0" type="stmt"/>
            <line num="638" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="638" type="cond"/>
            <line num="639" count="0" type="stmt"/>
            <line num="640" count="0" type="stmt"/>
            <line num="643" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(ForwardCurve,DiscountCurve,double[]) : double" num="646" count="2772" type="method"/>
            <line num="647" count="2772" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/LIBORMarketModelInterpolationTest.java" name="LIBORMarketModelInterpolationTest.java">
            <metrics coveredelements="41" coveredconditionals="0" complexity="4" loc="169" coveredmethods="4" methods="4" elements="41" classes="1" ncloc="103" statements="37" conditionals="0" coveredstatements="37"/>
            <class name="LIBORMarketModelInterpolationTest">
               <metrics coveredelements="41" complexity="4" methods="4" testruns="6" statements="37" coveredconditionals="0" coveredmethods="4" elements="41" testfailures="0" testduration="356.33700000000005" conditionals="0" coveredstatements="37" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="38" count="4" type="method"/>
            <line num="41" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelInterpolationTest(LIBORMarketModelFromCovarianceModel.InterpolationMethod)" num="60" count="6" type="method"/>
            <line num="63" count="6" type="stmt"/>
            <line num="64" count="6" type="stmt"/>
            <line num="65" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="createLIBORMarketModel(LIBORMarketModelFromCovarianceModel.InterpolationMethod,RandomVariableFactory,int,int,double) : LIBORModelMonteCarloSimulationModel" num="68" count="6" type="method"/>
            <line num="75" count="6" type="stmt"/>
            <line num="76" count="6" type="stmt"/>
            <line num="77" count="6" type="stmt"/>
            <line num="80" count="6" type="stmt"/>
            <line num="90" count="6" type="stmt"/>
            <line num="91" count="6" type="stmt"/>
            <line num="93" count="6" type="stmt"/>
            <line num="98" count="6" type="stmt"/>
            <line num="99" count="6" type="stmt"/>
            <line num="104" count="6" type="stmt"/>
            <line num="112" count="6" type="stmt"/>
            <line num="120" count="6" type="stmt"/>
            <line num="123" count="6" type="stmt"/>
            <line num="126" count="6" type="stmt"/>
            <line num="128" count="6" type="stmt"/>
            <line num="131" count="6" type="stmt"/>
            <line num="136" count="6" type="stmt"/>
            <line num="138" count="6" type="stmt"/>
            <line num="140" count="6" type="stmt"/>
            <line num="142" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInterpolatedLastLIBOR() : void" num="145" count="6" type="method"/>
            <line num="148" count="6" type="stmt"/>
            <line num="150" count="6" type="stmt"/>
            <line num="153" count="6" type="stmt"/>
            <line num="155" count="6" type="stmt"/>
            <line num="158" count="6" type="stmt"/>
            <line num="159" count="6" type="stmt"/>
            <line num="160" count="6" type="stmt"/>
            <line num="161" count="6" type="stmt"/>
            <line num="162" count="6" type="stmt"/>
            <line num="163" count="6" type="stmt"/>
            <line num="164" count="6" type="stmt"/>
            <line num="166" count="6" type="stmt"/>
            <line num="167" count="6" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/LIBORMarketModelMultiCurveValuationTest.java" name="LIBORMarketModelMultiCurveValuationTest.java">
            <metrics coveredelements="306" coveredconditionals="43" complexity="34" loc="671" coveredmethods="12" methods="12" elements="309" classes="1" ncloc="401" statements="253" conditionals="44" coveredstatements="251"/>
            <class name="LIBORMarketModelMultiCurveValuationTest">
               <metrics coveredelements="306" complexity="34" methods="12" testruns="28" statements="253" coveredconditionals="43" coveredmethods="12" elements="309" testfailures="0" testduration="3397.5150000000003" conditionals="44" coveredstatements="251" testpasses="28"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="60" count="4" type="method"/>
            <line num="63" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelMultiCurveValuationTest(Measure)" num="79" count="28" type="method"/>
            <line num="81" count="28" type="stmt"/>
            <line num="84" count="28" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(Measure,int,int,double) : LIBORModelMonteCarloSimulationModel" num="87" count="28" type="method"/>
            <line num="93" count="28" type="stmt"/>
            <line num="94" count="28" type="stmt"/>
            <line num="95" count="28" type="stmt"/>
            <line num="98" count="28" type="stmt"/>
            <line num="106" count="28" type="stmt"/>
            <line num="116" count="28" type="stmt"/>
            <line num="117" count="28" type="stmt"/>
            <line num="119" count="28" type="stmt"/>
            <line num="124" count="28" type="stmt"/>
            <line num="125" count="28" type="stmt"/>
            <line falsecount="28" truecount="1120" num="125" type="cond"/>
            <line num="126" count="1120" type="stmt"/>
            <line falsecount="1120" truecount="44800" num="126" type="cond"/>
            <line num="128" count="44800" type="stmt"/>
            <line num="129" count="44800" type="stmt"/>
            <line num="130" count="44800" type="stmt"/>
            <line num="132" count="44800" type="stmt"/>
            <line num="133" count="44800" type="stmt"/>
            <line falsecount="21840" truecount="22960" num="133" type="cond"/>
            <line num="134" count="22960" type="stmt"/>
            <line num="136" count="21840" type="stmt"/>
            <line num="140" count="44800" type="stmt"/>
            <line num="143" count="28" type="stmt"/>
            <line num="148" count="28" type="stmt"/>
            <line num="156" count="28" type="stmt"/>
            <line num="164" count="28" type="stmt"/>
            <line num="167" count="28" type="stmt"/>
            <line num="170" count="28" type="stmt"/>
            <line num="173" count="28" type="stmt"/>
            <line num="178" count="28" type="stmt"/>
            <line num="188" count="28" type="stmt"/>
            <line num="190" count="28" type="stmt"/>
            <line num="192" count="28" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBond() : void" num="195" count="4" type="method"/>
            <line num="201" count="4" type="stmt"/>
            <line num="202" count="4" type="stmt"/>
            <line num="204" count="4" type="stmt"/>
            <line num="205" count="4" type="stmt"/>
            <line falsecount="4" truecount="164" num="205" type="cond"/>
            <line num="206" count="164" type="stmt"/>
            <line num="207" count="164" type="stmt"/>
            <line num="210" count="164" type="stmt"/>
            <line num="213" count="164" type="stmt"/>
            <line num="214" count="164" type="stmt"/>
            <line num="217" count="164" type="stmt"/>
            <line num="219" count="164" type="stmt"/>
            <line num="222" count="164" type="stmt"/>
            <line num="223" count="164" type="stmt"/>
            <line num="225" count="164" type="stmt"/>
            <line num="228" count="4" type="stmt"/>
            <line num="229" count="4" type="stmt"/>
            <line num="232" count="4" type="stmt"/>
            <line complexity="5" visibility="public" signature="testSwap() : void" num="235" count="4" type="method"/>
            <line num="240" count="4" type="stmt"/>
            <line num="241" count="4" type="stmt"/>
            <line num="243" count="4" type="stmt"/>
            <line num="244" count="4" type="stmt"/>
            <line falsecount="4" truecount="120" num="244" type="cond"/>
            <line num="246" count="120" type="stmt"/>
            <line num="248" count="120" type="stmt"/>
            <line num="251" count="120" type="stmt"/>
            <line num="252" count="120" type="stmt"/>
            <line num="253" count="120" type="stmt"/>
            <line num="254" count="120" type="stmt"/>
            <line num="256" count="120" type="stmt"/>
            <line falsecount="120" truecount="1200" num="256" type="cond"/>
            <line num="257" count="1200" type="stmt"/>
            <line num="258" count="1200" type="stmt"/>
            <line num="259" count="1200" type="stmt"/>
            <line num="261" count="120" type="stmt"/>
            <line num="263" count="120" type="stmt"/>
            <line num="266" count="120" type="stmt"/>
            <line num="269" count="120" type="stmt"/>
            <line num="270" count="120" type="stmt"/>
            <line falsecount="120" truecount="1200" num="270" type="cond"/>
            <line num="271" count="1200" type="stmt"/>
            <line num="275" count="120" type="stmt"/>
            <line num="278" count="120" type="stmt"/>
            <line num="279" count="120" type="stmt"/>
            <line num="281" count="120" type="stmt"/>
            <line num="284" count="4" type="stmt"/>
            <line num="285" count="4" type="stmt"/>
            <line num="291" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="291" type="cond"/>
            <line num="292" count="2" type="stmt"/>
            <line num="294" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="testCaplet() : void" num="298" count="4" type="method"/>
            <line num="303" count="4" type="stmt"/>
            <line num="304" count="4" type="stmt"/>
            <line num="306" count="4" type="stmt"/>
            <line num="307" count="4" type="stmt"/>
            <line falsecount="4" truecount="120" num="307" type="cond"/>
            <line num="309" count="120" type="stmt"/>
            <line num="310" count="120" type="stmt"/>
            <line num="312" count="120" type="stmt"/>
            <line num="313" count="120" type="stmt"/>
            <line num="314" count="120" type="stmt"/>
            <line num="315" count="120" type="stmt"/>
            <line num="317" count="120" type="stmt"/>
            <line num="320" count="120" type="stmt"/>
            <line num="323" count="120" type="stmt"/>
            <line num="324" count="120" type="stmt"/>
            <line num="327" count="120" type="stmt"/>
            <line num="328" count="120" type="stmt"/>
            <line num="329" count="120" type="stmt"/>
            <line num="330" count="120" type="stmt"/>
            <line num="331" count="120" type="stmt"/>
            <line num="332" count="120" type="stmt"/>
            <line num="333" count="120" type="stmt"/>
            <line num="336" count="120" type="stmt"/>
            <line num="337" count="120" type="stmt"/>
            <line num="339" count="120" type="stmt"/>
            <line num="342" count="4" type="stmt"/>
            <line num="343" count="4" type="stmt"/>
            <line num="348" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="348" type="cond"/>
            <line num="349" count="2" type="stmt"/>
            <line num="351" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDigitalCaplet() : void" num="355" count="4" type="method"/>
            <line num="360" count="4" type="stmt"/>
            <line num="361" count="4" type="stmt"/>
            <line num="363" count="4" type="stmt"/>
            <line num="364" count="4" type="stmt"/>
            <line falsecount="4" truecount="120" num="364" type="cond"/>
            <line num="366" count="120" type="stmt"/>
            <line num="367" count="120" type="stmt"/>
            <line num="369" count="120" type="stmt"/>
            <line num="370" count="120" type="stmt"/>
            <line num="372" count="120" type="stmt"/>
            <line num="375" count="120" type="stmt"/>
            <line num="378" count="120" type="stmt"/>
            <line num="379" count="120" type="stmt"/>
            <line num="382" count="120" type="stmt"/>
            <line num="383" count="120" type="stmt"/>
            <line num="384" count="120" type="stmt"/>
            <line num="385" count="120" type="stmt"/>
            <line num="386" count="120" type="stmt"/>
            <line num="387" count="120" type="stmt"/>
            <line num="388" count="120" type="stmt"/>
            <line num="389" count="120" type="stmt"/>
            <line num="392" count="120" type="stmt"/>
            <line num="393" count="120" type="stmt"/>
            <line num="395" count="120" type="stmt"/>
            <line num="398" count="4" type="stmt"/>
            <line num="403" count="4" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwaption() : void" num="406" count="4" type="method"/>
            <line num="411" count="4" type="stmt"/>
            <line num="412" count="4" type="stmt"/>
            <line num="414" count="4" type="stmt"/>
            <line num="415" count="4" type="stmt"/>
            <line falsecount="4" truecount="120" num="415" type="cond"/>
            <line num="417" count="120" type="stmt"/>
            <line num="418" count="120" type="stmt"/>
            <line num="420" count="120" type="stmt"/>
            <line num="424" count="120" type="stmt"/>
            <line num="425" count="120" type="stmt"/>
            <line num="426" count="120" type="stmt"/>
            <line num="427" count="120" type="stmt"/>
            <line num="429" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="429" type="cond"/>
            <line num="430" count="600" type="stmt"/>
            <line num="431" count="600" type="stmt"/>
            <line num="432" count="600" type="stmt"/>
            <line num="434" count="120" type="stmt"/>
            <line num="437" count="120" type="stmt"/>
            <line num="440" count="120" type="stmt"/>
            <line num="441" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="441" type="cond"/>
            <line num="442" count="600" type="stmt"/>
            <line num="446" count="120" type="stmt"/>
            <line num="447" count="120" type="stmt"/>
            <line num="448" count="120" type="stmt"/>
            <line num="451" count="120" type="stmt"/>
            <line num="452" count="120" type="stmt"/>
            <line num="453" count="120" type="stmt"/>
            <line num="456" count="120" type="stmt"/>
            <line num="457" count="120" type="stmt"/>
            <line num="458" count="120" type="stmt"/>
            <line num="461" count="120" type="stmt"/>
            <line num="462" count="120" type="stmt"/>
            <line num="464" count="120" type="stmt"/>
            <line num="465" count="120" type="stmt"/>
            <line num="467" count="120" type="stmt"/>
            <line num="468" count="120" type="stmt"/>
            <line num="471" count="4" type="stmt"/>
            <line num="472" count="4" type="stmt"/>
            <line num="477" count="4" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwaptionSmile() : void" num="480" count="4" type="method"/>
            <line num="485" count="4" type="stmt"/>
            <line num="486" count="4" type="stmt"/>
            <line num="488" count="4" type="stmt"/>
            <line num="489" count="4" type="stmt"/>
            <line num="490" count="4" type="stmt"/>
            <line num="492" count="4" type="stmt"/>
            <line num="493" count="4" type="stmt"/>
            <line falsecount="4" truecount="60" num="493" type="cond"/>
            <line num="495" count="60" type="stmt"/>
            <line num="500" count="60" type="stmt"/>
            <line num="501" count="60" type="stmt"/>
            <line num="502" count="60" type="stmt"/>
            <line num="504" count="60" type="stmt"/>
            <line falsecount="60" truecount="600" num="504" type="cond"/>
            <line num="505" count="600" type="stmt"/>
            <line num="506" count="600" type="stmt"/>
            <line num="507" count="600" type="stmt"/>
            <line num="509" count="60" type="stmt"/>
            <line num="512" count="60" type="stmt"/>
            <line num="515" count="60" type="stmt"/>
            <line num="516" count="60" type="stmt"/>
            <line falsecount="60" truecount="600" num="516" type="cond"/>
            <line num="517" count="600" type="stmt"/>
            <line num="520" count="60" type="stmt"/>
            <line num="521" count="60" type="stmt"/>
            <line num="525" count="60" type="stmt"/>
            <line num="528" count="60" type="stmt"/>
            <line num="529" count="60" type="stmt"/>
            <line num="530" count="60" type="stmt"/>
            <line num="533" count="60" type="stmt"/>
            <line num="534" count="60" type="stmt"/>
            <line num="535" count="60" type="stmt"/>
            <line num="538" count="60" type="stmt"/>
            <line num="539" count="60" type="stmt"/>
            <line num="541" count="60" type="stmt"/>
            <line num="544" count="4" type="stmt"/>
            <line num="545" count="4" type="stmt"/>
            <line num="550" count="4" type="stmt"/>
            <line complexity="6" visibility="public" signature="testSwaptionCalibration() : void" num="553" count="4" type="method"/>
            <line num="559" count="4" type="stmt"/>
            <line num="565" count="4" type="stmt"/>
            <line num="566" count="4" type="stmt"/>
            <line falsecount="4" truecount="32" num="566" type="cond"/>
            <line num="567" count="32" type="stmt"/>
            <line num="568" count="32" type="stmt"/>
            <line falsecount="32" truecount="144" num="568" type="cond"/>
            <line num="572" count="144" type="stmt"/>
            <line num="573" count="144" type="stmt"/>
            <line num="574" count="144" type="stmt"/>
            <line num="575" count="144" type="stmt"/>
            <line num="577" count="144" type="stmt"/>
            <line falsecount="144" truecount="1488" num="577" type="cond"/>
            <line num="578" count="1488" type="stmt"/>
            <line num="579" count="1488" type="stmt"/>
            <line num="580" count="1488" type="stmt"/>
            <line num="582" count="144" type="stmt"/>
            <line num="585" count="144" type="stmt"/>
            <line num="588" count="144" type="stmt"/>
            <line num="589" count="144" type="stmt"/>
            <line num="592" count="144" type="stmt"/>
            <line num="597" count="144" type="stmt"/>
            <line num="598" count="144" type="stmt"/>
            <line falsecount="144" truecount="0" num="598" type="cond"/>
            <line num="600" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line num="606" count="144" type="stmt"/>
            <line num="607" count="144" type="stmt"/>
            <line num="608" count="144" type="stmt"/>
            <line num="612" count="4" type="stmt"/>
            <line num="617" count="4" type="stmt"/>
            <line num="619" count="4" type="stmt"/>
            <line num="620" count="4" type="stmt"/>
            <line num="627" count="4" type="stmt"/>
            <line num="629" count="4" type="stmt"/>
            <line num="640" count="4" type="stmt"/>
            <line num="644" count="4" type="stmt"/>
            <line num="647" count="4" type="stmt"/>
            <line num="648" count="4" type="stmt"/>
            <line num="649" count="28" type="stmt"/>
            <line num="652" count="4" type="stmt"/>
            <line num="653" count="4" type="stmt"/>
            <line falsecount="4" truecount="144" num="653" type="cond"/>
            <line num="654" count="144" type="stmt"/>
            <line num="655" count="144" type="stmt"/>
            <line num="656" count="144" type="stmt"/>
            <line num="657" count="144" type="stmt"/>
            <line num="658" count="144" type="stmt"/>
            <line num="660" count="4" type="stmt"/>
            <line num="661" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(LIBORModelMonteCarloSimulationModel,double[]) : double" num="664" count="804" type="method"/>
            <line num="665" count="804" type="stmt"/>
            <line complexity="1" visibility="private" signature="getSwapAnnuity(LIBORModelMonteCarloSimulationModel,double[]) : double" num="668" count="504" type="method"/>
            <line num="669" count="504" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/LIBORMarketModelNormalAADSensitivitiesTest.java" name="LIBORMarketModelNormalAADSensitivitiesTest.java">
            <metrics coveredelements="357" coveredconditionals="38" complexity="44" loc="919" coveredmethods="10" methods="11" elements="400" classes="1" ncloc="595" statements="335" conditionals="54" coveredstatements="309"/>
            <class name="LIBORMarketModelNormalAADSensitivitiesTest">
               <metrics coveredelements="357" complexity="44" methods="11" testruns="30" statements="335" coveredconditionals="38" coveredmethods="10" elements="400" testfailures="0" testduration="2387.837" conditionals="54" coveredstatements="309" testpasses="30"/>
            </class>
            <line complexity="3" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="77" count="4" type="method"/>
            <line num="79" count="4" type="stmt"/>
            <line num="81" count="4" type="stmt"/>
            <line num="82" count="4" type="stmt"/>
            <line num="83" count="4" type="stmt"/>
            <line num="86" count="4" type="stmt"/>
            <line num="93" count="4" type="stmt"/>
            <line num="94" count="4" type="stmt"/>
            <line num="96" count="4" type="stmt"/>
            <line num="100" count="4" type="stmt"/>
            <line num="101" count="4" type="stmt"/>
            <line num="102" count="4" type="stmt"/>
            <line num="103" count="4" type="stmt"/>
            <line num="104" count="4" type="stmt"/>
            <line num="106" count="4" type="stmt"/>
            <line falsecount="4" truecount="80" num="106" type="cond"/>
            <line num="107" count="80" type="stmt"/>
            <line num="108" count="80" type="stmt"/>
            <line num="109" count="80" type="stmt"/>
            <line num="111" count="4" type="stmt"/>
            <line num="114" count="4" type="stmt"/>
            <line num="117" count="4" type="stmt"/>
            <line num="118" count="4" type="stmt"/>
            <line num="120" count="4" type="stmt"/>
            <line num="121" count="4" type="stmt"/>
            <line num="123" count="4" type="stmt"/>
            <line num="124" count="4" type="stmt"/>
            <line num="126" count="4" type="stmt"/>
            <line num="127" count="4" type="stmt"/>
            <line num="133" count="4" type="stmt"/>
            <line num="140" count="4" type="stmt"/>
            <line num="147" count="4" type="stmt"/>
            <line num="154" count="4" type="stmt"/>
            <line num="161" count="4" type="stmt"/>
            <line num="172" count="4" type="stmt"/>
            <line num="174" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="239" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="main(String[]) : void" num="249" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="270" type="cond"/>
            <line num="271" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelNormalAADSensitivitiesTest(String,AbstractLIBORMonteCarloProduct,Optional&lt;Integer&gt;,boolean)" num="281" count="30" type="method"/>
            <line num="282" count="30" type="stmt"/>
            <line num="283" count="30" type="stmt"/>
            <line num="284" count="30" type="stmt"/>
            <line num="285" count="30" type="stmt"/>
            <line complexity="7" visibility="public" signature="createLIBORMarketModel(RandomVariableFactory,RandomVariableFactory,int,int,double,Optional&lt;Integer&gt;,double,int,int,double) : LIBORModelMonteCarloSimulationModel" num="288" count="100" type="method"/>
            <line num="299" count="100" type="stmt"/>
            <line num="300" count="100" type="stmt"/>
            <line num="301" count="100" type="stmt"/>
            <line num="303" count="100" type="stmt"/>
            <line num="304" count="100" type="stmt"/>
            <line num="305" count="100" type="stmt"/>
            <line falsecount="80" truecount="20" num="305" type="cond"/>
            <line num="306" count="20" type="stmt"/>
            <line num="307" count="20" type="stmt"/>
            <line num="310" count="80" type="stmt"/>
            <line num="314" count="100" type="stmt"/>
            <line num="324" count="100" type="stmt"/>
            <line num="325" count="100" type="stmt"/>
            <line num="327" count="100" type="stmt"/>
            <line num="330" count="100" type="stmt"/>
            <line num="331" count="100" type="stmt"/>
            <line falsecount="0" truecount="100" num="331" type="cond"/>
            <line num="332" count="100" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="341" count="100" type="stmt"/>
            <line num="343" count="100" type="stmt"/>
            <line num="344" count="100" type="stmt"/>
            <line falsecount="100" truecount="400" num="344" type="cond"/>
            <line num="345" count="400" type="stmt"/>
            <line falsecount="400" truecount="1600" num="345" type="cond"/>
            <line num="346" count="1600" type="stmt"/>
            <line falsecount="1600" truecount="0" num="346" type="cond"/>
            <line num="347" count="0" type="stmt"/>
            <line num="350" count="1600" type="stmt"/>
            <line num="354" count="100" type="stmt"/>
            <line num="355" count="100" type="stmt"/>
            <line num="360" count="100" type="stmt"/>
            <line num="368" count="100" type="stmt"/>
            <line num="376" count="100" type="stmt"/>
            <line num="379" count="100" type="stmt"/>
            <line num="382" count="100" type="stmt"/>
            <line num="385" count="100" type="stmt"/>
            <line num="388" count="100" type="stmt"/>
            <line num="394" count="100" type="stmt"/>
            <line num="395" count="100" type="stmt"/>
            <line num="397" count="100" type="stmt"/>
            <line num="399" count="100" type="stmt"/>
            <line num="401" count="100" type="stmt"/>
            <line complexity="9" visibility="public" signature="testVega() : void" num="410" count="10" type="method"/>
            <line num="413" count="10" type="stmt"/>
            <line num="414" count="10" type="stmt"/>
            <line num="415" count="10" type="stmt"/>
            <line num="416" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="416" type="cond"/>
            <line num="417" count="10" type="stmt"/>
            <line num="418" count="10" type="stmt"/>
            <line num="419" count="10" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line num="427" count="10" type="stmt"/>
            <line num="428" count="10" type="stmt"/>
            <line num="431" count="10" type="stmt"/>
            <line num="432" count="10" type="stmt"/>
            <line num="433" count="10" type="stmt"/>
            <line num="439" count="10" type="stmt"/>
            <line num="440" count="10" type="stmt"/>
            <line num="442" count="10" type="stmt"/>
            <line num="443" count="10" type="stmt"/>
            <line num="445" count="10" type="stmt"/>
            <line num="452" count="10" type="stmt"/>
            <line num="454" count="10" type="stmt"/>
            <line num="455" count="10" type="stmt"/>
            <line num="456" count="10" type="stmt"/>
            <line num="460" count="10" type="stmt"/>
            <line num="461" count="10" type="stmt"/>
            <line num="463" count="10" type="stmt"/>
            <line num="464" count="10" type="stmt"/>
            <line num="465" count="10" type="stmt"/>
            <line num="466" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="466" type="cond"/>
            <line num="467" count="10" type="stmt"/>
            <line falsecount="10" truecount="40" num="467" type="cond"/>
            <line num="468" count="40" type="stmt"/>
            <line falsecount="40" truecount="160" num="468" type="cond"/>
            <line num="469" count="160" type="stmt"/>
            <line num="470" count="160" type="stmt"/>
            <line num="471" count="160" type="stmt"/>
            <line falsecount="0" truecount="160" num="471" type="cond"/>
            <line num="472" count="160" type="stmt"/>
            <line num="473" count="160" type="stmt"/>
            <line num="474" count="160" type="stmt"/>
            <line falsecount="98" truecount="62" num="474" type="cond"/>
            <line num="475" count="62" type="stmt"/>
            <line num="476" count="62" type="stmt"/>
            <line num="480" count="160" type="stmt"/>
            <line num="489" count="10" type="stmt"/>
            <line num="490" count="10" type="stmt"/>
            <line num="496" count="10" type="stmt"/>
            <line num="499" count="10" type="stmt"/>
            <line num="501" count="10" type="stmt"/>
            <line num="503" count="10" type="stmt"/>
            <line num="506" count="10" type="stmt"/>
            <line num="513" count="10" type="stmt"/>
            <line num="515" count="10" type="stmt"/>
            <line num="517" count="10" type="stmt"/>
            <line num="519" count="10" type="stmt"/>
            <line num="521" count="10" type="stmt"/>
            <line num="523" count="10" type="stmt"/>
            <line num="525" count="10" type="stmt"/>
            <line num="528" count="10" type="stmt"/>
            <line num="529" count="10" type="stmt"/>
            <line num="531" count="10" type="stmt"/>
            <line num="537" count="10" type="stmt"/>
            <line num="538" count="10" type="stmt"/>
            <line num="540" count="10" type="stmt"/>
            <line num="541" count="10" type="stmt"/>
            <line num="542" count="10" type="stmt"/>
            <line num="543" count="10" type="stmt"/>
            <line num="544" count="10" type="stmt"/>
            <line num="545" count="10" type="stmt"/>
            <line num="546" count="10" type="stmt"/>
            <line num="547" count="10" type="stmt"/>
            <line num="548" count="10" type="stmt"/>
            <line num="549" count="10" type="stmt"/>
            <line num="550" count="10" type="stmt"/>
            <line num="552" count="10" type="stmt"/>
            <line num="553" count="10" type="stmt"/>
            <line complexity="9" visibility="public" signature="testDelta() : void" num="562" count="10" type="method"/>
            <line num="565" count="10" type="stmt"/>
            <line num="572" count="10" type="stmt"/>
            <line num="573" count="10" type="stmt"/>
            <line num="575" count="10" type="stmt"/>
            <line num="577" count="10" type="stmt"/>
            <line num="578" count="10" type="stmt"/>
            <line num="579" count="10" type="stmt"/>
            <line num="584" count="10" type="stmt"/>
            <line num="585" count="10" type="stmt"/>
            <line num="587" count="10" type="stmt"/>
            <line num="588" count="10" type="stmt"/>
            <line num="590" count="10" type="stmt"/>
            <line num="597" count="10" type="stmt"/>
            <line num="599" count="10" type="stmt"/>
            <line num="600" count="10" type="stmt"/>
            <line num="601" count="10" type="stmt"/>
            <line num="604" count="0" type="stmt"/>
            <line num="607" count="10" type="stmt"/>
            <line num="608" count="10" type="stmt"/>
            <line num="610" count="10" type="stmt"/>
            <line num="611" count="10" type="stmt"/>
            <line num="612" count="10" type="stmt"/>
            <line num="613" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="613" type="cond"/>
            <line num="614" count="10" type="stmt"/>
            <line falsecount="10" truecount="800" num="614" type="cond"/>
            <line num="615" count="800" type="stmt"/>
            <line num="616" count="800" type="stmt"/>
            <line num="617" count="800" type="stmt"/>
            <line falsecount="0" truecount="800" num="617" type="cond"/>
            <line num="618" count="800" type="stmt"/>
            <line num="619" count="800" type="stmt"/>
            <line num="620" count="800" type="stmt"/>
            <line falsecount="294" truecount="506" num="620" type="cond"/>
            <line num="621" count="506" type="stmt"/>
            <line num="622" count="506" type="stmt"/>
            <line num="625" count="800" type="stmt"/>
            <line num="631" count="10" type="stmt"/>
            <line num="632" count="10" type="stmt"/>
            <line num="638" count="10" type="stmt"/>
            <line num="641" count="10" type="stmt"/>
            <line num="643" count="10" type="stmt"/>
            <line num="645" count="10" type="stmt"/>
            <line num="648" count="10" type="stmt"/>
            <line num="655" count="10" type="stmt"/>
            <line num="657" count="10" type="stmt"/>
            <line num="659" count="10" type="stmt"/>
            <line num="661" count="10" type="stmt"/>
            <line num="663" count="10" type="stmt"/>
            <line num="665" count="10" type="stmt"/>
            <line num="667" count="10" type="stmt"/>
            <line num="670" count="10" type="stmt"/>
            <line num="671" count="10" type="stmt"/>
            <line num="673" count="10" type="stmt"/>
            <line num="679" count="10" type="stmt"/>
            <line num="680" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="680" type="cond"/>
            <line num="681" count="10" type="stmt"/>
            <line num="684" count="0" type="stmt"/>
            <line num="690" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="690" type="cond"/>
            <line num="691" count="10" type="stmt"/>
            <line num="692" count="10" type="stmt"/>
            <line num="694" count="10" type="stmt"/>
            <line num="695" count="10" type="stmt"/>
            <line num="696" count="10" type="stmt"/>
            <line num="698" count="10" type="stmt"/>
            <line num="699" count="10" type="stmt"/>
            <line num="700" count="10" type="stmt"/>
            <line num="701" count="10" type="stmt"/>
            <line num="702" count="10" type="stmt"/>
            <line num="703" count="10" type="stmt"/>
            <line num="704" count="10" type="stmt"/>
            <line num="705" count="10" type="stmt"/>
            <line num="706" count="10" type="stmt"/>
            <line num="707" count="10" type="stmt"/>
            <line num="708" count="10" type="stmt"/>
            <line num="710" count="10" type="stmt"/>
            <line num="711" count="10" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="testGenericDelta() : void" num="724" count="10" type="method"/>
            <line num="732" count="10" type="stmt"/>
            <line num="733" count="10" type="stmt"/>
            <line num="735" count="10" type="stmt"/>
            <line num="737" count="10" type="stmt"/>
            <line num="738" count="10" type="stmt"/>
            <line num="739" count="10" type="stmt"/>
            <line num="744" count="10" type="stmt"/>
            <line num="745" count="10" type="stmt"/>
            <line num="747" count="10" type="stmt"/>
            <line num="748" count="10" type="stmt"/>
            <line num="750" count="10" type="stmt"/>
            <line num="757" count="10" type="stmt"/>
            <line num="759" count="10" type="stmt"/>
            <line num="760" count="10" type="stmt"/>
            <line num="761" count="10" type="stmt"/>
            <line num="764" count="0" type="stmt"/>
            <line num="766" count="10" type="stmt"/>
            <line num="768" count="10" type="stmt"/>
            <line num="769" count="10" type="stmt"/>
            <line num="771" count="10" type="stmt"/>
            <line num="773" count="10" type="stmt"/>
            <line num="774" count="10" type="stmt"/>
            <line num="775" count="10" type="stmt"/>
            <line num="776" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="776" type="cond"/>
            <line num="777" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Entry&lt;String, RandomVariable&gt;) : String" num="779" count="859" type="method"/>
            <line num="781" count="859" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(Entry&lt;String, RandomVariable&gt;) : Double" num="785" count="856" type="method"/>
            <line num="787" count="856" type="stmt"/>
            <line num="788" count="860" type="stmt"/>
            <line num="789" count="859" type="stmt"/>
            <line falsecount="60" truecount="799" num="789" type="cond"/>
            <line num="790" count="799" type="stmt"/>
            <line num="791" count="799" type="stmt"/>
            <line falsecount="294" truecount="506" num="791" type="cond"/>
            <line num="792" count="506" type="stmt"/>
            <line num="795" count="860" type="stmt"/>
            <line num="803" count="10" type="stmt"/>
            <line num="809" count="10" type="stmt"/>
            <line num="812" count="10" type="stmt"/>
            <line num="814" count="10" type="stmt"/>
            <line num="816" count="10" type="stmt"/>
            <line num="819" count="10" type="stmt"/>
            <line num="821" count="10" type="stmt"/>
            <line num="830" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="830" type="cond"/>
            <line num="831" count="10" type="stmt"/>
            <line num="832" count="10" type="stmt"/>
            <line num="834" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(String,Double) : void" num="836" count="860" type="method"/>
            <line num="837" count="860" type="stmt"/>
            <line num="840" count="10" type="stmt"/>
            <line num="841" count="10" type="stmt"/>
            <line num="842" count="10" type="stmt"/>
            <line num="843" count="10" type="stmt"/>
            <line num="844" count="10" type="stmt"/>
            <line num="845" count="10" type="stmt"/>
            <line num="846" count="10" type="stmt"/>
            <line num="847" count="10" type="stmt"/>
            <line num="848" count="10" type="stmt"/>
            <line num="849" count="10" type="stmt"/>
            <line num="854" count="10" type="stmt"/>
            <line falsecount="8" truecount="2" num="854" type="cond"/>
            <line num="855" count="2" type="stmt"/>
            <line num="856" count="2" type="stmt"/>
            <line num="858" count="2" type="stmt"/>
            <line num="860" count="2" type="stmt"/>
            <line num="861" count="2" type="stmt"/>
            <line num="863" count="2" type="stmt"/>
            <line num="865" count="2" type="stmt"/>
            <line num="866" count="2" type="stmt"/>
            <line num="867" count="2" type="stmt"/>
            <line num="869" count="2" type="stmt"/>
            <line num="870" count="2" type="stmt"/>
            <line num="871" count="2" type="stmt"/>
            <line num="873" count="2" type="stmt"/>
            <line num="875" count="2" type="stmt"/>
            <line num="877" count="2" type="stmt"/>
            <line num="878" count="2" type="stmt"/>
            <line num="880" count="2" type="stmt"/>
            <line num="882" count="8" type="stmt"/>
            <line falsecount="6" truecount="2" num="882" type="cond"/>
            <line num="883" count="2" type="stmt"/>
            <line num="884" count="2" type="stmt"/>
            <line num="886" count="2" type="stmt"/>
            <line num="888" count="2" type="stmt"/>
            <line num="889" count="2" type="stmt"/>
            <line num="891" count="2" type="stmt"/>
            <line num="892" count="2" type="stmt"/>
            <line num="893" count="2" type="stmt"/>
            <line num="894" count="2" type="stmt"/>
            <line num="896" count="2" type="stmt"/>
            <line num="898" count="2" type="stmt"/>
            <line num="900" count="2" type="stmt"/>
            <line num="901" count="2" type="stmt"/>
            <line num="903" count="2" type="stmt"/>
            <line num="905" count="10" type="stmt"/>
            <line complexity="1" visibility="package" signature="getAllocatedMemory() : long" num="912" count="90" type="method"/>
            <line num="913" count="90" type="stmt"/>
            <line num="914" count="90" type="stmt"/>
            <line num="915" count="90" type="stmt"/>
            <line num="916" count="90" type="stmt"/>
            <line num="917" count="90" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/LIBORMarketModelValuationTest.java" name="LIBORMarketModelValuationTest.java">
            <metrics coveredelements="397" coveredconditionals="55" complexity="43" loc="817" coveredmethods="15" methods="15" elements="400" classes="1" ncloc="479" statements="329" conditionals="56" coveredstatements="327"/>
            <class name="LIBORMarketModelValuationTest">
               <metrics coveredelements="397" complexity="43" methods="15" testruns="80" statements="329" coveredconditionals="55" coveredmethods="15" elements="400" testfailures="0" testduration="2031.9580000000008" conditionals="56" coveredstatements="327" testpasses="80"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="63" count="4" type="method"/>
            <line num="66" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelValuationTest(RandomVariableFactory)" num="84" count="80" type="method"/>
            <line num="87" count="80" type="stmt"/>
            <line complexity="1" visibility="public" signature="createLIBORMarketModel(RandomVariableFactory,int,int,double) : LIBORModelMonteCarloSimulationModel" num="90" count="82" type="method"/>
            <line num="96" count="82" type="stmt"/>
            <line num="97" count="82" type="stmt"/>
            <line num="98" count="82" type="stmt"/>
            <line num="101" count="82" type="stmt"/>
            <line num="111" count="82" type="stmt"/>
            <line num="112" count="82" type="stmt"/>
            <line num="114" count="82" type="stmt"/>
            <line num="119" count="82" type="stmt"/>
            <line num="120" count="82" type="stmt"/>
            <line num="125" count="82" type="stmt"/>
            <line num="133" count="82" type="stmt"/>
            <line num="140" count="82" type="stmt"/>
            <line num="143" count="82" type="stmt"/>
            <line num="146" count="82" type="stmt"/>
            <line num="149" count="82" type="stmt"/>
            <line num="154" count="82" type="stmt"/>
            <line num="156" count="82" type="stmt"/>
            <line num="158" count="82" type="stmt"/>
            <line num="160" count="82" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBond() : void" num="163" count="8" type="method"/>
            <line num="169" count="8" type="stmt"/>
            <line num="171" count="8" type="stmt"/>
            <line num="172" count="8" type="stmt"/>
            <line num="173" count="8" type="stmt"/>
            <line num="174" count="8" type="stmt"/>
            <line falsecount="8" truecount="1288" num="174" type="cond"/>
            <line num="175" count="1288" type="stmt"/>
            <line num="178" count="1288" type="stmt"/>
            <line num="181" count="1288" type="stmt"/>
            <line num="182" count="1288" type="stmt"/>
            <line num="185" count="1288" type="stmt"/>
            <line num="186" count="1288" type="stmt"/>
            <line num="189" count="1288" type="stmt"/>
            <line num="190" count="1288" type="stmt"/>
            <line num="192" count="1288" type="stmt"/>
            <line num="195" count="8" type="stmt"/>
            <line num="196" count="8" type="stmt"/>
            <line num="199" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="testFRA() : void" num="202" count="8" type="method"/>
            <line num="207" count="8" type="stmt"/>
            <line num="208" count="8" type="stmt"/>
            <line num="210" count="8" type="stmt"/>
            <line num="211" count="8" type="stmt"/>
            <line falsecount="8" truecount="1256" num="211" type="cond"/>
            <line num="213" count="1256" type="stmt"/>
            <line num="216" count="1256" type="stmt"/>
            <line num="217" count="1256" type="stmt"/>
            <line num="218" count="1256" type="stmt"/>
            <line num="219" count="1256" type="stmt"/>
            <line num="221" count="1256" type="stmt"/>
            <line falsecount="1256" truecount="1256" num="221" type="cond"/>
            <line num="222" count="1256" type="stmt"/>
            <line num="223" count="1256" type="stmt"/>
            <line num="224" count="1256" type="stmt"/>
            <line num="226" count="1256" type="stmt"/>
            <line num="228" count="1256" type="stmt"/>
            <line num="231" count="1256" type="stmt"/>
            <line num="234" count="1256" type="stmt"/>
            <line num="235" count="1256" type="stmt"/>
            <line falsecount="1256" truecount="1256" num="235" type="cond"/>
            <line num="236" count="1256" type="stmt"/>
            <line num="240" count="1256" type="stmt"/>
            <line num="243" count="1256" type="stmt"/>
            <line num="244" count="1256" type="stmt"/>
            <line num="246" count="1256" type="stmt"/>
            <line num="249" count="8" type="stmt"/>
            <line num="250" count="8" type="stmt"/>
            <line num="256" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwap() : void" num="259" count="8" type="method"/>
            <line num="264" count="8" type="stmt"/>
            <line num="265" count="8" type="stmt"/>
            <line num="267" count="8" type="stmt"/>
            <line num="268" count="8" type="stmt"/>
            <line falsecount="8" truecount="240" num="268" type="cond"/>
            <line num="270" count="240" type="stmt"/>
            <line num="273" count="240" type="stmt"/>
            <line num="274" count="240" type="stmt"/>
            <line num="275" count="240" type="stmt"/>
            <line num="276" count="240" type="stmt"/>
            <line num="278" count="240" type="stmt"/>
            <line falsecount="240" truecount="2400" num="278" type="cond"/>
            <line num="279" count="2400" type="stmt"/>
            <line num="280" count="2400" type="stmt"/>
            <line num="281" count="2400" type="stmt"/>
            <line num="283" count="240" type="stmt"/>
            <line num="285" count="240" type="stmt"/>
            <line num="288" count="240" type="stmt"/>
            <line num="291" count="240" type="stmt"/>
            <line num="292" count="240" type="stmt"/>
            <line falsecount="240" truecount="2400" num="292" type="cond"/>
            <line num="293" count="2400" type="stmt"/>
            <line num="297" count="240" type="stmt"/>
            <line num="300" count="240" type="stmt"/>
            <line num="301" count="240" type="stmt"/>
            <line num="303" count="240" type="stmt"/>
            <line num="306" count="8" type="stmt"/>
            <line num="307" count="8" type="stmt"/>
            <line num="313" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDigitalCaplet() : void" num="316" count="8" type="method"/>
            <line num="321" count="8" type="stmt"/>
            <line num="322" count="8" type="stmt"/>
            <line num="324" count="8" type="stmt"/>
            <line num="325" count="8" type="stmt"/>
            <line falsecount="8" truecount="304" num="325" type="cond"/>
            <line num="327" count="304" type="stmt"/>
            <line num="328" count="304" type="stmt"/>
            <line num="330" count="304" type="stmt"/>
            <line num="333" count="304" type="stmt"/>
            <line num="336" count="304" type="stmt"/>
            <line num="337" count="304" type="stmt"/>
            <line num="340" count="304" type="stmt"/>
            <line num="341" count="304" type="stmt"/>
            <line num="342" count="304" type="stmt"/>
            <line num="343" count="304" type="stmt"/>
            <line num="344" count="304" type="stmt"/>
            <line num="345" count="304" type="stmt"/>
            <line num="346" count="304" type="stmt"/>
            <line num="347" count="304" type="stmt"/>
            <line num="350" count="304" type="stmt"/>
            <line num="351" count="304" type="stmt"/>
            <line num="353" count="304" type="stmt"/>
            <line num="356" count="8" type="stmt"/>
            <line num="357" count="8" type="stmt"/>
            <line num="362" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwaption() : void" num="365" count="8" type="method"/>
            <line num="370" count="8" type="stmt"/>
            <line num="371" count="8" type="stmt"/>
            <line num="373" count="8" type="stmt"/>
            <line num="374" count="8" type="stmt"/>
            <line falsecount="8" truecount="272" num="374" type="cond"/>
            <line num="376" count="272" type="stmt"/>
            <line num="377" count="272" type="stmt"/>
            <line num="379" count="272" type="stmt"/>
            <line num="383" count="272" type="stmt"/>
            <line num="384" count="272" type="stmt"/>
            <line num="385" count="272" type="stmt"/>
            <line num="386" count="272" type="stmt"/>
            <line num="388" count="272" type="stmt"/>
            <line falsecount="272" truecount="1360" num="388" type="cond"/>
            <line num="389" count="1360" type="stmt"/>
            <line num="390" count="1360" type="stmt"/>
            <line num="391" count="1360" type="stmt"/>
            <line num="393" count="272" type="stmt"/>
            <line num="396" count="272" type="stmt"/>
            <line num="399" count="272" type="stmt"/>
            <line num="400" count="272" type="stmt"/>
            <line falsecount="272" truecount="1360" num="400" type="cond"/>
            <line num="401" count="1360" type="stmt"/>
            <line num="405" count="272" type="stmt"/>
            <line num="406" count="272" type="stmt"/>
            <line num="407" count="272" type="stmt"/>
            <line num="410" count="272" type="stmt"/>
            <line num="411" count="272" type="stmt"/>
            <line num="412" count="272" type="stmt"/>
            <line num="415" count="272" type="stmt"/>
            <line num="416" count="272" type="stmt"/>
            <line num="418" count="272" type="stmt"/>
            <line num="421" count="8" type="stmt"/>
            <line num="422" count="8" type="stmt"/>
            <line num="427" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="testCaplet() : void" num="430" count="8" type="method"/>
            <line num="435" count="8" type="stmt"/>
            <line num="436" count="8" type="stmt"/>
            <line num="438" count="8" type="stmt"/>
            <line num="439" count="8" type="stmt"/>
            <line falsecount="8" truecount="304" num="439" type="cond"/>
            <line num="441" count="304" type="stmt"/>
            <line num="442" count="304" type="stmt"/>
            <line num="444" count="304" type="stmt"/>
            <line num="448" count="304" type="stmt"/>
            <line num="449" count="304" type="stmt"/>
            <line num="450" count="304" type="stmt"/>
            <line num="451" count="304" type="stmt"/>
            <line num="453" count="304" type="stmt"/>
            <line falsecount="304" truecount="304" num="453" type="cond"/>
            <line num="454" count="304" type="stmt"/>
            <line num="455" count="304" type="stmt"/>
            <line num="456" count="304" type="stmt"/>
            <line num="458" count="304" type="stmt"/>
            <line num="461" count="304" type="stmt"/>
            <line num="464" count="304" type="stmt"/>
            <line num="465" count="304" type="stmt"/>
            <line falsecount="304" truecount="304" num="465" type="cond"/>
            <line num="466" count="304" type="stmt"/>
            <line num="470" count="304" type="stmt"/>
            <line num="471" count="304" type="stmt"/>
            <line num="472" count="304" type="stmt"/>
            <line num="475" count="304" type="stmt"/>
            <line num="476" count="304" type="stmt"/>
            <line num="477" count="304" type="stmt"/>
            <line num="480" count="304" type="stmt"/>
            <line num="481" count="304" type="stmt"/>
            <line num="483" count="304" type="stmt"/>
            <line num="486" count="8" type="stmt"/>
            <line num="487" count="8" type="stmt"/>
            <line num="492" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="testCapletSmile() : void" num="495" count="8" type="method"/>
            <line num="500" count="8" type="stmt"/>
            <line num="501" count="8" type="stmt"/>
            <line num="502" count="8" type="stmt"/>
            <line num="504" count="8" type="stmt"/>
            <line num="505" count="8" type="stmt"/>
            <line num="506" count="8" type="stmt"/>
            <line num="508" count="8" type="stmt"/>
            <line num="509" count="8" type="stmt"/>
            <line falsecount="8" truecount="120" num="509" type="cond"/>
            <line num="511" count="120" type="stmt"/>
            <line num="515" count="120" type="stmt"/>
            <line num="516" count="120" type="stmt"/>
            <line num="517" count="120" type="stmt"/>
            <line num="519" count="120" type="stmt"/>
            <line falsecount="120" truecount="120" num="519" type="cond"/>
            <line num="520" count="120" type="stmt"/>
            <line num="521" count="120" type="stmt"/>
            <line num="522" count="120" type="stmt"/>
            <line num="524" count="120" type="stmt"/>
            <line num="527" count="120" type="stmt"/>
            <line num="530" count="120" type="stmt"/>
            <line num="531" count="120" type="stmt"/>
            <line falsecount="120" truecount="120" num="531" type="cond"/>
            <line num="532" count="120" type="stmt"/>
            <line num="535" count="120" type="stmt"/>
            <line num="537" count="120" type="stmt"/>
            <line num="540" count="120" type="stmt"/>
            <line num="541" count="120" type="stmt"/>
            <line num="544" count="120" type="stmt"/>
            <line num="545" count="120" type="stmt"/>
            <line num="546" count="120" type="stmt"/>
            <line num="549" count="120" type="stmt"/>
            <line num="550" count="120" type="stmt"/>
            <line num="552" count="120" type="stmt"/>
            <line num="553" count="120" type="stmt"/>
            <line num="554" count="120" type="stmt"/>
            <line num="555" count="120" type="stmt"/>
            <line num="556" count="120" type="stmt"/>
            <line num="557" count="120" type="stmt"/>
            <line num="559" count="120" type="stmt"/>
            <line num="562" count="8" type="stmt"/>
            <line num="563" count="8" type="stmt"/>
            <line num="568" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwaptionSmile() : void" num="571" count="8" type="method"/>
            <line num="576" count="8" type="stmt"/>
            <line num="577" count="8" type="stmt"/>
            <line num="579" count="8" type="stmt"/>
            <line num="580" count="8" type="stmt"/>
            <line num="581" count="8" type="stmt"/>
            <line num="583" count="8" type="stmt"/>
            <line num="584" count="8" type="stmt"/>
            <line falsecount="8" truecount="120" num="584" type="cond"/>
            <line num="586" count="120" type="stmt"/>
            <line num="591" count="120" type="stmt"/>
            <line num="592" count="120" type="stmt"/>
            <line num="593" count="120" type="stmt"/>
            <line num="595" count="120" type="stmt"/>
            <line falsecount="120" truecount="1200" num="595" type="cond"/>
            <line num="596" count="1200" type="stmt"/>
            <line num="597" count="1200" type="stmt"/>
            <line num="598" count="1200" type="stmt"/>
            <line num="600" count="120" type="stmt"/>
            <line num="603" count="120" type="stmt"/>
            <line num="606" count="120" type="stmt"/>
            <line num="607" count="120" type="stmt"/>
            <line falsecount="120" truecount="1200" num="607" type="cond"/>
            <line num="608" count="1200" type="stmt"/>
            <line num="611" count="120" type="stmt"/>
            <line num="612" count="120" type="stmt"/>
            <line num="616" count="120" type="stmt"/>
            <line num="619" count="120" type="stmt"/>
            <line num="620" count="120" type="stmt"/>
            <line num="621" count="120" type="stmt"/>
            <line num="624" count="120" type="stmt"/>
            <line num="625" count="120" type="stmt"/>
            <line num="626" count="120" type="stmt"/>
            <line num="629" count="120" type="stmt"/>
            <line num="630" count="120" type="stmt"/>
            <line num="632" count="120" type="stmt"/>
            <line num="635" count="8" type="stmt"/>
            <line num="636" count="8" type="stmt"/>
            <line num="641" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="testLIBORInArrearsConvexity() : void" num="644" count="8" type="method"/>
            <line num="649" count="8" type="stmt"/>
            <line num="650" count="8" type="stmt"/>
            <line num="652" count="8" type="stmt"/>
            <line num="653" count="8" type="stmt"/>
            <line falsecount="8" truecount="240" num="653" type="cond"/>
            <line num="654" count="240" type="stmt"/>
            <line num="655" count="240" type="stmt"/>
            <line num="656" count="240" type="stmt"/>
            <line num="657" count="240" type="stmt"/>
            <line num="658" count="240" type="stmt"/>
            <line num="660" count="240" type="stmt"/>
            <line num="661" count="240" type="stmt"/>
            <line num="662" count="240" type="stmt"/>
            <line num="664" count="240" type="stmt"/>
            <line num="665" count="240" type="stmt"/>
            <line num="666" count="240" type="stmt"/>
            <line num="668" count="240" type="stmt"/>
            <line num="670" count="240" type="stmt"/>
            <line falsecount="232" truecount="8" num="670" type="cond"/>
            <line num="671" count="8" type="stmt"/>
            <line num="673" count="240" type="stmt"/>
            <line falsecount="16" truecount="224" num="673" type="cond"/>
            <line num="674" count="224" type="stmt"/>
            <line num="677" count="8" type="stmt"/>
            <line complexity="6" visibility="public" signature="testSwaptionCalibration() : void" num="684" count="8" type="method"/>
            <line num="690" count="8" type="stmt"/>
            <line num="695" count="8" type="stmt"/>
            <line num="696" count="8" type="stmt"/>
            <line falsecount="8" truecount="64" num="696" type="cond"/>
            <line num="697" count="64" type="stmt"/>
            <line num="698" count="64" type="stmt"/>
            <line falsecount="64" truecount="288" num="698" type="cond"/>
            <line num="702" count="288" type="stmt"/>
            <line num="703" count="288" type="stmt"/>
            <line num="704" count="288" type="stmt"/>
            <line num="705" count="288" type="stmt"/>
            <line num="707" count="288" type="stmt"/>
            <line falsecount="288" truecount="2976" num="707" type="cond"/>
            <line num="708" count="2976" type="stmt"/>
            <line num="709" count="2976" type="stmt"/>
            <line num="710" count="2976" type="stmt"/>
            <line num="712" count="288" type="stmt"/>
            <line num="715" count="288" type="stmt"/>
            <line num="718" count="288" type="stmt"/>
            <line num="719" count="288" type="stmt"/>
            <line num="722" count="288" type="stmt"/>
            <line num="727" count="288" type="stmt"/>
            <line num="728" count="288" type="stmt"/>
            <line falsecount="0" truecount="288" num="728" type="cond"/>
            <line num="730" count="288" type="stmt"/>
            <line num="732" count="288" type="stmt"/>
            <line num="736" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="746" count="8" type="stmt"/>
            <line num="751" count="8" type="stmt"/>
            <line num="753" count="8" type="stmt"/>
            <line num="760" count="8" type="stmt"/>
            <line num="763" count="8" type="stmt"/>
            <line num="766" count="8" type="stmt"/>
            <line num="767" count="8" type="stmt"/>
            <line num="768" count="8" type="stmt"/>
            <line num="769" count="8" type="stmt"/>
            <line num="771" count="8" type="stmt"/>
            <line num="778" count="8" type="stmt"/>
            <line num="783" count="8" type="stmt"/>
            <line num="784" count="8" type="stmt"/>
            <line num="785" count="40" type="stmt"/>
            <line num="788" count="8" type="stmt"/>
            <line num="791" count="8" type="stmt"/>
            <line num="792" count="8" type="stmt"/>
            <line num="793" count="8" type="stmt"/>
            <line falsecount="8" truecount="288" num="793" type="cond"/>
            <line num="794" count="288" type="stmt"/>
            <line num="795" count="288" type="stmt"/>
            <line num="796" count="288" type="stmt"/>
            <line num="797" count="288" type="stmt"/>
            <line num="798" count="288" type="stmt"/>
            <line num="799" count="288" type="stmt"/>
            <line num="801" count="8" type="stmt"/>
            <line num="803" count="8" type="stmt"/>
            <line num="804" count="8" type="stmt"/>
            <line num="805" count="8" type="stmt"/>
            <line num="807" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(LIBORModelMonteCarloSimulationModel,double[]) : double" num="810" count="3384" type="method"/>
            <line num="811" count="3384" type="stmt"/>
            <line complexity="1" visibility="private" signature="getSwapAnnuity(LIBORModelMonteCarloSimulationModel,double[]) : double" num="814" count="784" type="method"/>
            <line num="815" count="784" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/LIBORMarketModelWithTenorRefinementCalibrationTest.java" name="LIBORMarketModelWithTenorRefinementCalibrationTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="51" loc="1029" coveredmethods="0" methods="12" elements="516" classes="1" ncloc="734" statements="442" conditionals="62" coveredstatements="0"/>
            <class name="LIBORMarketModelWithTenorRefinementCalibrationTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="51" coveredmethods="0" methods="12" elements="516" statements="442" conditionals="62" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelWithTenorRefinementCalibrationTest()" num="99" count="0" type="method"/>
            <line complexity="2" visibility="private" signature="createCalibrationItem(double,double,double,int,double,double,String,ForwardCurve,DiscountCurve) : CalibrationProduct" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testSwaptionSmileCalibration() : void" num="132" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="276" type="cond"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line complexity="23" visibility="public" signature="testATMSwaptionCalibration() : void" num="298" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="370" type="cond"/>
            <line num="372" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="380" type="cond"/>
            <line num="381" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="383" type="cond"/>
            <line num="384" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="423" type="cond"/>
            <line num="424" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="461" type="cond"/>
            <line num="462" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="462" type="cond"/>
            <line num="463" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line num="473" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="478" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="478" type="cond"/>
            <line num="479" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line num="488" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="488" type="cond"/>
            <line num="489" count="0" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line num="492" count="0" type="stmt"/>
            <line num="497" count="0" type="stmt"/>
            <line num="498" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line num="501" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="517" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line num="525" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="528" type="cond"/>
            <line num="529" count="0" type="stmt"/>
            <line num="530" count="0" type="stmt"/>
            <line num="532" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line num="539" count="0" type="stmt"/>
            <line num="541" count="0" type="stmt"/>
            <line num="542" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line num="547" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line num="549" count="0" type="stmt"/>
            <line num="550" count="0" type="stmt"/>
            <line num="551" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="557" count="0" type="stmt"/>
            <line num="558" count="0" type="stmt"/>
            <line num="559" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line num="561" count="0" type="stmt"/>
            <line num="566" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="567" type="cond"/>
            <line num="568" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="579" count="0" type="stmt"/>
            <line num="581" count="0" type="stmt"/>
            <line num="582" count="0" type="stmt"/>
            <line num="585" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line num="588" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="588" type="cond"/>
            <line num="589" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line num="591" count="0" type="stmt"/>
            <line num="592" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line num="596" count="0" type="stmt"/>
            <line num="597" count="0" type="stmt"/>
            <line num="599" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="603" type="cond"/>
            <line num="604" count="0" type="stmt"/>
            <line num="607" count="0" type="stmt"/>
            <line num="608" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="608" type="cond"/>
            <line num="609" count="0" type="stmt"/>
            <line num="612" count="0" type="stmt"/>
            <line num="613" count="0" type="stmt"/>
            <line num="621" count="0" type="stmt"/>
            <line num="622" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="setValues(double[],double[]) : void" num="627" count="0" type="method"/>
            <line num="630" count="0" type="stmt"/>
            <line num="631" count="0" type="stmt"/>
            <line num="632" count="0" type="stmt"/>
            <line num="633" count="0" type="stmt"/>
            <line num="635" count="0" type="stmt"/>
            <line num="641" count="0" type="stmt"/>
            <line num="643" count="0" type="stmt"/>
            <line num="644" count="0" type="stmt"/>
            <line num="646" count="0" type="stmt"/>
            <line num="647" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="647" type="cond"/>
            <line num="648" count="0" type="stmt"/>
            <line num="649" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="call() : Double" num="650" count="0" type="method"/>
            <line num="652" count="0" type="stmt"/>
            <line num="653" count="0" type="stmt"/>
            <line num="656" count="0" type="stmt"/>
            <line num="660" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="660" type="cond"/>
            <line num="661" count="0" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line num="665" count="0" type="stmt"/>
            <line num="666" count="0" type="stmt"/>
            <line num="667" count="0" type="stmt"/>
            <line num="670" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="670" type="cond"/>
            <line num="671" count="0" type="stmt"/>
            <line num="672" count="0" type="stmt"/>
            <line num="673" count="0" type="stmt"/>
            <line num="676" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line num="684" count="0" type="stmt"/>
            <line num="685" count="0" type="stmt"/>
            <line num="686" count="0" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line num="688" count="0" type="stmt"/>
            <line num="690" count="0" type="stmt"/>
            <line num="691" count="0" type="stmt"/>
            <line num="694" count="0" type="stmt"/>
            <line num="697" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="697" type="cond"/>
            <line num="698" count="0" type="stmt"/>
            <line num="703" count="0" type="stmt"/>
            <line num="705" count="0" type="stmt"/>
            <line num="706" count="0" type="stmt"/>
            <line num="707" count="0" type="stmt"/>
            <line num="710" count="0" type="stmt"/>
            <line num="711" count="0" type="stmt"/>
            <line num="712" count="0" type="stmt"/>
            <line num="713" count="0" type="stmt"/>
            <line num="715" count="0" type="stmt"/>
            <line num="721" count="0" type="stmt"/>
            <line num="723" count="0" type="stmt"/>
            <line num="724" count="0" type="stmt"/>
            <line num="726" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="726" type="cond"/>
            <line num="727" count="0" type="stmt"/>
            <line num="728" count="0" type="stmt"/>
            <line num="729" count="0" type="stmt"/>
            <line num="730" count="0" type="stmt"/>
            <line num="731" count="0" type="stmt"/>
            <line num="733" count="0" type="stmt"/>
            <line num="734" count="0" type="stmt"/>
            <line num="735" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="741" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="741" type="cond"/>
            <line num="742" count="0" type="stmt"/>
            <line num="745" count="0" type="stmt"/>
            <line num="746" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="746" type="cond"/>
            <line num="747" count="0" type="stmt"/>
            <line num="750" count="0" type="stmt"/>
            <line num="751" count="0" type="stmt"/>
            <line num="759" count="0" type="stmt"/>
            <line num="760" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="setValues(double[],double[]) : void" num="765" count="0" type="method"/>
            <line num="768" count="0" type="stmt"/>
            <line num="769" count="0" type="stmt"/>
            <line num="770" count="0" type="stmt"/>
            <line num="771" count="0" type="stmt"/>
            <line num="773" count="0" type="stmt"/>
            <line num="779" count="0" type="stmt"/>
            <line num="781" count="0" type="stmt"/>
            <line num="782" count="0" type="stmt"/>
            <line num="784" count="0" type="stmt"/>
            <line num="785" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="785" type="cond"/>
            <line num="786" count="0" type="stmt"/>
            <line num="787" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="call() : Double" num="788" count="0" type="method"/>
            <line num="790" count="0" type="stmt"/>
            <line num="791" count="0" type="stmt"/>
            <line num="795" count="0" type="stmt"/>
            <line num="799" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="799" type="cond"/>
            <line num="800" count="0" type="stmt"/>
            <line num="801" count="0" type="stmt"/>
            <line num="804" count="0" type="stmt"/>
            <line num="805" count="0" type="stmt"/>
            <line num="806" count="0" type="stmt"/>
            <line num="809" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="809" type="cond"/>
            <line num="810" count="0" type="stmt"/>
            <line num="811" count="0" type="stmt"/>
            <line num="812" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line num="818" count="0" type="stmt"/>
            <line num="823" count="0" type="stmt"/>
            <line num="824" count="0" type="stmt"/>
            <line num="825" count="0" type="stmt"/>
            <line num="826" count="0" type="stmt"/>
            <line num="827" count="0" type="stmt"/>
            <line num="829" count="0" type="stmt"/>
            <line num="830" count="0" type="stmt"/>
            <line num="833" count="0" type="stmt"/>
            <line num="836" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="836" type="cond"/>
            <line num="837" count="0" type="stmt"/>
            <line num="842" count="0" type="stmt"/>
            <line num="844" count="0" type="stmt"/>
            <line num="845" count="0" type="stmt"/>
            <line num="846" count="0" type="stmt"/>
            <line num="849" count="0" type="stmt"/>
            <line num="850" count="0" type="stmt"/>
            <line num="851" count="0" type="stmt"/>
            <line num="852" count="0" type="stmt"/>
            <line num="854" count="0" type="stmt"/>
            <line num="860" count="0" type="stmt"/>
            <line num="862" count="0" type="stmt"/>
            <line num="863" count="0" type="stmt"/>
            <line num="867" count="0" type="stmt"/>
            <line num="868" count="0" type="stmt"/>
            <line num="869" count="0" type="stmt"/>
            <line num="870" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="870" type="cond"/>
            <line num="871" count="0" type="stmt"/>
            <line num="872" count="0" type="stmt"/>
            <line num="873" count="0" type="stmt"/>
            <line num="874" count="0" type="stmt"/>
            <line num="875" count="0" type="stmt"/>
            <line num="876" count="0" type="stmt"/>
            <line num="877" count="0" type="stmt"/>
            <line num="878" count="0" type="stmt"/>
            <line num="883" count="0" type="stmt"/>
            <line num="884" count="0" type="stmt"/>
            <line num="885" count="0" type="stmt"/>
            <line num="886" count="0" type="stmt"/>
            <line num="888" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCalibratedCurve() : AnalyticModel" num="891" count="0" type="method"/>
            <line num="892" count="0" type="stmt"/>
            <line num="893" count="0" type="stmt"/>
            <line num="894" count="0" type="stmt"/>
            <line num="895" count="0" type="stmt"/>
            <line num="896" count="0" type="stmt"/>
            <line num="897" count="0" type="stmt"/>
            <line num="899" count="0" type="stmt"/>
            <line num="901" count="0" type="stmt"/>
            <line num="902" count="0" type="stmt"/>
            <line num="903" count="0" type="stmt"/>
            <line num="904" count="0" type="stmt"/>
            <line num="905" count="0" type="stmt"/>
            <line num="906" count="0" type="stmt"/>
            <line num="907" count="0" type="stmt"/>
            <line num="908" count="0" type="stmt"/>
            <line num="909" count="0" type="stmt"/>
            <line num="911" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getCalibratedCurve(AnalyticModel,Map&lt;String, Object&gt;) : AnalyticModel" num="914" count="0" type="method"/>
            <line num="916" count="0" type="stmt"/>
            <line num="917" count="0" type="stmt"/>
            <line num="918" count="0" type="stmt"/>
            <line num="919" count="0" type="stmt"/>
            <line num="920" count="0" type="stmt"/>
            <line num="921" count="0" type="stmt"/>
            <line num="922" count="0" type="stmt"/>
            <line num="923" count="0" type="stmt"/>
            <line num="924" count="0" type="stmt"/>
            <line num="926" count="0" type="stmt"/>
            <line num="927" count="0" type="stmt"/>
            <line num="928" count="0" type="stmt"/>
            <line num="930" count="0" type="stmt"/>
            <line num="931" count="0" type="stmt"/>
            <line num="933" count="0" type="stmt"/>
            <line num="934" count="0" type="stmt"/>
            <line num="936" count="0" type="stmt"/>
            <line num="946" count="0" type="stmt"/>
            <line num="949" count="0" type="stmt"/>
            <line num="950" count="0" type="stmt"/>
            <line num="951" count="0" type="stmt"/>
            <line num="952" count="0" type="stmt"/>
            <line num="953" count="0" type="stmt"/>
            <line num="954" count="0" type="stmt"/>
            <line num="955" count="0" type="stmt"/>
            <line num="956" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="956" type="cond"/>
            <line num="958" count="0" type="stmt"/>
            <line num="959" count="0" type="stmt"/>
            <line num="961" count="0" type="stmt"/>
            <line num="962" count="0" type="stmt"/>
            <line num="963" count="0" type="stmt"/>
            <line num="964" count="0" type="stmt"/>
            <line num="967" count="0" type="stmt"/>
            <line num="970" count="0" type="stmt"/>
            <line num="984" count="0" type="stmt"/>
            <line num="989" count="0" type="stmt"/>
            <line num="990" count="0" type="stmt"/>
            <line num="995" count="0" type="stmt"/>
            <line num="996" count="0" type="stmt"/>
            <line num="997" count="0" type="stmt"/>
            <line num="999" count="0" type="stmt"/>
            <line num="1002" count="0" type="stmt"/>
            <line num="1005" count="0" type="stmt"/>
            <line num="1007" count="0" type="stmt"/>
            <line num="1008" count="0" type="stmt"/>
            <line num="1009" count="0" type="stmt"/>
            <line num="1010" count="0" type="stmt"/>
            <line num="1011" count="0" type="stmt"/>
            <line num="1012" count="0" type="stmt"/>
            <line num="1014" count="0" type="stmt"/>
            <line num="1016" count="0" type="stmt"/>
            <line num="1018" count="0" type="stmt"/>
            <line num="1019" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1019" type="cond"/>
            <line num="1020" count="0" type="stmt"/>
            <line num="1021" count="0" type="stmt"/>
            <line num="1023" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(ForwardCurve,DiscountCurve,double[]) : double" num="1026" count="0" type="method"/>
            <line num="1027" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.automaticdifferentiation">
         <metrics coveredelements="481" complexity="59" loc="1130" methods="32" classes="4" statements="402" coveredconditionals="50" coveredmethods="32" elements="486" ncloc="657" files="4" conditionals="52" coveredstatements="399"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/automaticdifferentiation/MonteCarloBlackScholesModelDigitalOptionAADRegressionSensitivitiesTest.java" name="MonteCarloBlackScholesModelDigitalOptionAADRegressionSensitivitiesTest.java">
            <metrics coveredelements="129" coveredconditionals="8" complexity="8" loc="326" coveredmethods="3" methods="3" elements="133" classes="1" ncloc="181" statements="120" conditionals="10" coveredstatements="118"/>
            <class name="MonteCarloBlackScholesModelDigitalOptionAADRegressionSensitivitiesTest">
               <metrics coveredelements="129" complexity="8" methods="3" testruns="2" statements="120" coveredconditionals="8" coveredmethods="3" elements="133" testfailures="0" testduration="11.4" conditionals="10" coveredstatements="118" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="72" testsuccess="true" count="2" testduration="5.599" type="method"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel(RandomVariableFactory,BrownianMotion) : MonteCarloAssetModel" num="112" count="10" type="method"/>
            <line num="114" count="10" type="stmt"/>
            <line num="117" count="10" type="stmt"/>
            <line num="120" count="10" type="stmt"/>
            <line complexity="6" visibility="public" signature="getSensitivityApproximations(double,int,boolean) : Map&lt;String, Object&gt;" num="123" count="2" type="method"/>
            <line num="124" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line num="163" count="2" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line num="165" count="2" type="stmt"/>
            <line num="166" count="2" type="stmt"/>
            <line num="171" count="2" type="stmt"/>
            <line num="173" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line num="175" count="2" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="192" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line num="200" count="2" type="stmt"/>
            <line num="201" count="2" type="stmt"/>
            <line num="202" count="2" type="stmt"/>
            <line num="203" count="2" type="stmt"/>
            <line num="205" count="2" type="stmt"/>
            <line num="206" count="2" type="stmt"/>
            <line num="208" count="2" type="stmt"/>
            <line num="210" count="2" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line num="218" count="2" type="stmt"/>
            <line num="220" count="2" type="stmt"/>
            <line num="229" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="229" type="cond"/>
            <line num="233" count="2" type="stmt"/>
            <line num="234" count="2" type="stmt"/>
            <line num="235" count="2" type="stmt"/>
            <line num="237" count="2" type="stmt"/>
            <line num="238" count="2" type="stmt"/>
            <line num="239" count="2" type="stmt"/>
            <line num="241" count="2" type="stmt"/>
            <line num="242" count="2" type="stmt"/>
            <line num="244" count="2" type="stmt"/>
            <line num="245" count="2" type="stmt"/>
            <line num="247" count="2" type="stmt"/>
            <line num="248" count="2" type="stmt"/>
            <line num="250" count="2" type="stmt"/>
            <line num="255" count="2" type="stmt"/>
            <line num="256" count="2" type="stmt"/>
            <line num="257" count="2" type="stmt"/>
            <line num="258" count="2" type="stmt"/>
            <line falsecount="2" truecount="202" num="258" type="cond"/>
            <line num="259" count="202" type="stmt"/>
            <line num="260" count="202" type="stmt"/>
            <line falsecount="200" truecount="2" num="260" type="cond"/>
            <line num="261" count="2" type="stmt"/>
            <line num="263" count="200" type="stmt"/>
            <line num="264" count="200" type="stmt"/>
            <line num="265" count="200" type="stmt"/>
            <line num="266" count="200" type="stmt"/>
            <line num="267" count="200" type="stmt"/>
            <line num="268" count="200" type="stmt"/>
            <line num="270" count="2" type="stmt"/>
            <line num="271" count="2" type="stmt"/>
            <line num="273" count="2" type="stmt"/>
            <line num="274" count="2" type="stmt"/>
            <line num="276" count="2" type="stmt"/>
            <line num="277" count="2" type="stmt"/>
            <line falsecount="2" truecount="2" num="277" type="cond"/>
            <line num="278" count="2" type="stmt"/>
            <line num="280" count="2" type="stmt"/>
            <line num="281" count="2" type="stmt"/>
            <line num="282" count="2" type="stmt"/>
            <line num="283" count="2" type="stmt"/>
            <line num="288" count="2" type="stmt"/>
            <line num="289" count="2" type="stmt"/>
            <line num="290" count="2" type="stmt"/>
            <line num="292" count="2" type="stmt"/>
            <line num="293" count="2" type="stmt"/>
            <line num="298" count="2" type="stmt"/>
            <line num="305" count="2" type="stmt"/>
            <line num="307" count="2" type="stmt"/>
            <line num="309" count="2" type="stmt"/>
            <line num="311" count="2" type="stmt"/>
            <line num="312" count="2" type="stmt"/>
            <line num="313" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="313" type="cond"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="318" count="2" type="stmt"/>
            <line num="319" count="2" type="stmt"/>
            <line num="320" count="2" type="stmt"/>
            <line num="321" count="2" type="stmt"/>
            <line num="324" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/automaticdifferentiation/RandomVariableDifferentiableArithmeticTest.java" name="RandomVariableDifferentiableArithmeticTest.java">
            <metrics coveredelements="54" coveredconditionals="0" complexity="7" loc="162" coveredmethods="7" methods="7" elements="54" classes="1" ncloc="89" statements="47" conditionals="0" coveredstatements="47"/>
            <class name="RandomVariableDifferentiableArithmeticTest">
               <metrics coveredelements="54" complexity="7" methods="7" testruns="40" statements="47" coveredconditionals="0" coveredmethods="7" elements="54" testfailures="0" testduration="0.08700000000000001" conditionals="0" coveredstatements="47" testpasses="40"/>
            </class>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="27" count="4" type="method"/>
            <line num="29" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableArithmeticTest(RandomVariableDifferentiableFactory)" num="39" count="40" type="method"/>
            <line num="40" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArithmeticSubSelf() : void" num="43" count="8" type="method"/>
            <line num="46" count="8" type="stmt"/>
            <line num="48" count="8" type="stmt"/>
            <line num="54" count="8" type="stmt"/>
            <line num="55" count="8" type="stmt"/>
            <line num="57" count="8" type="stmt"/>
            <line num="58" count="8" type="stmt"/>
            <line num="60" count="8" type="stmt"/>
            <line num="62" count="8" type="stmt"/>
            <line num="64" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArithmeticDivSelf() : void" num="67" count="8" type="method"/>
            <line num="70" count="8" type="stmt"/>
            <line num="72" count="8" type="stmt"/>
            <line num="78" count="8" type="stmt"/>
            <line num="79" count="8" type="stmt"/>
            <line num="81" count="8" type="stmt"/>
            <line num="82" count="8" type="stmt"/>
            <line num="84" count="8" type="stmt"/>
            <line num="86" count="8" type="stmt"/>
            <line num="88" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArithmeticExpLog() : void" num="91" count="8" type="method"/>
            <line num="94" count="8" type="stmt"/>
            <line num="96" count="8" type="stmt"/>
            <line num="102" count="8" type="stmt"/>
            <line num="103" count="8" type="stmt"/>
            <line num="105" count="8" type="stmt"/>
            <line num="106" count="8" type="stmt"/>
            <line num="108" count="8" type="stmt"/>
            <line num="110" count="8" type="stmt"/>
            <line num="112" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArithmeticSqrtSquared() : void" num="115" count="8" type="method"/>
            <line num="118" count="8" type="stmt"/>
            <line num="120" count="8" type="stmt"/>
            <line num="126" count="8" type="stmt"/>
            <line num="127" count="8" type="stmt"/>
            <line num="129" count="8" type="stmt"/>
            <line num="130" count="8" type="stmt"/>
            <line num="132" count="8" type="stmt"/>
            <line num="134" count="8" type="stmt"/>
            <line num="136" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArithmeticSqrtMultSqrt() : void" num="139" count="8" type="method"/>
            <line num="142" count="8" type="stmt"/>
            <line num="144" count="8" type="stmt"/>
            <line num="150" count="8" type="stmt"/>
            <line num="151" count="8" type="stmt"/>
            <line num="153" count="8" type="stmt"/>
            <line num="154" count="8" type="stmt"/>
            <line num="156" count="8" type="stmt"/>
            <line num="158" count="8" type="stmt"/>
            <line num="160" count="8" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/automaticdifferentiation/RandomVariableDifferentiableTest.java" name="RandomVariableDifferentiableTest.java">
            <metrics coveredelements="248" coveredconditionals="42" complexity="38" loc="504" coveredmethods="16" methods="16" elements="249" classes="1" ncloc="303" statements="191" conditionals="42" coveredstatements="190"/>
            <class name="RandomVariableDifferentiableTest">
               <metrics coveredelements="248" complexity="38" methods="16" testruns="104" statements="191" coveredconditionals="42" coveredmethods="16" elements="249" testfailures="0" testduration="829.028" conditionals="42" coveredstatements="190" testpasses="104"/>
            </class>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="33" count="4" type="method"/>
            <line num="35" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableTest(RandomVariableDifferentiableFactory)" num="45" count="104" type="method"/>
            <line num="46" count="104" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableDeterministc() : void" num="49" count="8" type="method"/>
            <line num="53" count="8" type="stmt"/>
            <line num="56" count="8" type="stmt"/>
            <line num="57" count="8" type="stmt"/>
            <line num="58" count="8" type="stmt"/>
            <line num="59" count="8" type="stmt"/>
            <line num="60" count="8" type="stmt"/>
            <line num="63" count="8" type="stmt"/>
            <line num="66" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableStochastic() : void" num="70" count="8" type="method"/>
            <line num="74" count="8" type="stmt"/>
            <line num="78" count="8" type="stmt"/>
            <line num="79" count="8" type="stmt"/>
            <line num="82" count="8" type="stmt"/>
            <line num="85" count="8" type="stmt"/>
            <line num="88" count="8" type="stmt"/>
            <line num="89" count="8" type="stmt"/>
            <line num="92" count="8" type="stmt"/>
            <line num="95" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableArithmeticSqrtPow() : void" num="98" count="8" type="method"/>
            <line num="102" count="8" type="stmt"/>
            <line num="105" count="8" type="stmt"/>
            <line num="108" count="8" type="stmt"/>
            <line num="109" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableArithmeticSquaredPow() : void" num="113" count="8" type="method"/>
            <line num="117" count="8" type="stmt"/>
            <line num="120" count="8" type="stmt"/>
            <line num="123" count="8" type="stmt"/>
            <line num="124" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableStandardDeviation() : void" num="128" count="8" type="method"/>
            <line num="132" count="8" type="stmt"/>
            <line num="135" count="8" type="stmt"/>
            <line num="136" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRandomVariableSimpleGradient() : void" num="139" count="8" type="method"/>
            <line num="142" count="8" type="stmt"/>
            <line num="144" count="8" type="stmt"/>
            <line num="148" count="8" type="stmt"/>
            <line num="151" count="8" type="stmt"/>
            <line num="155" count="8" type="stmt"/>
            <line num="157" count="8" type="stmt"/>
            <line num="159" count="8" type="stmt"/>
            <line num="161" count="8" type="stmt"/>
            <line num="165" count="8" type="stmt"/>
            <line num="170" count="8" type="stmt"/>
            <line num="171" count="8" type="stmt"/>
            <line num="172" count="8" type="stmt"/>
            <line num="174" count="8" type="stmt"/>
            <line falsecount="8" truecount="16" num="174" type="cond"/>
            <line num="175" count="16" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRandomVariableSimpleGradient2() : void" num="179" count="8" type="method"/>
            <line num="182" count="8" type="stmt"/>
            <line num="184" count="8" type="stmt"/>
            <line num="188" count="8" type="stmt"/>
            <line num="191" count="8" type="stmt"/>
            <line num="194" count="8" type="stmt"/>
            <line num="196" count="8" type="stmt"/>
            <line num="198" count="8" type="stmt"/>
            <line num="200" count="8" type="stmt"/>
            <line num="204" count="8" type="stmt"/>
            <line num="209" count="8" type="stmt"/>
            <line num="210" count="8" type="stmt"/>
            <line num="211" count="8" type="stmt"/>
            <line num="213" count="8" type="stmt"/>
            <line falsecount="8" truecount="16" num="213" type="cond"/>
            <line num="214" count="16" type="stmt"/>
            <line complexity="4" visibility="public" signature="testRandomVariableGradientBigSum() : void" num="218" count="8" type="method"/>
            <line num="222" count="8" type="stmt"/>
            <line num="224" count="8" type="stmt"/>
            <line num="226" count="8" type="stmt"/>
            <line falsecount="8" truecount="800000" num="226" type="cond"/>
            <line num="227" count="800000" type="stmt"/>
            <line num="230" count="8" type="stmt"/>
            <line num="233" count="8" type="stmt"/>
            <line num="236" count="8" type="stmt"/>
            <line num="238" count="8" type="stmt"/>
            <line num="239" count="8" type="stmt"/>
            <line falsecount="8" truecount="8000" num="239" type="cond"/>
            <line num="240" count="8000" type="stmt"/>
            <line num="243" count="8" type="stmt"/>
            <line num="244" count="8" type="stmt"/>
            <line num="246" count="8" type="stmt"/>
            <line num="247" count="8" type="stmt"/>
            <line num="248" count="8" type="stmt"/>
            <line num="250" count="8" type="stmt"/>
            <line falsecount="8" truecount="8" num="250" type="cond"/>
            <line num="251" count="8" type="stmt"/>
            <line complexity="5" visibility="public" signature="testRandomVariableGradientBiggerSum() : void" num="256" count="8" type="method"/>
            <line num="259" count="8" type="stmt"/>
            <line num="261" count="8" type="stmt"/>
            <line num="263" count="8" type="stmt"/>
            <line num="264" count="8" type="stmt"/>
            <line num="265" count="8" type="stmt"/>
            <line falsecount="8" truecount="8000000" num="265" type="cond"/>
            <line num="266" count="8000000" type="stmt"/>
            <line num="269" count="8" type="stmt"/>
            <line num="272" count="8" type="stmt"/>
            <line num="275" count="8" type="stmt"/>
            <line num="277" count="8" type="stmt"/>
            <line num="279" count="8" type="stmt"/>
            <line num="280" count="8" type="stmt"/>
            <line falsecount="8" truecount="8000" num="280" type="cond"/>
            <line num="281" count="8000" type="stmt"/>
            <line num="284" count="8" type="stmt"/>
            <line num="285" count="8" type="stmt"/>
            <line num="287" count="8" type="stmt"/>
            <line num="289" count="8" type="stmt"/>
            <line num="291" count="8" type="stmt"/>
            <line num="292" count="8" type="stmt"/>
            <line num="294" count="8" type="stmt"/>
            <line num="296" count="8" type="stmt"/>
            <line num="297" count="8" type="stmt"/>
            <line num="298" count="8" type="stmt"/>
            <line num="300" count="8" type="stmt"/>
            <line num="301" count="8" type="stmt"/>
            <line num="303" count="8" type="stmt"/>
            <line falsecount="8" truecount="8" num="303" type="cond"/>
            <line num="304" count="8" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testRandomVariableGradientBigSum2() : void" num="312" count="8" type="method"/>
            <line num="316" count="8" type="stmt"/>
            <line num="318" count="8" type="stmt"/>
            <line num="320" count="8" type="stmt"/>
            <line falsecount="8" truecount="320000" num="320" type="cond"/>
            <line num="321" count="320000" type="stmt"/>
            <line num="325" count="8" type="stmt"/>
            <line num="329" count="8" type="stmt"/>
            <line num="331" count="8" type="stmt"/>
            <line num="332" count="8" type="stmt"/>
            <line falsecount="8" truecount="8000" num="332" type="cond"/>
            <line num="333" count="8000" type="stmt"/>
            <line num="336" count="8" type="stmt"/>
            <line num="337" count="8" type="stmt"/>
            <line num="339" count="8" type="stmt"/>
            <line num="340" count="8" type="stmt"/>
            <line num="341" count="8" type="stmt"/>
            <line num="343" count="8" type="stmt"/>
            <line falsecount="8" truecount="8" num="343" type="cond"/>
            <line num="344" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRandomVariableExpectation() : void" num="349" count="8" type="method"/>
            <line num="352" count="8" type="stmt"/>
            <line num="353" count="8" type="stmt"/>
            <line num="354" count="8" type="stmt"/>
            <line num="355" count="8" type="stmt"/>
            <line num="357" count="8" type="stmt"/>
            <line num="359" count="8" type="stmt"/>
            <line num="361" count="8" type="stmt"/>
            <line num="363" count="8" type="stmt"/>
            <line num="365" count="8" type="stmt"/>
            <line num="366" count="8" type="stmt"/>
            <line num="367" count="8" type="stmt"/>
            <line num="368" count="8" type="stmt"/>
            <line num="370" count="8" type="stmt"/>
            <line num="373" count="8" type="stmt"/>
            <line falsecount="4" truecount="4" num="373" type="cond"/>
            <line num="374" count="4" type="stmt"/>
            <line complexity="4" visibility="public" signature="testRandomVariableGradientBigSumWithConstants() : void" num="378" count="8" type="method"/>
            <line num="382" count="8" type="stmt"/>
            <line num="385" count="8" type="stmt"/>
            <line num="386" count="8" type="stmt"/>
            <line falsecount="8" truecount="320000" num="386" type="cond"/>
            <line num="387" count="320000" type="stmt"/>
            <line num="390" count="8" type="stmt"/>
            <line num="391" count="8" type="stmt"/>
            <line num="394" count="8" type="stmt"/>
            <line num="398" count="8" type="stmt"/>
            <line num="405" count="8" type="stmt"/>
            <line num="407" count="8" type="stmt"/>
            <line falsecount="8" truecount="8000" num="407" type="cond"/>
            <line num="408" count="8000" type="stmt"/>
            <line num="409" count="8000" type="stmt"/>
            <line num="412" count="8" type="stmt"/>
            <line num="413" count="8" type="stmt"/>
            <line num="415" count="8" type="stmt"/>
            <line num="416" count="8" type="stmt"/>
            <line num="417" count="8" type="stmt"/>
            <line num="419" count="8" type="stmt"/>
            <line falsecount="8" truecount="8" num="419" type="cond"/>
            <line num="420" count="8" type="stmt"/>
            <line complexity="6" visibility="public" signature="testRandomVariableDifferentiableInterfaceVsFiniteDifferences() : void" num="424" count="8" type="method"/>
            <line num="427" count="8" type="stmt"/>
            <line num="428" count="8" type="stmt"/>
            <line num="430" count="8" type="stmt"/>
            <line num="432" count="8" type="stmt"/>
            <line num="435" count="8" type="stmt"/>
            <line num="436" count="8" type="stmt"/>
            <line num="438" count="8" type="stmt"/>
            <line num="439" count="8" type="stmt"/>
            <line falsecount="8" truecount="400" num="439" type="cond"/>
            <line num="440" count="400" type="stmt"/>
            <line falsecount="400" truecount="40000000" num="440" type="cond"/>
            <line num="441" count="40000000" type="stmt"/>
            <line num="443" count="400" type="stmt"/>
            <line num="449" count="8" type="stmt"/>
            <line num="450" count="8" type="stmt"/>
            <line num="451" count="8" type="stmt"/>
            <line num="458" count="8" type="stmt"/>
            <line num="459" count="8" type="stmt"/>
            <line falsecount="8" truecount="400" num="459" type="cond"/>
            <line num="460" count="400" type="stmt"/>
            <line num="464" count="8" type="stmt"/>
            <line num="466" count="8" type="stmt"/>
            <line num="467" count="8" type="stmt"/>
            <line falsecount="8" truecount="400" num="467" type="cond"/>
            <line num="469" count="400" type="stmt"/>
            <line num="470" count="400" type="stmt"/>
            <line num="472" count="400" type="stmt"/>
            <line num="473" count="400" type="stmt"/>
            <line num="476" count="400" type="stmt"/>
            <line num="478" count="8" type="stmt"/>
            <line num="480" count="8" type="stmt"/>
            <line num="481" count="8" type="stmt"/>
            <line num="483" count="8" type="stmt"/>
            <line falsecount="8" truecount="400" num="483" type="cond"/>
            <line num="484" count="400" type="stmt"/>
            <line num="485" count="400" type="stmt"/>
            <line num="486" count="400" type="stmt"/>
            <line num="488" count="400" type="stmt"/>
            <line complexity="2" visibility="private" signature="testFunction(RandomVariable[]) : RandomVariable" num="493" count="808" type="method"/>
            <line num="495" count="808" type="stmt"/>
            <line num="496" count="808" type="stmt"/>
            <line falsecount="808" truecount="39592" num="496" type="cond"/>
            <line num="497" count="39592" type="stmt"/>
            <line num="500" count="808" type="stmt"/>
            <line num="502" count="808" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/automaticdifferentiation/RandomVariableDifferentiableTypePriorityTest.java" name="RandomVariableDifferentiableTypePriorityTest.java">
            <metrics coveredelements="50" coveredconditionals="0" complexity="6" loc="138" coveredmethods="6" methods="6" elements="50" classes="1" ncloc="84" statements="44" conditionals="0" coveredstatements="44"/>
            <class name="RandomVariableDifferentiableTypePriorityTest">
               <metrics coveredelements="50" complexity="6" methods="6" testruns="32" statements="44" coveredconditionals="0" coveredmethods="6" elements="50" testfailures="0" testduration="0.07900000000000001" conditionals="0" coveredstatements="44" testpasses="32"/>
            </class>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="27" count="4" type="method"/>
            <line num="29" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableTypePriorityTest(RandomVariableFactory,AbstractRandomVariableDifferentiableFactory)" num="40" count="32" type="method"/>
            <line num="41" count="32" type="stmt"/>
            <line num="42" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypePriorityAdd() : void" num="45" count="8" type="method"/>
            <line num="48" count="8" type="stmt"/>
            <line num="49" count="8" type="stmt"/>
            <line num="51" count="8" type="stmt"/>
            <line num="57" count="8" type="stmt"/>
            <line num="58" count="8" type="stmt"/>
            <line num="59" count="8" type="stmt"/>
            <line num="61" count="8" type="stmt"/>
            <line num="62" count="8" type="stmt"/>
            <line num="63" count="8" type="stmt"/>
            <line num="65" count="8" type="stmt"/>
            <line num="67" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypePriorityMult() : void" num="70" count="8" type="method"/>
            <line num="73" count="8" type="stmt"/>
            <line num="74" count="8" type="stmt"/>
            <line num="76" count="8" type="stmt"/>
            <line num="82" count="8" type="stmt"/>
            <line num="83" count="8" type="stmt"/>
            <line num="84" count="8" type="stmt"/>
            <line num="86" count="8" type="stmt"/>
            <line num="87" count="8" type="stmt"/>
            <line num="88" count="8" type="stmt"/>
            <line num="90" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypePriorityCap() : void" num="93" count="8" type="method"/>
            <line num="96" count="8" type="stmt"/>
            <line num="97" count="8" type="stmt"/>
            <line num="99" count="8" type="stmt"/>
            <line num="105" count="8" type="stmt"/>
            <line num="106" count="8" type="stmt"/>
            <line num="107" count="8" type="stmt"/>
            <line num="109" count="8" type="stmt"/>
            <line num="110" count="8" type="stmt"/>
            <line num="111" count="8" type="stmt"/>
            <line num="113" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypePriorityFloor() : void" num="116" count="8" type="method"/>
            <line num="119" count="8" type="stmt"/>
            <line num="120" count="8" type="stmt"/>
            <line num="122" count="8" type="stmt"/>
            <line num="128" count="8" type="stmt"/>
            <line num="129" count="8" type="stmt"/>
            <line num="130" count="8" type="stmt"/>
            <line num="132" count="8" type="stmt"/>
            <line num="133" count="8" type="stmt"/>
            <line num="134" count="8" type="stmt"/>
            <line num="136" count="8" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.rootfinder">
         <metrics coveredelements="46" complexity="7" loc="97" methods="3" classes="1" statements="39" coveredconditionals="4" coveredmethods="3" elements="46" ncloc="55" files="1" conditionals="4" coveredstatements="39"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/rootfinder/RootFindersTest.java" name="RootFindersTest.java">
            <metrics coveredelements="46" coveredconditionals="4" complexity="7" loc="97" coveredmethods="3" methods="3" elements="46" classes="1" ncloc="55" statements="39" conditionals="4" coveredstatements="39"/>
            <class name="RootFindersTest">
               <metrics coveredelements="46" complexity="7" methods="3" testruns="1" statements="39" coveredconditionals="4" coveredmethods="3" elements="46" testfailures="0" testduration="0.02" conditionals="4" coveredstatements="39" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testRootFinders() : void" num="21" testsuccess="true" count="1" testduration="0.02" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testRootFinder(RootFinder) : void" num="53" count="3" type="method"/>
            <line num="54" count="3" type="stmt"/>
            <line num="57" count="3" type="stmt"/>
            <line falsecount="3" truecount="82" num="57" type="cond"/>
            <line num="58" count="82" type="stmt"/>
            <line num="61" count="82" type="stmt"/>
            <line num="63" count="82" type="stmt"/>
            <line num="67" count="3" type="stmt"/>
            <line num="68" count="3" type="stmt"/>
            <line num="69" count="3" type="stmt"/>
            <line num="70" count="3" type="stmt"/>
            <line num="72" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="testRootFinderWithDerivative(RootFinderWithDerivative) : void" num="75" count="2" type="method"/>
            <line num="77" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line falsecount="2" truecount="20" num="80" type="cond"/>
            <line num="81" count="20" type="stmt"/>
            <line num="83" count="20" type="stmt"/>
            <line num="84" count="20" type="stmt"/>
            <line num="86" count="20" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.fouriermethod">
         <metrics coveredelements="106" complexity="17" loc="402" methods="11" classes="4" statements="83" coveredconditionals="12" coveredmethods="11" elements="106" ncloc="235" files="4" conditionals="12" coveredstatements="83"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/fouriermethod/BlackScholesCallOptionTest.java" name="BlackScholesCallOptionTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="2" loc="76" coveredmethods="2" methods="2" elements="20" classes="1" ncloc="41" statements="18" conditionals="0" coveredstatements="18"/>
            <class name="BlackScholesCallOptionTest">
               <metrics coveredelements="20" complexity="2" methods="2" testruns="2" statements="18" coveredconditionals="0" coveredmethods="2" elements="20" testfailures="0" testduration="0.085" conditionals="0" coveredstatements="18" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="35" testsuccess="true" count="1" testduration="0.066" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDigitalOption() : void" num="56" testsuccess="true" count="1" testduration="0.019" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/fouriermethod/HestonModelCallOptionTest.java" name="HestonModelCallOptionTest.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="3" loc="90" coveredmethods="3" methods="3" elements="16" classes="1" ncloc="53" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="HestonModelCallOptionTest">
               <metrics coveredelements="16" complexity="3" methods="3" testruns="2" statements="13" coveredconditionals="0" coveredmethods="3" elements="16" testfailures="0" testduration="0.133" conditionals="0" coveredstatements="13" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="40" count="3" type="method"/>
            <line num="43" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModelCallOptionTest(FourierTransformProduct)" num="64" count="2" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="69" count="2" type="method"/>
            <line num="73" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/fouriermethod/MertonJumpDiffusionCallOptionTest.java" name="MertonJumpDiffusionCallOptionTest.java">
            <metrics coveredelements="35" coveredconditionals="6" complexity="6" loc="122" coveredmethods="3" methods="3" elements="35" classes="1" ncloc="72" statements="26" conditionals="6" coveredstatements="26"/>
            <class name="MertonJumpDiffusionCallOptionTest">
               <metrics coveredelements="35" complexity="6" methods="3" testruns="3" statements="26" coveredconditionals="6" coveredmethods="3" elements="35" testfailures="0" testduration="16.182" conditionals="6" coveredstatements="26" testpasses="3"/>
            </class>
            <line complexity="2" visibility="public" signature="testMartingaleProperty() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="58" type="cond"/>
            <line num="59" count="10" type="stmt"/>
            <line num="60" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMartingalePropertyMonteCarlo() : void" num="64" testsuccess="true" count="1" testduration="8.088" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="75" type="cond"/>
            <line num="76" count="10" type="stmt"/>
            <line num="77" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="test() : void" num="81" testsuccess="true" count="1" testduration="8.094" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line falsecount="1" truecount="20" num="103" type="cond"/>
            <line num="108" count="20" type="stmt"/>
            <line num="111" count="20" type="stmt"/>
            <line num="113" count="20" type="stmt"/>
            <line num="114" count="20" type="stmt"/>
            <line num="115" count="20" type="stmt"/>
            <line num="116" count="20" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/fouriermethod/VarianceGammaCallOptionTest.java" name="VarianceGammaCallOptionTest.java">
            <metrics coveredelements="35" coveredconditionals="6" complexity="6" loc="114" coveredmethods="3" methods="3" elements="35" classes="1" ncloc="69" statements="26" conditionals="6" coveredstatements="26"/>
            <class name="VarianceGammaCallOptionTest">
               <metrics coveredelements="35" complexity="6" methods="3" testruns="3" statements="26" coveredconditionals="6" coveredmethods="3" elements="35" testfailures="0" testduration="6.393" conditionals="6" coveredstatements="26" testpasses="3"/>
            </class>
            <line complexity="2" visibility="public" signature="testMartingaleProperty() : void" num="48" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="56" type="cond"/>
            <line num="57" count="10" type="stmt"/>
            <line num="58" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMartingalePropertyMonteCarlo() : void" num="62" testsuccess="true" count="1" testduration="3.318" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="72" type="cond"/>
            <line num="73" count="10" type="stmt"/>
            <line num="74" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="test() : void" num="77" testsuccess="true" count="1" testduration="3.074" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line falsecount="1" truecount="20" num="97" type="cond"/>
            <line num="102" count="20" type="stmt"/>
            <line num="105" count="20" type="stmt"/>
            <line num="107" count="20" type="stmt"/>
            <line num="108" count="20" type="stmt"/>
            <line num="109" count="20" type="stmt"/>
            <line num="110" count="20" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.products">
         <metrics coveredelements="25" complexity="4" loc="106" methods="4" classes="1" statements="21" coveredconditionals="0" coveredmethods="4" elements="25" ncloc="61" files="1" conditionals="0" coveredstatements="21"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/products/DepositTest.java" name="DepositTest.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="4" loc="106" coveredmethods="4" methods="4" elements="25" classes="1" ncloc="61" statements="21" conditionals="0" coveredstatements="21"/>
            <class name="DepositTest">
               <metrics coveredelements="25" complexity="4" methods="4" testruns="6" statements="21" coveredconditionals="0" coveredmethods="4" elements="25" testfailures="0" testduration="0.038000000000000006" conditionals="0" coveredstatements="21" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="DepositTest()" num="27" count="6" type="method"/>
            <line num="28" count="6" type="stmt"/>
            <line num="31" count="6" type="stmt"/>
            <line num="34" count="6" type="stmt"/>
            <line num="35" count="6" type="stmt"/>
            <line num="36" count="6" type="stmt"/>
            <line num="37" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRateValueConsistency() : void" num="47" testsuccess="true" count="2" testduration="0.019" type="method"/>
            <line num="51" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDepositValue() : void" num="67" testsuccess="true" count="2" testduration="0.005" type="method"/>
            <line num="70" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluationTime() : void" num="87" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.annuitymapping">
         <metrics coveredelements="116" complexity="25" loc="363" methods="9" classes="2" statements="104" coveredconditionals="6" coveredmethods="9" elements="119" ncloc="279" files="2" conditionals="6" coveredstatements="101"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/singleswaprate/annuitymapping/AnnuityMappingTest.java" name="AnnuityMappingTest.java">
            <metrics coveredelements="80" coveredconditionals="6" complexity="15" loc="213" coveredmethods="7" methods="7" elements="81" classes="1" ncloc="163" statements="68" conditionals="6" coveredstatements="67"/>
            <class name="AnnuityMappingTest">
               <metrics coveredelements="80" complexity="15" methods="7" testruns="4" statements="68" coveredconditionals="6" coveredmethods="7" elements="81" testfailures="0" testduration="0.013000000000000001" conditionals="6" coveredstatements="67" testpasses="4"/>
            </class>
            <line complexity="6" visibility="public" signature="create() : void" num="71" count="1" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a_testMappings() : void" num="142" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="b_testSeq() : void" num="159" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line falsecount="1" truecount="50" num="163" type="cond"/>
            <line num="164" count="50" type="stmt"/>
            <line num="165" count="50" type="stmt"/>
            <line num="166" count="50" type="stmt"/>
            <line num="168" count="50" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="c_testFirstDerivative() : void" num="173" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line falsecount="1" truecount="50" num="176" type="cond"/>
            <line num="177" count="50" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="d_testSecondDerivative() : void" num="185" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line falsecount="1" truecount="50" num="188" type="cond"/>
            <line num="189" count="50" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="manageOutput() : void" num="195" count="1" type="method"/>
            <line num="197" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="createVolatilityCube(String,LocalDate,double) : VolatilityCube" num="201" count="1" type="method"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/singleswaprate/annuitymapping/NormalizingFunctionTest.java" name="NormalizingFunctionTest.java">
            <metrics coveredelements="36" coveredconditionals="0" complexity="10" loc="150" coveredmethods="2" methods="2" elements="38" classes="1" ncloc="116" statements="36" conditionals="0" coveredstatements="34"/>
            <class name="NormalizingFunctionTest">
               <metrics coveredelements="36" complexity="10" methods="2" testruns="1" statements="36" coveredconditionals="0" coveredmethods="2" elements="38" testfailures="0" testduration="0.05" conditionals="0" coveredstatements="34" testpasses="1"/>
            </class>
            <line complexity="9" visibility="public" signature="setup() : void" num="63" count="1" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExpectation() : void" num="138" testsuccess="true" count="1" testduration="0.05" type="method"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.products">
         <metrics coveredelements="349" complexity="79" loc="862" methods="22" classes="3" statements="301" coveredconditionals="37" coveredmethods="22" elements="365" ncloc="678" files="3" conditionals="42" coveredstatements="290"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/singleswaprate/products/AnnuityDummyTest.java" name="AnnuityDummyTest.java">
            <metrics coveredelements="57" coveredconditionals="0" complexity="17" loc="187" coveredmethods="5" methods="5" elements="59" classes="1" ncloc="147" statements="54" conditionals="0" coveredstatements="52"/>
            <class name="AnnuityDummyTest">
               <metrics coveredelements="57" complexity="17" methods="5" testruns="3" statements="54" coveredconditionals="0" coveredmethods="5" elements="59" testfailures="0" testduration="0.5860000000000001" conditionals="0" coveredstatements="52" testpasses="3"/>
            </class>
            <line complexity="13" visibility="public" signature="setup() : void" num="62" count="1" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSimplified() : void" num="127" testsuccess="true" count="1" testduration="0.266" type="method"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBasic() : void" num="141" testsuccess="true" count="1" testduration="0.165" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMulti() : void" num="155" testsuccess="true" count="1" testduration="0.155" type="method"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildCube(AnnuityMappingType) : VolatilityCubeModel" num="170" count="3" type="method"/>
            <line num="171" count="3" type="stmt"/>
            <line num="182" count="3" type="stmt"/>
            <line num="183" count="3" type="stmt"/>
            <line num="185" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/singleswaprate/products/CashSettledSwaptionTest.java" name="CashSettledSwaptionTest.java">
            <metrics coveredelements="180" coveredconditionals="27" complexity="39" loc="404" coveredmethods="11" methods="11" elements="192" classes="1" ncloc="320" statements="149" conditionals="32" coveredstatements="142"/>
            <class name="CashSettledSwaptionTest">
               <metrics coveredelements="180" complexity="39" methods="11" testruns="3" statements="149" coveredconditionals="27" coveredmethods="11" elements="192" testfailures="0" testduration="7.651" conditionals="32" coveredstatements="142" testpasses="3"/>
            </class>
            <line complexity="15" visibility="public" signature="setup() : void" num="104" count="1" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line falsecount="1" truecount="204" num="107" type="cond"/>
            <line num="108" count="204" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="172" type="cond"/>
            <line num="173" count="100" type="stmt"/>
            <line complexity="1" visibility="public" signature="initiate() : void" num="178" count="3" type="method"/>
            <line num="182" count="3" type="stmt"/>
            <line num="183" count="3" type="stmt"/>
            <line num="184" count="3" type="stmt"/>
            <line num="185" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="a_testSimplifiedLinear() : void" num="189" testsuccess="true" count="1" testduration="1.707" type="method"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="202" type="cond"/>
            <line num="203" count="100" type="stmt"/>
            <line num="204" count="100" type="stmt"/>
            <line num="206" count="100" type="stmt"/>
            <line num="207" count="100" type="stmt"/>
            <line num="209" count="100" type="stmt"/>
            <line num="212" count="100" type="stmt"/>
            <line num="213" count="100" type="stmt"/>
            <line num="214" count="100" type="stmt"/>
            <line num="215" count="100" type="stmt"/>
            <line complexity="2" visibility="public" signature="b_testBasicPiterbarg() : void" num="220" testsuccess="true" count="1" testduration="3.067" type="method"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="233" type="cond"/>
            <line num="234" count="100" type="stmt"/>
            <line num="235" count="100" type="stmt"/>
            <line num="237" count="100" type="stmt"/>
            <line num="238" count="100" type="stmt"/>
            <line num="240" count="100" type="stmt"/>
            <line num="243" count="100" type="stmt"/>
            <line num="244" count="100" type="stmt"/>
            <line num="245" count="100" type="stmt"/>
            <line num="246" count="100" type="stmt"/>
            <line complexity="2" visibility="public" signature="c_testMultiPiterbarg() : void" num="251" testsuccess="true" count="1" testduration="2.877" type="method"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="264" type="cond"/>
            <line num="265" count="100" type="stmt"/>
            <line num="266" count="100" type="stmt"/>
            <line num="268" count="100" type="stmt"/>
            <line num="269" count="100" type="stmt"/>
            <line num="271" count="100" type="stmt"/>
            <line num="274" count="100" type="stmt"/>
            <line num="275" count="100" type="stmt"/>
            <line num="276" count="100" type="stmt"/>
            <line num="277" count="100" type="stmt"/>
            <line complexity="8" visibility="public" signature="gatherOutput() : void" num="282" count="3" type="method"/>
            <line num="286" count="3" type="stmt"/>
            <line num="287" count="3" type="stmt"/>
            <line num="288" count="3" type="stmt"/>
            <line falsecount="3" truecount="300" num="288" type="cond"/>
            <line num="289" count="300" type="stmt"/>
            <line num="293" count="3" type="stmt"/>
            <line num="294" count="3" type="stmt"/>
            <line num="295" count="3" type="stmt"/>
            <line num="298" count="3" type="stmt"/>
            <line num="299" count="3" type="stmt"/>
            <line num="300" count="3" type="stmt"/>
            <line falsecount="3" truecount="300" num="300" type="cond"/>
            <line num="301" count="300" type="stmt"/>
            <line num="303" count="300" type="stmt"/>
            <line num="304" count="300" type="stmt"/>
            <line num="305" count="300" type="stmt"/>
            <line num="307" count="300" type="stmt"/>
            <line num="310" count="300" type="stmt"/>
            <line num="312" count="300" type="stmt"/>
            <line num="316" count="3" type="stmt"/>
            <line falsecount="3" truecount="612" num="316" type="cond"/>
            <line num="317" count="612" type="stmt"/>
            <line num="320" count="3" type="stmt"/>
            <line num="321" count="300" type="stmt"/>
            <line falsecount="300" truecount="0" num="321" type="cond"/>
            <line num="322" count="0" type="stmt"/>
            <line num="325" count="3" type="stmt"/>
            <line num="326" count="300" type="stmt"/>
            <line falsecount="300" truecount="0" num="326" type="cond"/>
            <line num="327" count="0" type="stmt"/>
            <line num="330" count="3" type="stmt"/>
            <line num="331" count="300" type="stmt"/>
            <line falsecount="300" truecount="0" num="331" type="cond"/>
            <line num="332" count="0" type="stmt"/>
            <line num="335" count="3" type="stmt"/>
            <line num="336" count="300" type="stmt"/>
            <line falsecount="300" truecount="0" num="336" type="cond"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="printResults() : void" num="342" count="1" type="method"/>
            <line num="344" count="1" type="stmt"/>
            <line num="345" count="1" type="stmt"/>
            <line falsecount="1" truecount="204" num="345" type="cond"/>
            <line num="346" count="204" type="stmt"/>
            <line falsecount="203" truecount="1" num="346" type="cond"/>
            <line num="347" count="1" type="stmt"/>
            <line num="349" count="204" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildCube(AnnuityMappingType) : VolatilityCubeModel" num="358" count="3" type="method"/>
            <line num="359" count="3" type="stmt"/>
            <line num="370" count="3" type="stmt"/>
            <line num="371" count="3" type="stmt"/>
            <line num="373" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="valueReceiverPSS(double,VolatilityCubeModel,double,double,Schedule,String) : double" num="376" count="300" type="method"/>
            <line num="378" count="300" type="stmt"/>
            <line complexity="1" visibility="private" signature="valuePayerPSS(double,VolatilityCubeModel,double,double,Schedule,String) : double" num="381" count="600" type="method"/>
            <line num="382" count="600" type="stmt"/>
            <line num="383" count="600" type="stmt"/>
            <line num="384" count="600" type="stmt"/>
            <line num="385" count="600" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunction(double) : double" num="389" count="3" type="method"/>
            <line num="391" count="3" type="stmt"/>
            <line num="392" count="3" type="stmt"/>
            <line num="393" count="3" type="stmt"/>
            <line falsecount="3" truecount="60" num="393" type="cond"/>
            <line num="394" count="60" type="stmt"/>
            <line num="396" count="3" type="stmt"/>
            <line num="398" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="398" type="cond"/>
            <line num="399" count="0" type="stmt"/>
            <line num="401" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/singleswaprate/products/ConstantMaturitySwapTest.java" name="ConstantMaturitySwapTest.java">
            <metrics coveredelements="112" coveredconditionals="10" complexity="23" loc="271" coveredmethods="6" methods="6" elements="114" classes="1" ncloc="211" statements="98" conditionals="10" coveredstatements="96"/>
            <class name="ConstantMaturitySwapTest">
               <metrics coveredelements="112" complexity="23" methods="6" testruns="3" statements="98" coveredconditionals="10" coveredmethods="6" elements="114" testfailures="0" testduration="8.14" conditionals="10" coveredstatements="96" testpasses="3"/>
            </class>
            <line complexity="14" visibility="public" signature="setup() : void" num="77" count="1" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line falsecount="1" truecount="50" num="146" type="cond"/>
            <line num="147" count="50" type="stmt"/>
            <line num="148" count="50" type="stmt"/>
            <line num="149" count="50" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSimplifiedLinear() : void" num="153" testsuccess="true" count="1" testduration="1.624" type="method"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line falsecount="1" truecount="50" num="173" type="cond"/>
            <line num="174" count="50" type="stmt"/>
            <line num="175" count="50" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBasicPiterbarg() : void" num="181" testsuccess="true" count="1" testduration="3.305" type="method"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line falsecount="1" truecount="50" num="201" type="cond"/>
            <line num="202" count="50" type="stmt"/>
            <line num="203" count="50" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMultiPiterbarg() : void" num="209" testsuccess="true" count="1" testduration="3.211" type="method"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line falsecount="1" truecount="50" num="229" type="cond"/>
            <line num="230" count="50" type="stmt"/>
            <line num="231" count="50" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="gatherOutput() : void" num="237" count="3" type="method"/>
            <line num="241" count="3" type="stmt"/>
            <line num="242" count="3" type="stmt"/>
            <line num="243" count="3" type="stmt"/>
            <line num="245" count="3" type="stmt"/>
            <line num="246" count="3" type="stmt"/>
            <line num="247" count="3" type="stmt"/>
            <line falsecount="3" truecount="150" num="247" type="cond"/>
            <line num="248" count="150" type="stmt"/>
            <line num="250" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildCube(AnnuityMappingType) : VolatilityCubeModel" num="254" count="3" type="method"/>
            <line num="255" count="3" type="stmt"/>
            <line num="266" count="3" type="stmt"/>
            <line num="267" count="3" type="stmt"/>
            <line num="269" count="3" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.fouriermethod.calibration">
         <metrics coveredelements="118" complexity="4" loc="362" methods="4" classes="2" statements="114" coveredconditionals="0" coveredmethods="4" elements="118" ncloc="234" files="2" conditionals="0" coveredstatements="114"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/fouriermethod/calibration/HestonDaxCalibrationTest.java" name="HestonDaxCalibrationTest.java">
            <metrics coveredelements="62" coveredconditionals="0" complexity="2" loc="185" coveredmethods="2" methods="2" elements="62" classes="1" ncloc="120" statements="60" conditionals="0" coveredstatements="60"/>
            <class name="HestonDaxCalibrationTest">
               <metrics coveredelements="62" complexity="2" methods="2" testruns="1" statements="60" coveredconditionals="0" coveredmethods="2" elements="62" testfailures="0" testduration="2.053" conditionals="0" coveredstatements="60" testpasses="1"/>
            </class>
            <line complexity="1" visibility="private" signature="getDiscountCurve(String,LocalDate,double) : DiscountCurve" num="43" count="3" type="method"/>
            <line num="44" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line num="46" count="3" type="stmt"/>
            <line num="47" count="3" type="stmt"/>
            <line num="48" count="3" type="stmt"/>
            <line num="49" count="3" type="stmt"/>
            <line num="50" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="53" testsuccess="true" count="1" testduration="2.053" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="21" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/fouriermethod/calibration/VarianceGammaDaxCalibrationTest.java" name="VarianceGammaDaxCalibrationTest.java">
            <metrics coveredelements="56" coveredconditionals="0" complexity="2" loc="177" coveredmethods="2" methods="2" elements="56" classes="1" ncloc="114" statements="54" conditionals="0" coveredstatements="54"/>
            <class name="VarianceGammaDaxCalibrationTest">
               <metrics coveredelements="56" complexity="2" methods="2" testruns="1" statements="54" coveredconditionals="0" coveredmethods="2" elements="56" testfailures="0" testduration="1.487" conditionals="0" coveredstatements="54" testpasses="1"/>
            </class>
            <line complexity="1" visibility="private" signature="getDiscountCurve(String,LocalDate,double) : DiscountCurve" num="43" count="3" type="method"/>
            <line num="44" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line num="46" count="3" type="stmt"/>
            <line num="47" count="3" type="stmt"/>
            <line num="48" count="3" type="stmt"/>
            <line num="49" count="3" type="stmt"/>
            <line num="50" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="53" testsuccess="true" count="1" testduration="1.487" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="21" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.time">
         <metrics coveredelements="251" complexity="45" loc="635" methods="36" classes="4" statements="197" coveredconditionals="18" coveredmethods="36" elements="251" ncloc="424" files="4" conditionals="18" coveredstatements="197"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/time/DayCountConventionTest.java" name="DayCountConventionTest.java">
            <metrics coveredelements="95" coveredconditionals="6" complexity="11" loc="214" coveredmethods="8" methods="8" elements="95" classes="1" ncloc="143" statements="81" conditionals="6" coveredstatements="81"/>
            <class name="DayCountConventionTest">
               <metrics coveredelements="95" complexity="11" methods="8" testruns="8" statements="81" coveredconditionals="6" coveredmethods="8" elements="95" testfailures="0" testduration="0.013000000000000001" conditionals="6" coveredstatements="81" testpasses="8"/>
            </class>
            <line complexity="1" visibility="public" signature="testDayCountConvention_ACT_ACT_ISDA() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDayCountConventionAdditivity_ACT_ACT_ISDA() : void" num="67" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDayCountConvention_30E_360() : void" num="78" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDayCountConvention_ACT_365() : void" num="95" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDayCountConvention_ACT_360() : void" num="108" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDayCountConvention_ACT_ACT_YEARFRAC() : void" num="121" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="123" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDayCountConventionAdditivity_ACT_ACT_ICMA() : void" num="137" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line falsecount="1" truecount="120" num="141" type="cond"/>
            <line num="142" count="120" type="stmt"/>
            <line num="143" count="120" type="stmt"/>
            <line num="144" count="120" type="stmt"/>
            <line num="146" count="120" type="stmt"/>
            <line num="147" count="120" type="stmt"/>
            <line num="148" count="120" type="stmt"/>
            <line num="150" count="120" type="stmt"/>
            <line num="151" count="120" type="stmt"/>
            <line num="152" count="120" type="stmt"/>
            <line num="154" count="120" type="stmt"/>
            <line num="155" count="120" type="stmt"/>
            <line num="156" count="120" type="stmt"/>
            <line num="157" count="120" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDayCountConventionConsistency_ACT_ACT_ICMA_versus_ACT_ACT_ISDA() : void" num="168" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line falsecount="1" truecount="120" num="174" type="cond"/>
            <line num="175" count="120" type="stmt"/>
            <line num="176" count="120" type="stmt"/>
            <line num="177" count="120" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line falsecount="1" truecount="9" num="207" type="cond"/>
            <line num="208" count="9" type="stmt"/>
            <line num="209" count="9" type="stmt"/>
            <line num="211" count="9" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/time/FloatingpointDateTest.java" name="FloatingpointDateTest.java">
            <metrics coveredelements="30" coveredconditionals="8" complexity="7" loc="68" coveredmethods="3" methods="3" elements="30" classes="1" ncloc="41" statements="19" conditionals="8" coveredstatements="19"/>
            <class name="FloatingpointDateTest">
               <metrics coveredelements="30" complexity="7" methods="3" testruns="3" statements="19" coveredconditionals="8" coveredmethods="3" elements="30" testfailures="0" testduration="1.463" conditionals="8" coveredstatements="19" testpasses="3"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="22" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000" num="25" type="cond"/>
            <line num="26" count="1000" type="stmt"/>
            <line num="28" count="1000" type="stmt"/>
            <line num="29" count="1000" type="stmt"/>
            <line num="31" count="1000" type="stmt"/>
            <line complexity="2" visibility="public" signature="testLocalDateLocalDateTimeConsistency() : void" num="38" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000" num="41" type="cond"/>
            <line num="42" count="1000" type="stmt"/>
            <line num="44" count="1000" type="stmt"/>
            <line num="45" count="1000" type="stmt"/>
            <line num="47" count="1000" type="stmt"/>
            <line complexity="3" visibility="public" signature="testLocalDateTime() : void" num="54" testsuccess="true" count="1" testduration="1.459" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line falsecount="1" truecount="500" num="57" type="cond"/>
            <line num="58" count="500" type="stmt"/>
            <line falsecount="500" truecount="6171500" num="58" type="cond"/>
            <line num="59" count="6171500" type="stmt"/>
            <line num="61" count="6171500" type="stmt"/>
            <line num="62" count="6171500" type="stmt"/>
            <line num="64" count="6171500" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/time/ScheduleGeneratorTest.java" name="ScheduleGeneratorTest.java">
            <metrics coveredelements="30" coveredconditionals="4" complexity="5" loc="121" coveredmethods="3" methods="3" elements="30" classes="1" ncloc="88" statements="23" conditionals="4" coveredstatements="23"/>
            <class name="ScheduleGeneratorTest">
               <metrics coveredelements="30" complexity="5" methods="3" testruns="3" statements="23" coveredconditionals="4" coveredmethods="3" elements="30" testfailures="0" testduration="0.029" conditionals="4" coveredstatements="23" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="testScheduleGeneratorMetaData() : void" num="26" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPeriodStartPeriodEnd() : void" num="67" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="40" type="stmt"/>
            <line num="87" count="40" type="stmt"/>
            <line falsecount="1" truecount="39" num="87" type="cond"/>
            <line num="88" count="39" type="stmt"/>
            <line num="90" count="40" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPeriodLength() : void" num="94" testsuccess="true" count="1" testduration="0.025" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line falsecount="1" truecount="40" num="113" type="cond"/>
            <line num="114" count="40" type="stmt"/>
            <line num="115" count="40" type="stmt"/>
            <line num="116" count="40" type="stmt"/>
            <line num="117" count="40" type="stmt"/>
            <line num="118" count="40" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/time/TimeDiscretizationTest.java" name="TimeDiscretizationTest.java">
            <metrics coveredelements="96" coveredconditionals="0" complexity="22" loc="232" coveredmethods="22" methods="22" elements="96" classes="1" ncloc="152" statements="74" conditionals="0" coveredstatements="74"/>
            <class name="TimeDiscretizationTest">
               <metrics coveredelements="96" complexity="22" methods="22" testruns="20" statements="74" coveredconditionals="0" coveredmethods="22" elements="96" testfailures="0" testduration="0.028000000000000004" conditionals="0" coveredstatements="74" testpasses="20"/>
            </class>
            <line complexity="1" visibility="private" signature="getHalfTickMore(double) : double" num="20" count="10" type="method"/>
            <line num="21" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="24" count="20" type="method"/>
            <line num="26" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithUnboxedArrayAtDefaultTickSize() : void" num="29" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithBoxedArrayAtDefaultTickSize() : void" num="40" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithBoxedArrayAtBigTickSize() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithBoxedArrayAtSmallTickSize() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithSetAtDefaultTickSize() : void" num="73" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithSetAtBigTickSize() : void" num="84" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithSetAtSmallTickSize() : void" num="95" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithArrayListAtDefaultTickSize() : void" num="106" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithArrayListAtBigTickSize() : void" num="117" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithArrayListAtSmallTickSize() : void" num="128" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithNumberOfSteps() : void" num="139" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="141" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithNumberOfStepsSmallerThanTickSize() : void" num="146" testsuccess="true" count="1" testduration="0.02" type="method"/>
            <line num="148" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithIntervalShortStubAtEnd() : void" num="153" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="155" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithIntervalShortStubAtFront() : void" num="160" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="162" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnionWithNoDuplicates() : void" num="167" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnionWithSubTickDuplicates() : void" num="178" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnionWithDifferentTickSizes() : void" num="189" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntersectionWithNoDuplicates() : void" num="200" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntersectionWithSubTickDuplicates() : void" num="211" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="214" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntersectionWithDifferentTickSizes() : void" num="222" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.stochastic">
         <metrics coveredelements="104" complexity="20" loc="181" methods="20" classes="1" statements="84" coveredconditionals="0" coveredmethods="20" elements="104" ncloc="149" files="1" conditionals="0" coveredstatements="84"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/stochastic/ScalarTest.java" name="ScalarTest.java">
            <metrics coveredelements="104" coveredconditionals="0" complexity="20" loc="181" coveredmethods="20" methods="20" elements="104" classes="1" ncloc="149" statements="84" conditionals="0" coveredstatements="84"/>
            <class name="ScalarTest">
               <metrics coveredelements="104" complexity="20" methods="20" testruns="40" statements="84" coveredconditionals="0" coveredmethods="20" elements="104" testfailures="0" testduration="0.019" conditionals="0" coveredstatements="84" testpasses="40"/>
            </class>
            <line complexity="1" visibility="public" signature="testAbs() : void" num="8" testsuccess="true" count="2" testduration="0.005" type="method"/>
            <line num="10" count="2" type="stmt"/>
            <line num="11" count="2" type="stmt"/>
            <line num="12" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAccrue() : void" num="15" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="17" count="2" type="stmt"/>
            <line num="18" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
            <line num="21" count="2" type="stmt"/>
            <line num="23" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdd() : void" num="27" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="29" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddProduct() : void" num="34" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddRatio() : void" num="46" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="48" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOf() : void" num="58" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCap() : void" num="66" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChoose() : void" num="75" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDiscount() : void" num="85" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="87" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDiv() : void" num="96" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="104" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloor() : void" num="111" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="113" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetAverage() : void" num="121" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInvert() : void" num="127" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="129" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsNaN() : void" num="134" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMult() : void" num="142" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSqrt() : void" num="149" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="151" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSquared() : void" num="157" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="159" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSub() : void" num="164" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="166" count="2" type="stmt"/>
            <line num="167" count="2" type="stmt"/>
            <line num="169" count="2" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubRatio() : void" num="173" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="175" count="2" type="stmt"/>
            <line num="176" count="2" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling.descriptor.xmlparser">
         <metrics coveredelements="30" complexity="16" loc="256" methods="9" classes="2" statements="87" coveredconditionals="0" coveredmethods="6" elements="100" ncloc="197" files="2" conditionals="4" coveredstatements="24"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/modelling/descriptor/xmlparser/FIPXMLParserTest.java" name="FIPXMLParserTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="7" loc="96" coveredmethods="3" methods="4" elements="40" classes="1" ncloc="71" statements="34" conditionals="2" coveredstatements="10"/>
            <class name="FIPXMLParserTest">
               <metrics coveredelements="13" complexity="7" methods="4" testruns="2" statements="34" coveredconditionals="0" coveredmethods="3" elements="40" testfailures="0" testduration="0.12" conditionals="2" coveredstatements="10" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="26" count="4" type="method"/>
            <line num="30" count="4" type="stmt"/>
            <line num="31" count="4" type="stmt"/>
            <line num="32" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="main(String[]) : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FIPXMLParserTest(File)" num="57" count="2" type="method"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="testGetSwapProductDescriptor() : void" num="62" count="2" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/modelling/descriptor/xmlparser/FPMLParserTest.java" name="FPMLParserTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="9" loc="160" coveredmethods="3" methods="5" elements="60" classes="1" ncloc="126" statements="53" conditionals="2" coveredstatements="14"/>
            <class name="FPMLParserTest">
               <metrics coveredelements="17" complexity="9" methods="5" testruns="2" statements="53" coveredconditionals="0" coveredmethods="3" elements="60" testfailures="0" testduration="0.262" conditionals="2" coveredstatements="14" testpasses="2"/>
            </class>
            <line complexity="2" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="44" count="4" type="method"/>
            <line num="48" count="4" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line num="52" count="4" type="stmt"/>
            <line num="53" count="4" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="main(String[]) : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FPMLParserTest(File)" num="82" count="2" type="method"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="testGetSwapProductDescriptor() : void" num="87" count="2" type="method"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurve(String,LocalDate) : ForwardCurveInterpolation" num="143" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.curves.locallinearregression">
         <metrics coveredelements="19" complexity="8" loc="86" methods="3" classes="1" statements="33" coveredconditionals="3" coveredmethods="3" elements="42" ncloc="58" files="1" conditionals="6" coveredstatements="13"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/curves/locallinearregression/CurveEstimationTest.java" name="CurveEstimationTest.java">
            <metrics coveredelements="19" coveredconditionals="3" complexity="8" loc="86" coveredmethods="3" methods="3" elements="42" classes="1" ncloc="58" statements="33" conditionals="6" coveredstatements="13"/>
            <class name="CurveEstimationTest">
               <metrics coveredelements="19" complexity="8" methods="3" testruns="4" statements="33" coveredconditionals="3" coveredmethods="3" elements="42" testfailures="0" testduration="0.028000000000000004" conditionals="6" coveredstatements="13" testpasses="4"/>
            </class>
            <line complexity="4" visibility="package" signature="&lt;clinit&gt;, line 21()" num="21" count="2" type="method"/>
            <line num="22" count="2" type="stmt"/>
            <line num="26" count="2" type="stmt"/>
            <line num="27" count="2" type="stmt"/>
            <line num="28" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="28" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testLinearInterpolation() : void" num="41" testsuccess="true" count="2" testduration="0.012" type="method"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="48" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRegressionMatrix() : void" num="65" testsuccess="true" count="2" testduration="0.003" type="method"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="70" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.automaticdifferentiation.backward">
         <metrics coveredelements="293" complexity="65" loc="723" methods="33" classes="12" statements="215" coveredconditionals="54" coveredmethods="32" elements="304" ncloc="521" files="2" conditionals="56" coveredstatements="207"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/automaticdifferentiation/backward/RandomVariableDifferentiableAADPerformanceTest.java" name="RandomVariableDifferentiableAADPerformanceTest.java">
            <metrics coveredelements="273" coveredconditionals="54" complexity="64" loc="660" coveredmethods="31" methods="32" elements="284" classes="11" ncloc="486" statements="196" conditionals="56" coveredstatements="188"/>
            <class name="RandomVariableDifferentiableAADPerformanceTest">
               <metrics coveredelements="106" complexity="20" methods="5" testruns="36" statements="81" coveredconditionals="26" coveredmethods="4" elements="114" testfailures="0" testduration="1304.674" conditionals="28" coveredstatements="76" testpasses="36"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionBigSum">
               <metrics coveredelements="12" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="12" statements="7" conditionals="2" coveredstatements="7"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionGeometricSum">
               <metrics coveredelements="18" coveredconditionals="4" complexity="5" coveredmethods="3" methods="3" elements="18" statements="11" conditionals="4" coveredstatements="11"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionSumOfProducts">
               <metrics coveredelements="20" coveredconditionals="6" complexity="6" coveredmethods="3" methods="3" elements="20" statements="11" conditionals="6" coveredstatements="11"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionSumOfProductsWithAddAndMult">
               <metrics coveredelements="20" coveredconditionals="6" complexity="6" coveredmethods="3" methods="3" elements="20" statements="11" conditionals="6" coveredstatements="11"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionAccrue">
               <metrics coveredelements="14" coveredconditionals="4" complexity="5" coveredmethods="3" methods="3" elements="14" statements="7" conditionals="4" coveredstatements="7"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionAccrueWithAddAndMult">
               <metrics coveredelements="14" coveredconditionals="4" complexity="5" coveredmethods="3" methods="3" elements="14" statements="7" conditionals="4" coveredstatements="7"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionMonteCarloEuropeanOption">
               <metrics coveredelements="20" coveredconditionals="0" complexity="4" coveredmethods="3" methods="3" elements="21" statements="18" conditionals="0" coveredstatements="17"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionMonteCarloAsianOption">
               <metrics coveredelements="20" coveredconditionals="0" complexity="4" coveredmethods="3" methods="3" elements="21" statements="18" conditionals="0" coveredstatements="17"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionMonteCarloBermudanOption">
               <metrics coveredelements="29" coveredconditionals="2" complexity="5" coveredmethods="3" methods="3" elements="30" statements="25" conditionals="2" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="77" count="8" type="method"/>
            <line num="79" count="8" type="stmt"/>
            <line num="80" count="8" type="stmt"/>
            <line num="81" count="8" type="stmt"/>
            <line falsecount="8" truecount="60000" num="81" type="cond"/>
            <line num="82" count="60000" type="stmt"/>
            <line num="84" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="87" count="4" type="method"/>
            <line num="89" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="94" count="4" type="method"/>
            <line num="95" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="101" count="8" type="method"/>
            <line num="103" count="8" type="stmt"/>
            <line num="104" count="8" type="stmt"/>
            <line num="105" count="8" type="stmt"/>
            <line falsecount="8" truecount="8000" num="105" type="cond"/>
            <line num="106" count="8000" type="stmt"/>
            <line num="108" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="111" count="4" type="method"/>
            <line num="113" count="4" type="stmt"/>
            <line num="114" count="4" type="stmt"/>
            <line num="115" count="4" type="stmt"/>
            <line falsecount="4" truecount="4000" num="115" type="cond"/>
            <line num="116" count="4000" type="stmt"/>
            <line num="118" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="121" count="4" type="method"/>
            <line num="122" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="128" count="404" type="method"/>
            <line num="130" count="404" type="stmt"/>
            <line num="131" count="404" type="stmt"/>
            <line falsecount="404" truecount="2020" num="131" type="cond"/>
            <line num="132" count="2020" type="stmt"/>
            <line falsecount="2020" truecount="202000" num="132" type="cond"/>
            <line num="133" count="202000" type="stmt"/>
            <line num="136" count="404" type="stmt"/>
            <line complexity="2" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="139" count="4" type="method"/>
            <line num="141" count="4" type="stmt"/>
            <line num="142" count="4" type="stmt"/>
            <line falsecount="4" truecount="20" num="142" type="cond"/>
            <line num="144" count="20" type="stmt"/>
            <line num="145" count="20" type="stmt"/>
            <line num="148" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="151" count="4" type="method"/>
            <line num="152" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="157" count="44" type="method"/>
            <line num="159" count="44" type="stmt"/>
            <line num="160" count="44" type="stmt"/>
            <line falsecount="44" truecount="440" num="160" type="cond"/>
            <line num="161" count="440" type="stmt"/>
            <line falsecount="440" truecount="4400" num="161" type="cond"/>
            <line num="162" count="4400" type="stmt"/>
            <line num="165" count="44" type="stmt"/>
            <line complexity="2" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="168" count="4" type="method"/>
            <line num="170" count="4" type="stmt"/>
            <line num="171" count="4" type="stmt"/>
            <line falsecount="4" truecount="40" num="171" type="cond"/>
            <line num="173" count="40" type="stmt"/>
            <line num="174" count="40" type="stmt"/>
            <line num="177" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="180" count="4" type="method"/>
            <line num="181" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="186" count="404" type="method"/>
            <line num="188" count="404" type="stmt"/>
            <line num="189" count="404" type="stmt"/>
            <line falsecount="404" truecount="404" num="189" type="cond"/>
            <line num="190" count="404" type="stmt"/>
            <line falsecount="404" truecount="40400" num="190" type="cond"/>
            <line num="191" count="40400" type="stmt"/>
            <line num="194" count="404" type="stmt"/>
            <line complexity="1" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="197" count="4" type="method"/>
            <line num="199" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="202" count="4" type="method"/>
            <line num="203" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="209" count="404" type="method"/>
            <line num="211" count="404" type="stmt"/>
            <line num="212" count="404" type="stmt"/>
            <line falsecount="404" truecount="404" num="212" type="cond"/>
            <line num="213" count="404" type="stmt"/>
            <line falsecount="404" truecount="40400" num="213" type="cond"/>
            <line num="214" count="40400" type="stmt"/>
            <line num="217" count="404" type="stmt"/>
            <line complexity="1" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="220" count="4" type="method"/>
            <line num="222" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="225" count="4" type="method"/>
            <line num="226" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="252" count="16" type="method"/>
            <line num="254" count="16" type="stmt"/>
            <line num="257" count="16" type="stmt"/>
            <line num="258" count="16" type="stmt"/>
            <line num="259" count="16" type="stmt"/>
            <line num="262" count="16" type="stmt"/>
            <line num="265" count="16" type="stmt"/>
            <line num="268" count="16" type="stmt"/>
            <line num="271" count="16" type="stmt"/>
            <line num="276" count="16" type="stmt"/>
            <line num="277" count="16" type="stmt"/>
            <line num="278" count="16" type="stmt"/>
            <line num="279" count="16" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="285" count="16" type="stmt"/>
            <line num="286" count="16" type="stmt"/>
            <line num="288" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="291" count="4" type="method"/>
            <line num="293" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="296" count="4" type="method"/>
            <line num="297" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="323" count="16" type="method"/>
            <line num="325" count="16" type="stmt"/>
            <line num="328" count="16" type="stmt"/>
            <line num="329" count="16" type="stmt"/>
            <line num="330" count="16" type="stmt"/>
            <line num="333" count="16" type="stmt"/>
            <line num="336" count="16" type="stmt"/>
            <line num="339" count="16" type="stmt"/>
            <line num="342" count="16" type="stmt"/>
            <line num="347" count="16" type="stmt"/>
            <line num="348" count="16" type="stmt"/>
            <line num="349" count="16" type="stmt"/>
            <line num="350" count="16" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="356" count="16" type="stmt"/>
            <line num="357" count="16" type="stmt"/>
            <line num="359" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="362" count="4" type="method"/>
            <line num="364" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="367" count="4" type="method"/>
            <line num="368" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="389" count="16" type="method"/>
            <line num="391" count="16" type="stmt"/>
            <line num="394" count="16" type="stmt"/>
            <line num="395" count="16" type="stmt"/>
            <line num="396" count="16" type="stmt"/>
            <line num="399" count="16" type="stmt"/>
            <line num="402" count="16" type="stmt"/>
            <line num="405" count="16" type="stmt"/>
            <line num="408" count="16" type="stmt"/>
            <line num="413" count="16" type="stmt"/>
            <line num="414" count="16" type="stmt"/>
            <line num="415" count="16" type="stmt"/>
            <line num="416" count="16" type="stmt"/>
            <line falsecount="16" truecount="800" num="416" type="cond"/>
            <line num="417" count="800" type="stmt"/>
            <line num="418" count="800" type="stmt"/>
            <line num="419" count="800" type="stmt"/>
            <line num="421" count="16" type="stmt"/>
            <line num="422" count="16" type="stmt"/>
            <line num="423" count="16" type="stmt"/>
            <line num="424" count="16" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line num="429" count="16" type="stmt"/>
            <line num="430" count="16" type="stmt"/>
            <line num="431" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="434" count="4" type="method"/>
            <line num="436" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="439" count="4" type="method"/>
            <line num="440" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="510" count="4" type="method"/>
            <line num="512" count="4" type="stmt"/>
            <line num="513" count="4" type="stmt"/>
            <line falsecount="4" truecount="36" num="513" type="cond"/>
            <line num="514" count="36" type="stmt"/>
            <line falsecount="36" truecount="72" num="514" type="cond"/>
            <line num="515" count="72" type="stmt"/>
            <line num="516" count="72" type="stmt"/>
            <line num="523" count="72" type="stmt"/>
            <line num="524" count="72" type="stmt"/>
            <line num="525" count="72" type="stmt"/>
            <line num="528" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADPerformanceTest(String,Object[],RandomVariableFactory)" num="535" count="36" type="method"/>
            <line num="536" count="36" type="stmt"/>
            <line num="537" count="36" type="stmt"/>
            <line complexity="14" visibility="public" signature="test() : void" num="540" count="36" type="method"/>
            <line num="543" count="36" type="stmt"/>
            <line num="544" count="36" type="stmt"/>
            <line num="545" count="36" type="stmt"/>
            <line num="546" count="36" type="stmt"/>
            <line num="547" count="36" type="stmt"/>
            <line num="552" count="36" type="stmt"/>
            <line num="553" count="36" type="stmt"/>
            <line num="554" count="36" type="stmt"/>
            <line falsecount="36" truecount="240012" num="554" type="cond"/>
            <line num="555" count="240012" type="stmt"/>
            <line num="557" count="36" type="stmt"/>
            <line num="558" count="36" type="stmt"/>
            <line falsecount="36" truecount="160020" num="558" type="cond"/>
            <line num="559" count="160020" type="stmt"/>
            <line num="562" count="36" type="stmt"/>
            <line num="563" count="36" type="stmt"/>
            <line num="564" count="36" type="stmt"/>
            <line falsecount="36" truecount="1284" num="564" type="cond"/>
            <line num="565" count="1284" type="stmt"/>
            <line falsecount="1248" truecount="36" num="565" type="cond"/>
            <line num="566" count="36" type="stmt"/>
            <line num="569" count="1248" type="stmt"/>
            <line num="572" count="36" type="stmt"/>
            <line falsecount="36" truecount="1252" num="572" type="cond"/>
            <line num="573" count="1252" type="stmt"/>
            <line falsecount="440" truecount="812" num="573" type="cond"/>
            <line num="574" count="812" type="stmt"/>
            <line num="577" count="440" type="stmt"/>
            <line num="581" count="36" type="stmt"/>
            <line num="582" count="36" type="stmt"/>
            <line num="583" count="36" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line num="592" count="36" type="stmt"/>
            <line num="593" count="36" type="stmt"/>
            <line num="595" count="36" type="stmt"/>
            <line num="597" count="36" type="stmt"/>
            <line num="603" count="36" type="stmt"/>
            <line num="605" count="36" type="stmt"/>
            <line num="606" count="36" type="stmt"/>
            <line falsecount="18" truecount="18" num="606" type="cond"/>
            <line num="607" count="18" type="stmt"/>
            <line num="608" count="18" type="stmt"/>
            <line num="609" count="18" type="stmt"/>
            <line falsecount="18" truecount="642" num="609" type="cond"/>
            <line num="610" count="642" type="stmt"/>
            <line num="614" count="18" type="stmt"/>
            <line num="615" count="18" type="stmt"/>
            <line num="616" count="18" type="stmt"/>
            <line num="617" count="18" type="stmt"/>
            <line num="618" count="18" type="stmt"/>
            <line falsecount="18" truecount="642" num="618" type="cond"/>
            <line num="619" count="642" type="stmt"/>
            <line num="620" count="642" type="stmt"/>
            <line num="621" count="642" type="stmt"/>
            <line num="622" count="642" type="stmt"/>
            <line num="623" count="642" type="stmt"/>
            <line num="627" count="36" type="stmt"/>
            <line num="628" count="36" type="stmt"/>
            <line num="630" count="36" type="stmt"/>
            <line falsecount="36" truecount="0" num="630" type="cond"/>
            <line num="631" count="0" type="stmt"/>
            <line num="633" count="36" type="stmt"/>
            <line falsecount="36" truecount="0" num="633" type="cond"/>
            <line num="634" count="0" type="stmt"/>
            <line num="637" count="36" type="stmt"/>
            <line num="639" count="36" type="stmt"/>
            <line num="640" count="36" type="stmt"/>
            <line num="641" count="36" type="stmt"/>
            <line num="642" count="36" type="stmt"/>
            <line num="643" count="36" type="stmt"/>
            <line num="644" count="36" type="stmt"/>
            <line num="646" count="36" type="stmt"/>
            <line num="648" count="36" type="stmt"/>
            <line falsecount="20" truecount="16" num="648" type="cond"/>
            <line num="649" count="16" type="stmt"/>
            <line complexity="1" visibility="package" signature="getAllocatedMemory() : long" num="653" count="168" type="method"/>
            <line num="654" count="168" type="stmt"/>
            <line num="655" count="168" type="stmt"/>
            <line num="656" count="168" type="stmt"/>
            <line num="657" count="168" type="stmt"/>
            <line num="658" count="168" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/automaticdifferentiation/backward/RandomVariableDifferentiableAADTest.java" name="RandomVariableDifferentiableAADTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="1" loc="63" coveredmethods="1" methods="1" elements="20" classes="1" ncloc="35" statements="19" conditionals="0" coveredstatements="19"/>
            <class name="RandomVariableDifferentiableAADTest">
               <metrics coveredelements="20" complexity="1" methods="1" testruns="2" statements="19" coveredconditionals="0" coveredmethods="1" elements="20" testfailures="0" testduration="0.064" conditionals="0" coveredstatements="19" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testSecondOrderDerivative() : void" num="21" testsuccess="true" count="2" testduration="0.039" type="method"/>
            <line num="29" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.randomnumbers">
         <metrics coveredelements="37" complexity="7" loc="68" methods="4" classes="1" statements="27" coveredconditionals="6" coveredmethods="4" elements="37" ncloc="48" files="1" conditionals="6" coveredstatements="27"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/randomnumbers/AcceptanceRejectionRandomNumberGeneratorTest.java" name="AcceptanceRejectionRandomNumberGeneratorTest.java">
            <metrics coveredelements="37" coveredconditionals="6" complexity="7" loc="68" coveredmethods="4" methods="4" elements="37" classes="1" ncloc="48" statements="27" conditionals="6" coveredstatements="27"/>
            <class name="AcceptanceRejectionRandomNumberGeneratorTest">
               <metrics coveredelements="37" complexity="7" methods="4" testruns="1" statements="27" coveredconditionals="6" coveredmethods="4" elements="37" testfailures="0" testduration="2.227" conditionals="6" coveredstatements="27" testpasses="1"/>
            </class>
            <line complexity="4" visibility="public" signature="test() : void" num="20" testsuccess="true" count="1" testduration="2.227" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="24" count="1315530" type="method"/>
            <line num="25" count="1315530" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="28" count="1315530" type="method"/>
            <line num="29" count="1315530" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="32" count="1315530" type="method"/>
            <line num="33" count="1315530" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000000" num="45" type="cond"/>
            <line num="46" count="1000000" type="stmt"/>
            <line num="48" count="1000000" type="stmt"/>
            <line falsecount="500161" truecount="499839" num="48" type="cond"/>
            <line num="50" count="1000000" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line falsecount="1" truecount="101" num="58" type="cond"/>
            <line num="59" count="101" type="stmt"/>
            <line num="60" count="101" type="stmt"/>
            <line num="61" count="101" type="stmt"/>
            <line num="63" count="101" type="stmt"/>
            <line num="65" count="101" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.curves">
         <metrics coveredelements="386" complexity="35" loc="996" methods="23" classes="7" statements="359" coveredconditionals="14" coveredmethods="21" elements="396" ncloc="603" files="7" conditionals="14" coveredstatements="351"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/curves/CalibrationMultiCurveTest.java" name="CalibrationMultiCurveTest.java">
            <metrics coveredelements="166" coveredconditionals="0" complexity="12" loc="308" coveredmethods="10" methods="10" elements="167" classes="1" ncloc="221" statements="157" conditionals="0" coveredstatements="156"/>
            <class name="CalibrationMultiCurveTest">
               <metrics coveredelements="166" complexity="12" methods="10" testruns="2" statements="157" coveredconditionals="0" coveredmethods="10" elements="167" testfailures="0" testduration="5.859999999999999" conditionals="0" coveredstatements="156" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testMultiCurveCalibration() : void" num="38" testsuccess="true" count="2" testduration="2.783" type="method"/>
            <line num="45" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(String) : String" num="51" count="96" type="method"/>
            <line num="53" count="96" type="stmt"/>
            <line num="54" count="64" type="stmt"/>
            <line num="55" count="64" type="stmt"/>
            <line num="56" count="32" type="stmt"/>
            <line num="57" count="32" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="64" count="32" type="method"/>
            <line num="66" count="32" type="stmt"/>
            <line num="67" count="32" type="stmt"/>
            <line num="68" count="32" type="stmt"/>
            <line num="69" count="32" type="stmt"/>
            <line num="70" count="32" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="75" count="40" type="method"/>
            <line num="77" count="40" type="stmt"/>
            <line num="78" count="40" type="stmt"/>
            <line num="79" count="40" type="stmt"/>
            <line num="80" count="40" type="stmt"/>
            <line num="81" count="40" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String) : BiFunction&lt;String, Double, CalibrationSpec&gt;" num="86" count="30" type="method"/>
            <line num="88" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="89" count="30" type="method"/>
            <line num="91" count="30" type="stmt"/>
            <line num="92" count="30" type="stmt"/>
            <line num="93" count="30" type="stmt"/>
            <line num="94" count="30" type="stmt"/>
            <line num="95" count="30" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String) : BiFunction&lt;String, Double, CalibrationSpec&gt;" num="102" count="32" type="method"/>
            <line num="104" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="105" count="32" type="method"/>
            <line num="107" count="32" type="stmt"/>
            <line num="109" count="32" type="stmt"/>
            <line num="110" count="32" type="stmt"/>
            <line num="111" count="32" type="stmt"/>
            <line num="112" count="32" type="stmt"/>
            <line num="113" count="32" type="stmt"/>
            <line num="114" count="32" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,String) : BiFunction&lt;String, Double, CalibrationSpec&gt;" num="121" count="32" type="method"/>
            <line num="123" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="124" count="32" type="method"/>
            <line num="126" count="32" type="stmt"/>
            <line num="127" count="32" type="stmt"/>
            <line num="129" count="32" type="stmt"/>
            <line num="130" count="32" type="stmt"/>
            <line num="132" count="32" type="stmt"/>
            <line num="133" count="32" type="stmt"/>
            <line num="134" count="32" type="stmt"/>
            <line num="136" count="32" type="stmt"/>
            <line num="137" count="32" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line num="163" count="2" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line num="165" count="2" type="stmt"/>
            <line num="166" count="2" type="stmt"/>
            <line num="167" count="2" type="stmt"/>
            <line num="168" count="2" type="stmt"/>
            <line num="169" count="2" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line num="171" count="2" type="stmt"/>
            <line num="172" count="2" type="stmt"/>
            <line num="173" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line num="175" count="2" type="stmt"/>
            <line num="176" count="2" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line num="182" count="2" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
            <line num="184" count="2" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="187" count="2" type="stmt"/>
            <line num="188" count="2" type="stmt"/>
            <line num="189" count="2" type="stmt"/>
            <line num="190" count="2" type="stmt"/>
            <line num="191" count="2" type="stmt"/>
            <line num="192" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line num="194" count="2" type="stmt"/>
            <line num="195" count="2" type="stmt"/>
            <line num="196" count="2" type="stmt"/>
            <line num="197" count="2" type="stmt"/>
            <line num="198" count="2" type="stmt"/>
            <line num="199" count="2" type="stmt"/>
            <line num="200" count="2" type="stmt"/>
            <line num="201" count="2" type="stmt"/>
            <line num="206" count="2" type="stmt"/>
            <line num="207" count="2" type="stmt"/>
            <line num="208" count="2" type="stmt"/>
            <line num="209" count="2" type="stmt"/>
            <line num="210" count="2" type="stmt"/>
            <line num="211" count="2" type="stmt"/>
            <line num="212" count="2" type="stmt"/>
            <line num="213" count="2" type="stmt"/>
            <line num="218" count="2" type="stmt"/>
            <line num="219" count="2" type="stmt"/>
            <line num="220" count="2" type="stmt"/>
            <line num="221" count="2" type="stmt"/>
            <line num="222" count="2" type="stmt"/>
            <line num="223" count="2" type="stmt"/>
            <line num="224" count="2" type="stmt"/>
            <line num="225" count="2" type="stmt"/>
            <line num="226" count="2" type="stmt"/>
            <line num="227" count="2" type="stmt"/>
            <line num="228" count="2" type="stmt"/>
            <line num="229" count="2" type="stmt"/>
            <line num="230" count="2" type="stmt"/>
            <line num="231" count="2" type="stmt"/>
            <line num="232" count="2" type="stmt"/>
            <line num="233" count="2" type="stmt"/>
            <line num="239" count="2" type="stmt"/>
            <line num="240" count="2" type="stmt"/>
            <line num="241" count="2" type="stmt"/>
            <line num="242" count="2" type="stmt"/>
            <line num="243" count="2" type="stmt"/>
            <line num="244" count="2" type="stmt"/>
            <line num="245" count="2" type="stmt"/>
            <line num="251" count="2" type="stmt"/>
            <line num="252" count="2" type="stmt"/>
            <line num="253" count="2" type="stmt"/>
            <line num="254" count="2" type="stmt"/>
            <line num="255" count="2" type="stmt"/>
            <line num="256" count="2" type="stmt"/>
            <line num="257" count="2" type="stmt"/>
            <line num="258" count="2" type="stmt"/>
            <line num="259" count="2" type="stmt"/>
            <line num="260" count="2" type="stmt"/>
            <line num="261" count="2" type="stmt"/>
            <line num="262" count="2" type="stmt"/>
            <line num="263" count="2" type="stmt"/>
            <line num="264" count="2" type="stmt"/>
            <line num="265" count="2" type="stmt"/>
            <line num="266" count="2" type="stmt"/>
            <line num="271" count="2" type="stmt"/>
            <line num="276" count="2" type="stmt"/>
            <line num="281" count="2" type="stmt"/>
            <line num="283" count="2" type="stmt"/>
            <line num="284" count="2" type="stmt"/>
            <line num="285" count="166" type="stmt"/>
            <line num="286" count="166" type="stmt"/>
            <line num="287" count="166" type="stmt"/>
            <line num="293" count="2" type="stmt"/>
            <line num="294" count="2" type="stmt"/>
            <line num="295" count="2" type="stmt"/>
            <line num="297" count="2" type="stmt"/>
            <line num="298" count="2" type="stmt"/>
            <line num="300" count="2" type="stmt"/>
            <line num="301" count="2" type="stmt"/>
            <line num="303" count="2" type="stmt"/>
            <line num="304" count="2" type="stmt"/>
            <line num="306" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/curves/CalibrationTest.java" name="CalibrationTest.java">
            <metrics coveredelements="75" coveredconditionals="4" complexity="7" loc="249" coveredmethods="4" methods="5" elements="79" classes="1" ncloc="141" statements="70" conditionals="4" coveredstatements="67"/>
            <class name="CalibrationTest">
               <metrics coveredelements="75" complexity="7" methods="5" testruns="24" statements="70" coveredconditionals="4" coveredmethods="4" elements="79" testfailures="0" testduration="0.4150000000000001" conditionals="4" coveredstatements="67" testpasses="24"/>
            </class>
            <line complexity="1" visibility="public" signature="CalibrationTest(InterpolationMethod)" num="45" count="24" type="method"/>
            <line num="47" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="56" count="4" type="method"/>
            <line num="59" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForwardCurveFromDiscountCurve() : void" num="83" count="12" type="method"/>
            <line num="90" count="12" type="stmt"/>
            <line num="97" count="12" type="stmt"/>
            <line num="104" count="12" type="stmt"/>
            <line num="106" count="12" type="stmt"/>
            <line num="107" count="12" type="stmt"/>
            <line num="110" count="12" type="stmt"/>
            <line num="111" count="12" type="stmt"/>
            <line num="112" count="12" type="stmt"/>
            <line num="113" count="12" type="stmt"/>
            <line num="116" count="12" type="stmt"/>
            <line num="117" count="12" type="stmt"/>
            <line num="119" count="12" type="stmt"/>
            <line complexity="3" visibility="public" signature="testCurvesAndCalibration() : void" num="122" count="12" type="method"/>
            <line num="131" count="12" type="stmt"/>
            <line num="134" count="12" type="stmt"/>
            <line num="144" count="12" type="stmt"/>
            <line num="151" count="12" type="stmt"/>
            <line num="153" count="12" type="stmt"/>
            <line num="154" count="12" type="stmt"/>
            <line num="155" count="12" type="stmt"/>
            <line num="156" count="12" type="stmt"/>
            <line num="159" count="12" type="stmt"/>
            <line num="162" count="12" type="stmt"/>
            <line num="163" count="12" type="stmt"/>
            <line num="166" count="12" type="stmt"/>
            <line num="167" count="12" type="stmt"/>
            <line num="168" count="12" type="stmt"/>
            <line num="169" count="12" type="stmt"/>
            <line num="170" count="12" type="stmt"/>
            <line num="178" count="12" type="stmt"/>
            <line num="179" count="12" type="stmt"/>
            <line num="180" count="12" type="stmt"/>
            <line num="181" count="12" type="stmt"/>
            <line falsecount="12" truecount="48" num="181" type="cond"/>
            <line num="182" count="48" type="stmt"/>
            <line num="183" count="48" type="stmt"/>
            <line num="184" count="48" type="stmt"/>
            <line num="186" count="48" type="stmt"/>
            <line num="188" count="12" type="stmt"/>
            <line num="189" count="12" type="stmt"/>
            <line num="191" count="12" type="stmt"/>
            <line num="201" count="12" type="stmt"/>
            <line num="204" count="12" type="stmt"/>
            <line num="206" count="12" type="stmt"/>
            <line num="209" count="12" type="stmt"/>
            <line num="212" count="12" type="stmt"/>
            <line num="213" count="12" type="stmt"/>
            <line num="214" count="12" type="stmt"/>
            <line num="215" count="12" type="stmt"/>
            <line num="216" count="12" type="stmt"/>
            <line num="219" count="12" type="stmt"/>
            <line num="220" count="12" type="stmt"/>
            <line num="223" count="12" type="stmt"/>
            <line num="224" count="12" type="stmt"/>
            <line num="225" count="12" type="stmt"/>
            <line num="226" count="12" type="stmt"/>
            <line num="227" count="12" type="stmt"/>
            <line num="235" count="12" type="stmt"/>
            <line num="236" count="12" type="stmt"/>
            <line num="237" count="12" type="stmt"/>
            <line falsecount="12" truecount="60" num="237" type="cond"/>
            <line num="238" count="60" type="stmt"/>
            <line num="239" count="60" type="stmt"/>
            <line num="240" count="60" type="stmt"/>
            <line num="242" count="60" type="stmt"/>
            <line num="244" count="12" type="stmt"/>
            <line num="245" count="12" type="stmt"/>
            <line num="247" count="12" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/curves/CurveTest.java" name="CurveTest.java">
            <metrics coveredelements="37" coveredconditionals="6" complexity="7" loc="130" coveredmethods="2" methods="3" elements="40" classes="1" ncloc="62" statements="31" conditionals="6" coveredstatements="29"/>
            <class name="CurveTest">
               <metrics coveredelements="37" complexity="7" methods="3" testruns="2" statements="31" coveredconditionals="6" coveredmethods="2" elements="40" testfailures="0" testduration="0.11299999999999999" conditionals="6" coveredstatements="29" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testCurveFitting() : void" num="45" testsuccess="true" count="2" testduration="0.054" type="method"/>
            <line num="51" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="setValues(double[],double[]) : void" num="90" count="50" type="method"/>
            <line num="93" count="50" type="stmt"/>
            <line num="94" count="50" type="stmt"/>
            <line num="95" count="50" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="50" type="stmt"/>
            <line falsecount="50" truecount="345" num="100" type="cond"/>
            <line num="101" count="345" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line falsecount="2" truecount="142" num="112" type="cond"/>
            <line num="113" count="142" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line falsecount="2" truecount="14" num="118" type="cond"/>
            <line num="119" count="14" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/curves/DiscountCurveNelsonSiegelSvenssonTest.java" name="DiscountCurveNelsonSiegelSvenssonTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="1" loc="23" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="15" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="DiscountCurveNelsonSiegelSvenssonTest">
               <metrics coveredelements="6" complexity="1" methods="1" testruns="2" statements="5" coveredconditionals="0" coveredmethods="1" elements="6" testfailures="0" testduration="0.013000000000000001" conditionals="0" coveredstatements="5" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="11" testsuccess="true" count="2" testduration="0.007" type="method"/>
            <line num="14" count="2" type="stmt"/>
            <line num="15" count="2" type="stmt"/>
            <line num="17" count="2" type="stmt"/>
            <line num="19" count="2" type="stmt"/>
            <line num="21" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/curves/DiscountCurveSerializationTest.java" name="DiscountCurveSerializationTest.java">
            <metrics coveredelements="21" coveredconditionals="2" complexity="4" loc="80" coveredmethods="1" methods="1" elements="23" classes="1" ncloc="41" statements="20" conditionals="2" coveredstatements="18"/>
            <class name="DiscountCurveSerializationTest">
               <metrics coveredelements="21" complexity="4" methods="1" testruns="2" statements="20" coveredconditionals="2" coveredmethods="1" elements="23" testfailures="0" testduration="0.07100000000000001" conditionals="2" coveredstatements="18" testpasses="2"/>
            </class>
            <line complexity="4" visibility="public" signature="test() : void" num="29" testsuccess="true" count="2" testduration="0.036" type="method"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line falsecount="2" truecount="202" num="75" type="cond"/>
            <line num="76" count="202" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/curves/ForwardCurveNelsonSiegelSvenssonTest.java" name="ForwardCurveNelsonSiegelSvenssonTest.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="1" loc="49" coveredmethods="1" methods="1" elements="14" classes="1" ncloc="29" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="ForwardCurveNelsonSiegelSvenssonTest">
               <metrics coveredelements="14" complexity="1" methods="1" testruns="2" statements="13" coveredconditionals="0" coveredmethods="1" elements="14" testfailures="0" testduration="0.047" conditionals="0" coveredstatements="13" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="2" testduration="0.023" type="method"/>
            <line num="31" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/curves/NelsonSiegelSvenssonCalibrationTest.java" name="NelsonSiegelSvenssonCalibrationTest.java">
            <metrics coveredelements="67" coveredconditionals="2" complexity="3" loc="157" coveredmethods="2" methods="2" elements="67" classes="1" ncloc="94" statements="63" conditionals="2" coveredstatements="63"/>
            <class name="NelsonSiegelSvenssonCalibrationTest">
               <metrics coveredelements="67" complexity="3" methods="2" testruns="2" statements="63" coveredconditionals="2" coveredmethods="2" elements="67" testfailures="0" testduration="0.938" conditionals="2" coveredstatements="63" testpasses="2"/>
            </class>
            <line complexity="2" visibility="public" signature="calibrateNSSCurve(Map&lt;String, Object&gt;) : double[]" num="37" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line falsecount="2" truecount="42" num="80" type="cond"/>
            <line num="82" count="42" type="stmt"/>
            <line num="83" count="42" type="stmt"/>
            <line num="85" count="42" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="113" count="42" type="stmt"/>
            <line num="114" count="42" type="stmt"/>
            <line num="115" count="42" type="stmt"/>
            <line num="116" count="42" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCalibration() : void" num="131" testsuccess="true" count="2" testduration="0.495" type="method"/>
            <line num="134" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.products.components">
         <metrics coveredelements="85" complexity="7" loc="271" methods="3" classes="1" statements="74" coveredconditionals="8" coveredmethods="3" elements="85" ncloc="169" files="1" conditionals="8" coveredstatements="74"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/products/components/ExposureTest.java" name="ExposureTest.java">
            <metrics coveredelements="85" coveredconditionals="8" complexity="7" loc="271" coveredmethods="3" methods="3" elements="85" classes="1" ncloc="169" statements="74" conditionals="8" coveredstatements="74"/>
            <class name="ExposureTest">
               <metrics coveredelements="85" complexity="7" methods="3" testruns="4" statements="74" coveredconditionals="8" coveredmethods="3" elements="85" testfailures="0" testduration="473.673" conditionals="8" coveredstatements="74" testpasses="4"/>
            </class>
            <line complexity="2" visibility="public" signature="testExpectedPositiveExposure() : void" num="59" testsuccess="true" count="2" testduration="114.922" type="method"/>
            <line num="64" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="102" count="242" type="stmt"/>
            <line falsecount="240" truecount="2" num="102" type="cond"/>
            <line num="103" count="2" type="stmt"/>
            <line num="109" count="240" type="stmt"/>
            <line num="110" count="240" type="stmt"/>
            <line num="111" count="240" type="stmt"/>
            <line num="113" count="240" type="stmt"/>
            <line num="114" count="240" type="stmt"/>
            <line num="115" count="240" type="stmt"/>
            <line num="117" count="240" type="stmt"/>
            <line num="119" count="240" type="stmt"/>
            <line num="120" count="240" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAgainstSwaption() : void" num="125" testsuccess="true" count="2" testduration="121.428" type="method"/>
            <line num="130" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="150" count="242" type="stmt"/>
            <line num="151" count="242" type="stmt"/>
            <line num="152" count="242" type="stmt"/>
            <line num="154" count="242" type="stmt"/>
            <line num="155" count="242" type="stmt"/>
            <line num="156" count="242" type="stmt"/>
            <line num="161" count="242" type="stmt"/>
            <line num="162" count="242" type="stmt"/>
            <line num="163" count="242" type="stmt"/>
            <line num="165" count="242" type="stmt"/>
            <line num="167" count="242" type="stmt"/>
            <line num="168" count="242" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(Measure,int,int,double) : LIBORModelMonteCarloSimulationModel" num="172" count="4" type="method"/>
            <line num="178" count="4" type="stmt"/>
            <line num="179" count="4" type="stmt"/>
            <line num="180" count="4" type="stmt"/>
            <line num="183" count="4" type="stmt"/>
            <line num="191" count="4" type="stmt"/>
            <line num="200" count="4" type="stmt"/>
            <line num="201" count="4" type="stmt"/>
            <line num="203" count="4" type="stmt"/>
            <line num="208" count="4" type="stmt"/>
            <line num="209" count="4" type="stmt"/>
            <line falsecount="4" truecount="480" num="209" type="cond"/>
            <line num="210" count="480" type="stmt"/>
            <line falsecount="480" truecount="38400" num="210" type="cond"/>
            <line num="212" count="38400" type="stmt"/>
            <line num="213" count="38400" type="stmt"/>
            <line num="214" count="38400" type="stmt"/>
            <line num="216" count="38400" type="stmt"/>
            <line num="217" count="38400" type="stmt"/>
            <line falsecount="23760" truecount="14640" num="217" type="cond"/>
            <line num="218" count="14640" type="stmt"/>
            <line num="220" count="23760" type="stmt"/>
            <line num="224" count="38400" type="stmt"/>
            <line num="227" count="4" type="stmt"/>
            <line num="232" count="4" type="stmt"/>
            <line num="240" count="4" type="stmt"/>
            <line num="248" count="4" type="stmt"/>
            <line num="251" count="4" type="stmt"/>
            <line num="254" count="4" type="stmt"/>
            <line num="257" count="4" type="stmt"/>
            <line num="262" count="4" type="stmt"/>
            <line num="265" count="4" type="stmt"/>
            <line num="269" count="4" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.fouriermethod.products">
         <metrics coveredelements="21" complexity="3" loc="64" methods="1" classes="1" statements="16" coveredconditionals="4" coveredmethods="1" elements="21" ncloc="38" files="1" conditionals="4" coveredstatements="16"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/fouriermethod/products/TestCarrMadan.java" name="TestCarrMadan.java">
            <metrics coveredelements="21" coveredconditionals="4" complexity="3" loc="64" coveredmethods="1" methods="1" elements="21" classes="1" ncloc="38" statements="16" conditionals="4" coveredstatements="16"/>
            <class name="TestCarrMadan">
               <metrics coveredelements="21" complexity="3" methods="1" testruns="1" statements="16" coveredconditionals="4" coveredmethods="1" elements="21" testfailures="0" testduration="0.066" conditionals="4" coveredstatements="16" testpasses="1"/>
            </class>
            <line complexity="3" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.066" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line falsecount="1" truecount="20" num="36" type="cond"/>
            <line num="37" count="20" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line falsecount="1" truecount="20" num="54" type="cond"/>
            <line num="55" count="20" type="stmt"/>
            <line num="56" count="20" type="stmt"/>
            <line num="57" count="20" type="stmt"/>
            <line num="58" count="20" type="stmt"/>
            <line num="59" count="20" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling.productfactory">
         <metrics coveredelements="51" complexity="4" loc="259" methods="4" classes="1" statements="47" coveredconditionals="0" coveredmethods="4" elements="51" ncloc="101" files="1" conditionals="0" coveredstatements="47"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/modelling/productfactory/ModelWithProductFactoryTest.java" name="ModelWithProductFactoryTest.java">
            <metrics coveredelements="51" coveredconditionals="0" complexity="4" loc="259" coveredmethods="4" methods="4" elements="51" classes="1" ncloc="101" statements="47" conditionals="0" coveredstatements="47"/>
            <class name="ModelWithProductFactoryTest">
               <metrics coveredelements="51" complexity="4" methods="4" testruns="4" statements="47" coveredconditionals="0" coveredmethods="4" elements="51" testfailures="0" testduration="57.355999999999995" conditionals="0" coveredstatements="47" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="bsTest() : void" num="58" testsuccess="true" count="2" testduration="6.921" type="method"/>
            <line num="63" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="hTest() : void" num="159" testsuccess="true" count="2" testduration="22.45" type="method"/>
            <line num="164" count="2" type="stmt"/>
            <line num="169" count="2" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line num="195" count="2" type="stmt"/>
            <line num="198" count="2" type="stmt"/>
            <line num="199" count="2" type="stmt"/>
            <line num="201" count="2" type="stmt"/>
            <line num="208" count="2" type="stmt"/>
            <line num="209" count="2" type="stmt"/>
            <line num="212" count="2" type="stmt"/>
            <line num="215" count="2" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line num="219" count="2" type="stmt"/>
            <line num="221" count="2" type="stmt"/>
            <line num="222" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve(String,LocalDate,double) : DiscountCurve" num="234" count="8" type="method"/>
            <line num="235" count="8" type="stmt"/>
            <line num="236" count="8" type="stmt"/>
            <line num="237" count="8" type="stmt"/>
            <line num="238" count="8" type="stmt"/>
            <line num="239" count="8" type="stmt"/>
            <line num="240" count="8" type="stmt"/>
            <line num="241" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="getBronianMotion(int,double,int,int,int) : BrownianMotion" num="254" count="4" type="method"/>
            <line num="255" count="4" type="stmt"/>
            <line num="256" count="4" type="stmt"/>
            <line num="257" count="4" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.cds">
         <metrics coveredelements="184" complexity="13" loc="324" methods="1" classes="1" statements="165" coveredconditionals="21" coveredmethods="1" elements="190" ncloc="227" files="1" conditionals="24" coveredstatements="162"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/cds/CDSTest.java" name="CDSTest.java">
            <metrics coveredelements="184" coveredconditionals="21" complexity="13" loc="324" coveredmethods="1" methods="1" elements="190" classes="1" ncloc="227" statements="165" conditionals="24" coveredstatements="162"/>
            <class name="CDSTest">
               <metrics coveredelements="184" complexity="13" methods="1" testruns="2" statements="165" coveredconditionals="21" coveredmethods="1" elements="190" testfailures="0" testduration="0.22399999999999998" conditionals="24" coveredstatements="162" testpasses="2"/>
            </class>
            <line complexity="13" visibility="public" signature="testCDS() : void" num="33" testsuccess="true" count="2" testduration="0.104" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line num="158" count="2" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line num="163" count="2" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line num="165" count="2" type="stmt"/>
            <line num="166" count="2" type="stmt"/>
            <line num="167" count="2" type="stmt"/>
            <line num="171" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="174" type="cond"/>
            <line num="175" count="10" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line num="180" count="2" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
            <line num="184" count="2" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="188" count="2" type="stmt"/>
            <line num="189" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="189" type="cond"/>
            <line num="190" count="10" type="stmt"/>
            <line num="191" count="10" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line num="197" count="2" type="stmt"/>
            <line num="198" count="2" type="stmt"/>
            <line num="199" count="2" type="stmt"/>
            <line num="202" count="2" type="stmt"/>
            <line num="203" count="2" type="stmt"/>
            <line num="204" count="2" type="stmt"/>
            <line num="205" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="205" type="cond"/>
            <line num="206" count="10" type="stmt"/>
            <line num="207" count="10" type="stmt"/>
            <line num="209" count="10" type="stmt"/>
            <line num="211" count="2" type="stmt"/>
            <line num="212" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="212" type="cond"/>
            <line num="213" count="2" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line num="218" count="2" type="stmt"/>
            <line num="222" count="2" type="stmt"/>
            <line num="225" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="225" type="cond"/>
            <line num="226" count="10" type="stmt"/>
            <line num="230" count="2" type="stmt"/>
            <line num="231" count="2" type="stmt"/>
            <line num="234" count="2" type="stmt"/>
            <line num="235" count="2" type="stmt"/>
            <line num="236" count="2" type="stmt"/>
            <line num="237" count="2" type="stmt"/>
            <line num="239" count="2" type="stmt"/>
            <line num="240" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="240" type="cond"/>
            <line num="241" count="10" type="stmt"/>
            <line num="242" count="10" type="stmt"/>
            <line num="244" count="2" type="stmt"/>
            <line num="248" count="2" type="stmt"/>
            <line num="249" count="2" type="stmt"/>
            <line num="250" count="2" type="stmt"/>
            <line num="253" count="2" type="stmt"/>
            <line num="254" count="2" type="stmt"/>
            <line num="255" count="2" type="stmt"/>
            <line num="256" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="256" type="cond"/>
            <line num="257" count="10" type="stmt"/>
            <line num="258" count="10" type="stmt"/>
            <line num="260" count="10" type="stmt"/>
            <line num="262" count="2" type="stmt"/>
            <line num="263" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="263" type="cond"/>
            <line num="264" count="2" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="268" count="2" type="stmt"/>
            <line num="269" count="2" type="stmt"/>
            <line num="273" count="2" type="stmt"/>
            <line num="276" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="276" type="cond"/>
            <line num="277" count="10" type="stmt"/>
            <line num="281" count="2" type="stmt"/>
            <line num="282" count="2" type="stmt"/>
            <line num="285" count="2" type="stmt"/>
            <line num="286" count="2" type="stmt"/>
            <line num="287" count="2" type="stmt"/>
            <line num="288" count="2" type="stmt"/>
            <line num="290" count="2" type="stmt"/>
            <line num="291" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="291" type="cond"/>
            <line num="292" count="10" type="stmt"/>
            <line num="293" count="10" type="stmt"/>
            <line num="295" count="2" type="stmt"/>
            <line num="299" count="2" type="stmt"/>
            <line num="300" count="2" type="stmt"/>
            <line num="301" count="2" type="stmt"/>
            <line num="304" count="2" type="stmt"/>
            <line num="305" count="2" type="stmt"/>
            <line num="306" count="2" type="stmt"/>
            <line num="307" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="307" type="cond"/>
            <line num="308" count="10" type="stmt"/>
            <line num="309" count="10" type="stmt"/>
            <line num="311" count="10" type="stmt"/>
            <line num="313" count="2" type="stmt"/>
            <line num="314" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="314" type="cond"/>
            <line num="315" count="2" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="319" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.data">
         <metrics coveredelements="187" complexity="52" loc="397" methods="2" classes="1" statements="231" coveredconditionals="4" coveredmethods="2" elements="237" ncloc="358" files="1" conditionals="4" coveredstatements="181"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/singleswaprate/data/DataTablesTest.java" name="DataTablesTest.java">
            <metrics coveredelements="187" coveredconditionals="4" complexity="52" loc="397" coveredmethods="2" methods="2" elements="237" classes="1" ncloc="358" statements="231" conditionals="4" coveredstatements="181"/>
            <class name="DataTablesTest">
               <metrics coveredelements="187" complexity="52" methods="2" testruns="1" statements="231" coveredconditionals="4" coveredmethods="2" elements="237" testfailures="0" testduration="0.089" conditionals="4" coveredstatements="181" testpasses="1"/>
            </class>
            <line complexity="3" visibility="public" signature="setupTableValues() : void" num="36" count="1" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="43" type="cond"/>
            <line num="44" count="10" type="stmt"/>
            <line falsecount="10" truecount="160" num="44" type="cond"/>
            <line num="45" count="160" type="stmt"/>
            <line num="46" count="160" type="stmt"/>
            <line num="47" count="160" type="stmt"/>
            <line complexity="49" visibility="public" signature="testTables() : void" num="52" testsuccess="true" count="1" testduration="0.089" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line num="267" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line num="270" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line num="275" count="1" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="280" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line num="295" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="306" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="314" count="1" type="stmt"/>
            <line num="315" count="1" type="stmt"/>
            <line num="316" count="1" type="stmt"/>
            <line num="317" count="1" type="stmt"/>
            <line num="318" count="1" type="stmt"/>
            <line num="319" count="1" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line num="323" count="1" type="stmt"/>
            <line num="324" count="1" type="stmt"/>
            <line num="326" count="1" type="stmt"/>
            <line num="328" count="1" type="stmt"/>
            <line num="329" count="1" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="334" count="1" type="stmt"/>
            <line num="335" count="1" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="341" count="1" type="stmt"/>
            <line num="341" count="1" type="stmt"/>
            <line num="342" count="1" type="stmt"/>
            <line num="343" count="1" type="stmt"/>
            <line num="344" count="1" type="stmt"/>
            <line num="346" count="1" type="stmt"/>
            <line num="348" count="1" type="stmt"/>
            <line num="349" count="1" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line num="353" count="1" type="stmt"/>
            <line num="354" count="1" type="stmt"/>
            <line num="356" count="1" type="stmt"/>
            <line num="359" count="1" type="stmt"/>
            <line num="360" count="1" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="367" count="1" type="stmt"/>
            <line num="368" count="1" type="stmt"/>
            <line num="369" count="1" type="stmt"/>
            <line num="370" count="1" type="stmt"/>
            <line num="371" count="1" type="stmt"/>
            <line num="372" count="1" type="stmt"/>
            <line num="374" count="1" type="stmt"/>
            <line num="376" count="1" type="stmt"/>
            <line num="377" count="1" type="stmt"/>
            <line num="379" count="1" type="stmt"/>
            <line num="381" count="1" type="stmt"/>
            <line num="382" count="1" type="stmt"/>
            <line num="384" count="1" type="stmt"/>
            <line num="387" count="1" type="stmt"/>
            <line num="388" count="1" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.interpolation">
         <metrics coveredelements="23" complexity="5" loc="45" methods="1" classes="1" statements="14" coveredconditionals="8" coveredmethods="1" elements="23" ncloc="26" files="1" conditionals="8" coveredstatements="14"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/interpolation/BiLinearInterpolationTest.java" name="BiLinearInterpolationTest.java">
            <metrics coveredelements="23" coveredconditionals="8" complexity="5" loc="45" coveredmethods="1" methods="1" elements="23" classes="1" ncloc="26" statements="14" conditionals="8" coveredstatements="14"/>
            <class name="BiLinearInterpolationTest">
               <metrics coveredelements="23" complexity="5" methods="1" testruns="1" statements="14" coveredconditionals="8" coveredmethods="1" elements="23" testfailures="0" testduration="0.048" conditionals="8" coveredstatements="14" testpasses="1"/>
            </class>
            <line complexity="5" visibility="public" signature="test() : void" num="16" testsuccess="true" count="1" testduration="0.048" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="25" type="cond"/>
            <line num="26" count="3" type="stmt"/>
            <line falsecount="3" truecount="9" num="26" type="cond"/>
            <line num="27" count="9" type="stmt"/>
            <line num="28" count="9" type="stmt"/>
            <line num="29" count="9" type="stmt"/>
            <line num="30" count="9" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line falsecount="1" truecount="51" num="37" type="cond"/>
            <line num="38" count="51" type="stmt"/>
            <line falsecount="51" truecount="4131" num="38" type="cond"/>
            <line num="39" count="4131" type="stmt"/>
            <line num="40" count="4131" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.calibration">
         <metrics coveredelements="341" complexity="145" loc="1178" methods="24" classes="4" statements="529" coveredconditionals="11" coveredmethods="18" elements="629" ncloc="948" files="4" conditionals="76" coveredstatements="312"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/singleswaprate/calibration/SABRCubeCalibrationTest.java" name="SABRCubeCalibrationTest.java">
            <metrics coveredelements="71" coveredconditionals="1" complexity="50" loc="341" coveredmethods="4" methods="6" elements="198" classes="1" ncloc="286" statements="160" conditionals="32" coveredstatements="66"/>
            <class name="SABRCubeCalibrationTest">
               <metrics coveredelements="71" complexity="50" methods="6" testruns="1" statements="160" coveredconditionals="1" coveredmethods="4" elements="198" testfailures="0" testduration="208.712" conditionals="32" coveredstatements="66" testpasses="1"/>
            </class>
            <line complexity="13" visibility="public" signature="SABRCubeCalibrationTest()" num="85" count="1" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testSABRCubeCalibration() : void" num="125" testsuccess="true" count="1" testduration="208.712" type="method"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="5" type="stmt"/>
            <line num="157" count="25" type="stmt"/>
            <line num="158" count="125" type="stmt"/>
            <line num="159" count="125" type="stmt"/>
            <line num="161" count="125" type="stmt"/>
            <line num="162" count="125" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="5" type="stmt"/>
            <line num="170" count="25" type="stmt"/>
            <line num="171" count="124" type="stmt"/>
            <line num="172" count="124" type="stmt"/>
            <line num="174" count="124" type="stmt"/>
            <line num="175" count="124" type="stmt"/>
            <line complexity="14" visibility="public" signature="main(String[]) : void" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="224" type="cond"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line complexity="18" visibility="public" signature="askForSwaptions() : void" num="241" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="245" type="cond"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="248" type="cond"/>
            <line num="249" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="276" type="cond"/>
            <line num="277" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="277" type="cond"/>
            <line num="278" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="279" type="cond"/>
            <line num="280" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="298" type="cond"/>
            <line num="299" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="299" type="cond"/>
            <line num="300" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="301" type="cond"/>
            <line num="302" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="payerValue(VolatilityCubeModel,int,int,int) : double" num="317" count="125" type="method"/>
            <line num="319" count="125" type="stmt"/>
            <line num="320" count="125" type="stmt"/>
            <line num="321" count="125" type="stmt"/>
            <line num="322" count="125" type="stmt"/>
            <line num="324" count="125" type="stmt"/>
            <line num="326" count="125" type="stmt"/>
            <line complexity="1" visibility="private" signature="receiverValue(VolatilityCubeModel,int,int,int) : double" num="329" count="124" type="method"/>
            <line num="331" count="124" type="stmt"/>
            <line num="332" count="124" type="stmt"/>
            <line num="333" count="124" type="stmt"/>
            <line num="334" count="124" type="stmt"/>
            <line num="336" count="124" type="stmt"/>
            <line num="338" count="124" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/singleswaprate/calibration/SABRCubeParallelCalibrationTest.java" name="SABRCubeParallelCalibrationTest.java">
            <metrics coveredelements="67" coveredconditionals="0" complexity="36" loc="279" coveredmethods="4" methods="6" elements="145" classes="1" ncloc="214" statements="123" conditionals="16" coveredstatements="63"/>
            <class name="SABRCubeParallelCalibrationTest">
               <metrics coveredelements="67" complexity="36" methods="6" testruns="1" statements="123" coveredconditionals="0" coveredmethods="4" elements="145" testfailures="0" testduration="20.47" conditionals="16" coveredstatements="63" testpasses="1"/>
            </class>
            <line complexity="13" visibility="public" signature="SABRCubeParallelCalibrationTest()" num="67" count="1" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCalibration() : void" num="106" testsuccess="true" count="1" testduration="20.47" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="5" type="stmt"/>
            <line num="146" count="25" type="stmt"/>
            <line num="147" count="125" type="stmt"/>
            <line num="148" count="125" type="stmt"/>
            <line num="150" count="125" type="stmt"/>
            <line num="151" count="125" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="5" type="stmt"/>
            <line num="159" count="25" type="stmt"/>
            <line num="160" count="124" type="stmt"/>
            <line num="161" count="124" type="stmt"/>
            <line num="163" count="124" type="stmt"/>
            <line num="164" count="124" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="171" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="18" visibility="public" signature="askForSwaptions() : void" num="179" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="payerValue(VolatilityCubeModel,int,int,int) : double" num="255" count="125" type="method"/>
            <line num="257" count="125" type="stmt"/>
            <line num="258" count="125" type="stmt"/>
            <line num="259" count="125" type="stmt"/>
            <line num="260" count="125" type="stmt"/>
            <line num="262" count="125" type="stmt"/>
            <line num="264" count="125" type="stmt"/>
            <line complexity="1" visibility="private" signature="receiverValue(VolatilityCubeModel,int,int,int) : double" num="267" count="124" type="method"/>
            <line num="269" count="124" type="stmt"/>
            <line num="270" count="124" type="stmt"/>
            <line num="271" count="124" type="stmt"/>
            <line num="272" count="124" type="stmt"/>
            <line num="274" count="124" type="stmt"/>
            <line num="276" count="124" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/singleswaprate/calibration/SABRShiftedSmileCalibrationTest.java" name="SABRShiftedSmileCalibrationTest.java">
            <metrics coveredelements="138" coveredconditionals="10" complexity="25" loc="301" coveredmethods="6" methods="6" elements="143" classes="1" ncloc="238" statements="125" conditionals="12" coveredstatements="122"/>
            <class name="SABRShiftedSmileCalibrationTest">
               <metrics coveredelements="138" complexity="25" methods="6" testruns="2" statements="125" coveredconditionals="10" coveredmethods="6" elements="143" testfailures="0" testduration="3.0589999999999997" conditionals="12" coveredstatements="122" testpasses="2"/>
            </class>
            <line complexity="13" visibility="public" signature="setup() : void" num="78" count="1" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testCalibration() : void" num="119" testsuccess="true" count="1" testduration="3.022" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="5" type="stmt"/>
            <line num="150" count="25" type="stmt"/>
            <line num="151" count="125" type="stmt"/>
            <line num="152" count="125" type="stmt"/>
            <line num="154" count="125" type="stmt"/>
            <line num="155" count="125" type="stmt"/>
            <line num="156" count="125" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="5" type="stmt"/>
            <line num="164" count="25" type="stmt"/>
            <line num="165" count="124" type="stmt"/>
            <line num="166" count="124" type="stmt"/>
            <line num="168" count="124" type="stmt"/>
            <line num="169" count="124" type="stmt"/>
            <line num="170" count="124" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line falsecount="1" truecount="125" num="176" type="cond"/>
            <line num="177" count="125" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line falsecount="1" truecount="124" num="179" type="cond"/>
            <line num="180" count="124" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSingleSmile() : void" num="184" testsuccess="true" count="1" testduration="0.037" type="method"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="9" type="stmt"/>
            <line falsecount="0" truecount="9" num="203" type="cond"/>
            <line num="204" count="9" type="stmt"/>
            <line num="205" count="9" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="setValues(double[],double[]) : void" num="221" count="362" type="method"/>
            <line num="225" count="362" type="stmt"/>
            <line num="226" count="363" type="stmt"/>
            <line num="227" count="363" type="stmt"/>
            <line num="229" count="363" type="stmt"/>
            <line falsecount="363" truecount="3264" num="229" type="cond"/>
            <line num="230" count="3264" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="9" type="stmt"/>
            <line falsecount="0" truecount="9" num="255" type="cond"/>
            <line num="256" count="9" type="stmt"/>
            <line num="257" count="9" type="stmt"/>
            <line num="266" count="9" type="stmt"/>
            <line num="267" count="9" type="stmt"/>
            <line num="268" count="9" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line falsecount="1" truecount="9" num="273" type="cond"/>
            <line num="274" count="9" type="stmt"/>
            <line complexity="1" visibility="private" signature="payerValue(VolatilityCubeModel,int,int,int) : double" num="278" count="125" type="method"/>
            <line num="280" count="125" type="stmt"/>
            <line num="281" count="125" type="stmt"/>
            <line num="282" count="125" type="stmt"/>
            <line num="283" count="125" type="stmt"/>
            <line num="285" count="125" type="stmt"/>
            <line num="287" count="125" type="stmt"/>
            <line complexity="1" visibility="private" signature="receiverValue(VolatilityCubeModel,int,int,int) : double" num="290" count="124" type="method"/>
            <line num="292" count="124" type="stmt"/>
            <line num="293" count="124" type="stmt"/>
            <line num="294" count="124" type="stmt"/>
            <line num="295" count="124" type="stmt"/>
            <line num="297" count="124" type="stmt"/>
            <line num="299" count="124" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/singleswaprate/calibration/StaticCubeCalibrationTest.java" name="StaticCubeCalibrationTest.java">
            <metrics coveredelements="65" coveredconditionals="0" complexity="34" loc="257" coveredmethods="4" methods="6" elements="143" classes="1" ncloc="210" statements="121" conditionals="16" coveredstatements="61"/>
            <class name="StaticCubeCalibrationTest">
               <metrics coveredelements="65" complexity="34" methods="6" testruns="1" statements="121" coveredconditionals="0" coveredmethods="4" elements="143" testfailures="0" testduration="5.704" conditionals="16" coveredstatements="61" testpasses="1"/>
            </class>
            <line complexity="11" visibility="public" signature="StaticCubeCalibrationTest()" num="62" count="1" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStaticCubeCalibration() : void" num="100" testsuccess="true" count="1" testduration="5.704" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="5" type="stmt"/>
            <line num="125" count="25" type="stmt"/>
            <line num="126" count="125" type="stmt"/>
            <line num="127" count="125" type="stmt"/>
            <line num="129" count="125" type="stmt"/>
            <line num="130" count="125" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="5" type="stmt"/>
            <line num="138" count="25" type="stmt"/>
            <line num="139" count="124" type="stmt"/>
            <line num="140" count="124" type="stmt"/>
            <line num="142" count="124" type="stmt"/>
            <line num="143" count="124" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="18" visibility="public" signature="askForSwaptions() : void" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="192" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="payerValue(VolatilityCubeModel,int,int,int) : double" num="233" count="125" type="method"/>
            <line num="235" count="125" type="stmt"/>
            <line num="236" count="125" type="stmt"/>
            <line num="237" count="125" type="stmt"/>
            <line num="238" count="125" type="stmt"/>
            <line num="240" count="125" type="stmt"/>
            <line num="242" count="125" type="stmt"/>
            <line complexity="1" visibility="private" signature="receiverValue(VolatilityCubeModel,int,int,int) : double" num="245" count="124" type="method"/>
            <line num="247" count="124" type="stmt"/>
            <line num="248" count="124" type="stmt"/>
            <line num="249" count="124" type="stmt"/>
            <line num="250" count="124" type="stmt"/>
            <line num="252" count="124" type="stmt"/>
            <line num="254" count="124" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.time.businessdaycalendar">
         <metrics coveredelements="84" complexity="5" loc="174" methods="5" classes="1" statements="79" coveredconditionals="0" coveredmethods="5" elements="84" ncloc="107" files="1" conditionals="0" coveredstatements="79"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendarTest.java" name="BusinessdayCalendarTest.java">
            <metrics coveredelements="84" coveredconditionals="0" complexity="5" loc="174" coveredmethods="5" methods="5" elements="84" classes="1" ncloc="107" statements="79" conditionals="0" coveredstatements="79"/>
            <class name="BusinessdayCalendarTest">
               <metrics coveredelements="84" complexity="5" methods="5" testruns="5" statements="79" coveredconditionals="0" coveredmethods="5" elements="84" testfailures="0" testduration="0.06" conditionals="0" coveredstatements="79" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="testCreateDateFromDateAndOffsetCode() : void" num="19" testsuccess="true" count="1" testduration="0.013" type="method"/>
            <line num="21" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="5" type="stmt"/>
            <line num="28" count="5" type="stmt"/>
            <line num="29" count="5" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="12" type="stmt"/>
            <line num="35" count="12" type="stmt"/>
            <line num="36" count="12" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="12" type="stmt"/>
            <line num="42" count="12" type="stmt"/>
            <line num="43" count="12" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="12" type="stmt"/>
            <line num="50" count="12" type="stmt"/>
            <line num="51" count="12" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="12" type="stmt"/>
            <line num="57" count="12" type="stmt"/>
            <line num="58" count="12" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="12" type="stmt"/>
            <line num="64" count="12" type="stmt"/>
            <line num="65" count="12" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="5" type="stmt"/>
            <line num="72" count="5" type="stmt"/>
            <line num="73" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCombinedCalendar() : void" num="80" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTargetCalendar() : void" num="109" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNycCalendar() : void" num="144" testsuccess="true" count="1" testduration="0.038" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLondonCalendar() : void" num="161" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="163" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.bond">
         <metrics coveredelements="0" complexity="15" loc="270" methods="7" classes="2" statements="73" coveredconditionals="0" coveredmethods="0" elements="94" ncloc="177" files="2" conditionals="14" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/bond/AccruedInterestTest.java" name="AccruedInterestTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="83" coveredmethods="0" methods="3" elements="31" classes="1" ncloc="66" statements="22" conditionals="6" coveredstatements="0"/>
            <class name="AccruedInterestTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="31" statements="22" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="5" visibility="private" signature="getPeriodIndex(LocalDate) : int" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getAccruedInterest(LocalDate) : double" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/bond/BondValuationTest.java" name="BondValuationTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="187" coveredmethods="0" methods="4" elements="63" classes="1" ncloc="111" statements="51" conditionals="8" coveredstatements="0"/>
            <class name="BondValuationTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="4" elements="63" statements="51" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BondValuationTest(InterpolationMethod)" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testImplementation() : void" num="83" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="153" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="177" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.hybridassetinterestrate">
         <metrics coveredelements="139" complexity="17" loc="382" methods="9" classes="2" statements="130" coveredconditionals="6" coveredmethods="9" elements="147" ncloc="237" files="2" conditionals="8" coveredstatements="124"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/hybridassetinterestrate/CrossCurrencyLIBORMarketModelFromModelsTest.java" name="CrossCurrencyLIBORMarketModelFromModelsTest.java">
            <metrics coveredelements="118" coveredconditionals="4" complexity="15" loc="329" coveredmethods="8" methods="8" elements="126" classes="1" ncloc="199" statements="112" conditionals="6" coveredstatements="106"/>
            <class name="CrossCurrencyLIBORMarketModelFromModelsTest">
               <metrics coveredelements="118" complexity="15" methods="8" testruns="4" statements="112" coveredconditionals="4" coveredmethods="8" elements="126" testfailures="0" testduration="652.406" conditionals="6" coveredstatements="106" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="testProperties() : void" num="45" testsuccess="true" count="1" testduration="115.274" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForeignBond() : void" num="68" testsuccess="true" count="2" testduration="181.169" type="method"/>
            <line num="70" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForeignFRA() : void" num="94" testsuccess="true" count="1" testduration="167.688" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForeignCaplet() : void" num="117" testsuccess="true" count="1" testduration="188.275" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line complexity="8" visibility="private" signature="getModel(String[]) : CrossCurrencyLIBORMarketModelFromModels" num="156" count="9" type="method"/>
            <line num="164" count="9" type="stmt"/>
            <line num="165" count="9" type="stmt"/>
            <line num="167" count="9" type="stmt"/>
            <line num="172" count="9" type="stmt"/>
            <line num="173" count="9" type="stmt"/>
            <line num="174" count="9" type="stmt"/>
            <line num="175" count="9" type="stmt"/>
            <line num="177" count="9" type="stmt"/>
            <line num="178" count="9" type="stmt"/>
            <line num="183" count="9" type="stmt"/>
            <line num="189" count="9" type="stmt"/>
            <line num="190" count="9" type="stmt"/>
            <line num="192" count="9" type="stmt"/>
            <line falsecount="4" truecount="5" num="192" type="cond"/>
            <line num="193" count="5" type="stmt"/>
            <line num="194" count="5" type="stmt"/>
            <line num="196" count="5" type="stmt"/>
            <line num="197" count="5" type="stmt"/>
            <line num="198" count="5" type="stmt"/>
            <line num="200" count="5" type="stmt"/>
            <line num="201" count="5" type="stmt"/>
            <line num="203" count="5" type="stmt"/>
            <line num="207" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="219" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="219" type="cond"/>
            <line num="220" count="4" type="stmt"/>
            <line num="222" count="4" type="stmt"/>
            <line num="223" count="4" type="stmt"/>
            <line num="225" count="4" type="stmt"/>
            <line num="227" count="4" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getFxMartingaleModel(double,IndependentIncrements) : MonteCarloProcessFromProcessModel" num="237" count="9" type="method"/>
            <line num="238" count="9" type="stmt"/>
            <line num="239" count="9" type="stmt"/>
            <line num="241" count="9" type="stmt"/>
            <line num="244" count="9" type="stmt"/>
            <line num="246" count="9" type="stmt"/>
            <line complexity="1" visibility="private" signature="getInterestRateModel(double,IndependentIncrements,MonteCarloProcess,Map&lt;Integer, Integer&gt;) : LIBORMonteCarloSimulationFromLIBORModel" num="249" count="14" type="method"/>
            <line num="250" count="14" type="stmt"/>
            <line num="252" count="14" type="stmt"/>
            <line num="253" count="14" type="stmt"/>
            <line num="254" count="14" type="stmt"/>
            <line num="258" count="14" type="stmt"/>
            <line num="259" count="14" type="stmt"/>
            <line num="260" count="14" type="stmt"/>
            <line num="263" count="14" type="stmt"/>
            <line num="273" count="14" type="stmt"/>
            <line num="274" count="14" type="stmt"/>
            <line num="279" count="14" type="stmt"/>
            <line num="287" count="14" type="stmt"/>
            <line num="294" count="14" type="stmt"/>
            <line num="297" count="14" type="stmt"/>
            <line num="300" count="14" type="stmt"/>
            <line num="303" count="14" type="stmt"/>
            <line num="308" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="316" count="523" type="method"/>
            <line num="318" count="523" type="stmt"/>
            <line num="319" count="523" type="stmt"/>
            <line num="323" count="14" type="stmt"/>
            <line num="325" count="14" type="stmt"/>
            <line num="327" count="14" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/hybridassetinterestrate/HybridAssetLIBORModelMonteCarloSimulationFromModelsTest.java" name="HybridAssetLIBORModelMonteCarloSimulationFromModelsTest.java">
            <metrics coveredelements="21" coveredconditionals="2" complexity="2" loc="53" coveredmethods="1" methods="1" elements="21" classes="1" ncloc="38" statements="18" conditionals="2" coveredstatements="18"/>
            <class name="HybridAssetLIBORModelMonteCarloSimulationFromModelsTest">
               <metrics coveredelements="21" complexity="2" methods="1" testruns="2" statements="18" coveredconditionals="2" coveredmethods="1" elements="21" testfailures="0" testduration="31.738" conditionals="2" coveredstatements="18" testpasses="2"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="20" testsuccess="true" count="2" testduration="15.342" type="method"/>
            <line num="22" count="2" type="stmt"/>
            <line num="23" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line num="26" count="2" type="stmt"/>
            <line num="29" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line falsecount="2" truecount="1802" num="44" type="cond"/>
            <line num="45" count="1802" type="stmt"/>
            <line num="47" count="1802" type="stmt"/>
            <line num="48" count="1802" type="stmt"/>
            <line num="50" count="1802" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.integration">
         <metrics coveredelements="122" complexity="23" loc="334" methods="20" classes="4" statements="105" coveredconditionals="0" coveredmethods="20" elements="125" ncloc="222" files="4" conditionals="0" coveredstatements="102"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/integration/MonteCarloIntegratorTest.java" name="MonteCarloIntegratorTest.java">
            <metrics coveredelements="33" coveredconditionals="0" complexity="7" loc="97" coveredmethods="7" methods="7" elements="33" classes="1" ncloc="63" statements="26" conditionals="0" coveredstatements="26"/>
            <class name="MonteCarloIntegratorTest">
               <metrics coveredelements="33" complexity="7" methods="7" testruns="4" statements="26" coveredconditionals="0" coveredmethods="7" elements="33" testfailures="0" testduration="0.943" conditionals="0" coveredstatements="26" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="29" count="4" type="method"/>
            <line num="31" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCos() : void" num="34" testsuccess="true" count="2" testduration="0.167" type="method"/>
            <line num="37" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="38" count="4000000" type="method"/>
            <line num="40" count="4000000" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="44" count="4" type="method"/>
            <line num="46" count="4" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCubic() : void" num="67" testsuccess="true" count="2" testduration="0.118" type="method"/>
            <line num="70" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="71" count="4000000" type="method"/>
            <line num="73" count="4000000" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="77" count="4" type="method"/>
            <line num="79" count="4" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/integration/PiecewiseContantDoubleUnaryOperatorTest.java" name="PiecewiseContantDoubleUnaryOperatorTest.java">
            <metrics coveredelements="50" coveredconditionals="0" complexity="8" loc="108" coveredmethods="5" methods="5" elements="53" classes="1" ncloc="84" statements="48" conditionals="0" coveredstatements="45"/>
            <class name="PiecewiseContantDoubleUnaryOperatorTest">
               <metrics coveredelements="50" complexity="8" methods="5" testruns="10" statements="48" coveredconditionals="0" coveredmethods="5" elements="53" testfailures="0" testduration="0.038" conditionals="0" coveredstatements="45" testpasses="10"/>
            </class>
            <line complexity="1" visibility="public" signature="testValuation() : void" num="10" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="12" count="2" type="stmt"/>
            <line num="14" count="2" type="stmt"/>
            <line num="16" count="2" type="stmt"/>
            <line num="18" count="2" type="stmt"/>
            <line num="19" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
            <line num="21" count="2" type="stmt"/>
            <line num="22" count="2" type="stmt"/>
            <line num="23" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegral() : void" num="26" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="28" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegralOfSquares() : void" num="43" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="45" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegralErrorCorrection() : void" num="61" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="63" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="testExceptions() : void" num="72" testsuccess="true" count="2" testduration="0.016" type="method"/>
            <line num="74" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/integration/SimpsonRealIntegratorTest.java" name="SimpsonRealIntegratorTest.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="7" loc="86" coveredmethods="7" methods="7" elements="29" classes="1" ncloc="55" statements="22" conditionals="0" coveredstatements="22"/>
            <class name="SimpsonRealIntegratorTest">
               <metrics coveredelements="29" complexity="7" methods="7" testruns="4" statements="22" coveredconditionals="0" coveredmethods="7" elements="29" testfailures="0" testduration="0.054" conditionals="0" coveredstatements="22" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="24" count="4" type="method"/>
            <line num="26" count="4" type="stmt"/>
            <line num="27" count="4" type="stmt"/>
            <line num="28" count="4" type="stmt"/>
            <line num="30" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCos() : void" num="33" testsuccess="true" count="2" testduration="0.022" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="37" count="189" type="method"/>
            <line num="39" count="191" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="43" count="4" type="method"/>
            <line num="45" count="4" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCubic() : void" num="60" testsuccess="true" count="2" testduration="0.005" type="method"/>
            <line num="63" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="64" count="182" type="method"/>
            <line num="66" count="185" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="70" count="4" type="method"/>
            <line num="72" count="4" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/integration/TrapezoidalRealIntegratorTest.java" name="TrapezoidalRealIntegratorTest.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="1" loc="43" coveredmethods="1" methods="1" elements="10" classes="1" ncloc="20" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="TrapezoidalRealIntegratorTest">
               <metrics coveredelements="10" complexity="1" methods="1" testruns="2" statements="9" coveredconditionals="0" coveredmethods="1" elements="10" testfailures="0" testduration="0.061" conditionals="0" coveredstatements="9" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="22" testsuccess="true" count="2" testduration="0.024" type="method"/>
            <line num="24" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line num="27" count="2" type="stmt"/>
            <line num="29" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.automaticdifferentiation.backward.alternative">
         <metrics coveredelements="0" complexity="2" loc="46" methods="1" classes="1" statements="15" coveredconditionals="0" coveredmethods="0" elements="18" ncloc="22" files="1" conditionals="2" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/automaticdifferentiation/backward/alternative/RandomVariableUniqueVariableTest.java" name="RandomVariableUniqueVariableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="46" coveredmethods="0" methods="1" elements="18" classes="1" ncloc="22" statements="15" conditionals="2" coveredstatements="0"/>
            <class name="RandomVariableUniqueVariableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="18" statements="15" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="main(String[]) : void" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling">
         <metrics coveredelements="72" complexity="6" loc="230" methods="3" classes="1" statements="63" coveredconditionals="6" coveredmethods="3" elements="72" ncloc="140" files="1" conditionals="6" coveredstatements="63"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/modelling/LIBORMarketModelHierarchyTest.java" name="LIBORMarketModelHierarchyTest.java">
            <metrics coveredelements="72" coveredconditionals="6" complexity="6" loc="230" coveredmethods="3" methods="3" elements="72" classes="1" ncloc="140" statements="63" conditionals="6" coveredstatements="63"/>
            <class name="LIBORMarketModelHierarchyTest">
               <metrics coveredelements="72" complexity="6" methods="3" testruns="2" statements="63" coveredconditionals="6" coveredmethods="3" elements="72" testfailures="0" testduration="89.863" conditionals="6" coveredstatements="63" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testModelHierarchy() : void" num="62" testsuccess="true" count="2" testduration="58.123" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="createMultiCurveLIBORMarketModel(int,int,double) : LIBORModelMonteCarloSimulationModel" num="112" count="2" type="method"/>
            <line num="114" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(int,int,double,DiscountCurve,ForwardCurve) : LIBORModelMonteCarloSimulationModel" num="144" count="2" type="method"/>
            <line num="147" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line num="167" count="2" type="stmt"/>
            <line num="168" count="2" type="stmt"/>
            <line falsecount="2" truecount="160" num="168" type="cond"/>
            <line num="169" count="160" type="stmt"/>
            <line falsecount="160" truecount="12800" num="169" type="cond"/>
            <line num="171" count="12800" type="stmt"/>
            <line num="172" count="12800" type="stmt"/>
            <line num="173" count="12800" type="stmt"/>
            <line num="175" count="12800" type="stmt"/>
            <line num="176" count="12800" type="stmt"/>
            <line falsecount="6320" truecount="6480" num="176" type="cond"/>
            <line num="177" count="6480" type="stmt"/>
            <line num="179" count="6320" type="stmt"/>
            <line num="183" count="12800" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="191" count="2" type="stmt"/>
            <line num="199" count="2" type="stmt"/>
            <line num="207" count="2" type="stmt"/>
            <line num="210" count="2" type="stmt"/>
            <line num="213" count="2" type="stmt"/>
            <line num="216" count="2" type="stmt"/>
            <line num="221" count="2" type="stmt"/>
            <line num="224" count="2" type="stmt"/>
            <line num="228" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.model.volatilities">
         <metrics coveredelements="320" complexity="61" loc="719" methods="19" classes="2" statements="313" coveredconditionals="12" coveredmethods="19" elements="352" ncloc="561" files="2" conditionals="20" coveredstatements="289"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/singleswaprate/model/volatilities/SABRVolatilityCubeSharedParametersTest.java" name="SABRVolatilityCubeSharedParametersTest.java">
            <metrics coveredelements="96" coveredconditionals="1" complexity="24" loc="253" coveredmethods="7" methods="7" elements="106" classes="1" ncloc="198" statements="97" conditionals="2" coveredstatements="88"/>
            <class name="SABRVolatilityCubeSharedParametersTest">
               <metrics coveredelements="96" complexity="24" methods="7" testruns="2" statements="97" coveredconditionals="1" coveredmethods="7" elements="106" testfailures="0" testduration="0.10200000000000001" conditionals="2" coveredstatements="88" testpasses="2"/>
            </class>
            <line complexity="13" visibility="public" signature="setup() : void" num="80" count="1" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="clearList() : void" num="123" count="2" type="method"/>
            <line num="125" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="a_cubeATM() : void" num="128" testsuccess="true" count="1" testduration="0.019" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="5" type="stmt"/>
            <line num="139" count="25" type="stmt"/>
            <line num="140" count="25" type="stmt"/>
            <line num="142" count="25" type="stmt"/>
            <line num="143" count="25" type="stmt"/>
            <line num="144" count="25" type="stmt"/>
            <line num="146" count="25" type="stmt"/>
            <line num="147" count="25" type="stmt"/>
            <line num="149" count="25" type="stmt"/>
            <line num="150" count="25" type="stmt"/>
            <line num="151" count="25" type="stmt"/>
            <line num="152" count="25" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="b_strikeSlices() : void" num="169" testsuccess="true" count="1" testduration="0.083" type="method"/>
            <line num="172" count="1" type="stmt"/>
            <line num="174" count="9" type="stmt"/>
            <line num="175" count="9" type="stmt"/>
            <line num="176" count="9" type="stmt"/>
            <line num="178" count="9" type="stmt"/>
            <line num="179" count="9" type="stmt"/>
            <line num="180" count="9" type="stmt"/>
            <line num="182" count="9" type="stmt"/>
            <line num="184" count="9" type="stmt"/>
            <line num="185" count="45" type="stmt"/>
            <line num="187" count="224" type="stmt"/>
            <line num="188" count="224" type="stmt"/>
            <line num="190" count="224" type="stmt"/>
            <line num="191" count="224" type="stmt"/>
            <line num="192" count="224" type="stmt"/>
            <line num="194" count="224" type="stmt"/>
            <line num="195" count="224" type="stmt"/>
            <line num="196" count="224" type="stmt"/>
            <line num="197" count="224" type="stmt"/>
            <line num="199" count="224" type="stmt"/>
            <line num="200" count="224" type="stmt"/>
            <line num="201" count="224" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="224" type="stmt"/>
            <line num="209" count="224" type="stmt"/>
            <line num="210" count="224" type="stmt"/>
            <line num="211" count="224" type="stmt"/>
            <line num="212" count="224" type="stmt"/>
            <line num="215" count="224" type="stmt"/>
            <line falsecount="0" truecount="224" num="215" type="cond"/>
            <line num="216" count="224" type="stmt"/>
            <line num="221" count="9" type="stmt"/>
            <line num="222" count="9" type="stmt"/>
            <line num="223" count="9" type="stmt"/>
            <line num="224" count="9" type="stmt"/>
            <line num="226" count="9" type="stmt"/>
            <line num="227" count="9" type="stmt"/>
            <line num="228" count="9" type="stmt"/>
            <line num="229" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkDifferences() : void" num="234" count="2" type="method"/>
            <line num="236" count="2" type="stmt"/>
            <line num="237" count="224" type="stmt"/>
            <line complexity="1" visibility="public" signature="print() : void" num="241" count="1" type="method"/>
            <line num="244" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="makeVolatilityCube() : VolatilityCube" num="248" count="1" type="method"/>
            <line num="250" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/singleswaprate/model/volatilities/SABRVolatilityCubeTest.java" name="SABRVolatilityCubeTest.java">
            <metrics coveredelements="224" coveredconditionals="11" complexity="37" loc="466" coveredmethods="12" methods="12" elements="246" classes="1" ncloc="363" statements="216" conditionals="18" coveredstatements="201"/>
            <class name="SABRVolatilityCubeTest">
               <metrics coveredelements="224" complexity="37" methods="12" testruns="4" statements="216" coveredconditionals="11" coveredmethods="12" elements="246" testfailures="0" testduration="0.47500000000000003" conditionals="18" coveredstatements="201" testpasses="4"/>
            </class>
            <line complexity="13" visibility="public" signature="setup() : void" num="86" count="1" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="clear() : void" num="128" count="4" type="method"/>
            <line num="130" count="4" type="stmt"/>
            <line num="132" count="4" type="stmt"/>
            <line num="133" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="a_cubeATM() : void" num="136" testsuccess="true" count="1" testduration="0.017" type="method"/>
            <line num="139" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="5" type="stmt"/>
            <line num="149" count="25" type="stmt"/>
            <line num="150" count="25" type="stmt"/>
            <line num="152" count="25" type="stmt"/>
            <line num="153" count="25" type="stmt"/>
            <line num="154" count="25" type="stmt"/>
            <line num="156" count="25" type="stmt"/>
            <line num="157" count="25" type="stmt"/>
            <line num="159" count="25" type="stmt"/>
            <line num="160" count="25" type="stmt"/>
            <line num="161" count="25" type="stmt"/>
            <line num="162" count="25" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="b_strikeSlices() : void" num="179" testsuccess="true" count="1" testduration="0.06" type="method"/>
            <line num="182" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="186" count="9" type="stmt"/>
            <line num="187" count="9" type="stmt"/>
            <line num="188" count="9" type="stmt"/>
            <line num="190" count="9" type="stmt"/>
            <line num="191" count="9" type="stmt"/>
            <line num="192" count="9" type="stmt"/>
            <line num="194" count="9" type="stmt"/>
            <line num="196" count="9" type="stmt"/>
            <line num="197" count="45" type="stmt"/>
            <line num="199" count="224" type="stmt"/>
            <line num="200" count="224" type="stmt"/>
            <line num="202" count="224" type="stmt"/>
            <line num="203" count="224" type="stmt"/>
            <line num="204" count="224" type="stmt"/>
            <line num="206" count="224" type="stmt"/>
            <line num="207" count="224" type="stmt"/>
            <line num="208" count="224" type="stmt"/>
            <line num="209" count="224" type="stmt"/>
            <line num="211" count="224" type="stmt"/>
            <line num="212" count="224" type="stmt"/>
            <line num="213" count="224" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="220" count="224" type="stmt"/>
            <line num="221" count="224" type="stmt"/>
            <line num="222" count="224" type="stmt"/>
            <line num="223" count="224" type="stmt"/>
            <line num="224" count="224" type="stmt"/>
            <line num="227" count="224" type="stmt"/>
            <line falsecount="0" truecount="224" num="227" type="cond"/>
            <line num="228" count="224" type="stmt"/>
            <line num="233" count="9" type="stmt"/>
            <line num="234" count="9" type="stmt"/>
            <line num="235" count="9" type="stmt"/>
            <line num="236" count="9" type="stmt"/>
            <line num="238" count="9" type="stmt"/>
            <line num="239" count="9" type="stmt"/>
            <line num="240" count="9" type="stmt"/>
            <line num="241" count="9" type="stmt"/>
            <line complexity="3" visibility="public" signature="c_testAccessPerformance() : void" num="246" testsuccess="true" count="1" testduration="0.329" type="method"/>
            <line num="249" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000" num="261" type="cond"/>
            <line num="262" count="1000" type="stmt"/>
            <line num="263" count="1000" type="stmt"/>
            <line num="264" count="1000" type="stmt"/>
            <line num="265" count="1000" type="stmt"/>
            <line num="266" count="1000" type="stmt"/>
            <line num="268" count="1000" type="stmt"/>
            <line num="269" count="1000" type="stmt"/>
            <line num="271" count="1000" type="stmt"/>
            <line num="272" count="1000" type="stmt"/>
            <line num="274" count="1000" type="stmt"/>
            <line num="277" count="1" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line num="279" count="1000" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="283" type="cond"/>
            <line num="284" count="0" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="d_testAccessPerformanceOnNodes() : void" num="289" testsuccess="true" count="1" testduration="0.069" type="method"/>
            <line num="292" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line num="295" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000" num="300" type="cond"/>
            <line num="301" count="1000" type="stmt"/>
            <line num="302" count="1000" type="stmt"/>
            <line num="303" count="1000" type="stmt"/>
            <line num="304" count="1000" type="stmt"/>
            <line num="305" count="1000" type="stmt"/>
            <line num="307" count="1000" type="stmt"/>
            <line num="308" count="1000" type="stmt"/>
            <line num="310" count="1000" type="stmt"/>
            <line num="311" count="1000" type="stmt"/>
            <line num="313" count="1000" type="stmt"/>
            <line num="316" count="1" type="stmt"/>
            <line num="317" count="1" type="stmt"/>
            <line num="318" count="1000" type="stmt"/>
            <line num="320" count="1" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line num="322" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="322" type="cond"/>
            <line num="323" count="0" type="stmt"/>
            <line num="325" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="328" count="4" type="method"/>
            <line num="330" count="4" type="stmt"/>
            <line num="331" count="224" type="stmt"/>
            <line num="333" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="randomInt(int,int) : int" num="336" count="6000" type="method"/>
            <line num="337" count="6000" type="stmt"/>
            <line num="338" count="6000" type="stmt"/>
            <line num="339" count="6000" type="stmt"/>
            <line complexity="1" visibility="private" signature="makeVolatilityCube() : VolatilityCube" num="342" count="4" type="method"/>
            <line num="344" count="4" type="stmt"/>
            <line num="345" count="4" type="stmt"/>
            <line num="346" count="4" type="stmt"/>
            <line num="347" count="4" type="stmt"/>
            <line num="349" count="4" type="stmt"/>
            <line complexity="2" visibility="private" signature="makeSwapRateTable() : DataTable" num="353" count="4" type="method"/>
            <line num="355" count="4" type="stmt"/>
            <line num="356" count="4" type="stmt"/>
            <line num="357" count="4" type="stmt"/>
            <line num="359" count="4" type="stmt"/>
            <line num="360" count="20" type="stmt"/>
            <line num="361" count="100" type="stmt"/>
            <line num="362" count="100" type="stmt"/>
            <line num="364" count="100" type="stmt"/>
            <line num="365" count="100" type="stmt"/>
            <line num="367" count="100" type="stmt"/>
            <line num="368" count="100" type="stmt"/>
            <line num="369" count="100" type="stmt"/>
            <line num="371" count="100" type="stmt"/>
            <line num="375" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="375" type="cond"/>
            <line num="376" count="4" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="makeBaseVolTable(DataTable,DataTable,DataTable) : DataTable" num="384" count="4" type="method"/>
            <line num="386" count="4" type="stmt"/>
            <line num="387" count="4" type="stmt"/>
            <line num="388" count="4" type="stmt"/>
            <line num="390" count="4" type="stmt"/>
            <line num="391" count="20" type="stmt"/>
            <line num="392" count="100" type="stmt"/>
            <line num="393" count="100" type="stmt"/>
            <line num="395" count="100" type="stmt"/>
            <line num="399" count="4" type="stmt"/>
            <line num="400" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="400" type="cond"/>
            <line num="401" count="4" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="409" count="4" type="stmt"/>
            <line num="412" count="4" type="stmt"/>
            <line num="413" count="4" type="stmt"/>
            <line num="414" count="4" type="stmt"/>
            <line num="415" count="4" type="stmt"/>
            <line num="416" count="20" type="stmt"/>
            <line num="418" count="100" type="stmt"/>
            <line num="419" count="100" type="stmt"/>
            <line num="421" count="100" type="stmt"/>
            <line num="422" count="100" type="stmt"/>
            <line num="423" count="100" type="stmt"/>
            <line num="425" count="100" type="stmt"/>
            <line num="426" count="100" type="stmt"/>
            <line num="428" count="100" type="stmt"/>
            <line num="429" count="100" type="stmt"/>
            <line num="430" count="100" type="stmt"/>
            <line num="435" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="435" type="cond"/>
            <line num="436" count="4" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="makeDummyTable(String,double) : DataTable" num="444" count="8" type="method"/>
            <line num="446" count="8" type="stmt"/>
            <line num="447" count="8" type="stmt"/>
            <line num="448" count="8" type="stmt"/>
            <line num="450" count="8" type="stmt"/>
            <line num="451" count="40" type="stmt"/>
            <line num="452" count="200" type="stmt"/>
            <line num="453" count="200" type="stmt"/>
            <line num="454" count="200" type="stmt"/>
            <line num="458" count="8" type="stmt"/>
            <line falsecount="0" truecount="8" num="458" type="cond"/>
            <line num="459" count="8" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.optimizer">
         <metrics coveredelements="257" complexity="72" loc="759" methods="35" classes="6" statements="295" coveredconditionals="30" coveredmethods="27" elements="400" ncloc="520" files="6" conditionals="70" coveredstatements="200"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/optimizer/LevenbergMarquardtTest.java" name="LevenbergMarquardtTest.java">
            <metrics coveredelements="149" coveredconditionals="20" complexity="23" loc="299" coveredmethods="13" methods="13" elements="149" classes="1" ncloc="202" statements="116" conditionals="20" coveredstatements="116"/>
            <class name="LevenbergMarquardtTest">
               <metrics coveredelements="149" complexity="23" methods="13" testruns="12" statements="116" coveredconditionals="20" coveredmethods="13" elements="149" testfailures="0" testduration="0.203" conditionals="20" coveredstatements="116" testpasses="12"/>
            </class>
            <line complexity="3" visibility="public" signature="testSmallLinearSystem() : void" num="22" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="24" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="27" count="64" type="method"/>
            <line num="29" count="64" type="stmt"/>
            <line num="30" count="64" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="44" type="cond"/>
            <line num="45" count="4" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="62" type="cond"/>
            <line num="63" count="4" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMultiThreaddedOptimizer() : void" num="73" testsuccess="true" count="2" testduration="0.089" type="method"/>
            <line num="75" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="84" count="322" type="method"/>
            <line num="86" count="322" type="stmt"/>
            <line num="87" count="322" type="stmt"/>
            <line num="88" count="322" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="96" type="cond"/>
            <line num="97" count="6" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="102" type="cond"/>
            <line num="103" count="6" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="testRosenbrockFunction() : void" num="112" testsuccess="true" count="2" testduration="0.004" type="method"/>
            <line num="114" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="123" count="58" type="method"/>
            <line num="125" count="58" type="stmt"/>
            <line num="126" count="58" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="134" type="cond"/>
            <line num="135" count="4" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="140" type="cond"/>
            <line num="141" count="4" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="testRosenbrockFunctionWithList() : void" num="151" testsuccess="true" count="2" testduration="0.003" type="method"/>
            <line num="153" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="158" count="2" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="170" count="58" type="method"/>
            <line num="172" count="58" type="stmt"/>
            <line num="173" count="58" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line num="180" count="2" type="stmt"/>
            <line num="181" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="181" type="cond"/>
            <line num="182" count="4" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="187" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="187" type="cond"/>
            <line num="188" count="4" type="stmt"/>
            <line num="191" count="2" type="stmt"/>
            <line num="192" count="2" type="stmt"/>
            <line num="194" count="2" type="stmt"/>
            <line num="195" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBoothFunction() : void" num="206" testsuccess="true" count="2" testduration="0.004" type="method"/>
            <line num="208" count="2" type="stmt"/>
            <line num="210" count="2" type="stmt"/>
            <line num="211" count="2" type="stmt"/>
            <line num="212" count="2" type="stmt"/>
            <line num="213" count="2" type="stmt"/>
            <line num="215" count="2" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line num="219" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="225" count="878" type="method"/>
            <line num="227" count="878" type="stmt"/>
            <line num="230" count="2" type="stmt"/>
            <line num="234" count="2" type="stmt"/>
            <line num="236" count="2" type="stmt"/>
            <line num="237" count="2" type="stmt"/>
            <line num="238" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="238" type="cond"/>
            <line num="239" count="4" type="stmt"/>
            <line num="241" count="2" type="stmt"/>
            <line num="243" count="2" type="stmt"/>
            <line num="244" count="2" type="stmt"/>
            <line num="246" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBoothFunctionWithAnalyticDerivative() : void" num="257" testsuccess="true" count="2" testduration="0.01" type="method"/>
            <line num="259" count="2" type="stmt"/>
            <line num="261" count="2" type="stmt"/>
            <line num="262" count="2" type="stmt"/>
            <line num="264" count="2" type="stmt"/>
            <line num="266" count="2" type="stmt"/>
            <line num="268" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="271" count="390" type="method"/>
            <line num="273" count="390" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDerivatives(double[],double[][]) : void" num="276" count="182" type="method"/>
            <line num="278" count="182" type="stmt"/>
            <line num="279" count="182" type="stmt"/>
            <line num="285" count="2" type="stmt"/>
            <line num="287" count="2" type="stmt"/>
            <line num="288" count="2" type="stmt"/>
            <line num="289" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="289" type="cond"/>
            <line num="290" count="4" type="stmt"/>
            <line num="292" count="2" type="stmt"/>
            <line num="294" count="2" type="stmt"/>
            <line num="295" count="2" type="stmt"/>
            <line num="297" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/optimizer/OptimizerFactoryTest.java" name="OptimizerFactoryTest.java">
            <metrics coveredelements="22" coveredconditionals="2" complexity="5" loc="63" coveredmethods="4" methods="4" elements="22" classes="1" ncloc="40" statements="16" conditionals="2" coveredstatements="16"/>
            <class name="OptimizerFactoryTest">
               <metrics coveredelements="22" complexity="5" methods="4" testruns="4" statements="16" coveredconditionals="2" coveredmethods="4" elements="22" testfailures="0" testduration="0.30600000000000005" conditionals="2" coveredstatements="16" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="testRosenbrockFunctionWithCMAES() : void" num="18" testsuccess="true" count="2" testduration="0.187" type="method"/>
            <line num="21" count="2" type="stmt"/>
            <line num="22" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRosenbrockFunctionWithLevenbergMarquard() : void" num="25" testsuccess="true" count="2" testduration="0.014" type="method"/>
            <line num="28" count="2" type="stmt"/>
            <line num="29" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testOptimizerWithRosenbrockFunction(OptimizerFactory) : void" num="32" count="4" type="method"/>
            <line num="33" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="34" count="1822" type="method"/>
            <line num="36" count="1822" type="stmt"/>
            <line num="37" count="1822" type="stmt"/>
            <line num="41" count="4" type="stmt"/>
            <line num="49" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line num="52" count="4" type="stmt"/>
            <line num="53" count="4" type="stmt"/>
            <line falsecount="4" truecount="8" num="53" type="cond"/>
            <line num="54" count="8" type="stmt"/>
            <line num="57" count="4" type="stmt"/>
            <line num="59" count="4" type="stmt"/>
            <line num="60" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/optimizer/StochasticLevenbergMarquardtTest.java" name="StochasticLevenbergMarquardtTest.java">
            <metrics coveredelements="43" coveredconditionals="4" complexity="7" loc="100" coveredmethods="5" methods="5" elements="43" classes="1" ncloc="63" statements="34" conditionals="4" coveredstatements="34"/>
            <class name="StochasticLevenbergMarquardtTest">
               <metrics coveredelements="43" complexity="7" methods="5" testruns="4" statements="34" coveredconditionals="4" coveredmethods="5" elements="43" testfailures="0" testduration="0.414" conditionals="4" coveredstatements="34" testpasses="4"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="20" testsuccess="true" count="2" testduration="0.079" type="method"/>
            <line num="22" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line num="27" count="2" type="stmt"/>
            <line num="29" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="39" count="508" type="method"/>
            <line num="41" count="508" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="51" type="cond"/>
            <line num="52" count="4" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBoothFunctionWithAnalyticDerivative() : void" num="57" testsuccess="true" count="2" testduration="0.104" type="method"/>
            <line num="59" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="77" count="508" type="method"/>
            <line num="79" count="508" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDerivatives(RandomVariable[],RandomVariable[][]) : void" num="82" count="506" type="method"/>
            <line num="84" count="506" type="stmt"/>
            <line num="85" count="506" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="95" type="cond"/>
            <line num="96" count="4" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/optimizer/StochasticLevenbergMarquardtTestInverse.java" name="StochasticLevenbergMarquardtTestInverse.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="101" coveredmethods="0" methods="4" elements="73" classes="1" ncloc="77" statements="49" conditionals="20" coveredstatements="0"/>
            <class name="StochasticLevenbergMarquardtTestInverse">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="4" elements="73" statements="49" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testInverse() : void" num="17" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getInverseMatrix(RandomVariable[][]) : RandomVariable[][]" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="multiply(RandomVariable[][],RandomVariable[][]) : RandomVariable[][]" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/optimizer/StochasticPathwiseLevenbergMarquardtTest.java" name="StochasticPathwiseLevenbergMarquardtTest.java">
            <metrics coveredelements="43" coveredconditionals="4" complexity="7" loc="96" coveredmethods="5" methods="5" elements="43" classes="1" ncloc="62" statements="34" conditionals="4" coveredstatements="34"/>
            <class name="StochasticPathwiseLevenbergMarquardtTest">
               <metrics coveredelements="43" complexity="7" methods="5" testruns="4" statements="34" coveredconditionals="4" coveredmethods="5" elements="43" testfailures="0" testduration="0.211" conditionals="4" coveredstatements="34" testpasses="4"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="16" testsuccess="true" count="2" testduration="0.014" type="method"/>
            <line num="18" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
            <line num="21" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line num="27" count="2" type="stmt"/>
            <line num="28" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="35" count="854" type="method"/>
            <line num="37" count="854" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="47" type="cond"/>
            <line num="48" count="4" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBoothFunctionWithAnalyticDerivative() : void" num="53" testsuccess="true" count="2" testduration="0.057" type="method"/>
            <line num="55" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="73" count="508" type="method"/>
            <line num="75" count="508" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDerivatives(RandomVariable[],RandomVariable[][]) : void" num="78" count="506" type="method"/>
            <line num="80" count="506" type="stmt"/>
            <line num="81" count="506" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="91" type="cond"/>
            <line num="92" count="4" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/optimizer/StochasticPathwiseLevenbergMarquardtTestInverse.java" name="StochasticPathwiseLevenbergMarquardtTestInverse.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="100" coveredmethods="0" methods="4" elements="70" classes="1" ncloc="76" statements="46" conditionals="20" coveredstatements="0"/>
            <class name="StochasticPathwiseLevenbergMarquardtTestInverse">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="4" elements="70" statements="46" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testInverse() : void" num="17" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getInverseMatrix(RandomVariable[][]) : RandomVariable[][]" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="multiply(RandomVariable[][],RandomVariable[][]) : RandomVariable[][]" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.time.daycount">
         <metrics coveredelements="24" complexity="6" loc="252" methods="3" classes="2" statements="15" coveredconditionals="6" coveredmethods="3" elements="24" ncloc="207" files="2" conditionals="6" coveredstatements="15"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/time/daycount/DayCountConvention_30E_360Test.java" name="DayCountConvention_30E_360Test.java">
            <metrics coveredelements="8" coveredconditionals="2" complexity="2" loc="108" coveredmethods="1" methods="1" elements="8" classes="1" ncloc="87" statements="5" conditionals="2" coveredstatements="5"/>
            <class name="DayCountConvention_30E_360Test">
               <metrics coveredelements="8" complexity="2" methods="1" testruns="1" statements="5" coveredconditionals="2" coveredmethods="1" elements="8" testfailures="0" testduration="0.012" conditionals="2" coveredstatements="5" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="96" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line falsecount="1" truecount="22" num="99" type="cond"/>
            <line num="100" count="22" type="stmt"/>
            <line num="102" count="22" type="stmt"/>
            <line num="104" count="22" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/time/daycount/DayCountConvention_30E_360_ISDATest.java" name="DayCountConvention_30E_360_ISDATest.java">
            <metrics coveredelements="16" coveredconditionals="4" complexity="4" loc="144" coveredmethods="2" methods="2" elements="16" classes="1" ncloc="120" statements="10" conditionals="4" coveredstatements="10"/>
            <class name="DayCountConvention_30E_360_ISDATest">
               <metrics coveredelements="16" complexity="4" methods="2" testruns="2" statements="10" coveredconditionals="4" coveredmethods="2" elements="16" testfailures="0" testduration="0.014" conditionals="4" coveredstatements="10" testpasses="2"/>
            </class>
            <line complexity="2" visibility="public" signature="testAssumingEndDateIsNotATerminationDate() : void" num="121" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line falsecount="1" truecount="22" num="124" type="cond"/>
            <line num="125" count="22" type="stmt"/>
            <line num="127" count="22" type="stmt"/>
            <line num="129" count="22" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssumingEndDateIsATerminationDate() : void" num="133" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line falsecount="1" truecount="22" num="136" type="cond"/>
            <line num="137" count="22" type="stmt"/>
            <line num="139" count="22" type="stmt"/>
            <line num="141" count="22" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.information">
         <metrics coveredelements="8" complexity="2" loc="23" methods="2" classes="1" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" ncloc="17" files="1" conditionals="0" coveredstatements="6"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/information/LibraryTest.java" name="LibraryTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="2" loc="23" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="17" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="LibraryTest">
               <metrics coveredelements="8" complexity="2" methods="2" testruns="4" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" testfailures="0" testduration="0.026" conditionals="0" coveredstatements="6" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="testBuildString() : void" num="8" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="10" count="2" type="stmt"/>
            <line num="12" count="2" type="stmt"/>
            <line num="13" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVersionString() : void" num="16" testsuccess="true" count="2" testduration="0.018" type="method"/>
            <line num="18" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
            <line num="21" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.products">
         <metrics coveredelements="557" complexity="60" loc="1609" methods="28" classes="5" statements="514" coveredconditionals="56" coveredmethods="25" elements="604" ncloc="917" files="5" conditionals="62" coveredstatements="476"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/products/InterestRateProductTest.java" name="InterestRateProductTest.java">
            <metrics coveredelements="140" coveredconditionals="16" complexity="20" loc="443" coveredmethods="5" methods="8" elements="187" classes="1" ncloc="257" statements="157" conditionals="22" coveredstatements="119"/>
            <class name="InterestRateProductTest">
               <metrics coveredelements="140" complexity="20" methods="8" testruns="6" statements="157" coveredconditionals="16" coveredmethods="5" elements="187" testfailures="0" testduration="126.01500000000001" conditionals="22" coveredstatements="119" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InterestRateProductTest()" num="80" count="6" type="method"/>
            <line num="81" count="6" type="stmt"/>
            <line num="83" count="6" type="stmt"/>
            <line num="84" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="createLIBORMarketModel(LocalDateTime,int,int,double) : LIBORModelMonteCarloSimulationModel" num="87" count="6" type="method"/>
            <line num="93" count="6" type="stmt"/>
            <line num="94" count="6" type="stmt"/>
            <line num="95" count="6" type="stmt"/>
            <line num="98" count="6" type="stmt"/>
            <line num="117" count="6" type="stmt"/>
            <line num="118" count="6" type="stmt"/>
            <line num="120" count="6" type="stmt"/>
            <line num="125" count="6" type="stmt"/>
            <line num="126" count="6" type="stmt"/>
            <line num="131" count="6" type="stmt"/>
            <line num="139" count="6" type="stmt"/>
            <line num="147" count="6" type="stmt"/>
            <line num="150" count="6" type="stmt"/>
            <line num="153" count="6" type="stmt"/>
            <line num="156" count="6" type="stmt"/>
            <line num="161" count="6" type="stmt"/>
            <line num="163" count="6" type="stmt"/>
            <line num="165" count="6" type="stmt"/>
            <line num="167" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="testBond() : void" num="170" testsuccess="true" count="2" testduration="18.928" type="method"/>
            <line num="175" count="2" type="stmt"/>
            <line num="176" count="2" type="stmt"/>
            <line num="178" count="2" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line falsecount="2" truecount="82" num="179" type="cond"/>
            <line num="180" count="82" type="stmt"/>
            <line num="181" count="82" type="stmt"/>
            <line num="184" count="82" type="stmt"/>
            <line num="187" count="82" type="stmt"/>
            <line num="188" count="82" type="stmt"/>
            <line num="191" count="82" type="stmt"/>
            <line num="193" count="82" type="stmt"/>
            <line num="194" count="82" type="stmt"/>
            <line falsecount="82" truecount="1640" num="194" type="cond"/>
            <line num="195" count="1640" type="stmt"/>
            <line num="198" count="82" type="stmt"/>
            <line num="201" count="82" type="stmt"/>
            <line num="202" count="82" type="stmt"/>
            <line num="205" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwaption() : void" num="208" testsuccess="true" count="2" testduration="24.609" type="method"/>
            <line num="213" count="2" type="stmt"/>
            <line num="214" count="2" type="stmt"/>
            <line num="216" count="2" type="stmt"/>
            <line falsecount="2" truecount="60" num="216" type="cond"/>
            <line num="218" count="60" type="stmt"/>
            <line num="219" count="60" type="stmt"/>
            <line num="221" count="60" type="stmt"/>
            <line num="225" count="60" type="stmt"/>
            <line num="226" count="60" type="stmt"/>
            <line num="227" count="60" type="stmt"/>
            <line num="228" count="60" type="stmt"/>
            <line num="230" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="230" type="cond"/>
            <line num="231" count="300" type="stmt"/>
            <line num="232" count="300" type="stmt"/>
            <line num="233" count="300" type="stmt"/>
            <line num="235" count="60" type="stmt"/>
            <line num="238" count="60" type="stmt"/>
            <line num="241" count="60" type="stmt"/>
            <line num="242" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="242" type="cond"/>
            <line num="243" count="300" type="stmt"/>
            <line num="246" count="60" type="stmt"/>
            <line num="247" count="60" type="stmt"/>
            <line num="248" count="60" type="stmt"/>
            <line num="251" count="60" type="stmt"/>
            <line num="252" count="60" type="stmt"/>
            <line num="255" count="60" type="stmt"/>
            <line num="256" count="60" type="stmt"/>
            <line num="259" count="60" type="stmt"/>
            <line num="260" count="60" type="stmt"/>
            <line num="263" count="60" type="stmt"/>
            <line num="264" count="60" type="stmt"/>
            <line num="267" count="60" type="stmt"/>
            <line num="268" count="60" type="stmt"/>
            <line num="270" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwap() : void" num="273" testsuccess="true" count="2" testduration="18.866" type="method"/>
            <line num="278" count="2" type="stmt"/>
            <line num="279" count="2" type="stmt"/>
            <line num="281" count="2" type="stmt"/>
            <line num="283" count="2" type="stmt"/>
            <line num="284" count="2" type="stmt"/>
            <line num="285" count="2" type="stmt"/>
            <line num="286" count="2" type="stmt"/>
            <line num="288" count="2" type="stmt"/>
            <line falsecount="2" truecount="60" num="288" type="cond"/>
            <line num="290" count="60" type="stmt"/>
            <line num="291" count="60" type="stmt"/>
            <line num="293" count="60" type="stmt"/>
            <line num="297" count="60" type="stmt"/>
            <line num="298" count="60" type="stmt"/>
            <line num="299" count="60" type="stmt"/>
            <line num="300" count="60" type="stmt"/>
            <line num="302" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="302" type="cond"/>
            <line num="303" count="300" type="stmt"/>
            <line num="304" count="300" type="stmt"/>
            <line num="305" count="300" type="stmt"/>
            <line num="307" count="60" type="stmt"/>
            <line num="310" count="60" type="stmt"/>
            <line num="313" count="60" type="stmt"/>
            <line num="314" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="314" type="cond"/>
            <line num="315" count="300" type="stmt"/>
            <line num="318" count="60" type="stmt"/>
            <line num="319" count="60" type="stmt"/>
            <line num="320" count="60" type="stmt"/>
            <line num="321" count="60" type="stmt"/>
            <line num="323" count="60" type="stmt"/>
            <line num="324" count="60" type="stmt"/>
            <line num="325" count="60" type="stmt"/>
            <line num="326" count="60" type="stmt"/>
            <line num="329" count="60" type="stmt"/>
            <line num="330" count="60" type="stmt"/>
            <line num="331" count="60" type="stmt"/>
            <line num="332" count="60" type="stmt"/>
            <line num="333" count="60" type="stmt"/>
            <line num="336" count="60" type="stmt"/>
            <line num="337" count="60" type="stmt"/>
            <line num="338" count="60" type="stmt"/>
            <line num="339" count="60" type="stmt"/>
            <line num="340" count="60" type="stmt"/>
            <line num="343" count="60" type="stmt"/>
            <line num="344" count="60" type="stmt"/>
            <line num="347" count="2" type="stmt"/>
            <line num="348" count="2" type="stmt"/>
            <line num="349" count="2" type="stmt"/>
            <line complexity="3" visibility="private" signature="getParSwaprate(LIBORModelMonteCarloSimulationModel,double[]) : double" num="352" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="363" type="cond"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="372" type="cond"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="flexiCapTest(LIBORModelMonteCarloSimulationModel) : void" num="383" count="0" type="method"/>
            <line num="387" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="407" type="cond"/>
            <line num="409" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/products/SimpleCappedFlooredFloatingRateBondTest.java" name="SimpleCappedFlooredFloatingRateBondTest.java">
            <metrics coveredelements="63" coveredconditionals="10" complexity="9" loc="210" coveredmethods="4" methods="4" elements="63" classes="1" ncloc="127" statements="49" conditionals="10" coveredstatements="49"/>
            <class name="SimpleCappedFlooredFloatingRateBondTest">
               <metrics coveredelements="63" complexity="9" methods="4" testruns="4" statements="49" coveredconditionals="10" coveredmethods="4" elements="63" testfailures="0" testduration="183.58100000000002" conditionals="10" coveredstatements="49" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="50" count="4" type="method"/>
            <line num="53" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleCappedFlooredFloatingRateBondTest(Measure)" num="62" count="4" type="method"/>
            <line num="64" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="test() : void" num="67" count="4" type="method"/>
            <line num="73" count="4" type="stmt"/>
            <line num="78" count="4" type="stmt"/>
            <line num="79" count="4" type="stmt"/>
            <line num="80" count="4" type="stmt"/>
            <line num="82" count="4" type="stmt"/>
            <line num="83" count="4" type="stmt"/>
            <line num="84" count="4" type="stmt"/>
            <line num="86" count="4" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
            <line num="90" count="4" type="stmt"/>
            <line num="92" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="92" type="cond"/>
            <line num="93" count="2" type="stmt"/>
            <line num="95" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="95" type="cond"/>
            <line num="96" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(int,Measure) : LIBORModelMonteCarloSimulationModel" num="100" count="4" type="method"/>
            <line num="102" count="4" type="stmt"/>
            <line num="105" count="4" type="stmt"/>
            <line num="122" count="4" type="stmt"/>
            <line num="125" count="4" type="stmt"/>
            <line num="130" count="4" type="stmt"/>
            <line num="131" count="4" type="stmt"/>
            <line num="132" count="4" type="stmt"/>
            <line num="137" count="4" type="stmt"/>
            <line num="138" count="4" type="stmt"/>
            <line num="140" count="4" type="stmt"/>
            <line num="145" count="4" type="stmt"/>
            <line num="146" count="4" type="stmt"/>
            <line falsecount="4" truecount="320" num="146" type="cond"/>
            <line num="147" count="320" type="stmt"/>
            <line falsecount="320" truecount="25600" num="147" type="cond"/>
            <line num="149" count="25600" type="stmt"/>
            <line num="150" count="25600" type="stmt"/>
            <line num="151" count="25600" type="stmt"/>
            <line num="153" count="25600" type="stmt"/>
            <line num="154" count="25600" type="stmt"/>
            <line falsecount="12640" truecount="12960" num="154" type="cond"/>
            <line num="155" count="12960" type="stmt"/>
            <line num="157" count="12640" type="stmt"/>
            <line num="161" count="25600" type="stmt"/>
            <line num="164" count="4" type="stmt"/>
            <line num="169" count="4" type="stmt"/>
            <line num="170" count="4" type="stmt"/>
            <line num="171" count="4" type="stmt"/>
            <line num="179" count="4" type="stmt"/>
            <line num="187" count="4" type="stmt"/>
            <line num="190" count="4" type="stmt"/>
            <line num="193" count="4" type="stmt"/>
            <line num="196" count="4" type="stmt"/>
            <line num="201" count="4" type="stmt"/>
            <line num="204" count="4" type="stmt"/>
            <line num="208" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/products/SwapLegTest.java" name="SwapLegTest.java">
            <metrics coveredelements="182" coveredconditionals="6" complexity="10" loc="481" coveredmethods="7" methods="7" elements="182" classes="1" ncloc="260" statements="169" conditionals="6" coveredstatements="169"/>
            <class name="SwapLegTest">
               <metrics coveredelements="182" complexity="10" methods="7" testruns="10" statements="169" coveredconditionals="6" coveredmethods="7" elements="182" testfailures="0" testduration="323.108" conditionals="6" coveredstatements="169" testpasses="10"/>
            </class>
            <line complexity="1" visibility="public" signature="testFloatLeg() : void" num="62" testsuccess="true" count="2" testduration="32.653" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFixLeg() : void" num="120" testsuccess="true" count="2" testduration="32.151" type="method"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="158" count="2" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line num="165" count="2" type="stmt"/>
            <line num="166" count="2" type="stmt"/>
            <line num="168" count="2" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCMSFloatLeg() : void" num="173" testsuccess="true" count="2" testduration="34.671" type="method"/>
            <line num="179" count="2" type="stmt"/>
            <line num="180" count="2" type="stmt"/>
            <line num="181" count="2" type="stmt"/>
            <line num="182" count="2" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
            <line num="184" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="191" count="2" type="stmt"/>
            <line num="192" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line num="195" count="2" type="stmt"/>
            <line num="200" count="2" type="stmt"/>
            <line num="201" count="2" type="stmt"/>
            <line num="202" count="2" type="stmt"/>
            <line num="203" count="2" type="stmt"/>
            <line num="208" count="2" type="stmt"/>
            <line num="209" count="2" type="stmt"/>
            <line num="210" count="2" type="stmt"/>
            <line num="215" count="2" type="stmt"/>
            <line num="216" count="2" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line num="222" count="2" type="stmt"/>
            <line num="223" count="2" type="stmt"/>
            <line num="224" count="2" type="stmt"/>
            <line num="225" count="2" type="stmt"/>
            <line num="227" count="2" type="stmt"/>
            <line num="229" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCMSSpreadLeg() : void" num="237" testsuccess="true" count="2" testduration="34.22" type="method"/>
            <line num="243" count="2" type="stmt"/>
            <line num="244" count="2" type="stmt"/>
            <line num="245" count="2" type="stmt"/>
            <line num="246" count="2" type="stmt"/>
            <line num="247" count="2" type="stmt"/>
            <line num="248" count="2" type="stmt"/>
            <line num="250" count="2" type="stmt"/>
            <line num="255" count="2" type="stmt"/>
            <line num="257" count="2" type="stmt"/>
            <line num="258" count="2" type="stmt"/>
            <line num="259" count="2" type="stmt"/>
            <line num="260" count="2" type="stmt"/>
            <line num="262" count="2" type="stmt"/>
            <line num="264" count="2" type="stmt"/>
            <line num="269" count="2" type="stmt"/>
            <line num="270" count="2" type="stmt"/>
            <line num="271" count="2" type="stmt"/>
            <line num="272" count="2" type="stmt"/>
            <line num="277" count="2" type="stmt"/>
            <line num="278" count="2" type="stmt"/>
            <line num="279" count="2" type="stmt"/>
            <line num="284" count="2" type="stmt"/>
            <line num="285" count="2" type="stmt"/>
            <line num="286" count="2" type="stmt"/>
            <line num="291" count="2" type="stmt"/>
            <line num="292" count="2" type="stmt"/>
            <line num="293" count="2" type="stmt"/>
            <line num="294" count="2" type="stmt"/>
            <line num="296" count="2" type="stmt"/>
            <line num="298" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLIBORInArrearsFloatLeg() : void" num="301" testsuccess="true" count="2" testduration="31.498" type="method"/>
            <line num="307" count="2" type="stmt"/>
            <line num="308" count="2" type="stmt"/>
            <line num="309" count="2" type="stmt"/>
            <line num="310" count="2" type="stmt"/>
            <line num="311" count="2" type="stmt"/>
            <line num="312" count="2" type="stmt"/>
            <line num="314" count="2" type="stmt"/>
            <line num="319" count="2" type="stmt"/>
            <line num="320" count="2" type="stmt"/>
            <line num="321" count="2" type="stmt"/>
            <line num="322" count="2" type="stmt"/>
            <line num="324" count="2" type="stmt"/>
            <line num="329" count="2" type="stmt"/>
            <line num="330" count="2" type="stmt"/>
            <line num="331" count="2" type="stmt"/>
            <line num="332" count="2" type="stmt"/>
            <line num="337" count="2" type="stmt"/>
            <line num="338" count="2" type="stmt"/>
            <line num="339" count="2" type="stmt"/>
            <line num="344" count="2" type="stmt"/>
            <line num="345" count="2" type="stmt"/>
            <line num="346" count="2" type="stmt"/>
            <line num="351" count="2" type="stmt"/>
            <line num="352" count="2" type="stmt"/>
            <line num="353" count="2" type="stmt"/>
            <line num="354" count="2" type="stmt"/>
            <line num="356" count="2" type="stmt"/>
            <line num="358" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="createMultiCurveLIBORMarketModel(int,int,double) : LIBORModelMonteCarloSimulationModel" num="361" count="10" type="method"/>
            <line num="363" count="10" type="stmt"/>
            <line num="367" count="10" type="stmt"/>
            <line num="384" count="10" type="stmt"/>
            <line num="390" count="10" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(int,int,double,DiscountCurve,ForwardCurve) : LIBORModelMonteCarloSimulationModel" num="393" count="10" type="method"/>
            <line num="396" count="10" type="stmt"/>
            <line num="401" count="10" type="stmt"/>
            <line num="402" count="10" type="stmt"/>
            <line num="403" count="10" type="stmt"/>
            <line num="408" count="10" type="stmt"/>
            <line num="409" count="10" type="stmt"/>
            <line num="411" count="10" type="stmt"/>
            <line num="416" count="10" type="stmt"/>
            <line num="417" count="10" type="stmt"/>
            <line falsecount="10" truecount="800" num="417" type="cond"/>
            <line num="418" count="800" type="stmt"/>
            <line falsecount="800" truecount="64000" num="418" type="cond"/>
            <line num="420" count="64000" type="stmt"/>
            <line num="421" count="64000" type="stmt"/>
            <line num="422" count="64000" type="stmt"/>
            <line num="424" count="64000" type="stmt"/>
            <line num="425" count="64000" type="stmt"/>
            <line falsecount="31600" truecount="32400" num="425" type="cond"/>
            <line num="426" count="32400" type="stmt"/>
            <line num="428" count="31600" type="stmt"/>
            <line num="432" count="64000" type="stmt"/>
            <line num="435" count="10" type="stmt"/>
            <line num="440" count="10" type="stmt"/>
            <line num="448" count="10" type="stmt"/>
            <line num="456" count="10" type="stmt"/>
            <line num="459" count="10" type="stmt"/>
            <line num="462" count="10" type="stmt"/>
            <line num="465" count="10" type="stmt"/>
            <line num="470" count="10" type="stmt"/>
            <line num="473" count="10" type="stmt"/>
            <line num="479" count="10" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/products/SwaptionAnalyticApproximationTest.java" name="SwaptionAnalyticApproximationTest.java">
            <metrics coveredelements="96" coveredconditionals="12" complexity="12" loc="263" coveredmethods="6" methods="6" elements="96" classes="1" ncloc="154" statements="78" conditionals="12" coveredstatements="78"/>
            <class name="SwaptionAnalyticApproximationTest">
               <metrics coveredelements="96" complexity="12" methods="6" testruns="4" statements="78" coveredconditionals="12" coveredmethods="6" elements="96" testfailures="0" testduration="66.337" conditionals="12" coveredstatements="78" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="testSingleCurveModel() : void" num="49" testsuccess="true" count="2" testduration="17.25" type="method"/>
            <line num="51" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMultiCurveModel() : void" num="58" testsuccess="true" count="2" testduration="17.407" type="method"/>
            <line num="60" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="testModel(LIBORModelMonteCarloSimulationModel,boolean) : void" num="67" count="4" type="method"/>
            <line num="71" count="4" type="stmt"/>
            <line num="72" count="4" type="stmt"/>
            <line num="74" count="4" type="stmt"/>
            <line num="75" count="4" type="stmt"/>
            <line num="76" count="4" type="stmt"/>
            <line falsecount="4" truecount="120" num="76" type="cond"/>
            <line num="78" count="120" type="stmt"/>
            <line num="79" count="120" type="stmt"/>
            <line num="81" count="120" type="stmt"/>
            <line num="85" count="120" type="stmt"/>
            <line num="86" count="120" type="stmt"/>
            <line num="87" count="120" type="stmt"/>
            <line num="88" count="120" type="stmt"/>
            <line num="90" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="90" type="cond"/>
            <line num="91" count="600" type="stmt"/>
            <line num="92" count="600" type="stmt"/>
            <line num="93" count="600" type="stmt"/>
            <line num="95" count="120" type="stmt"/>
            <line num="98" count="120" type="stmt"/>
            <line num="101" count="120" type="stmt"/>
            <line num="102" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="102" type="cond"/>
            <line num="103" count="600" type="stmt"/>
            <line num="107" count="120" type="stmt"/>
            <line num="108" count="120" type="stmt"/>
            <line num="109" count="120" type="stmt"/>
            <line num="112" count="120" type="stmt"/>
            <line num="113" count="120" type="stmt"/>
            <line num="114" count="120" type="stmt"/>
            <line num="117" count="120" type="stmt"/>
            <line num="118" count="120" type="stmt"/>
            <line num="119" count="120" type="stmt"/>
            <line num="122" count="120" type="stmt"/>
            <line num="123" count="120" type="stmt"/>
            <line num="125" count="120" type="stmt"/>
            <line num="126" count="120" type="stmt"/>
            <line num="128" count="120" type="stmt"/>
            <line num="129" count="120" type="stmt"/>
            <line num="132" count="4" type="stmt"/>
            <line num="137" count="4" type="stmt"/>
            <line num="138" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="createSingleCurveLIBORMarketModel(int,int,double) : LIBORModelMonteCarloSimulationModel" num="141" count="2" type="method"/>
            <line num="144" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="createMultiCurveLIBORMarketModel(int,int,double) : LIBORModelMonteCarloSimulationModel" num="157" count="2" type="method"/>
            <line num="160" count="2" type="stmt"/>
            <line num="168" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(int,int,double,DiscountCurve,ForwardCurve) : LIBORModelMonteCarloSimulationModel" num="177" count="4" type="method"/>
            <line num="183" count="4" type="stmt"/>
            <line num="184" count="4" type="stmt"/>
            <line num="185" count="4" type="stmt"/>
            <line num="190" count="4" type="stmt"/>
            <line num="191" count="4" type="stmt"/>
            <line num="193" count="4" type="stmt"/>
            <line num="198" count="4" type="stmt"/>
            <line num="199" count="4" type="stmt"/>
            <line falsecount="4" truecount="160" num="199" type="cond"/>
            <line num="200" count="160" type="stmt"/>
            <line falsecount="160" truecount="6400" num="200" type="cond"/>
            <line num="202" count="6400" type="stmt"/>
            <line num="203" count="6400" type="stmt"/>
            <line num="204" count="6400" type="stmt"/>
            <line num="206" count="6400" type="stmt"/>
            <line num="207" count="6400" type="stmt"/>
            <line falsecount="3120" truecount="3280" num="207" type="cond"/>
            <line num="208" count="3280" type="stmt"/>
            <line num="210" count="3120" type="stmt"/>
            <line num="214" count="6400" type="stmt"/>
            <line num="217" count="4" type="stmt"/>
            <line num="222" count="4" type="stmt"/>
            <line num="230" count="4" type="stmt"/>
            <line num="238" count="4" type="stmt"/>
            <line num="241" count="4" type="stmt"/>
            <line num="244" count="4" type="stmt"/>
            <line num="247" count="4" type="stmt"/>
            <line num="252" count="4" type="stmt"/>
            <line num="255" count="4" type="stmt"/>
            <line num="261" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/products/SwaptionNormalTest.java" name="SwaptionNormalTest.java">
            <metrics coveredelements="76" coveredconditionals="12" complexity="9" loc="212" coveredmethods="3" methods="3" elements="76" classes="1" ncloc="119" statements="61" conditionals="12" coveredstatements="61"/>
            <class name="SwaptionNormalTest">
               <metrics coveredelements="76" complexity="9" methods="3" testruns="2" statements="61" coveredconditionals="12" coveredmethods="3" elements="76" testfailures="0" testduration="57.125" conditionals="12" coveredstatements="61" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionNormalTest()" num="50" count="2" type="method"/>
            <line num="51" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwaption() : void" num="54" testsuccess="true" count="2" testduration="31.563" type="method"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line falsecount="2" truecount="60" num="63" type="cond"/>
            <line num="64" count="60" type="stmt"/>
            <line num="65" count="60" type="stmt"/>
            <line num="67" count="60" type="stmt"/>
            <line num="71" count="60" type="stmt"/>
            <line num="72" count="60" type="stmt"/>
            <line num="73" count="60" type="stmt"/>
            <line num="74" count="60" type="stmt"/>
            <line num="77" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="77" type="cond"/>
            <line num="78" count="300" type="stmt"/>
            <line num="79" count="300" type="stmt"/>
            <line num="80" count="300" type="stmt"/>
            <line num="82" count="60" type="stmt"/>
            <line num="85" count="60" type="stmt"/>
            <line num="88" count="60" type="stmt"/>
            <line num="89" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="89" type="cond"/>
            <line num="90" count="300" type="stmt"/>
            <line num="95" count="60" type="stmt"/>
            <line num="96" count="60" type="stmt"/>
            <line num="97" count="60" type="stmt"/>
            <line num="102" count="60" type="stmt"/>
            <line num="104" count="60" type="stmt"/>
            <line num="108" count="60" type="stmt"/>
            <line num="109" count="60" type="stmt"/>
            <line num="111" count="60" type="stmt"/>
            <line num="112" count="60" type="stmt"/>
            <line num="115" count="60" type="stmt"/>
            <line num="116" count="60" type="stmt"/>
            <line num="118" count="60" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(int,int,double) : LIBORModelMonteCarloSimulationModel" num="122" count="2" type="method"/>
            <line num="127" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line falsecount="2" truecount="80" num="151" type="cond"/>
            <line num="152" count="80" type="stmt"/>
            <line falsecount="80" truecount="3200" num="152" type="cond"/>
            <line num="154" count="3200" type="stmt"/>
            <line num="155" count="3200" type="stmt"/>
            <line num="156" count="3200" type="stmt"/>
            <line num="158" count="3200" type="stmt"/>
            <line num="159" count="3200" type="stmt"/>
            <line falsecount="1560" truecount="1640" num="159" type="cond"/>
            <line num="160" count="1640" type="stmt"/>
            <line num="163" count="1560" type="stmt"/>
            <line num="168" count="3200" type="stmt"/>
            <line num="171" count="2" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="190" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line num="196" count="2" type="stmt"/>
            <line num="199" count="2" type="stmt"/>
            <line num="204" count="2" type="stmt"/>
            <line num="206" count="2" type="stmt"/>
            <line num="208" count="2" type="stmt"/>
            <line num="210" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.products.indices">
         <metrics coveredelements="335" complexity="34" loc="840" methods="20" classes="3" statements="298" coveredconditionals="20" coveredmethods="20" elements="338" ncloc="569" files="2" conditionals="20" coveredstatements="295"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/products/indices/LIBORIndexMultiCurveTest.java" name="LIBORIndexMultiCurveTest.java">
            <metrics coveredelements="225" coveredconditionals="8" complexity="20" loc="510" coveredmethods="14" methods="14" elements="226" classes="1" ncloc="345" statements="204" conditionals="8" coveredstatements="203"/>
            <class name="LIBORIndexMultiCurveTest">
               <metrics coveredelements="225" complexity="20" methods="14" testruns="12" statements="204" coveredconditionals="8" coveredmethods="14" elements="226" testfailures="0" testduration="1194.953" conditionals="8" coveredstatements="203" testpasses="12"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="83" count="4" type="method"/>
            <line num="90" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORIndexMultiCurveTest(Integer,String)" num="111" count="12" type="method"/>
            <line num="112" count="12" type="stmt"/>
            <line num="115" count="12" type="stmt"/>
            <line complexity="2" visibility="public" signature="testFRAMonteCarloVersusAnalytic() : void" num="118" count="12" type="method"/>
            <line num="121" count="12" type="stmt"/>
            <line num="122" count="12" type="stmt"/>
            <line num="124" count="12" type="stmt"/>
            <line falsecount="12" truecount="120" num="124" type="cond"/>
            <line num="125" count="120" type="stmt"/>
            <line num="126" count="120" type="stmt"/>
            <line num="128" count="120" type="stmt"/>
            <line num="129" count="120" type="stmt"/>
            <line num="131" count="120" type="stmt"/>
            <line num="133" count="120" type="stmt"/>
            <line num="134" count="120" type="stmt"/>
            <line num="135" count="120" type="stmt"/>
            <line num="137" count="120" type="stmt"/>
            <line num="138" count="120" type="stmt"/>
            <line num="139" count="120" type="stmt"/>
            <line num="141" count="120" type="stmt"/>
            <line num="142" count="120" type="stmt"/>
            <line num="143" count="120" type="stmt"/>
            <line num="145" count="120" type="stmt"/>
            <line num="147" count="120" type="stmt"/>
            <line num="149" count="120" type="stmt"/>
            <line num="151" count="120" type="stmt"/>
            <line num="157" count="120" type="stmt"/>
            <line num="159" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="createCurves() : AnalyticModel" num="163" count="12" type="method"/>
            <line num="169" count="12" type="stmt"/>
            <line num="174" count="12" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(String) : String" num="175" count="576" type="method"/>
            <line num="177" count="576" type="stmt"/>
            <line num="178" count="384" type="stmt"/>
            <line num="179" count="384" type="stmt"/>
            <line num="180" count="192" type="stmt"/>
            <line num="181" count="192" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="187" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="188" count="192" type="method"/>
            <line num="190" count="192" type="stmt"/>
            <line num="191" count="192" type="stmt"/>
            <line num="192" count="192" type="stmt"/>
            <line num="193" count="192" type="stmt"/>
            <line num="194" count="192" type="stmt"/>
            <line num="198" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="199" count="240" type="method"/>
            <line num="201" count="240" type="stmt"/>
            <line num="202" count="240" type="stmt"/>
            <line num="203" count="240" type="stmt"/>
            <line num="204" count="240" type="stmt"/>
            <line num="205" count="240" type="stmt"/>
            <line num="209" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String) : BiFunction&lt;String, Double, CalibrationSpec&gt;" num="210" count="180" type="method"/>
            <line num="212" count="180" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="213" count="180" type="method"/>
            <line num="215" count="180" type="stmt"/>
            <line num="216" count="180" type="stmt"/>
            <line num="217" count="180" type="stmt"/>
            <line num="218" count="180" type="stmt"/>
            <line num="219" count="180" type="stmt"/>
            <line num="225" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String) : BiFunction&lt;String, Double, CalibrationSpec&gt;" num="226" count="192" type="method"/>
            <line num="228" count="192" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="229" count="192" type="method"/>
            <line num="231" count="192" type="stmt"/>
            <line num="233" count="192" type="stmt"/>
            <line num="234" count="192" type="stmt"/>
            <line num="235" count="192" type="stmt"/>
            <line num="236" count="192" type="stmt"/>
            <line num="237" count="192" type="stmt"/>
            <line num="238" count="192" type="stmt"/>
            <line num="244" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,String) : BiFunction&lt;String, Double, CalibrationSpec&gt;" num="245" count="192" type="method"/>
            <line num="247" count="192" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="248" count="192" type="method"/>
            <line num="250" count="192" type="stmt"/>
            <line num="251" count="192" type="stmt"/>
            <line num="253" count="192" type="stmt"/>
            <line num="254" count="192" type="stmt"/>
            <line num="256" count="192" type="stmt"/>
            <line num="257" count="192" type="stmt"/>
            <line num="258" count="192" type="stmt"/>
            <line num="260" count="192" type="stmt"/>
            <line num="261" count="192" type="stmt"/>
            <line num="270" count="12" type="stmt"/>
            <line num="271" count="12" type="stmt"/>
            <line num="272" count="12" type="stmt"/>
            <line num="274" count="12" type="stmt"/>
            <line num="275" count="12" type="stmt"/>
            <line num="276" count="12" type="stmt"/>
            <line num="277" count="12" type="stmt"/>
            <line num="279" count="12" type="stmt"/>
            <line num="281" count="12" type="stmt"/>
            <line num="286" count="12" type="stmt"/>
            <line num="287" count="12" type="stmt"/>
            <line num="288" count="12" type="stmt"/>
            <line num="289" count="12" type="stmt"/>
            <line num="290" count="12" type="stmt"/>
            <line num="291" count="12" type="stmt"/>
            <line num="292" count="12" type="stmt"/>
            <line num="293" count="12" type="stmt"/>
            <line num="294" count="12" type="stmt"/>
            <line num="295" count="12" type="stmt"/>
            <line num="296" count="12" type="stmt"/>
            <line num="297" count="12" type="stmt"/>
            <line num="298" count="12" type="stmt"/>
            <line num="299" count="12" type="stmt"/>
            <line num="300" count="12" type="stmt"/>
            <line num="301" count="12" type="stmt"/>
            <line num="306" count="12" type="stmt"/>
            <line num="307" count="12" type="stmt"/>
            <line num="308" count="12" type="stmt"/>
            <line num="309" count="12" type="stmt"/>
            <line num="310" count="12" type="stmt"/>
            <line num="311" count="12" type="stmt"/>
            <line num="312" count="12" type="stmt"/>
            <line num="313" count="12" type="stmt"/>
            <line num="314" count="12" type="stmt"/>
            <line num="315" count="12" type="stmt"/>
            <line num="316" count="12" type="stmt"/>
            <line num="317" count="12" type="stmt"/>
            <line num="318" count="12" type="stmt"/>
            <line num="319" count="12" type="stmt"/>
            <line num="320" count="12" type="stmt"/>
            <line num="321" count="12" type="stmt"/>
            <line num="322" count="12" type="stmt"/>
            <line num="323" count="12" type="stmt"/>
            <line num="324" count="12" type="stmt"/>
            <line num="325" count="12" type="stmt"/>
            <line num="330" count="12" type="stmt"/>
            <line num="331" count="12" type="stmt"/>
            <line num="332" count="12" type="stmt"/>
            <line num="333" count="12" type="stmt"/>
            <line num="334" count="12" type="stmt"/>
            <line num="335" count="12" type="stmt"/>
            <line num="336" count="12" type="stmt"/>
            <line num="337" count="12" type="stmt"/>
            <line num="342" count="12" type="stmt"/>
            <line num="343" count="12" type="stmt"/>
            <line num="344" count="12" type="stmt"/>
            <line num="345" count="12" type="stmt"/>
            <line num="346" count="12" type="stmt"/>
            <line num="347" count="12" type="stmt"/>
            <line num="348" count="12" type="stmt"/>
            <line num="349" count="12" type="stmt"/>
            <line num="350" count="12" type="stmt"/>
            <line num="351" count="12" type="stmt"/>
            <line num="352" count="12" type="stmt"/>
            <line num="353" count="12" type="stmt"/>
            <line num="354" count="12" type="stmt"/>
            <line num="355" count="12" type="stmt"/>
            <line num="356" count="12" type="stmt"/>
            <line num="357" count="12" type="stmt"/>
            <line num="363" count="12" type="stmt"/>
            <line num="364" count="12" type="stmt"/>
            <line num="365" count="12" type="stmt"/>
            <line num="366" count="12" type="stmt"/>
            <line num="367" count="12" type="stmt"/>
            <line num="368" count="12" type="stmt"/>
            <line num="369" count="12" type="stmt"/>
            <line num="375" count="12" type="stmt"/>
            <line num="376" count="12" type="stmt"/>
            <line num="377" count="12" type="stmt"/>
            <line num="378" count="12" type="stmt"/>
            <line num="379" count="12" type="stmt"/>
            <line num="380" count="12" type="stmt"/>
            <line num="381" count="12" type="stmt"/>
            <line num="382" count="12" type="stmt"/>
            <line num="383" count="12" type="stmt"/>
            <line num="384" count="12" type="stmt"/>
            <line num="385" count="12" type="stmt"/>
            <line num="386" count="12" type="stmt"/>
            <line num="387" count="12" type="stmt"/>
            <line num="388" count="12" type="stmt"/>
            <line num="389" count="12" type="stmt"/>
            <line num="390" count="12" type="stmt"/>
            <line num="395" count="12" type="stmt"/>
            <line num="400" count="12" type="stmt"/>
            <line num="402" count="12" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(String,Measure,int,int,double) : LIBORModelMonteCarloSimulationModel" num="405" count="12" type="method"/>
            <line num="413" count="12" type="stmt"/>
            <line num="414" count="12" type="stmt"/>
            <line num="415" count="12" type="stmt"/>
            <line num="417" count="12" type="stmt"/>
            <line num="419" count="12" type="stmt"/>
            <line num="424" count="12" type="stmt"/>
            <line num="426" count="12" type="stmt"/>
            <line num="427" count="12" type="stmt"/>
            <line num="429" count="12" type="stmt"/>
            <line num="430" count="12" type="stmt"/>
            <line num="432" count="12" type="stmt"/>
            <line num="433" count="12" type="stmt"/>
            <line num="438" count="12" type="stmt"/>
            <line num="439" count="12" type="stmt"/>
            <line num="441" count="12" type="stmt"/>
            <line num="446" count="12" type="stmt"/>
            <line num="447" count="12" type="stmt"/>
            <line falsecount="12" truecount="480" num="447" type="cond"/>
            <line num="448" count="480" type="stmt"/>
            <line falsecount="480" truecount="19200" num="448" type="cond"/>
            <line num="450" count="19200" type="stmt"/>
            <line num="451" count="19200" type="stmt"/>
            <line num="452" count="19200" type="stmt"/>
            <line num="454" count="19200" type="stmt"/>
            <line num="455" count="19200" type="stmt"/>
            <line falsecount="9360" truecount="9840" num="455" type="cond"/>
            <line num="456" count="9840" type="stmt"/>
            <line num="458" count="9360" type="stmt"/>
            <line num="462" count="19200" type="stmt"/>
            <line num="465" count="12" type="stmt"/>
            <line num="470" count="12" type="stmt"/>
            <line num="478" count="12" type="stmt"/>
            <line num="486" count="12" type="stmt"/>
            <line num="489" count="12" type="stmt"/>
            <line num="492" count="12" type="stmt"/>
            <line num="495" count="12" type="stmt"/>
            <line num="500" count="12" type="stmt"/>
            <line num="502" count="12" type="stmt"/>
            <line num="508" count="12" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/products/indices/LIBORIndexTest.java" name="LIBORIndexTest.java">
            <metrics coveredelements="110" coveredconditionals="12" complexity="14" loc="330" coveredmethods="6" methods="6" elements="112" classes="2" ncloc="224" statements="94" conditionals="12" coveredstatements="92"/>
            <class name="LIBORIndexTest">
               <metrics coveredelements="110" complexity="14" methods="6" testruns="120" statements="94" coveredconditionals="12" coveredmethods="6" elements="112" testfailures="0" testduration="5503.5549999999985" conditionals="12" coveredstatements="92" testpasses="120"/>
            </class>
            <class name="LIBORIndexTest.CurveSetup">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="73" count="4" type="method"/>
            <line num="76" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORIndexTest(Integer,CurveSetup)" num="109" count="120" type="method"/>
            <line num="112" count="120" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSinglePeriods() : void" num="115" count="40" type="method"/>
            <line num="118" count="40" type="stmt"/>
            <line num="119" count="40" type="stmt"/>
            <line num="121" count="40" type="stmt"/>
            <line falsecount="40" truecount="400" num="121" type="cond"/>
            <line num="122" count="400" type="stmt"/>
            <line num="123" count="400" type="stmt"/>
            <line num="124" count="400" type="stmt"/>
            <line num="126" count="400" type="stmt"/>
            <line num="127" count="400" type="stmt"/>
            <line num="128" count="400" type="stmt"/>
            <line num="130" count="400" type="stmt"/>
            <line num="132" count="400" type="stmt"/>
            <line num="136" count="400" type="stmt"/>
            <line num="138" count="40" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMultiPeriodFloater() : void" num="141" count="40" type="method"/>
            <line num="144" count="40" type="stmt"/>
            <line num="145" count="40" type="stmt"/>
            <line num="146" count="40" type="stmt"/>
            <line falsecount="40" truecount="400" num="146" type="cond"/>
            <line num="147" count="400" type="stmt"/>
            <line num="148" count="400" type="stmt"/>
            <line num="149" count="400" type="stmt"/>
            <line num="151" count="400" type="stmt"/>
            <line num="152" count="400" type="stmt"/>
            <line num="153" count="400" type="stmt"/>
            <line num="155" count="40" type="stmt"/>
            <line num="156" count="40" type="stmt"/>
            <line num="158" count="40" type="stmt"/>
            <line num="160" count="40" type="stmt"/>
            <line num="161" count="40" type="stmt"/>
            <line num="165" count="40" type="stmt"/>
            <line complexity="2" visibility="public" signature="testUnalignedPeriods() : void" num="168" count="40" type="method"/>
            <line num="171" count="40" type="stmt"/>
            <line num="172" count="40" type="stmt"/>
            <line num="174" count="40" type="stmt"/>
            <line num="176" count="40" type="stmt"/>
            <line falsecount="40" truecount="40" num="176" type="cond"/>
            <line num="177" count="40" type="stmt"/>
            <line num="178" count="40" type="stmt"/>
            <line num="179" count="40" type="stmt"/>
            <line num="182" count="40" type="stmt"/>
            <line num="183" count="40" type="stmt"/>
            <line num="185" count="40" type="stmt"/>
            <line num="186" count="40" type="stmt"/>
            <line num="187" count="40" type="stmt"/>
            <line num="189" count="40" type="stmt"/>
            <line num="190" count="40" type="stmt"/>
            <line num="192" count="40" type="stmt"/>
            <line num="194" count="40" type="stmt"/>
            <line num="198" count="40" type="stmt"/>
            <line complexity="6" visibility="public" signature="createLIBORMarketModel(CurveSetup,Measure,int,int,double) : LIBORModelMonteCarloSimulationModel" num="201" count="120" type="method"/>
            <line num="209" count="120" type="stmt"/>
            <line num="210" count="120" type="stmt"/>
            <line num="211" count="120" type="stmt"/>
            <line num="213" count="120" type="stmt"/>
            <line num="215" count="120" type="stmt"/>
            <line num="220" count="120" type="stmt"/>
            <line num="221" count="120" type="stmt"/>
            <line num="222" count="120" type="stmt"/>
            <line num="223" count="60" type="stmt"/>
            <line num="225" count="60" type="stmt"/>
            <line num="227" count="60" type="stmt"/>
            <line num="228" count="60" type="stmt"/>
            <line num="229" count="60" type="stmt"/>
            <line num="230" count="60" type="stmt"/>
            <line num="232" count="60" type="stmt"/>
            <line num="233" count="60" type="stmt"/>
            <line num="235" count="60" type="stmt"/>
            <line num="238" count="60" type="stmt"/>
            <line num="246" count="60" type="stmt"/>
            <line num="247" count="60" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="253" count="120" type="stmt"/>
            <line num="257" count="120" type="stmt"/>
            <line num="258" count="120" type="stmt"/>
            <line num="260" count="120" type="stmt"/>
            <line num="265" count="120" type="stmt"/>
            <line num="266" count="120" type="stmt"/>
            <line falsecount="120" truecount="4800" num="266" type="cond"/>
            <line num="267" count="4800" type="stmt"/>
            <line falsecount="4800" truecount="192000" num="267" type="cond"/>
            <line num="269" count="192000" type="stmt"/>
            <line num="270" count="192000" type="stmt"/>
            <line num="271" count="192000" type="stmt"/>
            <line num="273" count="192000" type="stmt"/>
            <line num="274" count="192000" type="stmt"/>
            <line falsecount="93600" truecount="98400" num="274" type="cond"/>
            <line num="275" count="98400" type="stmt"/>
            <line num="277" count="93600" type="stmt"/>
            <line num="281" count="192000" type="stmt"/>
            <line num="284" count="120" type="stmt"/>
            <line num="289" count="120" type="stmt"/>
            <line num="297" count="120" type="stmt"/>
            <line num="305" count="120" type="stmt"/>
            <line num="308" count="120" type="stmt"/>
            <line num="311" count="120" type="stmt"/>
            <line num="314" count="120" type="stmt"/>
            <line num="319" count="120" type="stmt"/>
            <line num="322" count="120" type="stmt"/>
            <line num="328" count="120" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling.descriptor">
         <metrics coveredelements="211" complexity="18" loc="879" methods="15" classes="5" statements="190" coveredconditionals="6" coveredmethods="15" elements="211" ncloc="456" files="5" conditionals="6" coveredstatements="190"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/modelling/descriptor/AssetBlackScholesModelDescriptorTest.java" name="AssetBlackScholesModelDescriptorTest.java">
            <metrics coveredelements="41" coveredconditionals="0" complexity="3" loc="179" coveredmethods="3" methods="3" elements="41" classes="1" ncloc="81" statements="38" conditionals="0" coveredstatements="38"/>
            <class name="AssetBlackScholesModelDescriptorTest">
               <metrics coveredelements="41" complexity="3" methods="3" testruns="2" statements="38" coveredconditionals="0" coveredmethods="3" elements="41" testfailures="0" testduration="21.694000000000003" conditionals="0" coveredstatements="38" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="60" testsuccess="true" count="2" testduration="14.598" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="getDiscountCurve(String,LocalDate,double) : DiscountCurve" num="153" count="4" type="method"/>
            <line num="154" count="4" type="stmt"/>
            <line num="155" count="4" type="stmt"/>
            <line num="156" count="4" type="stmt"/>
            <line num="157" count="4" type="stmt"/>
            <line num="158" count="4" type="stmt"/>
            <line num="159" count="4" type="stmt"/>
            <line num="160" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="getBronianMotion(int,double,int,int,int) : BrownianMotion" num="173" count="2" type="method"/>
            <line num="174" count="2" type="stmt"/>
            <line num="175" count="2" type="stmt"/>
            <line num="176" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/modelling/descriptor/HestonModelDescriptorTest.java" name="HestonModelDescriptorTest.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="3" loc="150" coveredmethods="3" methods="3" elements="29" classes="1" ncloc="72" statements="26" conditionals="0" coveredstatements="26"/>
            <class name="HestonModelDescriptorTest">
               <metrics coveredelements="29" complexity="3" methods="3" testruns="2" statements="26" coveredconditionals="0" coveredmethods="3" elements="29" testfailures="0" testduration="35.952" conditionals="0" coveredstatements="26" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="64" testsuccess="true" count="2" testduration="22.736" type="method"/>
            <line num="69" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="getDiscountCurve(String,LocalDate,double) : DiscountCurve" num="124" count="4" type="method"/>
            <line num="125" count="4" type="stmt"/>
            <line num="126" count="4" type="stmt"/>
            <line num="127" count="4" type="stmt"/>
            <line num="128" count="4" type="stmt"/>
            <line num="129" count="4" type="stmt"/>
            <line num="130" count="4" type="stmt"/>
            <line num="131" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="getBronianMotion(int,double,int,int,int) : BrownianMotion" num="144" count="2" type="method"/>
            <line num="145" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/modelling/descriptor/InterestRateSwapLegDescriptorTest.java" name="InterestRateSwapLegDescriptorTest.java">
            <metrics coveredelements="91" coveredconditionals="6" complexity="8" loc="302" coveredmethods="5" methods="5" elements="91" classes="1" ncloc="167" statements="80" conditionals="6" coveredstatements="80"/>
            <class name="InterestRateSwapLegDescriptorTest">
               <metrics coveredelements="91" complexity="8" methods="5" testruns="4" statements="80" coveredconditionals="6" coveredmethods="5" elements="91" testfailures="0" testduration="153.388" conditionals="6" coveredstatements="80" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="testFloatLeg() : void" num="52" testsuccess="true" count="2" testduration="49.58" type="method"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFixLeg() : void" num="124" testsuccess="true" count="2" testduration="45.802" type="method"/>
            <line num="127" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line num="167" count="2" type="stmt"/>
            <line num="168" count="2" type="stmt"/>
            <line num="173" count="2" type="stmt"/>
            <line num="178" count="2" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line num="181" count="2" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDiscountCurve() : DiscountCurveInterpolation" num="186" count="8" type="method"/>
            <line num="187" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="createForwardCurve() : ForwardCurveInterpolation" num="194" count="8" type="method"/>
            <line num="195" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(int,int,double,DiscountCurve,ForwardCurve) : LIBORModelMonteCarloSimulationModel" num="213" count="4" type="method"/>
            <line num="216" count="4" type="stmt"/>
            <line num="221" count="4" type="stmt"/>
            <line num="222" count="4" type="stmt"/>
            <line num="223" count="4" type="stmt"/>
            <line num="228" count="4" type="stmt"/>
            <line num="229" count="4" type="stmt"/>
            <line num="231" count="4" type="stmt"/>
            <line num="236" count="4" type="stmt"/>
            <line num="237" count="4" type="stmt"/>
            <line falsecount="4" truecount="320" num="237" type="cond"/>
            <line num="238" count="320" type="stmt"/>
            <line falsecount="320" truecount="25600" num="238" type="cond"/>
            <line num="240" count="25600" type="stmt"/>
            <line num="241" count="25600" type="stmt"/>
            <line num="242" count="25600" type="stmt"/>
            <line num="244" count="25600" type="stmt"/>
            <line num="245" count="25600" type="stmt"/>
            <line falsecount="12640" truecount="12960" num="245" type="cond"/>
            <line num="246" count="12960" type="stmt"/>
            <line num="248" count="12640" type="stmt"/>
            <line num="252" count="25600" type="stmt"/>
            <line num="255" count="4" type="stmt"/>
            <line num="260" count="4" type="stmt"/>
            <line num="268" count="4" type="stmt"/>
            <line num="276" count="4" type="stmt"/>
            <line num="279" count="4" type="stmt"/>
            <line num="282" count="4" type="stmt"/>
            <line num="285" count="4" type="stmt"/>
            <line num="290" count="4" type="stmt"/>
            <line num="293" count="4" type="stmt"/>
            <line num="299" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/modelling/descriptor/MertonModelDescriptorTest.java" name="MertonModelDescriptorTest.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="2" loc="125" coveredmethods="2" methods="2" elements="25" classes="1" ncloc="69" statements="23" conditionals="0" coveredstatements="23"/>
            <class name="MertonModelDescriptorTest">
               <metrics coveredelements="25" complexity="2" methods="2" testruns="2" statements="23" coveredconditionals="0" coveredmethods="2" elements="25" testfailures="0" testduration="281.387" conditionals="0" coveredstatements="23" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="58" testsuccess="true" count="2" testduration="91.144" type="method"/>
            <line num="60" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="getDiscountCurve(String,LocalDate,double) : DiscountCurve" num="116" count="4" type="method"/>
            <line num="117" count="4" type="stmt"/>
            <line num="118" count="4" type="stmt"/>
            <line num="119" count="4" type="stmt"/>
            <line num="120" count="4" type="stmt"/>
            <line num="121" count="4" type="stmt"/>
            <line num="122" count="4" type="stmt"/>
            <line num="123" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/modelling/descriptor/VarianceGammaModelDescriptorTest.java" name="VarianceGammaModelDescriptorTest.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="2" loc="123" coveredmethods="2" methods="2" elements="25" classes="1" ncloc="67" statements="23" conditionals="0" coveredstatements="23"/>
            <class name="VarianceGammaModelDescriptorTest">
               <metrics coveredelements="25" complexity="2" methods="2" testruns="2" statements="23" coveredconditionals="0" coveredmethods="2" elements="25" testfailures="0" testduration="127.92" conditionals="0" coveredstatements="23" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="52" testsuccess="true" count="2" testduration="81.834" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="getDiscountCurve(String,LocalDate,double) : DiscountCurve" num="114" count="4" type="method"/>
            <line num="115" count="4" type="stmt"/>
            <line num="116" count="4" type="stmt"/>
            <line num="117" count="4" type="stmt"/>
            <line num="118" count="4" type="stmt"/>
            <line num="119" count="4" type="stmt"/>
            <line num="120" count="4" type="stmt"/>
            <line num="121" count="4" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.assetderivativevaluation">
         <metrics coveredelements="869" complexity="127" loc="3334" methods="71" classes="14" statements="1064" coveredconditionals="35" coveredmethods="55" elements="1193" ncloc="1925" files="14" conditionals="58" coveredstatements="779"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/BachelierModelMonteCarloValuationTest.java" name="BachelierModelMonteCarloValuationTest.java">
            <metrics coveredelements="129" coveredconditionals="9" complexity="33" loc="564" coveredmethods="11" methods="16" elements="225" classes="1" ncloc="325" statements="193" conditionals="16" coveredstatements="109"/>
            <class name="BachelierModelMonteCarloValuationTest">
               <metrics coveredelements="129" complexity="33" methods="16" testruns="20" statements="193" coveredconditionals="9" coveredmethods="11" elements="225" testfailures="0" testduration="30.095" conditionals="16" coveredstatements="109" testpasses="20"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="52" count="3" type="method"/>
            <line num="55" count="3" type="stmt"/>
            <line complexity="8" visibility="public" signature="main(String[]) : void" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BachelierModelMonteCarloValuationTest(RandomVariableFactory)" num="129" count="20" type="method"/>
            <line num="130" count="20" type="stmt"/>
            <line num="131" count="20" type="stmt"/>
            <line complexity="2" visibility="private" signature="readTestNumber() : int" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getModel() : AssetModelMonteCarloSimulationModel" num="162" count="20" type="method"/>
            <line num="167" count="20" type="stmt"/>
            <line falsecount="0" truecount="20" num="167" type="cond"/>
            <line num="169" count="20" type="stmt"/>
            <line num="172" count="20" type="stmt"/>
            <line num="175" count="20" type="stmt"/>
            <line num="177" count="20" type="stmt"/>
            <line num="180" count="20" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCall() : void" num="186" count="4" type="method"/>
            <line num="192" count="4" type="stmt"/>
            <line num="195" count="4" type="stmt"/>
            <line num="196" count="4" type="stmt"/>
            <line num="197" count="4" type="stmt"/>
            <line num="200" count="4" type="stmt"/>
            <line num="201" count="4" type="stmt"/>
            <line num="203" count="4" type="stmt"/>
            <line num="204" count="4" type="stmt"/>
            <line num="205" count="4" type="stmt"/>
            <line num="207" count="4" type="stmt"/>
            <line num="209" count="4" type="stmt"/>
            <line num="210" count="4" type="stmt"/>
            <line num="212" count="4" type="stmt"/>
            <line falsecount="4" truecount="40" num="212" type="cond"/>
            <line num="215" count="40" type="stmt"/>
            <line num="217" count="40" type="stmt"/>
            <line num="220" count="40" type="stmt"/>
            <line num="223" count="40" type="stmt"/>
            <line num="228" count="40" type="stmt"/>
            <line num="230" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testModelProperties() : void" num="238" count="4" type="method"/>
            <line num="243" count="4" type="stmt"/>
            <line num="245" count="4" type="stmt"/>
            <line num="247" count="4" type="stmt"/>
            <line num="248" count="4" type="stmt"/>
            <line num="249" count="44" type="stmt"/>
            <line num="251" count="44" type="stmt"/>
            <line num="252" count="44" type="stmt"/>
            <line num="253" count="44" type="stmt"/>
            <line num="255" count="44" type="stmt"/>
            <line num="256" count="44" type="stmt"/>
            <line num="257" count="44" type="stmt"/>
            <line num="259" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="testModelRandomVariable() : void" num="265" count="4" type="method"/>
            <line num="270" count="4" type="stmt"/>
            <line num="272" count="4" type="stmt"/>
            <line num="274" count="4" type="stmt"/>
            <line num="275" count="4" type="stmt"/>
            <line num="276" count="4" type="stmt"/>
            <line falsecount="4" truecount="400" num="276" type="cond"/>
            <line num="277" count="400" type="stmt"/>
            <line num="280" count="4" type="stmt"/>
            <line num="281" count="4" type="stmt"/>
            <line num="283" count="4" type="stmt"/>
            <line num="285" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEuropeanAsianBermudanOption() : void" num="300" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMultiThreaddedValuation() : void" num="360" count="0" type="method"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="368" type="cond"/>
            <line num="370" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="run() : void" num="374" count="0" type="method"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="377" type="cond"/>
            <line num="378" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="393" type="cond"/>
            <line num="394" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCallDelta() : void" num="403" count="4" type="method"/>
            <line num="409" count="4" type="stmt"/>
            <line num="412" count="4" type="stmt"/>
            <line num="413" count="4" type="stmt"/>
            <line num="414" count="4" type="stmt"/>
            <line num="416" count="4" type="stmt"/>
            <line num="417" count="4" type="stmt"/>
            <line num="418" count="4" type="stmt"/>
            <line num="421" count="4" type="stmt"/>
            <line num="422" count="4" type="stmt"/>
            <line num="424" count="4" type="stmt"/>
            <line num="425" count="4" type="stmt"/>
            <line num="426" count="4" type="stmt"/>
            <line num="428" count="4" type="stmt"/>
            <line falsecount="4" truecount="72" num="428" type="cond"/>
            <line num="431" count="72" type="stmt"/>
            <line num="434" count="72" type="stmt"/>
            <line num="436" count="72" type="stmt"/>
            <line num="437" count="72" type="stmt"/>
            <line num="439" count="72" type="stmt"/>
            <line num="441" count="72" type="stmt"/>
            <line num="442" count="72" type="stmt"/>
            <line num="443" count="72" type="stmt"/>
            <line num="446" count="72" type="stmt"/>
            <line num="449" count="72" type="stmt"/>
            <line num="456" count="72" type="stmt"/>
            <line num="459" count="72" type="stmt"/>
            <line num="466" count="72" type="stmt"/>
            <line num="468" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCallVega() : void" num="474" count="4" type="method"/>
            <line num="480" count="4" type="stmt"/>
            <line num="483" count="4" type="stmt"/>
            <line num="484" count="4" type="stmt"/>
            <line num="485" count="4" type="stmt"/>
            <line num="487" count="4" type="stmt"/>
            <line num="488" count="4" type="stmt"/>
            <line num="489" count="4" type="stmt"/>
            <line num="492" count="4" type="stmt"/>
            <line num="493" count="4" type="stmt"/>
            <line num="495" count="4" type="stmt"/>
            <line num="496" count="4" type="stmt"/>
            <line num="497" count="4" type="stmt"/>
            <line num="498" count="4" type="stmt"/>
            <line falsecount="4" truecount="72" num="498" type="cond"/>
            <line num="501" count="72" type="stmt"/>
            <line num="504" count="72" type="stmt"/>
            <line num="506" count="72" type="stmt"/>
            <line num="507" count="72" type="stmt"/>
            <line num="509" count="72" type="stmt"/>
            <line num="511" count="72" type="stmt"/>
            <line num="512" count="72" type="stmt"/>
            <line num="513" count="72" type="stmt"/>
            <line num="516" count="72" type="stmt"/>
            <line num="518" count="72" type="stmt"/>
            <line num="519" count="72" type="stmt"/>
            <line num="521" count="72" type="stmt"/>
            <line num="529" count="72" type="stmt"/>
            <line num="532" count="72" type="stmt"/>
            <line num="539" count="72" type="stmt"/>
            <line num="541" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="547" count="12" type="method"/>
            <line num="548" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="554" count="12" type="method"/>
            <line num="555" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double" num="561" count="12" type="method"/>
            <line num="562" count="12" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/BlackScholesMonteCarloValuationTest.java" name="BlackScholesMonteCarloValuationTest.java">
            <metrics coveredelements="135" coveredconditionals="9" complexity="30" loc="542" coveredmethods="9" methods="13" elements="209" classes="1" ncloc="306" statements="180" conditionals="16" coveredstatements="117"/>
            <class name="BlackScholesMonteCarloValuationTest">
               <metrics coveredelements="135" complexity="30" methods="13" testruns="24" statements="180" coveredconditionals="9" coveredmethods="9" elements="209" testfailures="0" testduration="19.334000000000003" conditionals="16" coveredstatements="117" testpasses="24"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="53" count="3" type="method"/>
            <line num="56" count="3" type="stmt"/>
            <line complexity="8" visibility="public" signature="main(String[]) : void" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlackScholesMonteCarloValuationTest(RandomVariableFactory)" num="130" count="24" type="method"/>
            <line num="131" count="24" type="stmt"/>
            <line num="132" count="24" type="stmt"/>
            <line complexity="2" visibility="private" signature="readTestNumber() : int" num="135" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getModel() : AssetModelMonteCarloSimulationModel" num="163" count="24" type="method"/>
            <line num="168" count="24" type="stmt"/>
            <line falsecount="0" truecount="24" num="168" type="cond"/>
            <line num="170" count="24" type="stmt"/>
            <line num="173" count="24" type="stmt"/>
            <line num="176" count="24" type="stmt"/>
            <line num="178" count="24" type="stmt"/>
            <line num="181" count="24" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCall() : void" num="187" count="4" type="method"/>
            <line num="193" count="4" type="stmt"/>
            <line num="196" count="4" type="stmt"/>
            <line num="197" count="4" type="stmt"/>
            <line num="198" count="4" type="stmt"/>
            <line num="201" count="4" type="stmt"/>
            <line num="202" count="4" type="stmt"/>
            <line num="207" count="4" type="stmt"/>
            <line num="209" count="4" type="stmt"/>
            <line num="210" count="4" type="stmt"/>
            <line num="212" count="4" type="stmt"/>
            <line num="213" count="4" type="stmt"/>
            <line falsecount="4" truecount="72" num="213" type="cond"/>
            <line num="216" count="72" type="stmt"/>
            <line num="218" count="72" type="stmt"/>
            <line num="221" count="72" type="stmt"/>
            <line num="224" count="72" type="stmt"/>
            <line num="229" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="testModelProperties() : void" num="238" count="4" type="method"/>
            <line num="243" count="4" type="stmt"/>
            <line num="245" count="4" type="stmt"/>
            <line num="247" count="4" type="stmt"/>
            <line num="248" count="4" type="stmt"/>
            <line num="249" count="44" type="stmt"/>
            <line num="251" count="44" type="stmt"/>
            <line num="252" count="44" type="stmt"/>
            <line num="253" count="44" type="stmt"/>
            <line num="255" count="44" type="stmt"/>
            <line num="256" count="44" type="stmt"/>
            <line num="257" count="44" type="stmt"/>
            <line complexity="2" visibility="public" signature="testModelRandomVariable() : void" num="264" count="4" type="method"/>
            <line num="269" count="4" type="stmt"/>
            <line num="271" count="4" type="stmt"/>
            <line num="273" count="4" type="stmt"/>
            <line num="274" count="4" type="stmt"/>
            <line num="275" count="4" type="stmt"/>
            <line falsecount="4" truecount="400" num="275" type="cond"/>
            <line num="276" count="400" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEuropeanAsianBermudanOption() : void" num="292" count="4" type="method"/>
            <line num="297" count="4" type="stmt"/>
            <line num="302" count="4" type="stmt"/>
            <line num="303" count="4" type="stmt"/>
            <line num="308" count="4" type="stmt"/>
            <line num="309" count="4" type="stmt"/>
            <line num="314" count="4" type="stmt"/>
            <line num="316" count="4" type="stmt"/>
            <line num="317" count="4" type="stmt"/>
            <line num="322" count="4" type="stmt"/>
            <line num="323" count="4" type="stmt"/>
            <line num="324" count="4" type="stmt"/>
            <line num="327" count="4" type="stmt"/>
            <line num="328" count="4" type="stmt"/>
            <line num="331" count="4" type="stmt"/>
            <line num="332" count="4" type="stmt"/>
            <line num="337" count="4" type="stmt"/>
            <line num="338" count="4" type="stmt"/>
            <line num="339" count="4" type="stmt"/>
            <line num="341" count="4" type="stmt"/>
            <line num="342" count="4" type="stmt"/>
            <line num="343" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMultiThreaddedValuation() : void" num="351" count="0" type="method"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="359" type="cond"/>
            <line num="361" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="run() : void" num="365" count="0" type="method"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="368" type="cond"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="384" type="cond"/>
            <line num="385" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCallDelta() : void" num="394" count="4" type="method"/>
            <line num="400" count="4" type="stmt"/>
            <line num="403" count="4" type="stmt"/>
            <line num="404" count="4" type="stmt"/>
            <line num="405" count="4" type="stmt"/>
            <line num="410" count="4" type="stmt"/>
            <line num="412" count="4" type="stmt"/>
            <line num="413" count="4" type="stmt"/>
            <line num="416" count="4" type="stmt"/>
            <line num="417" count="4" type="stmt"/>
            <line num="419" count="4" type="stmt"/>
            <line num="420" count="4" type="stmt"/>
            <line falsecount="4" truecount="72" num="420" type="cond"/>
            <line num="423" count="72" type="stmt"/>
            <line num="426" count="72" type="stmt"/>
            <line num="428" count="72" type="stmt"/>
            <line num="429" count="72" type="stmt"/>
            <line num="430" count="72" type="stmt"/>
            <line num="432" count="72" type="stmt"/>
            <line num="433" count="72" type="stmt"/>
            <line num="434" count="72" type="stmt"/>
            <line num="437" count="72" type="stmt"/>
            <line num="440" count="72" type="stmt"/>
            <line num="447" count="72" type="stmt"/>
            <line num="450" count="72" type="stmt"/>
            <line num="451" count="72" type="stmt"/>
            <line num="454" count="72" type="stmt"/>
            <line num="455" count="72" type="stmt"/>
            <line num="458" count="72" type="stmt"/>
            <line num="468" count="72" type="stmt"/>
            <line num="470" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCallVega() : void" num="476" count="4" type="method"/>
            <line num="482" count="4" type="stmt"/>
            <line num="485" count="4" type="stmt"/>
            <line num="486" count="4" type="stmt"/>
            <line num="487" count="4" type="stmt"/>
            <line num="492" count="4" type="stmt"/>
            <line num="494" count="4" type="stmt"/>
            <line num="495" count="4" type="stmt"/>
            <line num="498" count="4" type="stmt"/>
            <line num="499" count="4" type="stmt"/>
            <line num="501" count="4" type="stmt"/>
            <line num="502" count="4" type="stmt"/>
            <line falsecount="4" truecount="72" num="502" type="cond"/>
            <line num="505" count="72" type="stmt"/>
            <line num="508" count="72" type="stmt"/>
            <line num="510" count="72" type="stmt"/>
            <line num="511" count="72" type="stmt"/>
            <line num="513" count="72" type="stmt"/>
            <line num="515" count="72" type="stmt"/>
            <line num="516" count="72" type="stmt"/>
            <line num="517" count="72" type="stmt"/>
            <line num="520" count="72" type="stmt"/>
            <line num="523" count="72" type="stmt"/>
            <line num="530" count="72" type="stmt"/>
            <line num="533" count="72" type="stmt"/>
            <line num="538" count="72" type="stmt"/>
            <line num="540" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/DisplacedLognomalModelTest.java" name="DisplacedLognomalModelTest.java">
            <metrics coveredelements="42" coveredconditionals="0" complexity="3" loc="180" coveredmethods="3" methods="3" elements="42" classes="1" ncloc="101" statements="39" conditionals="0" coveredstatements="39"/>
            <class name="DisplacedLognomalModelTest">
               <metrics coveredelements="42" complexity="3" methods="3" testruns="3" statements="39" coveredconditionals="0" coveredmethods="3" elements="42" testfailures="0" testduration="2.4010000000000002" conditionals="0" coveredstatements="39" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="68" count="3" type="method"/>
            <line num="71" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="DisplacedLognomalModelTest(double)" num="81" count="3" type="method"/>
            <line num="82" count="3" type="stmt"/>
            <line num="83" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testProductImplementation() : void" num="86" count="3" type="method"/>
            <line num="89" count="3" type="stmt"/>
            <line num="92" count="3" type="stmt"/>
            <line num="94" count="3" type="stmt"/>
            <line num="96" count="3" type="stmt"/>
            <line num="99" count="3" type="stmt"/>
            <line num="102" count="3" type="stmt"/>
            <line num="105" count="3" type="stmt"/>
            <line num="107" count="3" type="stmt"/>
            <line num="110" count="3" type="stmt"/>
            <line num="113" count="3" type="stmt"/>
            <line num="116" count="3" type="stmt"/>
            <line num="118" count="3" type="stmt"/>
            <line num="121" count="3" type="stmt"/>
            <line num="124" count="3" type="stmt"/>
            <line num="127" count="3" type="stmt"/>
            <line num="129" count="3" type="stmt"/>
            <line num="132" count="3" type="stmt"/>
            <line num="135" count="3" type="stmt"/>
            <line num="141" count="3" type="stmt"/>
            <line num="143" count="3" type="stmt"/>
            <line num="144" count="3" type="stmt"/>
            <line num="145" count="3" type="stmt"/>
            <line num="146" count="3" type="stmt"/>
            <line num="147" count="3" type="stmt"/>
            <line num="148" count="3" type="stmt"/>
            <line num="162" count="3" type="stmt"/>
            <line num="163" count="3" type="stmt"/>
            <line num="165" count="3" type="stmt"/>
            <line num="166" count="3" type="stmt"/>
            <line num="167" count="3" type="stmt"/>
            <line num="168" count="3" type="stmt"/>
            <line num="169" count="3" type="stmt"/>
            <line num="170" count="3" type="stmt"/>
            <line num="172" count="3" type="stmt"/>
            <line num="174" count="3" type="stmt"/>
            <line num="177" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/HestonModelTest.java" name="HestonModelTest.java">
            <metrics coveredelements="41" coveredconditionals="4" complexity="5" loc="168" coveredmethods="3" methods="3" elements="41" classes="1" ncloc="101" statements="34" conditionals="4" coveredstatements="34"/>
            <class name="HestonModelTest">
               <metrics coveredelements="41" complexity="5" methods="3" testruns="2" statements="34" coveredconditionals="4" coveredmethods="3" elements="41" testfailures="0" testduration="25.782" conditionals="4" coveredstatements="34" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="50" count="3" type="method"/>
            <line num="53" count="3" type="stmt"/>
            <line num="54" count="3" type="stmt"/>
            <line num="55" count="3" type="stmt"/>
            <line num="56" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModelTest(double)" num="85" count="2" type="method"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="test() : void" num="90" count="2" type="method"/>
            <line num="94" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="113" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line falsecount="2" truecount="14" num="133" type="cond"/>
            <line num="138" count="14" type="stmt"/>
            <line num="141" count="14" type="stmt"/>
            <line num="142" count="14" type="stmt"/>
            <line num="143" count="14" type="stmt"/>
            <line num="146" count="14" type="stmt"/>
            <line num="147" count="14" type="stmt"/>
            <line num="152" count="14" type="stmt"/>
            <line num="153" count="14" type="stmt"/>
            <line num="154" count="14" type="stmt"/>
            <line num="156" count="14" type="stmt"/>
            <line num="159" count="14" type="stmt"/>
            <line falsecount="7" truecount="7" num="159" type="cond"/>
            <line num="160" count="7" type="stmt"/>
            <line num="163" count="7" type="stmt"/>
            <line num="166" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/InhomogenousBachelierModelMonteCarloValuationTest.java" name="InhomogenousBachelierModelMonteCarloValuationTest.java">
            <metrics coveredelements="127" coveredconditionals="9" complexity="32" loc="541" coveredmethods="10" methods="15" elements="223" classes="1" ncloc="304" statements="192" conditionals="16" coveredstatements="108"/>
            <class name="InhomogenousBachelierModelMonteCarloValuationTest">
               <metrics coveredelements="127" complexity="32" methods="15" testruns="5" statements="192" coveredconditionals="9" coveredmethods="10" elements="223" testfailures="0" testduration="7.916999999999999" conditionals="16" coveredstatements="108" testpasses="5"/>
            </class>
            <line complexity="8" visibility="public" signature="main(String[]) : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InhomogenousBachelierModelMonteCarloValuationTest()" num="107" count="5" type="method"/>
            <line num="108" count="5" type="stmt"/>
            <line complexity="2" visibility="private" signature="readTestNumber() : int" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getModel() : AssetModelMonteCarloSimulationModel" num="139" count="5" type="method"/>
            <line num="144" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="144" type="cond"/>
            <line num="146" count="5" type="stmt"/>
            <line num="149" count="5" type="stmt"/>
            <line num="152" count="5" type="stmt"/>
            <line num="154" count="5" type="stmt"/>
            <line num="157" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCall() : void" num="163" testsuccess="true" count="1" testduration="0.409" type="method"/>
            <line num="169" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="189" type="cond"/>
            <line num="192" count="10" type="stmt"/>
            <line num="194" count="10" type="stmt"/>
            <line num="197" count="10" type="stmt"/>
            <line num="200" count="10" type="stmt"/>
            <line num="205" count="10" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testModelProperties() : void" num="215" testsuccess="true" count="1" testduration="0.419" type="method"/>
            <line num="220" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="11" type="stmt"/>
            <line num="227" count="11" type="stmt"/>
            <line num="229" count="11" type="stmt"/>
            <line num="230" count="11" type="stmt"/>
            <line num="231" count="11" type="stmt"/>
            <line num="233" count="11" type="stmt"/>
            <line num="234" count="11" type="stmt"/>
            <line num="235" count="11" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testModelRandomVariable() : void" num="243" testsuccess="true" count="1" testduration="0.524" type="method"/>
            <line num="248" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="254" type="cond"/>
            <line num="255" count="100" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEuropeanAsianBermudanOption() : void" num="278" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMultiThreaddedValuation() : void" num="338" count="0" type="method"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="346" type="cond"/>
            <line num="348" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="run() : void" num="352" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="355" type="cond"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="371" type="cond"/>
            <line num="372" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCallDelta() : void" num="381" testsuccess="true" count="1" testduration="3.286" type="method"/>
            <line num="387" count="1" type="stmt"/>
            <line num="390" count="1" type="stmt"/>
            <line num="391" count="1" type="stmt"/>
            <line num="392" count="1" type="stmt"/>
            <line num="394" count="1" type="stmt"/>
            <line num="395" count="1" type="stmt"/>
            <line num="396" count="1" type="stmt"/>
            <line num="399" count="1" type="stmt"/>
            <line num="400" count="1" type="stmt"/>
            <line num="402" count="1" type="stmt"/>
            <line num="403" count="1" type="stmt"/>
            <line num="404" count="1" type="stmt"/>
            <line num="405" count="1" type="stmt"/>
            <line falsecount="1" truecount="18" num="405" type="cond"/>
            <line num="408" count="18" type="stmt"/>
            <line num="411" count="18" type="stmt"/>
            <line num="413" count="18" type="stmt"/>
            <line num="414" count="18" type="stmt"/>
            <line num="416" count="18" type="stmt"/>
            <line num="418" count="18" type="stmt"/>
            <line num="419" count="18" type="stmt"/>
            <line num="420" count="18" type="stmt"/>
            <line num="423" count="18" type="stmt"/>
            <line num="426" count="18" type="stmt"/>
            <line num="433" count="18" type="stmt"/>
            <line num="436" count="18" type="stmt"/>
            <line num="443" count="18" type="stmt"/>
            <line num="445" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCallVega() : void" num="451" testsuccess="true" count="1" testduration="3.279" type="method"/>
            <line num="457" count="1" type="stmt"/>
            <line num="460" count="1" type="stmt"/>
            <line num="461" count="1" type="stmt"/>
            <line num="462" count="1" type="stmt"/>
            <line num="464" count="1" type="stmt"/>
            <line num="465" count="1" type="stmt"/>
            <line num="466" count="1" type="stmt"/>
            <line num="469" count="1" type="stmt"/>
            <line num="470" count="1" type="stmt"/>
            <line num="472" count="1" type="stmt"/>
            <line num="473" count="1" type="stmt"/>
            <line num="474" count="1" type="stmt"/>
            <line num="475" count="1" type="stmt"/>
            <line falsecount="1" truecount="18" num="475" type="cond"/>
            <line num="478" count="18" type="stmt"/>
            <line num="481" count="18" type="stmt"/>
            <line num="483" count="18" type="stmt"/>
            <line num="484" count="18" type="stmt"/>
            <line num="486" count="18" type="stmt"/>
            <line num="488" count="18" type="stmt"/>
            <line num="489" count="18" type="stmt"/>
            <line num="490" count="18" type="stmt"/>
            <line num="493" count="18" type="stmt"/>
            <line num="495" count="18" type="stmt"/>
            <line num="496" count="18" type="stmt"/>
            <line num="498" count="18" type="stmt"/>
            <line num="506" count="18" type="stmt"/>
            <line num="509" count="18" type="stmt"/>
            <line num="516" count="18" type="stmt"/>
            <line num="518" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="524" count="3" type="method"/>
            <line num="525" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="531" count="3" type="method"/>
            <line num="532" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double" num="538" count="3" type="method"/>
            <line num="539" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/MertonModelTest.java" name="MertonModelTest.java">
            <metrics coveredelements="36" coveredconditionals="2" complexity="2" loc="134" coveredmethods="1" methods="1" elements="36" classes="1" ncloc="79" statements="33" conditionals="2" coveredstatements="33"/>
            <class name="MertonModelTest">
               <metrics coveredelements="36" complexity="2" methods="1" testruns="1" statements="33" coveredconditionals="2" coveredmethods="1" elements="36" testfailures="0" testduration="21.299" conditionals="2" coveredstatements="33" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="58" testsuccess="true" count="1" testduration="21.299" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line falsecount="1" truecount="20" num="111" type="cond"/>
            <line num="112" count="20" type="stmt"/>
            <line num="113" count="20" type="stmt"/>
            <line num="114" count="20" type="stmt"/>
            <line num="115" count="20" type="stmt"/>
            <line num="116" count="20" type="stmt"/>
            <line num="118" count="20" type="stmt"/>
            <line num="119" count="20" type="stmt"/>
            <line num="120" count="20" type="stmt"/>
            <line num="122" count="20" type="stmt"/>
            <line num="123" count="20" type="stmt"/>
            <line num="124" count="20" type="stmt"/>
            <line num="126" count="20" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloBlackScholesModelAsianOptionSensitivitiesTest.java" name="MonteCarloBlackScholesModelAsianOptionSensitivitiesTest.java">
            <metrics coveredelements="57" coveredconditionals="0" complexity="3" loc="158" coveredmethods="3" methods="3" elements="57" classes="1" ncloc="96" statements="54" conditionals="0" coveredstatements="54"/>
            <class name="MonteCarloBlackScholesModelAsianOptionSensitivitiesTest">
               <metrics coveredelements="57" complexity="3" methods="3" testruns="1" statements="54" coveredconditionals="0" coveredmethods="3" elements="57" testfailures="0" testduration="0.374" conditionals="0" coveredstatements="54" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testProductAADSensitivities() : void" num="55" testsuccess="true" count="1" testduration="0.374" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="memoryUsageReset() : void" num="144" count="1" type="method"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="memoryUsagePeak() : long" num="150" count="1" type="method"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="8" type="stmt"/>
            <line num="154" count="8" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloBlackScholesModelBermudanDigitalOptionSensitivitiesGraphs.java" name="MonteCarloBlackScholesModelBermudanDigitalOptionSensitivitiesGraphs.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="151" coveredmethods="0" methods="2" elements="58" classes="1" ncloc="90" statements="54" conditionals="2" coveredstatements="0"/>
            <class name="MonteCarloBlackScholesModelBermudanDigitalOptionSensitivitiesGraphs">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="58" statements="54" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="53" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="testProductAADSensitivities() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloBlackScholesModelBermudanOptionSensitivitiesTest.java" name="MonteCarloBlackScholesModelBermudanOptionSensitivitiesTest.java">
            <metrics coveredelements="40" coveredconditionals="0" complexity="1" loc="126" coveredmethods="1" methods="1" elements="40" classes="1" ncloc="71" statements="39" conditionals="0" coveredstatements="39"/>
            <class name="MonteCarloBlackScholesModelBermudanOptionSensitivitiesTest">
               <metrics coveredelements="40" complexity="1" methods="1" testruns="1" statements="39" coveredconditionals="0" coveredmethods="1" elements="40" testfailures="0" testduration="0.968" conditionals="0" coveredstatements="39" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testProductAADSensitivities() : void" num="51" testsuccess="true" count="1" testduration="0.968" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloBlackScholesModelDigitalOptionSensitivitiesTest.java" name="MonteCarloBlackScholesModelDigitalOptionSensitivitiesTest.java">
            <metrics coveredelements="83" coveredconditionals="0" complexity="2" loc="205" coveredmethods="2" methods="2" elements="83" classes="1" ncloc="118" statements="81" conditionals="0" coveredstatements="81"/>
            <class name="MonteCarloBlackScholesModelDigitalOptionSensitivitiesTest">
               <metrics coveredelements="83" complexity="2" methods="2" testruns="2" statements="81" coveredconditionals="0" coveredmethods="2" elements="83" testfailures="0" testduration="27.871000000000002" conditionals="0" coveredstatements="81" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testProductAADSensitivities() : void" num="53" testsuccess="true" count="1" testduration="13.93" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSensitivities() : void" num="145" testsuccess="true" count="1" testduration="13.941" type="method"/>
            <line num="147" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloBlackScholesModelEuropeanOptionSensitivitiesTest.java" name="MonteCarloBlackScholesModelEuropeanOptionSensitivitiesTest.java">
            <metrics coveredelements="57" coveredconditionals="0" complexity="3" loc="159" coveredmethods="3" methods="3" elements="57" classes="1" ncloc="97" statements="54" conditionals="0" coveredstatements="54"/>
            <class name="MonteCarloBlackScholesModelEuropeanOptionSensitivitiesTest">
               <metrics coveredelements="57" complexity="3" methods="3" testruns="1" statements="54" coveredconditionals="0" coveredmethods="3" elements="57" testfailures="0" testduration="0.377" conditionals="0" coveredstatements="54" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testProductAADSensitivities() : void" num="56" testsuccess="true" count="1" testduration="0.377" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="memoryUsageReset() : void" num="145" count="1" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="memoryUsagePeak() : long" num="151" count="1" type="method"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="8" type="stmt"/>
            <line num="155" count="8" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloBlackScholesModelSensitivitiesTest.java" name="MonteCarloBlackScholesModelSensitivitiesTest.java">
            <metrics coveredelements="83" coveredconditionals="0" complexity="6" loc="219" coveredmethods="6" methods="6" elements="83" classes="1" ncloc="135" statements="77" conditionals="0" coveredstatements="77"/>
            <class name="MonteCarloBlackScholesModelSensitivitiesTest">
               <metrics coveredelements="83" complexity="6" methods="6" testruns="3" statements="77" coveredconditionals="0" coveredmethods="6" elements="83" testfailures="0" testduration="8.671" conditionals="0" coveredstatements="77" testpasses="3"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 49()" num="49" count="3" type="method"/>
            <line num="50" count="3" type="stmt"/>
            <line num="52" count="3" type="stmt"/>
            <line num="53" count="3" type="stmt"/>
            <line num="54" count="3" type="stmt"/>
            <line num="55" count="3" type="stmt"/>
            <line num="55" count="3" type="stmt"/>
            <line num="56" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="59" count="3" type="method"/>
            <line num="61" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloBlackScholesModelSensitivitiesTest(MonteCarloProduct)" num="85" count="3" type="method"/>
            <line num="86" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testProductAADSensitivities() : void" num="89" count="3" type="method"/>
            <line num="91" count="3" type="stmt"/>
            <line num="92" count="3" type="stmt"/>
            <line num="95" count="3" type="stmt"/>
            <line num="96" count="3" type="stmt"/>
            <line num="97" count="3" type="stmt"/>
            <line num="98" count="3" type="stmt"/>
            <line num="100" count="3" type="stmt"/>
            <line num="101" count="3" type="stmt"/>
            <line num="102" count="3" type="stmt"/>
            <line num="104" count="3" type="stmt"/>
            <line num="105" count="3" type="stmt"/>
            <line num="106" count="3" type="stmt"/>
            <line num="108" count="3" type="stmt"/>
            <line num="109" count="3" type="stmt"/>
            <line num="110" count="3" type="stmt"/>
            <line num="112" count="3" type="stmt"/>
            <line num="113" count="3" type="stmt"/>
            <line num="114" count="3" type="stmt"/>
            <line num="116" count="3" type="stmt"/>
            <line num="117" count="3" type="stmt"/>
            <line num="118" count="3" type="stmt"/>
            <line num="119" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="getSensitivitiesViaFiniteDifferences() : Map&lt;String, Double&gt;" num="122" count="3" type="method"/>
            <line num="123" count="3" type="stmt"/>
            <line num="126" count="3" type="stmt"/>
            <line num="127" count="3" type="stmt"/>
            <line num="128" count="3" type="stmt"/>
            <line num="131" count="3" type="stmt"/>
            <line num="134" count="3" type="stmt"/>
            <line num="137" count="3" type="stmt"/>
            <line num="140" count="3" type="stmt"/>
            <line num="145" count="3" type="stmt"/>
            <line num="150" count="3" type="stmt"/>
            <line num="156" count="3" type="stmt"/>
            <line num="158" count="3" type="stmt"/>
            <line num="159" count="3" type="stmt"/>
            <line num="160" count="3" type="stmt"/>
            <line num="162" count="3" type="stmt"/>
            <line num="163" count="3" type="stmt"/>
            <line num="164" count="3" type="stmt"/>
            <line num="166" count="3" type="stmt"/>
            <line num="167" count="3" type="stmt"/>
            <line num="168" count="3" type="stmt"/>
            <line num="170" count="3" type="stmt"/>
            <line num="171" count="3" type="stmt"/>
            <line num="172" count="3" type="stmt"/>
            <line num="173" count="3" type="stmt"/>
            <line num="174" count="3" type="stmt"/>
            <line num="176" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="getSensitivitiesViaAAD() : Map&lt;String, Double&gt;" num="179" count="3" type="method"/>
            <line num="180" count="3" type="stmt"/>
            <line num="183" count="3" type="stmt"/>
            <line num="184" count="3" type="stmt"/>
            <line num="185" count="3" type="stmt"/>
            <line num="188" count="3" type="stmt"/>
            <line num="191" count="3" type="stmt"/>
            <line num="194" count="3" type="stmt"/>
            <line num="197" count="3" type="stmt"/>
            <line num="199" count="3" type="stmt"/>
            <line num="204" count="3" type="stmt"/>
            <line num="206" count="3" type="stmt"/>
            <line num="207" count="3" type="stmt"/>
            <line num="208" count="3" type="stmt"/>
            <line num="209" count="3" type="stmt"/>
            <line num="211" count="3" type="stmt"/>
            <line num="212" count="3" type="stmt"/>
            <line num="213" count="3" type="stmt"/>
            <line num="214" count="3" type="stmt"/>
            <line num="215" count="3" type="stmt"/>
            <line num="217" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloBlackScholesModelTest.java" name="MonteCarloBlackScholesModelTest.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="2" loc="103" coveredmethods="2" methods="2" elements="24" classes="1" ncloc="55" statements="22" conditionals="0" coveredstatements="22"/>
            <class name="MonteCarloBlackScholesModelTest">
               <metrics coveredelements="24" complexity="2" methods="2" testruns="2" statements="22" coveredconditionals="0" coveredmethods="2" elements="24" testfailures="0" testduration="0.345" conditionals="0" coveredstatements="22" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testDirectValuation() : void" num="48" testsuccess="true" count="1" testduration="0.213" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testProductImplementation() : void" num="77" testsuccess="true" count="1" testduration="0.132" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/VarianceGammaModelTest.java" name="VarianceGammaModelTest.java">
            <metrics coveredelements="15" coveredconditionals="2" complexity="2" loc="84" coveredmethods="1" methods="1" elements="15" classes="1" ncloc="47" statements="12" conditionals="2" coveredstatements="12"/>
            <class name="VarianceGammaModelTest">
               <metrics coveredelements="15" complexity="2" methods="1" testruns="1" statements="12" coveredconditionals="2" coveredmethods="1" elements="15" testfailures="0" testduration="3.274" conditionals="2" coveredstatements="12" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="42" testsuccess="true" count="1" testduration="3.274" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line falsecount="1" truecount="7" num="61" type="cond"/>
            <line num="65" count="7" type="stmt"/>
            <line num="68" count="7" type="stmt"/>
            <line num="73" count="7" type="stmt"/>
            <line num="74" count="7" type="stmt"/>
            <line num="77" count="7" type="stmt"/>
            <line num="79" count="7" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.volatilities">
         <metrics coveredelements="174" complexity="16" loc="446" methods="11" classes="3" statements="156" coveredconditionals="10" coveredmethods="10" elements="177" ncloc="289" files="3" conditionals="10" coveredstatements="154"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/volatilities/CapletVolatilitiesParametricCalibrationTest.java" name="CapletVolatilitiesParametricCalibrationTest.java">
            <metrics coveredelements="84" coveredconditionals="8" complexity="8" loc="252" coveredmethods="3" methods="4" elements="87" classes="1" ncloc="161" statements="75" conditionals="8" coveredstatements="73"/>
            <class name="CapletVolatilitiesParametricCalibrationTest">
               <metrics coveredelements="84" complexity="8" methods="4" testruns="4" statements="75" coveredconditionals="8" coveredmethods="3" elements="87" testfailures="0" testduration="947.992" conditionals="8" coveredstatements="73" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="61" count="4" type="method"/>
            <line num="64" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="CapletVolatilitiesParametricCalibrationTest(QuotingConvention)" num="71" count="4" type="method"/>
            <line num="72" count="4" type="stmt"/>
            <line num="73" count="4" type="stmt"/>
            <line num="75" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testVolatilityCalibration() : void" num="93" count="4" type="method"/>
            <line num="101" count="4" type="stmt"/>
            <line num="115" count="4" type="stmt"/>
            <line num="119" count="4" type="stmt"/>
            <line num="120" count="4" type="stmt"/>
            <line num="123" count="4" type="stmt"/>
            <line num="125" count="4" type="stmt"/>
            <line num="126" count="4" type="stmt"/>
            <line num="129" count="4" type="stmt"/>
            <line num="130" count="4" type="stmt"/>
            <line num="131" count="4" type="stmt"/>
            <line num="134" count="4" type="stmt"/>
            <line num="135" count="4" type="stmt"/>
            <line num="136" count="4" type="stmt"/>
            <line num="137" count="4" type="stmt"/>
            <line num="139" count="4" type="stmt"/>
            <line num="144" count="4" type="stmt"/>
            <line num="146" count="4" type="stmt"/>
            <line num="153" count="4" type="stmt"/>
            <line num="154" count="4" type="stmt"/>
            <line num="155" count="4" type="stmt"/>
            <line num="156" count="4" type="stmt"/>
            <line num="157" count="4" type="stmt"/>
            <line num="158" count="4" type="stmt"/>
            <line falsecount="4" truecount="52" num="158" type="cond"/>
            <line num="159" count="52" type="stmt"/>
            <line num="160" count="52" type="stmt"/>
            <line num="161" count="52" type="stmt"/>
            <line num="162" count="52" type="stmt"/>
            <line num="172" count="52" type="stmt"/>
            <line num="173" count="52" type="stmt"/>
            <line num="176" count="52" type="stmt"/>
            <line num="178" count="52" type="stmt"/>
            <line num="179" count="52" type="stmt"/>
            <line num="185" count="4" type="stmt"/>
            <line num="186" count="4" type="stmt"/>
            <line num="187" count="4" type="stmt"/>
            <line falsecount="4" truecount="52" num="187" type="cond"/>
            <line num="188" count="52" type="stmt"/>
            <line num="189" count="52" type="stmt"/>
            <line num="190" count="52" type="stmt"/>
            <line num="191" count="52" type="stmt"/>
            <line num="200" count="52" type="stmt"/>
            <line num="201" count="52" type="stmt"/>
            <line num="202" count="52" type="stmt"/>
            <line num="204" count="52" type="stmt"/>
            <line num="205" count="52" type="stmt"/>
            <line num="209" count="4" type="stmt"/>
            <line num="210" count="4" type="stmt"/>
            <line num="212" count="4" type="stmt"/>
            <line num="213" count="4" type="stmt"/>
            <line num="215" count="4" type="stmt"/>
            <line num="216" count="4" type="stmt"/>
            <line falsecount="4" truecount="52" num="216" type="cond"/>
            <line num="217" count="52" type="stmt"/>
            <line num="218" count="52" type="stmt"/>
            <line num="220" count="52" type="stmt"/>
            <line num="221" count="52" type="stmt"/>
            <line num="223" count="52" type="stmt"/>
            <line num="224" count="52" type="stmt"/>
            <line num="225" count="52" type="stmt"/>
            <line num="226" count="52" type="stmt"/>
            <line num="227" count="52" type="stmt"/>
            <line num="228" count="52" type="stmt"/>
            <line num="230" count="4" type="stmt"/>
            <line num="231" count="4" type="stmt"/>
            <line num="233" count="4" type="stmt"/>
            <line num="234" count="4" type="stmt"/>
            <line num="239" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="239" type="cond"/>
            <line num="241" count="2" type="stmt"/>
            <line num="243" count="2" type="stmt"/>
            <line num="247" count="2" type="stmt"/>
            <line num="249" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/volatilities/CapletVolatilitiesParametricTest.java" name="CapletVolatilitiesParametricTest.java">
            <metrics coveredelements="62" coveredconditionals="2" complexity="7" loc="129" coveredmethods="6" methods="6" elements="62" classes="1" ncloc="86" statements="54" conditionals="2" coveredstatements="54"/>
            <class name="CapletVolatilitiesParametricTest">
               <metrics coveredelements="62" complexity="7" methods="6" testruns="10" statements="54" coveredconditionals="2" coveredmethods="6" elements="62" testfailures="0" testduration="0.491" conditionals="2" coveredstatements="54" testpasses="10"/>
            </class>
            <line complexity="1" visibility="public" signature="testFlatVolatilityUsingD() : void" num="31" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFlatVolatilityUsingA() : void" num="44" testsuccess="true" count="2" testduration="0.008" type="method"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDecayVolatility() : void" num="57" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegratedFourParameterExponentialVolatilityParamSet1() : void" num="70" testsuccess="true" count="2" testduration="0.134" type="method"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegratedFourParameterExponentialVolatilityParamSetCZero() : void" num="80" testsuccess="true" count="2" testduration="0.079" type="method"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="testIntegratedFourParameterExponentialVolatility(double,double,double,double) : void" num="90" count="4" type="method"/>
            <line num="92" count="4" type="stmt"/>
            <line num="94" count="4" type="stmt"/>
            <line num="95" count="4" type="stmt"/>
            <line num="97" count="4" type="stmt"/>
            <line num="98" count="4" type="stmt"/>
            <line num="100" count="4" type="stmt"/>
            <line num="101" count="4" type="stmt"/>
            <line falsecount="4" truecount="4000" num="101" type="cond"/>
            <line num="103" count="4000" type="stmt"/>
            <line num="104" count="4000" type="stmt"/>
            <line num="105" count="4000" type="stmt"/>
            <line num="106" count="4000" type="stmt"/>
            <line num="108" count="4000" type="stmt"/>
            <line num="109" count="4000" type="stmt"/>
            <line num="110" count="4000" type="stmt"/>
            <line num="111" count="4000" type="stmt"/>
            <line num="113" count="4000" type="stmt"/>
            <line num="114" count="4000" type="stmt"/>
            <line num="115" count="4000" type="stmt"/>
            <line num="116" count="4000" type="stmt"/>
            <line num="118" count="4000" type="stmt"/>
            <line num="121" count="4" type="stmt"/>
            <line num="122" count="4" type="stmt"/>
            <line num="127" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/volatilities/CapletVolatilitiesTest.java" name="CapletVolatilitiesTest.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="1" loc="65" coveredmethods="1" methods="1" elements="28" classes="1" ncloc="42" statements="27" conditionals="0" coveredstatements="27"/>
            <class name="CapletVolatilitiesTest">
               <metrics coveredelements="28" complexity="1" methods="1" testruns="2" statements="27" coveredconditionals="0" coveredmethods="1" elements="28" testfailures="0" testduration="0.189" conditionals="0" coveredstatements="27" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testConversions() : void" num="25" testsuccess="true" count="2" testduration="0.097" type="method"/>
            <line num="28" count="2" type="stmt"/>
            <line num="29" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="48" count="16" type="stmt"/>
            <line num="49" count="144" type="stmt"/>
            <line num="52" count="144" type="stmt"/>
            <line num="53" count="144" type="stmt"/>
            <line num="54" count="144" type="stmt"/>
            <line num="55" count="144" type="stmt"/>
            <line num="56" count="144" type="stmt"/>
            <line num="57" count="144" type="stmt"/>
            <line num="59" count="144" type="stmt"/>
            <line num="60" count="144" type="stmt"/>
            <line num="61" count="144" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.assetderivativevaluation.products">
         <metrics coveredelements="141" complexity="26" loc="428" methods="11" classes="3" statements="140" coveredconditionals="10" coveredmethods="10" elements="179" ncloc="279" files="3" conditionals="28" coveredstatements="121"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/products/BlackScholesDeltaHedgedPortfolioTest.java" name="BlackScholesDeltaHedgedPortfolioTest.java">
            <metrics coveredelements="30" coveredconditionals="3" complexity="8" loc="106" coveredmethods="3" methods="3" elements="43" classes="1" ncloc="69" statements="30" conditionals="10" coveredstatements="24"/>
            <class name="BlackScholesDeltaHedgedPortfolioTest">
               <metrics coveredelements="30" complexity="8" methods="3" testruns="1" statements="30" coveredconditionals="3" coveredmethods="3" elements="43" testfailures="0" testduration="4.361" conditionals="10" coveredstatements="24" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesDeltaHedgedPortfolioTest()" num="39" count="1" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : AssetModelMonteCarloSimulationModel" num="46" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="6" visibility="public" signature="testHedgePerformance() : void" num="62" testsuccess="true" count="1" testduration="4.361" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="99" type="cond"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/products/DeltaHedgedPortfolioWithAADTest.java" name="DeltaHedgedPortfolioWithAADTest.java">
            <metrics coveredelements="88" coveredconditionals="7" complexity="15" loc="242" coveredmethods="5" methods="5" elements="111" classes="1" ncloc="161" statements="88" conditionals="18" coveredstatements="76"/>
            <class name="DeltaHedgedPortfolioWithAADTest">
               <metrics coveredelements="88" complexity="15" methods="5" testruns="2" statements="88" coveredconditionals="7" coveredmethods="5" elements="111" testfailures="0" testduration="136.279" conditionals="18" coveredstatements="76" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="70" count="3" type="method"/>
            <line num="72" count="3" type="stmt"/>
            <line num="74" count="3" type="stmt"/>
            <line num="75" count="3" type="stmt"/>
            <line num="76" count="3" type="stmt"/>
            <line num="78" count="3" type="stmt"/>
            <line num="79" count="3" type="stmt"/>
            <line num="80" count="3" type="stmt"/>
            <line num="81" count="3" type="stmt"/>
            <line num="84" count="3" type="stmt"/>
            <line num="85" count="3" type="stmt"/>
            <line num="90" count="3" type="stmt"/>
            <line num="91" count="3" type="stmt"/>
            <line num="95" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="DeltaHedgedPortfolioWithAADTest(AssetModelMonteCarloSimulationModel,AssetMonteCarloProduct)" num="98" count="2" type="method"/>
            <line num="99" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBlackScholesModel() : AssetModelMonteCarloSimulationModel" num="105" count="3" type="method"/>
            <line num="107" count="3" type="stmt"/>
            <line num="108" count="3" type="stmt"/>
            <line num="109" count="3" type="stmt"/>
            <line num="110" count="3" type="stmt"/>
            <line num="113" count="3" type="stmt"/>
            <line num="114" count="3" type="stmt"/>
            <line num="115" count="3" type="stmt"/>
            <line num="118" count="3" type="stmt"/>
            <line num="121" count="3" type="stmt"/>
            <line num="124" count="3" type="stmt"/>
            <line num="127" count="3" type="stmt"/>
            <line num="130" count="3" type="stmt"/>
            <line num="132" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHestonModel() : AssetModelMonteCarloSimulationModel" num="135" count="3" type="method"/>
            <line num="137" count="3" type="stmt"/>
            <line num="138" count="3" type="stmt"/>
            <line num="139" count="3" type="stmt"/>
            <line num="140" count="3" type="stmt"/>
            <line num="143" count="3" type="stmt"/>
            <line num="144" count="3" type="stmt"/>
            <line num="145" count="3" type="stmt"/>
            <line num="146" count="3" type="stmt"/>
            <line num="147" count="3" type="stmt"/>
            <line num="148" count="3" type="stmt"/>
            <line num="149" count="3" type="stmt"/>
            <line num="152" count="3" type="stmt"/>
            <line num="155" count="3" type="stmt"/>
            <line num="158" count="3" type="stmt"/>
            <line num="161" count="3" type="stmt"/>
            <line num="164" count="3" type="stmt"/>
            <line num="166" count="3" type="stmt"/>
            <line complexity="11" visibility="public" signature="testHedgePerformance() : void" num="169" count="2" type="method"/>
            <line num="172" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line num="176" count="2" type="stmt"/>
            <line num="178" count="2" type="stmt"/>
            <line num="180" count="2" type="stmt"/>
            <line num="182" count="2" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
            <line num="184" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="188" count="2" type="stmt"/>
            <line num="189" count="2" type="stmt"/>
            <line num="191" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="201" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="210" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="217" type="cond"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line falsecount="1" truecount="4" num="221" type="cond"/>
            <line num="223" count="4" type="stmt"/>
            <line num="224" count="4" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="229" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="229" type="cond"/>
            <line num="230" count="2" type="stmt"/>
            <line num="231" count="2" type="stmt"/>
            <line num="232" count="2" type="stmt"/>
            <line num="233" count="2" type="stmt"/>
            <line num="234" count="2" type="stmt"/>
            <line num="237" count="2" type="stmt"/>
            <line num="239" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionVegaPathwiseTest.java" name="EuropeanOptionVegaPathwiseTest.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="3" loc="80" coveredmethods="2" methods="3" elements="25" classes="1" ncloc="49" statements="22" conditionals="0" coveredstatements="21"/>
            <class name="EuropeanOptionVegaPathwiseTest">
               <metrics coveredelements="23" complexity="3" methods="3" testruns="1" statements="22" coveredconditionals="0" coveredmethods="2" elements="25" testfailures="0" testduration="4.034" conditionals="0" coveredstatements="21" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="24" testsuccess="true" count="1" testduration="4.034" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="getModel(double,double,double) : AssetModelMonteCarloSimulationModel" num="65" count="1" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.finitedifference">
         <metrics coveredelements="90" complexity="8" loc="183" methods="4" classes="2" statements="78" coveredconditionals="8" coveredmethods="4" elements="90" ncloc="156" files="2" conditionals="8" coveredstatements="78"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/finitedifference/BlackScholesThetaTest.java" name="BlackScholesThetaTest.java">
            <metrics coveredelements="44" coveredconditionals="4" complexity="4" loc="91" coveredmethods="2" methods="2" elements="44" classes="1" ncloc="76" statements="38" conditionals="4" coveredstatements="38"/>
            <class name="BlackScholesThetaTest">
               <metrics coveredelements="44" complexity="4" methods="2" testruns="4" statements="38" coveredconditionals="4" coveredmethods="2" elements="44" testfailures="0" testduration="1.34" conditionals="4" coveredstatements="38" testpasses="4"/>
            </class>
            <line complexity="2" visibility="public" signature="testEuropeanCallOption() : void" num="17" testsuccess="true" count="2" testduration="0.611" type="method"/>
            <line num="19" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
            <line num="21" count="2" type="stmt"/>
            <line num="22" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line num="26" count="2" type="stmt"/>
            <line num="27" count="2" type="stmt"/>
            <line num="28" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line falsecount="2" truecount="238" num="45" type="cond"/>
            <line num="46" count="238" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanPutOption() : void" num="55" testsuccess="true" count="2" testduration="0.144" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line falsecount="2" truecount="238" num="82" type="cond"/>
            <line num="83" count="238" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/finitedifference/ConstantElasticityOfVarianceThetaTest.java" name="ConstantElasticityOfVarianceThetaTest.java">
            <metrics coveredelements="46" coveredconditionals="4" complexity="4" loc="92" coveredmethods="2" methods="2" elements="46" classes="1" ncloc="80" statements="40" conditionals="4" coveredstatements="40"/>
            <class name="ConstantElasticityOfVarianceThetaTest">
               <metrics coveredelements="46" complexity="4" methods="2" testruns="4" statements="40" coveredconditionals="4" coveredmethods="2" elements="46" testfailures="0" testduration="4.937" conditionals="4" coveredstatements="40" testpasses="4"/>
            </class>
            <line complexity="2" visibility="public" signature="testEuropeanCallOption() : void" num="17" testsuccess="true" count="2" testduration="0.845" type="method"/>
            <line num="19" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
            <line num="21" count="2" type="stmt"/>
            <line num="22" count="2" type="stmt"/>
            <line num="23" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line num="26" count="2" type="stmt"/>
            <line num="27" count="2" type="stmt"/>
            <line num="28" count="2" type="stmt"/>
            <line num="29" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line falsecount="2" truecount="318" num="47" type="cond"/>
            <line num="48" count="318" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanPutOption() : void" num="55" testsuccess="true" count="2" testduration="0.642" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line falsecount="2" truecount="318" num="85" type="cond"/>
            <line num="86" count="318" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo">
         <metrics coveredelements="261" complexity="35" loc="683" methods="23" classes="4" statements="220" coveredconditionals="20" coveredmethods="23" elements="263" ncloc="432" files="4" conditionals="20" coveredstatements="218"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/BrownianMotionTest.java" name="BrownianMotionTest.java">
            <metrics coveredelements="128" coveredconditionals="12" complexity="16" loc="296" coveredmethods="8" methods="8" elements="130" classes="1" ncloc="205" statements="110" conditionals="12" coveredstatements="108"/>
            <class name="BrownianMotionTest">
               <metrics coveredelements="128" complexity="16" methods="8" testruns="40" statements="110" coveredconditionals="12" coveredmethods="8" elements="130" testfailures="0" testduration="1168.4979999999998" conditionals="12" coveredstatements="108" testpasses="40"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="45" count="4" type="method"/>
            <line num="48" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="BrownianMotionTest(RandomVariableFactory)" num="56" count="40" type="method"/>
            <line num="57" count="40" type="stmt"/>
            <line num="58" count="40" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDensity() : void" num="65" count="8" type="method"/>
            <line num="67" count="8" type="stmt"/>
            <line num="68" count="8" type="stmt"/>
            <line num="69" count="8" type="stmt"/>
            <line num="70" count="8" type="stmt"/>
            <line num="71" count="8" type="stmt"/>
            <line num="73" count="8" type="stmt"/>
            <line num="74" count="8" type="stmt"/>
            <line falsecount="8" truecount="72" num="74" type="cond"/>
            <line num="75" count="72" type="stmt"/>
            <line num="76" count="72" type="stmt"/>
            <line num="78" count="72" type="stmt"/>
            <line num="79" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="80" count="7272" type="method"/>
            <line num="81" count="7272" type="stmt"/>
            <line num="84" count="72" type="stmt"/>
            <line falsecount="72" truecount="7272" num="84" type="cond"/>
            <line num="85" count="7272" type="stmt"/>
            <line num="86" count="7272" type="stmt"/>
            <line num="88" count="7272" type="stmt"/>
            <line num="89" count="7272" type="stmt"/>
            <line num="91" count="7272" type="stmt"/>
            <line num="93" count="72" type="stmt"/>
            <line complexity="2" visibility="public" signature="testScalarValuedBrownianMotionTerminalDistribution() : void" num="97" count="8" type="method"/>
            <line num="100" count="8" type="stmt"/>
            <line num="101" count="8" type="stmt"/>
            <line num="102" count="8" type="stmt"/>
            <line num="104" count="8" type="stmt"/>
            <line num="107" count="8" type="stmt"/>
            <line num="109" count="8" type="stmt"/>
            <line falsecount="8" truecount="48" num="109" type="cond"/>
            <line num="112" count="48" type="stmt"/>
            <line num="120" count="48" type="stmt"/>
            <line num="122" count="48" type="stmt"/>
            <line num="124" count="48" type="stmt"/>
            <line num="125" count="48" type="stmt"/>
            <line num="127" count="48" type="stmt"/>
            <line num="129" count="48" type="stmt"/>
            <line num="130" count="48" type="stmt"/>
            <line num="132" count="48" type="stmt"/>
            <line num="135" count="8" type="stmt"/>
            <line complexity="3" visibility="public" signature="testScalarValuedBrownianMotionWithJarqueBeraTest() : void" num="138" count="8" type="method"/>
            <line num="141" count="8" type="stmt"/>
            <line num="142" count="8" type="stmt"/>
            <line num="143" count="8" type="stmt"/>
            <line num="144" count="8" type="stmt"/>
            <line num="146" count="8" type="stmt"/>
            <line num="149" count="8" type="stmt"/>
            <line num="152" count="8" type="stmt"/>
            <line num="160" count="8" type="stmt"/>
            <line num="161" count="8" type="stmt"/>
            <line num="162" count="8" type="stmt"/>
            <line falsecount="8" truecount="1920" num="162" type="cond"/>
            <line num="163" count="1920" type="stmt"/>
            <line num="164" count="1920" type="stmt"/>
            <line num="166" count="1920" type="stmt"/>
            <line num="167" count="1920" type="stmt"/>
            <line falsecount="1744" truecount="176" num="167" type="cond"/>
            <line num="168" count="176" type="stmt"/>
            <line num="169" count="176" type="stmt"/>
            <line num="172" count="1744" type="stmt"/>
            <line num="176" count="8" type="stmt"/>
            <line num="178" count="8" type="stmt"/>
            <line num="180" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBrownianIncrementSquaredDrift() : void" num="183" count="8" type="method"/>
            <line num="186" count="8" type="stmt"/>
            <line num="187" count="8" type="stmt"/>
            <line num="189" count="8" type="stmt"/>
            <line num="190" count="8" type="stmt"/>
            <line num="193" count="8" type="stmt"/>
            <line num="196" count="8" type="stmt"/>
            <line num="204" count="8" type="stmt"/>
            <line num="205" count="8" type="stmt"/>
            <line num="207" count="8" type="stmt"/>
            <line num="208" count="8" type="stmt"/>
            <line num="209" count="8" type="stmt"/>
            <line falsecount="8" truecount="32000" num="209" type="cond"/>
            <line num="210" count="32000" type="stmt"/>
            <line num="211" count="32000" type="stmt"/>
            <line num="214" count="32000" type="stmt"/>
            <line num="215" count="32000" type="stmt"/>
            <line num="218" count="32000" type="stmt"/>
            <line num="219" count="32000" type="stmt"/>
            <line num="222" count="8" type="stmt"/>
            <line num="223" count="8" type="stmt"/>
            <line num="224" count="8" type="stmt"/>
            <line num="225" count="8" type="stmt"/>
            <line num="226" count="8" type="stmt"/>
            <line num="228" count="8" type="stmt"/>
            <line num="229" count="8" type="stmt"/>
            <line num="230" count="8" type="stmt"/>
            <line num="231" count="8" type="stmt"/>
            <line num="234" count="8" type="stmt"/>
            <line num="235" count="8" type="stmt"/>
            <line num="237" count="8" type="stmt"/>
            <line num="240" count="8" type="stmt"/>
            <line complexity="3" visibility="public" signature="testSerialization() : void" num="243" count="8" type="method"/>
            <line num="246" count="8" type="stmt"/>
            <line num="247" count="8" type="stmt"/>
            <line num="249" count="8" type="stmt"/>
            <line num="250" count="8" type="stmt"/>
            <line num="253" count="8" type="stmt"/>
            <line num="256" count="8" type="stmt"/>
            <line num="264" count="8" type="stmt"/>
            <line num="269" count="8" type="stmt"/>
            <line num="270" count="8" type="stmt"/>
            <line num="271" count="8" type="stmt"/>
            <line num="272" count="8" type="stmt"/>
            <line num="273" count="8" type="stmt"/>
            <line num="274" count="8" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="282" count="8" type="stmt"/>
            <line num="283" count="8" type="stmt"/>
            <line num="284" count="8" type="stmt"/>
            <line num="285" count="8" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="290" count="8" type="stmt"/>
            <line num="292" count="8" type="stmt"/>
            <line num="293" count="8" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/GammaProcessTest.java" name="GammaProcessTest.java">
            <metrics coveredelements="20" coveredconditionals="2" complexity="2" loc="71" coveredmethods="1" methods="1" elements="20" classes="1" ncloc="47" statements="17" conditionals="2" coveredstatements="17"/>
            <class name="GammaProcessTest">
               <metrics coveredelements="20" complexity="2" methods="1" testruns="1" statements="17" coveredconditionals="2" coveredmethods="1" elements="20" testfailures="0" testduration="5.747" conditionals="2" coveredstatements="17" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="testScaling() : void" num="27" testsuccess="true" count="1" testduration="5.747" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line falsecount="1" truecount="10000" num="65" type="cond"/>
            <line num="66" count="10000" type="stmt"/>
            <line num="67" count="10000" type="stmt"/>
            <line num="68" count="10000" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/RandomVariableTest.java" name="RandomVariableTest.java">
            <metrics coveredelements="77" coveredconditionals="2" complexity="12" loc="229" coveredmethods="11" methods="11" elements="77" classes="1" ncloc="130" statements="64" conditionals="2" coveredstatements="64"/>
            <class name="RandomVariableTest">
               <metrics coveredelements="77" complexity="12" methods="11" testruns="45" statements="64" coveredconditionals="2" coveredmethods="11" elements="77" testfailures="0" testduration="35.83200000000001" conditionals="2" coveredstatements="64" testpasses="45"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="33" count="3" type="method"/>
            <line num="36" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableTest(RandomVariableFactory)" num="45" count="45" type="method"/>
            <line num="46" count="45" type="stmt"/>
            <line num="47" count="45" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableDeterministc() : void" num="51" count="5" type="method"/>
            <line num="55" count="5" type="stmt"/>
            <line num="58" count="5" type="stmt"/>
            <line num="59" count="5" type="stmt"/>
            <line num="60" count="5" type="stmt"/>
            <line num="61" count="5" type="stmt"/>
            <line num="62" count="5" type="stmt"/>
            <line num="65" count="5" type="stmt"/>
            <line num="68" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableStochastic() : void" num="71" count="5" type="method"/>
            <line num="75" count="5" type="stmt"/>
            <line num="79" count="5" type="stmt"/>
            <line num="80" count="5" type="stmt"/>
            <line num="83" count="5" type="stmt"/>
            <line num="86" count="5" type="stmt"/>
            <line num="89" count="5" type="stmt"/>
            <line num="90" count="5" type="stmt"/>
            <line num="93" count="5" type="stmt"/>
            <line num="96" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableArithmeticSqrtPow() : void" num="99" count="5" type="method"/>
            <line num="103" count="5" type="stmt"/>
            <line num="106" count="5" type="stmt"/>
            <line num="109" count="5" type="stmt"/>
            <line num="110" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableArithmeticSquaredPow() : void" num="113" count="5" type="method"/>
            <line num="117" count="5" type="stmt"/>
            <line num="120" count="5" type="stmt"/>
            <line num="123" count="5" type="stmt"/>
            <line num="124" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableStandardDeviation() : void" num="127" count="5" type="method"/>
            <line num="131" count="5" type="stmt"/>
            <line num="134" count="5" type="stmt"/>
            <line num="135" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="testGetQuantile() : void" num="142" count="5" type="method"/>
            <line num="145" count="5" type="stmt"/>
            <line num="146" count="5" type="stmt"/>
            <line num="148" count="5" type="stmt"/>
            <line num="149" count="5" type="stmt"/>
            <line num="150" count="5" type="stmt"/>
            <line falsecount="5" truecount="50000000" num="150" type="cond"/>
            <line num="151" count="50000000" type="stmt"/>
            <line num="152" count="50000000" type="stmt"/>
            <line num="155" count="5" type="stmt"/>
            <line num="157" count="5" type="stmt"/>
            <line num="158" count="5" type="stmt"/>
            <line num="160" count="5" type="stmt"/>
            <line num="161" count="5" type="stmt"/>
            <line num="163" count="5" type="stmt"/>
            <line num="164" count="5" type="stmt"/>
            <line num="166" count="5" type="stmt"/>
            <line num="167" count="5" type="stmt"/>
            <line num="169" count="5" type="stmt"/>
            <line num="170" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdd() : void" num="173" count="5" type="method"/>
            <line num="177" count="5" type="stmt"/>
            <line num="180" count="5" type="stmt"/>
            <line num="183" count="5" type="stmt"/>
            <line num="186" count="5" type="stmt"/>
            <line num="189" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCap() : void" num="192" count="5" type="method"/>
            <line num="196" count="5" type="stmt"/>
            <line num="199" count="5" type="stmt"/>
            <line num="202" count="5" type="stmt"/>
            <line num="205" count="5" type="stmt"/>
            <line num="208" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloor() : void" num="211" count="5" type="method"/>
            <line num="215" count="5" type="stmt"/>
            <line num="218" count="5" type="stmt"/>
            <line num="221" count="5" type="stmt"/>
            <line num="224" count="5" type="stmt"/>
            <line num="227" count="5" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/VarianceGammaTest.java" name="VarianceGammaTest.java">
            <metrics coveredelements="36" coveredconditionals="4" complexity="5" loc="87" coveredmethods="3" methods="3" elements="36" classes="1" ncloc="50" statements="29" conditionals="4" coveredstatements="29"/>
            <class name="VarianceGammaTest">
               <metrics coveredelements="36" complexity="5" methods="3" testruns="1" statements="29" coveredconditionals="4" coveredmethods="3" elements="36" testfailures="0" testduration="2.183" conditionals="4" coveredstatements="29" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="testCharacteristicFunction() : void" num="21" testsuccess="true" count="1" testduration="2.183" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line falsecount="1" truecount="99" num="46" type="cond"/>
            <line num="47" count="99" type="stmt"/>
            <line num="49" count="99" type="stmt"/>
            <line num="50" count="99" type="stmt"/>
            <line num="52" count="99" type="stmt"/>
            <line num="54" count="99" type="stmt"/>
            <line complexity="2" visibility="public" signature="characteristicFunctionByMonteCarlo(Complex,RandomVariable) : Complex" num="60" count="99" type="method"/>
            <line num="62" count="99" type="stmt"/>
            <line num="64" count="99" type="stmt"/>
            <line num="66" count="99" type="stmt"/>
            <line falsecount="99" truecount="990000" num="66" type="cond"/>
            <line num="67" count="990000" type="stmt"/>
            <line num="70" count="99" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCharacteristicFunction(double,Complex,VarianceGammaProcess) : Complex" num="76" count="99" type="method"/>
            <line num="78" count="99" type="stmt"/>
            <line num="79" count="99" type="stmt"/>
            <line num="80" count="99" type="stmt"/>
            <line num="82" count="99" type="stmt"/>
            <line num="83" count="99" type="stmt"/>
            <line num="85" count="99" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.functions">
         <metrics coveredelements="542" complexity="83" loc="1002" methods="31" classes="6" statements="427" coveredconditionals="89" coveredmethods="31" elements="550" ncloc="709" files="6" conditionals="92" coveredstatements="422"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/functions/AnalyticFormulasTest.java" name="AnalyticFormulasTest.java">
            <metrics coveredelements="210" coveredconditionals="29" complexity="31" loc="332" coveredmethods="9" methods="9" elements="218" classes="1" ncloc="244" statements="177" conditionals="32" coveredstatements="172"/>
            <class name="AnalyticFormulasTest">
               <metrics coveredelements="210" complexity="31" methods="9" testruns="8" statements="177" coveredconditionals="29" coveredmethods="9" elements="218" testfailures="0" testduration="4.126999999999999" conditionals="32" coveredstatements="172" testpasses="8"/>
            </class>
            <line complexity="5" visibility="public" signature="testBachelierOptionImpliedVolatility() : void" num="28" testsuccess="true" count="1" testduration="0.973" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line falsecount="1" truecount="19" num="32" type="cond"/>
            <line num="33" count="19" type="stmt"/>
            <line falsecount="19" truecount="722" num="33" type="cond"/>
            <line num="34" count="722" type="stmt"/>
            <line falsecount="722" truecount="18050" num="34" type="cond"/>
            <line num="36" count="18050" type="stmt"/>
            <line num="38" count="18050" type="stmt"/>
            <line num="39" count="18050" type="stmt"/>
            <line num="40" count="18050" type="stmt"/>
            <line num="41" count="18050" type="stmt"/>
            <line num="43" count="18050" type="stmt"/>
            <line num="44" count="18050" type="stmt"/>
            <line num="46" count="18050" type="stmt"/>
            <line falsecount="18050" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="18050" type="stmt"/>
            <line complexity="5" visibility="public" signature="testBachelierOptionDelta() : void" num="55" testsuccess="true" count="1" testduration="0.031" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line falsecount="1" truecount="19" num="59" type="cond"/>
            <line num="60" count="19" type="stmt"/>
            <line falsecount="19" truecount="722" num="60" type="cond"/>
            <line num="61" count="722" type="stmt"/>
            <line falsecount="722" truecount="18050" num="61" type="cond"/>
            <line num="63" count="18050" type="stmt"/>
            <line num="65" count="18050" type="stmt"/>
            <line num="66" count="18050" type="stmt"/>
            <line num="67" count="18050" type="stmt"/>
            <line num="68" count="18050" type="stmt"/>
            <line num="70" count="18050" type="stmt"/>
            <line num="72" count="18050" type="stmt"/>
            <line num="73" count="18050" type="stmt"/>
            <line num="74" count="18050" type="stmt"/>
            <line num="75" count="18050" type="stmt"/>
            <line num="77" count="18050" type="stmt"/>
            <line falsecount="18050" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="18050" type="stmt"/>
            <line complexity="3" visibility="public" signature="testSABRCalibration() : void" num="86" testsuccess="true" count="1" testduration="3.098" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line falsecount="1" truecount="500" num="110" type="cond"/>
            <line num="111" count="500" type="stmt"/>
            <line num="112" count="500" type="stmt"/>
            <line num="113" count="500" type="stmt"/>
            <line complexity="2" visibility="public" signature="setValues(double[],double[]) : void" num="116" count="494603" type="method"/>
            <line num="118" count="494641" type="stmt"/>
            <line falsecount="494774" truecount="3435673" num="118" type="cond"/>
            <line num="119" count="3439628" type="stmt"/>
            <line num="120" count="3442872" type="stmt"/>
            <line num="124" count="500" type="stmt"/>
            <line num="126" count="500" type="stmt"/>
            <line num="128" count="500" type="stmt"/>
            <line num="130" count="500" type="stmt"/>
            <line falsecount="500" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testSABRSkewApproximation() : void" num="136" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="139" type="cond"/>
            <line num="140" count="3" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="173" count="3" type="stmt"/>
            <line num="175" count="3" type="stmt"/>
            <line num="176" count="3" type="stmt"/>
            <line num="177" count="3" type="stmt"/>
            <line num="178" count="3" type="stmt"/>
            <line num="180" count="3" type="stmt"/>
            <line num="181" count="3" type="stmt"/>
            <line num="183" count="3" type="stmt"/>
            <line complexity="5" visibility="public" signature="testSABRCurvatureApproximation() : void" num="187" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="191" type="cond"/>
            <line num="192" count="3" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="226" count="3" type="stmt"/>
            <line num="231" count="3" type="stmt"/>
            <line num="232" count="3" type="stmt"/>
            <line num="233" count="3" type="stmt"/>
            <line num="234" count="3" type="stmt"/>
            <line num="235" count="3" type="stmt"/>
            <line num="237" count="3" type="stmt"/>
            <line num="238" count="3" type="stmt"/>
            <line num="240" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBlackScholesPutCallParityATM() : void" num="244" testsuccess="true" count="1" testduration="0.015" type="method"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBlackScholesNegativeForward() : void" num="258" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line num="266" count="1" type="stmt"/>
            <line num="267" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testBachelierRiskNeutralProbabilities() : void" num="282" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="284" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line falsecount="1" truecount="24" num="301" type="cond"/>
            <line num="303" count="24" type="stmt"/>
            <line num="304" count="24" type="stmt"/>
            <line num="306" count="24" type="stmt"/>
            <line num="307" count="24" type="stmt"/>
            <line num="308" count="24" type="stmt"/>
            <line num="310" count="24" type="stmt"/>
            <line num="311" count="24" type="stmt"/>
            <line num="312" count="24" type="stmt"/>
            <line num="314" count="24" type="stmt"/>
            <line num="321" count="24" type="stmt"/>
            <line falsecount="22" truecount="2" num="321" type="cond"/>
            <line num="322" count="2" type="stmt"/>
            <line num="324" count="24" type="stmt"/>
            <line falsecount="5" truecount="19" num="324" type="cond"/>
            <line num="325" count="19" type="stmt"/>
            <line num="326" count="19" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/functions/BachelierModelTest.java" name="BachelierModelTest.java">
            <metrics coveredelements="128" coveredconditionals="24" complexity="20" loc="283" coveredmethods="8" methods="8" elements="128" classes="1" ncloc="187" statements="96" conditionals="24" coveredstatements="96"/>
            <class name="BachelierModelTest">
               <metrics coveredelements="128" complexity="20" methods="8" testruns="8" statements="96" coveredconditionals="24" coveredmethods="8" elements="128" testfailures="0" testduration="0.091" conditionals="24" coveredstatements="96" testpasses="8"/>
            </class>
            <line complexity="2" visibility="public" signature="testDelta() : void" num="38" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line falsecount="1" truecount="9" num="49" type="cond"/>
            <line num="51" count="9" type="stmt"/>
            <line num="54" count="9" type="stmt"/>
            <line num="61" count="9" type="stmt"/>
            <line num="64" count="9" type="stmt"/>
            <line num="69" count="9" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testVega() : void" num="74" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line falsecount="1" truecount="9" num="85" type="cond"/>
            <line num="87" count="9" type="stmt"/>
            <line num="90" count="9" type="stmt"/>
            <line num="97" count="9" type="stmt"/>
            <line num="100" count="9" type="stmt"/>
            <line num="105" count="9" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInhomogenousDelta() : void" num="110" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line falsecount="1" truecount="9" num="121" type="cond"/>
            <line num="123" count="9" type="stmt"/>
            <line num="126" count="9" type="stmt"/>
            <line num="133" count="9" type="stmt"/>
            <line num="136" count="9" type="stmt"/>
            <line num="141" count="9" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInhomogenousVega() : void" num="146" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line falsecount="1" truecount="9" num="157" type="cond"/>
            <line num="159" count="9" type="stmt"/>
            <line num="162" count="9" type="stmt"/>
            <line num="169" count="9" type="stmt"/>
            <line num="172" count="9" type="stmt"/>
            <line num="177" count="9" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHomogeneousRandomVariableImplementations() : void" num="182" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line falsecount="1" truecount="9" num="190" type="cond"/>
            <line num="192" count="9" type="stmt"/>
            <line num="193" count="9" type="stmt"/>
            <line num="194" count="9" type="stmt"/>
            <line num="196" count="9" type="stmt"/>
            <line num="197" count="9" type="stmt"/>
            <line num="198" count="9" type="stmt"/>
            <line num="200" count="9" type="stmt"/>
            <line num="201" count="9" type="stmt"/>
            <line num="202" count="9" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInhomogeneousRandomVariableImplementations() : void" num="207" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line falsecount="1" truecount="9" num="215" type="cond"/>
            <line num="217" count="9" type="stmt"/>
            <line num="218" count="9" type="stmt"/>
            <line num="219" count="9" type="stmt"/>
            <line num="221" count="9" type="stmt"/>
            <line num="222" count="9" type="stmt"/>
            <line num="223" count="9" type="stmt"/>
            <line num="225" count="9" type="stmt"/>
            <line num="226" count="9" type="stmt"/>
            <line num="227" count="9" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testImpliedVolatility() : void" num="232" testsuccess="true" count="1" testduration="0.019" type="method"/>
            <line num="235" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="238" type="cond"/>
            <line num="239" count="5" type="stmt"/>
            <line falsecount="5" truecount="25" num="239" type="cond"/>
            <line num="240" count="25" type="stmt"/>
            <line falsecount="25" truecount="275" num="240" type="cond"/>
            <line num="242" count="275" type="stmt"/>
            <line num="243" count="275" type="stmt"/>
            <line num="245" count="275" type="stmt"/>
            <line num="246" count="275" type="stmt"/>
            <line num="248" count="275" type="stmt"/>
            <line num="252" count="275" type="stmt"/>
            <line complexity="4" visibility="public" signature="testInhomogeneousImpliedVolatility() : void" num="258" testsuccess="true" count="1" testduration="0.059" type="method"/>
            <line num="261" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="264" type="cond"/>
            <line num="265" count="5" type="stmt"/>
            <line falsecount="5" truecount="25" num="265" type="cond"/>
            <line num="266" count="25" type="stmt"/>
            <line falsecount="25" truecount="275" num="266" type="cond"/>
            <line num="268" count="275" type="stmt"/>
            <line num="269" count="275" type="stmt"/>
            <line num="271" count="275" type="stmt"/>
            <line num="272" count="275" type="stmt"/>
            <line num="274" count="275" type="stmt"/>
            <line num="278" count="275" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/functions/BarrierOptionsTest.java" name="BarrierOptionsTest.java">
            <metrics coveredelements="136" coveredconditionals="32" complexity="24" loc="210" coveredmethods="8" methods="8" elements="136" classes="1" ncloc="166" statements="96" conditionals="32" coveredstatements="96"/>
            <class name="BarrierOptionsTest">
               <metrics coveredelements="136" complexity="24" methods="8" testruns="8" statements="96" coveredconditionals="32" coveredmethods="8" elements="136" testfailures="0" testduration="0.037000000000000005" conditionals="32" coveredstatements="96" testpasses="8"/>
            </class>
            <line complexity="3" visibility="public" signature="testDownAndInPut() : void" num="26" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="38" type="cond"/>
            <line num="39" count="3" type="stmt"/>
            <line falsecount="3" truecount="6" num="39" type="cond"/>
            <line num="40" count="6" type="stmt"/>
            <line num="43" count="6" type="stmt"/>
            <line num="44" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDownAndInCall() : void" num="49" testsuccess="true" count="1" testduration="0.03" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="61" type="cond"/>
            <line num="62" count="3" type="stmt"/>
            <line falsecount="3" truecount="6" num="62" type="cond"/>
            <line num="63" count="6" type="stmt"/>
            <line num="66" count="6" type="stmt"/>
            <line num="67" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="testUpAndInPut() : void" num="73" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="85" type="cond"/>
            <line num="86" count="3" type="stmt"/>
            <line falsecount="3" truecount="3" num="86" type="cond"/>
            <line num="87" count="3" type="stmt"/>
            <line num="90" count="3" type="stmt"/>
            <line num="91" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="testUpAndInCall() : void" num="96" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="108" type="cond"/>
            <line num="109" count="3" type="stmt"/>
            <line falsecount="3" truecount="3" num="109" type="cond"/>
            <line num="110" count="3" type="stmt"/>
            <line num="113" count="3" type="stmt"/>
            <line num="114" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDownAndOutPut() : void" num="119" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="131" type="cond"/>
            <line num="132" count="3" type="stmt"/>
            <line falsecount="3" truecount="6" num="132" type="cond"/>
            <line num="133" count="6" type="stmt"/>
            <line num="136" count="6" type="stmt"/>
            <line num="137" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDownAndOutCall() : void" num="142" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="154" type="cond"/>
            <line num="155" count="3" type="stmt"/>
            <line falsecount="3" truecount="6" num="155" type="cond"/>
            <line num="156" count="6" type="stmt"/>
            <line num="159" count="6" type="stmt"/>
            <line num="160" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="testUpAndOutPut() : void" num="165" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="177" type="cond"/>
            <line num="178" count="3" type="stmt"/>
            <line falsecount="3" truecount="3" num="178" type="cond"/>
            <line num="179" count="3" type="stmt"/>
            <line num="182" count="3" type="stmt"/>
            <line num="183" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="testUpAndOutCall() : void" num="188" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="200" type="cond"/>
            <line num="201" count="3" type="stmt"/>
            <line falsecount="3" truecount="3" num="201" type="cond"/>
            <line num="202" count="3" type="stmt"/>
            <line num="205" count="3" type="stmt"/>
            <line num="206" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/functions/JarqueBeraTestTest.java" name="JarqueBeraTestTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="4" classes="1" ncloc="14" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="JarqueBeraTestTest">
               <metrics coveredelements="4" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="1" elements="4" testfailures="0" testduration="0.066" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="24" testsuccess="true" count="1" testduration="0.066" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/functions/LinearAlgebraTest.java" name="LinearAlgebraTest.java">
            <metrics coveredelements="39" coveredconditionals="0" complexity="3" loc="87" coveredmethods="3" methods="3" elements="39" classes="1" ncloc="66" statements="36" conditionals="0" coveredstatements="36"/>
            <class name="LinearAlgebraTest">
               <metrics coveredelements="39" complexity="3" methods="3" testruns="3" statements="36" coveredconditionals="0" coveredmethods="3" elements="39" testfailures="0" testduration="0.023" conditionals="0" coveredstatements="36" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="testSolveLinearEquationLeastSquarePseudoInverse() : void" num="14" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="16" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSolveLinearEquationLeastSquarePseudoInverse3() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSolveLinearEquationLeastSquarePseudoInverse2() : void" num="47" testsuccess="true" count="1" testduration="0.023" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/functions/NormalDistributionTest.java" name="NormalDistributionTest.java">
            <metrics coveredelements="25" coveredconditionals="4" complexity="4" loc="57" coveredmethods="2" methods="2" elements="25" classes="1" ncloc="32" statements="19" conditionals="4" coveredstatements="19"/>
            <class name="NormalDistributionTest">
               <metrics coveredelements="25" complexity="4" methods="2" testruns="2" statements="19" coveredconditionals="4" coveredmethods="2" elements="25" testfailures="0" testduration="0.067" conditionals="4" coveredstatements="19" testpasses="2"/>
            </class>
            <line complexity="2" visibility="public" signature="testCumulativeDistribution() : void" num="19" testsuccess="true" count="1" testduration="0.05" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line falsecount="1" truecount="801" num="24" type="cond"/>
            <line num="25" count="801" type="stmt"/>
            <line num="26" count="801" type="stmt"/>
            <line num="28" count="801" type="stmt"/>
            <line num="29" count="801" type="stmt"/>
            <line num="31" count="801" type="stmt"/>
            <line num="32" count="801" type="stmt"/>
            <line num="34" count="801" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInverseCumulativeDistribution() : void" num="38" testsuccess="true" count="1" testduration="0.017" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000" num="43" type="cond"/>
            <line num="44" count="1000" type="stmt"/>
            <line num="45" count="1000" type="stmt"/>
            <line num="47" count="1000" type="stmt"/>
            <line num="48" count="1000" type="stmt"/>
            <line num="49" count="1000" type="stmt"/>
            <line num="51" count="1000" type="stmt"/>
            <line num="52" count="1000" type="stmt"/>
            <line num="54" count="1000" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.convexityadjustment">
         <metrics coveredelements="48" complexity="2" loc="164" methods="2" classes="1" statements="46" coveredconditionals="0" coveredmethods="2" elements="48" ncloc="98" files="1" conditionals="0" coveredstatements="46"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/convexityadjustment/CMSOptionTest.java" name="CMSOptionTest.java">
            <metrics coveredelements="48" coveredconditionals="0" complexity="2" loc="164" coveredmethods="2" methods="2" elements="48" classes="1" ncloc="98" statements="46" conditionals="0" coveredstatements="46"/>
            <class name="CMSOptionTest">
               <metrics coveredelements="48" complexity="2" methods="2" testruns="1" statements="46" coveredconditionals="0" coveredmethods="2" elements="48" testfailures="0" testduration="3.408" conditionals="0" coveredstatements="46" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testCMSOption() : void" num="57" testsuccess="true" count="1" testduration="3.408" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBORModelMonteCarloSimulation(ForwardCurve) : LIBORMonteCarloSimulationFromLIBORModel" num="136" count="1" type="method"/>
            <line num="138" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.modelplugins">
         <metrics coveredelements="34" complexity="2" loc="97" methods="1" classes="1" statements="31" coveredconditionals="2" coveredmethods="1" elements="34" ncloc="47" files="1" conditionals="2" coveredstatements="31"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/modelplugins/LIBORVolatilityModelFourParameterExponentialFormIntegratedTest.java" name="LIBORVolatilityModelFourParameterExponentialFormIntegratedTest.java">
            <metrics coveredelements="34" coveredconditionals="2" complexity="2" loc="97" coveredmethods="1" methods="1" elements="34" classes="1" ncloc="47" statements="31" conditionals="2" coveredstatements="31"/>
            <class name="LIBORVolatilityModelFourParameterExponentialFormIntegratedTest">
               <metrics coveredelements="34" complexity="2" methods="1" testruns="2" statements="31" coveredconditionals="2" coveredmethods="1" elements="34" testfailures="0" testduration="1.4929999999999999" conditionals="2" coveredstatements="31" testpasses="2"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="31" testsuccess="true" count="2" testduration="0.865" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line falsecount="2" truecount="2000" num="55" type="cond"/>
            <line num="56" count="2000" type="stmt"/>
            <line num="57" count="2000" type="stmt"/>
            <line num="58" count="2000" type="stmt"/>
            <line num="59" count="2000" type="stmt"/>
            <line num="61" count="2000" type="stmt"/>
            <line num="62" count="2000" type="stmt"/>
            <line num="63" count="2000" type="stmt"/>
            <line num="65" count="2000" type="stmt"/>
            <line num="66" count="2000" type="stmt"/>
            <line num="68" count="2000" type="stmt"/>
            <line num="73" count="2000" type="stmt"/>
            <line num="74" count="2000" type="stmt"/>
            <line num="75" count="2000" type="stmt"/>
            <line num="76" count="2000" type="stmt"/>
            <line num="77" count="2000" type="stmt"/>
            <line num="78" count="2000" type="stmt"/>
            <line num="79" count="2000" type="stmt"/>
            <line num="80" count="2000" type="stmt"/>
            <line num="85" count="2000" type="stmt"/>
            <line num="92" count="2000" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.analytic.model.curves.test">
         <metrics coveredelements="199" complexity="17" loc="588" methods="10" classes="2" statements="181" coveredconditionals="13" coveredmethods="9" elements="205" ncloc="348" files="2" conditionals="14" coveredstatements="177"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/analytic/model/curves/test/CalibrationTest.java" name="CalibrationTest.java">
            <metrics coveredelements="75" coveredconditionals="4" complexity="7" loc="255" coveredmethods="4" methods="5" elements="79" classes="1" ncloc="144" statements="70" conditionals="4" coveredstatements="67"/>
            <class name="CalibrationTest">
               <metrics coveredelements="75" complexity="7" methods="5" testruns="6" statements="70" coveredconditionals="4" coveredmethods="4" elements="79" testfailures="0" testduration="0.24" conditionals="4" coveredstatements="67" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="CalibrationTest(InterpolationMethod)" num="51" count="6" type="method"/>
            <line num="53" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="62" count="3" type="method"/>
            <line num="65" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForwardCurveFromDiscountCurve() : void" num="89" count="3" type="method"/>
            <line num="96" count="3" type="stmt"/>
            <line num="103" count="3" type="stmt"/>
            <line num="110" count="3" type="stmt"/>
            <line num="112" count="3" type="stmt"/>
            <line num="113" count="3" type="stmt"/>
            <line num="116" count="3" type="stmt"/>
            <line num="117" count="3" type="stmt"/>
            <line num="118" count="3" type="stmt"/>
            <line num="119" count="3" type="stmt"/>
            <line num="122" count="3" type="stmt"/>
            <line num="123" count="3" type="stmt"/>
            <line num="125" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="testCurvesAndCalibration() : void" num="128" count="3" type="method"/>
            <line num="137" count="3" type="stmt"/>
            <line num="140" count="3" type="stmt"/>
            <line num="150" count="3" type="stmt"/>
            <line num="157" count="3" type="stmt"/>
            <line num="159" count="3" type="stmt"/>
            <line num="160" count="3" type="stmt"/>
            <line num="161" count="3" type="stmt"/>
            <line num="162" count="3" type="stmt"/>
            <line num="165" count="3" type="stmt"/>
            <line num="168" count="3" type="stmt"/>
            <line num="169" count="3" type="stmt"/>
            <line num="172" count="3" type="stmt"/>
            <line num="173" count="3" type="stmt"/>
            <line num="174" count="3" type="stmt"/>
            <line num="175" count="3" type="stmt"/>
            <line num="176" count="3" type="stmt"/>
            <line num="184" count="3" type="stmt"/>
            <line num="185" count="3" type="stmt"/>
            <line num="186" count="3" type="stmt"/>
            <line num="187" count="3" type="stmt"/>
            <line falsecount="3" truecount="12" num="187" type="cond"/>
            <line num="188" count="12" type="stmt"/>
            <line num="189" count="12" type="stmt"/>
            <line num="190" count="12" type="stmt"/>
            <line num="192" count="12" type="stmt"/>
            <line num="194" count="3" type="stmt"/>
            <line num="195" count="3" type="stmt"/>
            <line num="197" count="3" type="stmt"/>
            <line num="207" count="3" type="stmt"/>
            <line num="210" count="3" type="stmt"/>
            <line num="212" count="3" type="stmt"/>
            <line num="215" count="3" type="stmt"/>
            <line num="218" count="3" type="stmt"/>
            <line num="219" count="3" type="stmt"/>
            <line num="220" count="3" type="stmt"/>
            <line num="221" count="3" type="stmt"/>
            <line num="222" count="3" type="stmt"/>
            <line num="225" count="3" type="stmt"/>
            <line num="226" count="3" type="stmt"/>
            <line num="229" count="3" type="stmt"/>
            <line num="230" count="3" type="stmt"/>
            <line num="231" count="3" type="stmt"/>
            <line num="232" count="3" type="stmt"/>
            <line num="233" count="3" type="stmt"/>
            <line num="241" count="3" type="stmt"/>
            <line num="242" count="3" type="stmt"/>
            <line num="243" count="3" type="stmt"/>
            <line falsecount="3" truecount="15" num="243" type="cond"/>
            <line num="244" count="15" type="stmt"/>
            <line num="245" count="15" type="stmt"/>
            <line num="246" count="15" type="stmt"/>
            <line num="248" count="15" type="stmt"/>
            <line num="250" count="3" type="stmt"/>
            <line num="251" count="3" type="stmt"/>
            <line num="253" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/analytic/model/curves/test/TestCurvesFromLIBORModel.java" name="TestCurvesFromLIBORModel.java">
            <metrics coveredelements="124" coveredconditionals="9" complexity="10" loc="333" coveredmethods="5" methods="5" elements="126" classes="1" ncloc="204" statements="111" conditionals="10" coveredstatements="110"/>
            <class name="TestCurvesFromLIBORModel">
               <metrics coveredelements="124" complexity="10" methods="5" testruns="1" statements="111" coveredconditionals="9" coveredmethods="5" elements="126" testfailures="0" testduration="3.29" conditionals="10" coveredstatements="110" testpasses="1"/>
            </class>
            <line complexity="3" visibility="public" signature="testStochasticCurves() : void" num="55" testsuccess="true" count="1" testduration="3.29" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line falsecount="1" truecount="60" num="86" type="cond"/>
            <line num="87" count="60" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="3" visibility="private" signature="getRegressionBasisFunctions(RandomVariable[]) : ArrayList&lt;RandomVariable&gt;" num="110" count="1" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line falsecount="1" truecount="60" num="114" type="cond"/>
            <line num="115" count="60" type="stmt"/>
            <line falsecount="60" truecount="120" num="115" type="cond"/>
            <line num="116" count="120" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="createLIBORMarketModel(RandomVariableFactory,int,int,double) : LIBORModelMonteCarloSimulationModel" num="123" count="1" type="method"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line falsecount="1" truecount="240" num="167" type="cond"/>
            <line num="168" count="240" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createSwap(int,int,RandomVariableFactory) : TermStructureMonteCarloProduct" num="212" count="1" type="method"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line num="266" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createSwapAnalytic(int,int) : AbstractAnalyticProduct" num="276" count="1" type="method"/>
            <line num="281" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line num="297" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line num="302" count="1" type="stmt"/>
            <line num="306" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line num="309" count="1" type="stmt"/>
            <line num="320" count="1" type="stmt"/>
            <line num="323" count="1" type="stmt"/>
            <line num="324" count="1" type="stmt"/>
            <line num="326" count="1" type="stmt"/>
            <line num="327" count="1" type="stmt"/>
            <line num="329" count="1" type="stmt"/>
            <line num="331" count="1" type="stmt"/>
         </file>
      </package>
   </testproject>
</coverage>